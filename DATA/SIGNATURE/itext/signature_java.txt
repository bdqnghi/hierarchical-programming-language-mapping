com.itextpdf.io.source.RAFRandomAccessSource.get(long,byte,int,int)
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.endChildMarginsHandling(Rectangle)
com.itextpdf.io.font.TrueTypeFontSubset.flatGlyphs()
com.itextpdf.kernel.pdf.PdfWriter.getDebugBytes()
com.itextpdf.signatures.PdfSigner.getSignDate()
com.itextpdf.kernel.pdf.EncodingTest.notdefInTrueTypeFontTest()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff144Test.isFontValid()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.execute(ClipType,PolyTree,PolyFillType,PolyFillType)
com.itextpdf.forms.fields.PdfFormField.setPage(int)
com.itextpdf.kernel.pdf.PdfStream.getBytes(boolean)
com.itextpdf.kernel.crypto.CryptoUtil.readPublicCertificate(InputStream)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff016Test.getFontName()
com.itextpdf.kernel.pdf.tagutils.AccessibilityProperties.addAttributes(PdfDictionary)
com.itextpdf.kernel.pdf.PdfOutlineTest.setupAddOutlinesToDocumentTest()
com.itextpdf.io.font.otf.GlyphLine.substituteManyToOne(OpenTypeFontTableReader,int,int,int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff039Test.getFontName()
com.itextpdf.layout.LocationTextExtractionStrategyTest.testXPosition()
com.itextpdf.kernel.pdf.PdfReader.checkPdfStreamLength(PdfStream)
com.itextpdf.kernel.pdf.PdfBoolean.getValue()
com.itextpdf.barcodes.Barcode128.setCode(String)
com.itextpdf.kernel.pdf.TagTreePointerTest.beforeClass()
com.itextpdf.io.image.ImageData.getHeight()
com.itextpdf.kernel.pdf.PdfDocumentTest.beforeClass()
com.itextpdf.kernel.pdf.PdfPrimitivesTest.primitivesNameIndirectTest()
com.itextpdf.barcodes.qrcode.QRCode.getNumTotalBytes()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff130Test.getTestInfo()
com.itextpdf.kernel.pdf.PdfOutputIntent.getOutputIntentSubtype()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Path.excludeOp(Path,OutPt)
com.itextpdf.kernel.xmp.XMPUtils.convertFromDouble(double)
com.itextpdf.io.codec.brotli.dec.SynthTest.testTooManySymbolsRepeated()
com.itextpdf.layout.minmaxwidth.RotationMinMaxWidth.sin(double)
com.itextpdf.io.font.woff2.w3c.format.TabledataTransformGlyfLoca001Test.getTestInfo()
com.itextpdf.io.font.FontMetrics.setAdvanceWidthMax(int)
com.itextpdf.kernel.pdf.ByteBufferOutputStream.setSize(int)
com.itextpdf.io.font.CFFFontSubset.PopStack()
com.itextpdf.kernel.pdf.PdfPagesTree.correctPdfPagesFromProperty(int,int)
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.getLocation()
com.itextpdf.kernel.pdf.annot.PdfTextAnnotation.setState(PdfString)
com.itextpdf.io.util.TextUtil.convertToUtf32(String,int)
com.itextpdf.io.font.FontProgram.getAvgWidth()
com.itextpdf.layout.TextWritingTest.wordSpacingTest01()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getBlackGenerationFunction()
com.itextpdf.pdfa.checker.PdfAChecker.checkSymbolicTrueTypeFont(PdfTrueTypeFont)
com.itextpdf.io.font.woff2.w3c.format.TabledataBrotli001Test.getTestInfo()
com.itextpdf.layout.renderer.CollapsedTableBorders.getTopBorderCollapseWith()
com.itextpdf.io.source.OutputStream.writeSpace()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff001Test.isFontValid()
com.itextpdf.layout.renderer.LineRenderer.trimFirst()
com.itextpdf.io.font.woff2.w3c.format.BlocksOrdering003Test.getTestInfo()
com.itextpdf.kernel.xmp.options.SerializeOptions.getExactPacketLength()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff037Test.getTestInfo()
com.itextpdf.pdfa.PdfA2CanvasCheckTest.beforeClass()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.setPt(LongPoint)
com.itextpdf.layout.renderer.AbstractRenderer.rectangleToPointsList(Rectangle)
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingAes256.compareArray(byte,byte,int)
com.itextpdf.layout.hyphenation.Hyphenator.getHyphenationTree(InputStream,String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff083Test.getFontName()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Path.getOffPt()
com.itextpdf.barcodes.qrcode.Encoder.chooseMaskPattern(BitVector,ErrorCorrectionLevel,int,ByteMatrix)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff135Test.isFontValid()
com.itextpdf.kernel.pdf.PdfEncryption.setHashKeyForNextObject(int,int)
com.itextpdf.kernel.pdf.PdfPage.getArtBox()
com.itextpdf.layout.font.FontSelectorCache.update(FontSet)
com.itextpdf.io.font.otf.GsubLookupType3.hasSubstitution(int)
com.itextpdf.layout.renderer.LineRenderer.getBottomLeadingIndent(Leading)
com.itextpdf.forms.fields.PdfFormField.getRect(PdfDictionary)
com.itextpdf.signatures.PdfSignatureAppearance.setFieldName(String)
com.itextpdf.io.font.FontProgram.getGlyphByCode(int)
com.itextpdf.kernel.pdf.tagging.StructureTreeCopier.copyTo(PdfDocument,Map,PdfDocument)
com.itextpdf.kernel.geom.LineSegment.getBoundingRectange()
com.itextpdf.kernel.pdf.PdfDocument.writeObject(ObjectOutputStream)
com.itextpdf.pdfa.checker.PdfA1Checker.checkExtGState(CanvasGraphicsState)
com.itextpdf.io.image.GifImageData.addFrame(ImageData)
com.itextpdf.io.image.BmpTest.openBmp3()
com.itextpdf.kernel.geom.BezierCurve.getBasePoints()
com.itextpdf.layout.layout.LayoutResult.setAreaBreak(AreaBreak)
com.itextpdf.layout.renderer.TableBorders.setRowRange(int,int)
com.itextpdf.io.codec.brotli.dec.SynthTest.testInvalidTransformType()
com.itextpdf.kernel.xmp.options.SerializeOptions.setSort(boolean)
com.itextpdf.kernel.pdf.EncryptionProperties.isPublicKeyEncryptionUsed()
com.itextpdf.signatures.PdfSignatureAppearance.getImage()
com.itextpdf.io.font.woff2.w3c.format.BlocksMetadataPadding001Test.getTestInfo()
com.itextpdf.kernel.pdf.colorspace.PdfSpecialCs.getName()
com.itextpdf.io.font.woff2.Woff2Dec.readWOFF2Header(byte,int,WOFF2Header)
com.itextpdf.layout.renderer.AbstractRenderer.isPositioned()
com.itextpdf.io.font.CFFFont.isCID(String)
com.itextpdf.kernel.pdf.canvas.parser.clipper.PolyNode.getEndType()
com.itextpdf.io.util.DecimalFormatUtil.formatNumber(double,String)
com.itextpdf.kernel.pdf.layer.IPdfOCG.getPdfObject()
com.itextpdf.kernel.xmp.XMPUtils.encodeBase64(byte)
com.itextpdf.kernel.pdf.canvas.parser.TextRenderInfoTest.getResultantText()
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.applyBottomMargin(Rectangle,float)
com.itextpdf.io.image.AwtImageDataFactory.create(java,awt,Image,java,awt,Color,boolean)
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.setJustification(int)
com.itextpdf.pdfa.PdfA1ActionCheckTest.actionCheck03()
com.itextpdf.io.font.woff2.Woff2Dec.sizeOfComposite(Buffer)
com.itextpdf.io.codec.TIFFFaxDecompressor.getNextChangingElement(int,boolean,int)
com.itextpdf.kernel.crypto.OutputStreamEncryption.write(int)
com.itextpdf.io.font.otf.GposLookupType2.transformOne(GlyphLine)
com.itextpdf.kernel.pdf.tagging.PdfStructElem.getParent()
com.itextpdf.layout.margincollapse.MarginsCollapseInfo.getUsedBufferSpaceOnTop()
com.itextpdf.barcodes.BarcodeQRCode.setHints(Map)
com.itextpdf.barcodes.Barcode1D.getBarHeight()
com.itextpdf.kernel.pdf.PdfOutputStream.writeObject(java,io,ObjectOutputStream)
com.itextpdf.kernel.xmp.options.SerializeOptions.setReadOnlyPacket(boolean)
com.itextpdf.io.font.otf.OpenTypeScript.getScriptRecords()
com.itextpdf.kernel.pdf.PdfStream.getLength()
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.getFont(PdfDictionary)
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.setScalingY(float)
com.itextpdf.kernel.crypto.OutputStreamStandardEncryption.finish()
com.itextpdf.layout.element.Table.setDocument(Document)
com.itextpdf.kernel.pdf.navigation.PdfNamedDestination.isWrappedObjectMustBeIndirect()
com.itextpdf.io.codec.brotli.dec.DecodeTest.testX10Y10()
com.itextpdf.io.font.FontNames.toString()
com.itextpdf.forms.PdfSigFieldLockDictionary.setFieldLock(LockAction,String)
com.itextpdf.pdfa.checker.PdfA2Checker.checkColorSpace(PdfColorSpace,PdfDictionary,boolean,Boolean)
com.itextpdf.io.font.otf.Glyph.setYAdvance(short)
com.itextpdf.layout.FloatTest.floatsOnPageSplit01()
com.itextpdf.layout.renderer.AbstractRenderer.isFixedLayout()
com.itextpdf.kernel.pdf.PdfArray.newInstance()
com.itextpdf.kernel.pdf.PdfCatalog.getOCProperties(boolean)
com.itextpdf.barcodes.BarcodeDataMatrix.b256Encodation(byte,int,int,byte,int,int,int,int,int)
com.itextpdf.io.font.TrueTypeFontSubset.createNewGlyphTables()
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperOffset.doRound(int,int)
com.itextpdf.kernel.pdf.PdfObject.isBoolean()
com.itextpdf.layout.renderer.TableRenderer.drawBackgrounds(DrawContext)
com.itextpdf.signatures.CRLVerifier.verify(X509Certificate,X509Certificate,Date)
com.itextpdf.kernel.pdf.PdfEncryptor.isModifyContentsAllowed(int)
com.itextpdf.kernel.pdf.xobject.PdfImageXObject.getImageBytes(boolean)
com.itextpdf.kernel.utils.PdfSplitterTest.documentReady(PdfDocument,PageRange)
com.itextpdf.layout.font.FontSelectorKey.equals(Object)
com.itextpdf.layout.LocationTextExtractionStrategyTest.createPdfWithOverlappingTextHorizontal(String,String)
com.itextpdf.layout.renderer.MinWidthTest.divTest()
com.itextpdf.kernel.pdf.canvas.wmf.MetaBrush.init(InputMeta)
com.itextpdf.kernel.pdf.PdfFontTest.createWrongAfm2()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff014Test.getTestInfo()
com.itextpdf.kernel.pdf.PdfPrimitivesTest.pdfNamesTest()
com.itextpdf.kernel.pdf.PdfDocument.getSerializedBytes()
com.itextpdf.signatures.CertificateVerification.verifyCertificates(Certificate,KeyStore,Collection)
com.itextpdf.io.font.woff2.w3c.format.TabledataExtraneousData001Test.getTestInfo()
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperBridge.getEndType(int)
com.itextpdf.io.font.woff2.w3c.format.TabledataLocaSize001Test.isFontValid()
com.itextpdf.kernel.pdf.tagging.ParentTreeHandler.updateStructParentTreeEntries(PdfPage,Map)
com.itextpdf.layout.TextWritingTest.bigWordTest01()
com.itextpdf.kernel.utils.PdfSplitter.splitByPageCount(int)
com.itextpdf.io.util.TextUtil.isSpaceOrWhitespace(Glyph)
com.itextpdf.io.codec.TIFFDirectory.isTagPresent(int)
com.itextpdf.layout.renderer.TextRenderer.resolveFirstPdfFont(String,FontProvider,FontCharacteristics)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff035Test.getTestInfo()
com.itextpdf.layout.RootElement.showTextAlignedKerned(String,float,float,TextAlignment,VerticalAlignment,float)
com.itextpdf.io.source.PdfTokenizer.nextToken()
com.itextpdf.io.font.woff2.Woff2Dec.reconstructGlyf(byte,int,Woff2Common,Table,int,Woff2Common,Table,int,WOFF2FontInfo,Woff2Out)
com.itextpdf.io.font.CFFFontSubset.BuildFDArrayUsed(int)
com.itextpdf.kernel.font.PdfFontFactory.getRegisteredFonts()
com.itextpdf.signatures.SignatureUtil.getRevision(String)
com.itextpdf.io.image.ImageData.getWidth()
com.itextpdf.io.util.ArrayUtil.fillWithValue(float,float)
com.itextpdf.io.font.FontEncoding.getBaseEncoding()
com.itextpdf.layout.StylesTest.stylesTest02()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff034Test.getTestInfo()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.simplifyPolygons(Paths,PolyFillType)
com.itextpdf.kernel.xmp.XMPMetaFactory.getSchemaRegistry()
com.itextpdf.kernel.font.PdfType3Font.getDocument()
com.itextpdf.layout.TableTest.nestedTableMinMaxWidthException()
com.itextpdf.barcodes.qrcode.ByteArray.size()
com.itextpdf.io.font.CidFont.getPdfFontFlags()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff117Test.isFontValid()
com.itextpdf.io.font.woff2.Woff2Dec.convertWOFF2ToTTF(byte,int,Woff2Out)
com.itextpdf.kernel.pdf.canvas.parser.BidiTextExtractionTest.test02()
com.itextpdf.io.font.otf.OpenTypeFontTableReader.isSkip(int,int)
com.itextpdf.kernel.pdf.PdfObjectWrapper.setForbidRelease()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.addImage(ImageData,float,float,float,float,float,float,boolean)
com.itextpdf.kernel.pdf.PdfDocument.updateDefaultXmpMetadata()
com.itextpdf.kernel.pdf.PdfDictionary.getType()
com.itextpdf.layout.renderer.TableBorders.getCellBorderIndents(int,int,int,int)
com.itextpdf.io.font.Pfm2afm.openpfm()
com.itextpdf.layout.minmaxwidth.MinMaxWidth.setChildrenMaxWidth(float)
com.itextpdf.layout.ElementPropertyContainer.setItalic()
com.itextpdf.forms.fields.PdfChoiceFormField.getIndices()
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.setExternalData(PdfName)
com.itextpdf.kernel.pdf.action.PdfAction.createGoToR(PdfFileSpec,PdfDestination,boolean)
com.itextpdf.io.font.FontEncoding.fillStandardEncoding()
com.itextpdf.io.image.PngImageHelper.decodeIdat(PngParameters)
com.itextpdf.layout.renderer.LineRenderer.getMaxDescent()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff037Test.isFontValid()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Point.toString()
com.itextpdf.io.font.CFFFontSubset.BuildNewIndex(int,Map,byte)
com.itextpdf.kernel.utils.PdfSplitter.splitByPageNumbers(List)
com.itextpdf.kernel.pdf.canvas.CanvasTag.ensurePropertiesInit()
com.itextpdf.kernel.xmp.XMPDateTime.getDay()
com.itextpdf.io.image.TiffTest.openTiff4()
com.itextpdf.kernel.pdf.PdfDocument.getLastPage()
com.itextpdf.layout.renderer.LineRenderer.adjustChildrenYLine()
com.itextpdf.kernel.pdf.PdfStream.copyContent(PdfObject,PdfDocument)
com.itextpdf.barcodes.BarcodePDF417.outStartPattern()
com.itextpdf.kernel.xmp.XMPMeta.getLocalizedText(String,String,String,String)
com.itextpdf.kernel.geom.Rectangle.equalsWithEpsilon(Rectangle,float)
com.itextpdf.layout.LineSeparatorTest.beforeClass()
com.itextpdf.io.font.cmap.CMapLocationResource.getLocation(String)
com.itextpdf.barcodes.qrcode.MatrixUtil.buildMatrix(BitVector,ErrorCorrectionLevel,int,int,ByteMatrix)
com.itextpdf.kernel.pdf.layer.PdfLayer.setPageElement(String)
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.getExternalData()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.resetFillColorGray()
com.itextpdf.io.font.WoffConverter.bytesToUShort(byte,int)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.addForm(PdfFormXObject,Rectangle)
com.itextpdf.kernel.pdf.TagTreePointerTest.tagStructureFlushingTest01()
com.itextpdf.forms.fields.PdfFormField.release()
com.itextpdf.kernel.pdf.PdfPrimitivesTest.primitivesFloatNumberTest()
com.itextpdf.pdfa.checker.PdfA2Checker.checkNonSymbolicTrueTypeFont(PdfTrueTypeFont)
com.itextpdf.kernel.xmp.impl.XMPDateTimeImpl.setYear(int)
com.itextpdf.kernel.pdf.PdfDictionaryEntrySet.size()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.addJoin(Path,OutPt,Path,OutPt,LongPoint)
com.itextpdf.io.font.CFFFont.ReadEncoding(int)
com.itextpdf.kernel.xmp.impl.XMPSerializerRDF.serializeCanonicalRDFSchemas(int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff031Test.isFontValid()
com.itextpdf.layout.font.ComplexFontSelectorStrategy.nextGlyphs()
com.itextpdf.kernel.geom.Subpath.isDegenerate()
com.itextpdf.io.font.FontProgram.getBaseName(String)
com.itextpdf.kernel.pdf.PdfResources.addShading(PdfDictionary)
com.itextpdf.kernel.pdf.PdfNumber.equals(Object)
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.getBackgroundMode()
com.itextpdf.kernel.font.DocType1Font.getSubtype()
com.itextpdf.kernel.pdf.PdfDocumentInfo.setSubject(String)
com.itextpdf.layout.ColumnDocumentRenderer.updateCurrentArea(LayoutResult)
com.itextpdf.kernel.pdf.PdfPrimitivesTest.primitivesFloatNumberIndirectTest()
com.itextpdf.kernel.pdf.xobject.PdfFormXObject.setSeparationColorNames(PdfArray)
com.itextpdf.layout.border.InsetBorder.getType()
com.itextpdf.io.font.cmap.CMapContentParser.decodeName(byte)
com.itextpdf.io.codec.brotli.dec.Transform.readUniBytes(String)
com.itextpdf.kernel.pdf.PdfName.makeIndirect(PdfDocument,PdfIndirectReference)
com.itextpdf.barcodes.qrcode.ByteMatrix.set(int,int,int)
com.itextpdf.layout.RootElement.showTextAligned(Paragraph,float,float,TextAlignment)
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.hasTopBorders(IRenderer)
com.itextpdf.io.font.otf.Glyph.equals(Object)
com.itextpdf.layout.font.FontSet.getFontProgram(FontInfo)
com.itextpdf.signatures.ITSAClient.getTokenSizeEstimate()
com.itextpdf.io.codec.TiffWriter.writeLong(int,OutputStream)
com.itextpdf.kernel.events.IEventDispatcher.dispatchEvent(Event,boolean)
com.itextpdf.signatures.TSAClientBouncyCastle.getTokenSizeEstimate()
com.itextpdf.layout.Style.setMarginBottom(float)
com.itextpdf.kernel.pdf.PdfDeveloperExtension.getExtensionLevel()
com.itextpdf.layout.element.Image.setRole(PdfName)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.getOutRec(int)
com.itextpdf.kernel.xmp.options.SerializeOptions.setBaseIndent(int)
com.itextpdf.io.codec.CCITTG4Encoder.close()
com.itextpdf.layout.RotationTest.staticTextRotationTest04()
com.itextpdf.kernel.xmp.impl.XMPNode.setName(String)
com.itextpdf.io.font.FontCache.saveFont(FontProgram,String)
com.itextpdf.layout.renderer.RootRenderer.addChild(IRenderer)
com.itextpdf.io.codec.Base64.write(int)
com.itextpdf.layout.hyphenation.HyphenationTree.unpackValues(int)
com.itextpdf.io.font.OpenTypeParser.readNameTable()
com.itextpdf.io.font.otf.Glyph.getYAdvance()
com.itextpdf.io.font.TrueTypeFontSubset.process()
com.itextpdf.kernel.utils.CompareTool.getIndirectPath()
com.itextpdf.signatures.CertificateVerification.verifyCertificates(Certificate,KeyStore)
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.distanceFromEndOf(ITextChunkLocation)
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.setUseActualText(boolean)
com.itextpdf.io.font.otf.OpenTypeFontTableReader.getScriptRecords()
com.itextpdf.signatures.PdfPKCS7.getSignName()
com.itextpdf.kernel.geom.AffineTransform.translate(double,double)
com.itextpdf.forms.xfa.XfaForm.getNodeText(Node)
com.itextpdf.layout.RotationTest.ImageInRotatedBlockTest01()
com.itextpdf.io.util.TextUtil.isSurrogatePair(char,int)
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.flushParentIfBelongsToPage(PdfStructElem,PdfPage)
com.itextpdf.kernel.xmp.impl.XMPSerializerHelper.serialize(XMPMetaImpl,OutputStream,SerializeOptions)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff154Test.isFontValid()
com.itextpdf.kernel.pdf.canvas.draw.DashedLine.getLineWidth()
com.itextpdf.io.image.Jpeg2000ImageHelper.cio_read(int,InputStream)
com.itextpdf.forms.fields.PdfFormField.setValue(String,PdfFont,int)
com.itextpdf.kernel.pdf.canvas.wmf.MetaDo.isNullStrokeFill(boolean)
com.itextpdf.signatures.CertificateVerification.verifyOcspCertificates(BasicOCSPResp,KeyStore,String)
com.itextpdf.kernel.pdf.collection.PdfCollectionField.setEditable(boolean)
com.itextpdf.barcodes.BarcodeEANTest.barcode01Test()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff094Test.getFontName()
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.setExtentWy(int)
com.itextpdf.kernel.xmp.impl.XMPNodeUtils.serializeNodeValue(Object)
com.itextpdf.kernel.pdf.PdfDocument.setXmpMetadata(XMPMeta)
com.itextpdf.layout.element.Div.makeNewRenderer()
com.itextpdf.layout.Document.setLeftMargin(float)
com.itextpdf.kernel.pdf.PdfDocument.copyPagesTo(List,PdfDocument,int)
com.itextpdf.io.font.FontNames.convertFontWeight(String)
com.itextpdf.io.codec.Base64.getDecodabet(int)
com.itextpdf.io.font.CFFFontSubset.Process(String)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.getOverprintMode()
com.itextpdf.layout.renderer.AccessibleAttributesApplier.applyIllustrationLayoutAttributes(AbstractRenderer,PdfDictionary)
com.itextpdf.layout.border.SolidBorder.draw(PdfCanvas,float,float,float,float,float,float)
com.itextpdf.io.font.FontProgram.setStemV(int)
com.itextpdf.io.font.woff2.w3c.format.BlocksMetadataPadding004Test.getTestInfo()
com.itextpdf.io.font.otf.GlyphLine.substituteOneToOne(OpenTypeFontTableReader,int)
com.itextpdf.pdfa.PdfA1AnnotationCheckTest.compareResult(String,String)
com.itextpdf.layout.TableBorderTest.tableWithHeaderFooterTest01()
com.itextpdf.kernel.xmp.options.IteratorOptions.isJustChildren()
com.itextpdf.kernel.pdf.PdfDocumentInfo.addCreationDate()
com.itextpdf.kernel.pdf.collection.PdfCollectionField.getEditable()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.addEdgeToSEL(Edge)
com.itextpdf.io.source.ByteUtils.longSize(long)
com.itextpdf.forms.fields.PdfFormField.setValue(String,PdfFont,float)
com.itextpdf.kernel.pdf.annot.PdfLinkAnnotation.setDestination(PdfDestination)
com.itextpdf.signatures.PdfSignature.setByteRange(int)
com.itextpdf.barcodes.qrcode.BitMatrix.getDimension()
com.itextpdf.layout.RootElement.setFontProvider(FontProvider)
com.itextpdf.kernel.pdf.PdfStream.initOutputStream(java,io,OutputStream)
com.itextpdf.kernel.pdf.PdfReaderTest.pagesTest03()
com.itextpdf.kernel.pdf.layer.PdfLayer.isWrappedObjectMustBeIndirect()
com.itextpdf.kernel.geom.AffineTransform.deltaTransform(Point,Point)
com.itextpdf.barcodes.BarcodePDF417.checkSegmentType(Segment,char)
com.itextpdf.kernel.pdf.action.PdfTargetDictionary.setName(String)
com.itextpdf.kernel.pdf.PdfFontTest.testWriteTTC()
com.itextpdf.layout.IPropertyContainer.hasOwnProperty(int)
com.itextpdf.io.util.FileUtil.getParentDirectory(String)
com.itextpdf.kernel.xmp.impl.XMPSchemaRegistryImpl.getNamespacePrefix(String)
com.itextpdf.io.util.TextUtil.isUni0020(Glyph)
com.itextpdf.kernel.crypto.securityhandler.PubKeySecurityHandler.getRecipientsSize()
com.itextpdf.io.source.RandomAccessSourceFactory.createSource(URL)
com.itextpdf.layout.element.Image.setMarginRight(float)
com.itextpdf.kernel.utils.CompareTool.compareVisuallyAndCombineReports(String,String,String,Map,List)
com.itextpdf.kernel.pdf.tagging.PdfObjRef.getMcid()
com.itextpdf.kernel.pdf.PdfCanvasTest.createSimpleCanvasWithPageFlush()
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperOffset.doSquare(int,int,boolean)
com.itextpdf.kernel.geom.Point.translate(double,double)
com.itextpdf.forms.fields.PdfFormField.setRotation(int)
com.itextpdf.kernel.xmp.XMPDateTimeFactory.create(int,int,int,int,int,int,int)
com.itextpdf.kernel.pdf.PdfBoolean.valueOf(boolean)
com.itextpdf.layout.TableTest.differentPageOrientationTest01()
com.itextpdf.io.util.TextUtil.convertToUtf32(char,int)
com.itextpdf.kernel.xmp.XMPSchemaRegistry.getAliases()
com.itextpdf.io.source.RandomAccessSourceFactory.createSource(byte)
com.itextpdf.kernel.crypto.securityhandler.PubSecHandlerUsingAes256.setPubSecSpecificHandlerDicEntries(PdfDictionary,boolean,boolean)
com.itextpdf.kernel.pdf.PdfWriter.checkTypeOfPdfDictionary(PdfObject,PdfName)
com.itextpdf.io.font.IExtraEncoding.charToByte(String,String)
com.itextpdf.kernel.pdf.tagging.PdfStructElem.getE()
com.itextpdf.pdfa.PdfAFontTest.fontCheckPdfA1_05()
com.itextpdf.layout.ListTest.listOverflowTest02()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.setPropertyLong(String,String,long)
com.itextpdf.io.font.woff2.w3c.format.TabledataTransformLength002Test.getFontName()
com.itextpdf.kernel.pdf.PdfObject.copyContent(PdfObject,PdfDocument)
com.itextpdf.kernel.pdf.PdfResources.getImage(PdfName)
com.itextpdf.kernel.pdf.canvas.parser.listener.TextMarginFinder.getTextRectangle()
com.itextpdf.kernel.pdf.tagging.PdfStructElem.setActualText(PdfString)
com.itextpdf.barcodes.qrcode.Encoder.encode(String,ErrorCorrectionLevel,Map,QRCode)
com.itextpdf.kernel.pdf.TagTreePointerTest.tagStructureFlushingTest03()
com.itextpdf.io.font.woff2.w3c.format.TabledataTransformLength002Test.isFontValid()
com.itextpdf.layout.renderer.CellRenderer.drawBackground(DrawContext)
com.itextpdf.kernel.pdf.PdfResources.getPattern(PdfName)
com.itextpdf.pdfa.checker.PdfAChecker.checkSinglePage(PdfPage)
com.itextpdf.kernel.pdf.filespec.PdfFileSpec.createExternalFileSpec(PdfDocument,String,boolean)
com.itextpdf.layout.RotationTest.drawLine(PdfCanvas,float,float,float,float)
com.itextpdf.layout.renderer.TextFilteringReversedRangesTest.test04()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Path.getPt()
com.itextpdf.layout.hyphenation.CharVector.put(int,char)
com.itextpdf.io.codec.TIFFDirectory.getFieldAsDouble(int,int)
com.itextpdf.kernel.pdf.PdfResources.addForm(PdfObject)
com.itextpdf.layout.renderer.AbstractRenderer.getBorders(IRenderer)
com.itextpdf.kernel.crypto.securityhandler.PubSecHandlerUsingAes128.setPubSecSpecificHandlerDicEntries(PdfDictionary,boolean,boolean)
com.itextpdf.kernel.xmp.XMPUtils.convertFromInteger(int)
com.itextpdf.kernel.pdf.action.PdfAction.createGoToR(String,int)
com.itextpdf.io.font.FontProgramFactory.createType1Font(byte,byte,boolean)
com.itextpdf.layout.hyphenation.HyphenationTree.hyphenate(char,int,int,int,int)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setStrokeColorCmyk(float,float,float,float)
com.itextpdf.layout.font.FontProvider.getFontSelector(List,FontCharacteristics,FontSet)
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.removeAnnotationTag(PdfAnnotation)
com.itextpdf.kernel.utils.CompareTool.getErrorCount()
com.itextpdf.kernel.pdf.PdfCanvasTest.gifImageTest03()
com.itextpdf.kernel.pdf.ParentTreeTest.test03()
com.itextpdf.io.font.OpenTypeParser.readCmapTable()
com.itextpdf.kernel.font.PdfFontFactory.createFont(byte,String,boolean,boolean)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.endText()
com.itextpdf.kernel.utils.TaggedPdfReaderTool.setRootTag(String)
com.itextpdf.io.codec.brotli.dec.TransformTest.testTrimAll()
com.itextpdf.io.font.FontProgramFactory.createType1Font(String,byte,byte,boolean)
com.itextpdf.kernel.pdf.filters.ASCIIHexDecodeFilter.ASCIIHexDecode(byte)
com.itextpdf.barcodes.Barcode1D.getCodeType()
com.itextpdf.kernel.pdf.PdfPage.setAdditionalAction(PdfName,PdfAction)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff129Test.getFontName()
com.itextpdf.pdfa.checker.PdfA2Checker.getForbiddenActions()
com.itextpdf.pdfa.PdfAFontTest.beforeClass()
com.itextpdf.layout.renderer.AreaBreakRenderer.move(float,float)
com.itextpdf.io.util.UrlUtil.toURL(String)
com.itextpdf.barcodes.qrcode.BlockPair.getErrorCorrectionBytes()
com.itextpdf.io.util.IntHashtable.getKeys()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.getDashPatternArray(float)
com.itextpdf.kernel.xmp.XMPMeta.setLocalizedText(String,String,String,String,String,PropertyOptions)
com.itextpdf.pdfa.PdfADocument.checkIsoConformance(Object,IsoKey,PdfResources)
com.itextpdf.layout.BackgroundColorTest.beforeClass()
com.itextpdf.signatures.testutils.client.TestTsaClient.getTimeStampToken(byte)
com.itextpdf.kernel.pdf.annot.PdfTrapNetworkAnnotation.setAnnotStates(PdfArray)
com.itextpdf.layout.renderer.AccessibleAttributesApplier.transformBlockAlignToName(HorizontalAlignment)
com.itextpdf.forms.fields.PdfFormField.addKid(PdfWidgetAnnotation)
com.itextpdf.kernel.security.IExternalDecryptionProcess.getCmsRecipientId()
com.itextpdf.layout.PdfTextExtractorEncodingsTest.testStandardFont()
com.itextpdf.kernel.pdf.ByteBufferOutputStream.toString()
com.itextpdf.kernel.pdf.PdfLiteral.hashCode()
com.itextpdf.kernel.xmp.options.SerializeOptions.getIndent()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.setDashPattern(PdfArray)
com.itextpdf.kernel.pdf.PdfName.toString()
com.itextpdf.kernel.pdf.navigation.PdfExplicitDestination.create(PdfPage,PdfName,float,float,float,float,float)
com.itextpdf.test.RunnerSearchConfig.markTestsWithoutAnnotationAsIgnored()
com.itextpdf.kernel.pdf.PdfArray.contains(PdfObject)
com.itextpdf.layout.renderer.AreaBreakRenderer.getModelElement()
com.itextpdf.layout.TableBorderTest.splitCellsTest08()
com.itextpdf.io.codec.TIFFField.getAsBytes()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff120Test.getFontName()
com.itextpdf.kernel.xmp.impl.XMPDateTimeImpl.getYear()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.iterator(String,String,IteratorOptions)
com.itextpdf.io.font.otf.lookuptype5.SubTableLookup5Format1.getSubstLookupRecords()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff134Test.getTestInfo()
com.itextpdf.io.font.woff2.w3c.format.HeaderFlavor002Test.isFontValid()
com.itextpdf.layout.RotationTest.cellRotationTest02()
com.itextpdf.layout.renderer.AbstractRenderer.getOccupiedAreaBBox()
com.itextpdf.io.codec.TIFFField.getAsRationals()
com.itextpdf.kernel.xmp.impl.XMPIteratorImpl.next()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setFlag(int)
com.itextpdf.pdfa.checker.PdfA1Checker.checkCatalogValidEntries(PdfDictionary)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.deleteArrayItem(String,String,int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff019Test.getTestInfo()
com.itextpdf.layout.renderer.AbstractRenderer.getModelElement()
com.itextpdf.kernel.pdf.PdfAConformanceLevel.getConformanceLevel(String,String)
com.itextpdf.kernel.pdf.canvas.parser.util.PdfCanvasParser.readArray()
com.itextpdf.io.font.FontNames.getCidFontName()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff027Test.getTestInfo()
com.itextpdf.kernel.Version.getVersion()
com.itextpdf.kernel.pdf.canvas.parser.listener.FilteredEventListener.getSupportedEvents()
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getFontSize()
com.itextpdf.kernel.pdf.navigation.PdfExplicitDestination.add(int)
com.itextpdf.layout.LocationTextExtractionStrategyTest.createPdfWithOverlappingTextVertical(String,String)
com.itextpdf.kernel.xmp.impl.XMPSerializerRDF.startOuterRDFDescription(XMPNode,int)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Edge.updateDeltaX()
com.itextpdf.kernel.pdf.PdfResources.setDefaultCmyk(PdfColorSpace)
com.itextpdf.kernel.pdf.layer.PdfLayer.setUser(String,String)
com.itextpdf.io.font.TrueTypeFontSubset.calculateChecksum(byte)
com.itextpdf.layout.renderer.TextRenderer.toString()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setContents(PdfString)
com.itextpdf.layout.renderer.TextRenderer.createOverflowRenderer()
com.itextpdf.pdfa.PdfAFlushingTest.flushingTest02()
com.itextpdf.io.font.cmap.CMapToUnicode.createCharsFromDoubleBytes(byte)
com.itextpdf.io.codec.brotli.dec.Decode.setCustomDictionary(State,byte)
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.removePageTagFromParent(IPdfStructElem,IPdfStructElem)
com.itextpdf.pdfa.PdfA1AcroFormCheckTest.acroFormCheck03()
com.itextpdf.layout.renderer.TableRenderer.isHeaderRenderer()
com.itextpdf.kernel.font.PdfType0Font.convertToBytes(Glyph)
com.itextpdf.kernel.geom.Rectangle.setWidth(float)
com.itextpdf.kernel.pdf.canvas.draw.ILineDrawer.setColor(Color)
com.itextpdf.layout.DefaultLayoutTest.rendererTest01()
com.itextpdf.layout.renderer.TableRenderer.move(float,float)
com.itextpdf.kernel.xmp.XMPMeta.insertArrayItem(String,String,int,String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationLocaFormat001Test.getFontName()
com.itextpdf.layout.renderer.AbstractRenderer.calculateAdditionalWidth(AbstractRenderer)
com.itextpdf.io.image.TiffTest.openTiff1()
com.itextpdf.io.util.StreamUtil.transferBytes(InputStream,java,io,OutputStream)
com.itextpdf.test.LogListener.getSize()
com.itextpdf.io.util.TextUtil.convertToUtf32(String)
com.itextpdf.kernel.pdf.PdfEncryptionTest.checkEncryptedWithPasswordDocumentStamping(String,byte)
com.itextpdf.barcodes.qrcode.BitArray.isRange(int,int,boolean)
com.itextpdf.signatures.SignatureUtil.getBlankSignatureNames()
com.itextpdf.kernel.pdf.PdfDictionary.get(PdfName)
com.itextpdf.kernel.pdf.PdfLayerTest.testInStamperMode1()
com.itextpdf.io.util.StreamUtil.createBufferedHexedString(byte)
com.itextpdf.layout.DestinationTest.destinationTest01()
com.itextpdf.kernel.xmp.XMPUtils.convertFromBoolean(boolean)
com.itextpdf.forms.fields.PdfFormField.setFieldFlag(int)
com.itextpdf.io.source.RandomAccessFileOrArray.readFloatLE()
com.itextpdf.io.source.PdfTokenizer.getIntValue()
com.itextpdf.signatures.SignUtils.iterator()
com.itextpdf.barcodes.BarcodeDataMatrix.createAwtImage(java,awt,Color,java,awt,Color)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Edge.setTop(LongPoint)
com.itextpdf.layout.XMPWriterTest.beforeClass()
com.itextpdf.kernel.geom.BezierCurve.recursiveApproximation(double,double,double,double,double,double,double,double,List)
com.itextpdf.kernel.pdf.PdfObjectWrapper.isFlushed()
com.itextpdf.kernel.xmp.impl.XMPMetaParser.parseXmlFromString(String,ParseOptions)
com.itextpdf.kernel.font.FontUtil.createRandomFontName()
com.itextpdf.kernel.pdf.canvas.draw.ILineDrawer.getLineWidth()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.swapPositionsInAEL(Edge,Edge)
com.itextpdf.kernel.pdf.PdfResources.isWrappedObjectMustBeIndirect()
com.itextpdf.io.font.otf.Glyph.getXPlacement()
com.itextpdf.kernel.font.PdfSimpleFont.writeText(String,PdfOutputStream)
com.itextpdf.barcodes.Barcode1D.setInkSpreading(float)
com.itextpdf.layout.BlockTest.overflowTest01()
com.itextpdf.kernel.events.Event.getType()
com.itextpdf.kernel.pdf.PdfReaderTest.pagesTest05()
com.itextpdf.io.font.FontProgram.getRegistry()
com.itextpdf.io.font.FontIdentification.getPanose()
com.itextpdf.kernel.pdf.canvas.parser.BidiTextExtractionTest.test05()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff026Test.isFontValid()
com.itextpdf.forms.FormFieldFlatteningTest.formFlatteningTest_DefaultAppearanceGeneration_Rot270()
com.itextpdf.layout.hyphenation.HyphenationTree.hstrcmp(char,int,char,int)
com.itextpdf.barcodes.dmcode.Placement.corner4(int)
com.itextpdf.layout.RotationTest.fixedWidthRotationTest01()
com.itextpdf.kernel.pdf.PdfOutputStream.containsFlateFilter(PdfStream)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff021Test.getFontName()
com.itextpdf.kernel.pdf.PdfDictionary.getAsBool(PdfName)
com.itextpdf.io.codec.Base64.decodeToObject(String)
com.itextpdf.io.font.FontNames.setCidFontName(String)
com.itextpdf.io.font.woff2.w3c.W3CWoff2DecodeTest.getDestinationFolder()
com.itextpdf.kernel.pdf.PdfString.generateValue()
com.itextpdf.io.source.RandomAccessFileOrArray.close()
com.itextpdf.io.font.woff2.w3c.format.HeaderFlavor001Test.getFontName()
com.itextpdf.kernel.xmp.XMPDateTime.getCalendar()
com.itextpdf.kernel.xmp.XMPMeta.dumpObject()
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6Format1.getContextLength()
com.itextpdf.io.font.FontMetrics.updateBbox(float,float,float,float)
com.itextpdf.io.codec.Base64.decodeFileToFile(String,String)
com.itextpdf.io.font.woff2.w3c.format.TabledataHmtxTransform002Test.getTestInfo()
com.itextpdf.kernel.utils.XmlUtils.initNewXmlDocument()
com.itextpdf.forms.fields.PdfFormField.drawMultiLineTextAppearance(Rectangle,PdfFont,int,String,PdfFormXObject)
com.itextpdf.io.font.FontEncoding.getUnicode(int)
com.itextpdf.layout.RootElement.showTextAligned(String,float,float,TextAlignment,VerticalAlignment,float)
com.itextpdf.kernel.xmp.impl.ParseRDF.isPropertyElementName(int)
com.itextpdf.kernel.pdf.PdfFontTest.autoDetect4()
com.itextpdf.io.codec.Jbig2SegmentReader.getPage(int)
com.itextpdf.io.codec.brotli.dec.SynthTest.testInvalidNoLastMetablock()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.minkowskiSum(Path,Path,boolean)
com.itextpdf.signatures.PdfSignatureAppearance.setImage(ImageData)
com.itextpdf.kernel.pdf.PdfResources.addProperties(PdfObject)
com.itextpdf.kernel.pdf.canvas.wmf.MetaObject.getType()
com.itextpdf.kernel.pdf.PdfNull.hashCode()
com.itextpdf.kernel.pdf.canvas.wmf.MetaDo.strokeAndFill()
com.itextpdf.io.font.FontCache.getCid2UniCmap(String)
com.itextpdf.barcodes.qrcode.GF256Poly.evaluateAt(int)
com.itextpdf.layout.border.RoundDotsBorder.drawCellBorder(PdfCanvas,float,float,float,float)
com.itextpdf.kernel.utils.TaggedPdfReaderToolTest.taggedPdfReaderToolTest01()
com.itextpdf.kernel.font.PdfType0Font.convertToBytes(GlyphLine)
com.itextpdf.kernel.pdf.PdfReaderTest.pagesTest04()
com.itextpdf.kernel.pdf.PdfPagesTest.testInheritedResourcesUpdate()
com.itextpdf.io.font.FontMetrics.setUnitsPerEm(int)
com.itextpdf.io.source.ByteBuffer.toByteArray(int,int)
com.itextpdf.kernel.pdf.annot.PdfAnnotationAppearance.setState(PdfName,PdfFormXObject)
com.itextpdf.kernel.geom.AffineTransform.getScaleInstance(double,double)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff046Test.getFontName()
com.itextpdf.io.font.woff2.w3c.format.TabledataHmtxTransform003Test.getTestInfo()
com.itextpdf.io.image.ImageData.setFilter(String)
com.itextpdf.kernel.xmp.options.PropertyOptions.isOnlyArrayOptions()
com.itextpdf.barcodes.qrcode.BitArray.getSize()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.getValue()
com.itextpdf.kernel.pdf.canvas.parser.HighlightItemsTest.highlightReferencePage2Test()
com.itextpdf.io.source.OutputStream.writeString(String)
com.itextpdf.signatures.testutils.builder.TestOcspResponseBuilder.setCertificateStatus(CertificateStatus)
com.itextpdf.io.util.MessageFormatUtil.format(String,Object)
com.itextpdf.layout.font.ComplexFontSelectorStrategy.isSurrogatePair(String,int)
com.itextpdf.layout.element.Table.addFooterCell(String)
com.itextpdf.kernel.xmp.XMPMeta.getPropertyLong(String,String)
com.itextpdf.kernel.xmp.options.ParseOptions.setOmitNormalization(boolean)
com.itextpdf.layout.renderer.LineSeparatorRenderer.layout(LayoutContext)
com.itextpdf.layout.RotationTest.fixedTextRotationTest04()
com.itextpdf.kernel.pdf.PdfIndirectReference.setObjStreamNumber(int)
com.itextpdf.kernel.pdf.PdfFontTest.createUpdatedDocumentWithTrueTypeAsType0BasedExistingFont()
com.itextpdf.kernel.pdf.TagTreePointerTest.tagTreePointerTest01()
com.itextpdf.io.font.CMapEncoding.hasUniMap()
com.itextpdf.io.image.GifImageHelper.processImage(GifImageData,int)
com.itextpdf.kernel.pdf.PdfStream.makeIndirect(PdfDocument,PdfIndirectReference)
com.itextpdf.barcodes.BarcodeDataMatrix.getOptions()
com.itextpdf.layout.RotationTest.tableRotationTest03()
com.itextpdf.layout.BorderTest.beforeClass()
com.itextpdf.layout.element.Table.getRole()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff004Test.isFontValid()
com.itextpdf.io.codec.brotli.dec.Decode.decodeBlockTypeAndLength(State,int)
com.itextpdf.layout.TableBorderTest.borderCollapseTest01()
com.itextpdf.kernel.pdf.PdfReaderTest.fixPdfTest07()
com.itextpdf.pdfa.PdfAFontTest.fontCheckPdfA1_02()
com.itextpdf.kernel.pdf.PdfCatalog.getLang()
com.itextpdf.kernel.pdf.PdfPage.flush()
com.itextpdf.kernel.pdf.PdfDocument.isFlushUnusedObjects()
com.itextpdf.forms.fields.PdfChoiceFormField.isCombo()
com.itextpdf.kernel.pdf.PdfEncryptionTest.openEncryptedDocWithoutPrivateKey()
com.itextpdf.layout.hyphenation.PatternParser.readToken(StringBuilder)
com.itextpdf.layout.ListTest.imageInListTest01()
com.itextpdf.io.source.PdfTokenizer.throwError(String,Object)
com.itextpdf.kernel.pdf.PdfCanvasTest.create197PagesDocumentWithFullCompression()
com.itextpdf.io.font.FontMetrics.setLineGap(int)
com.itextpdf.layout.hyphenation.ByteVector.alloc(int)
com.itextpdf.io.codec.TIFFDirectory.getNextIFDOffset()
com.itextpdf.kernel.pdf.tagutils.BackedAccessibleProperties.getExpansion()
com.itextpdf.layout.layout.LayoutArea.getPageNumber()
com.itextpdf.kernel.font.DocTrueTypeFont.getSubtype()
com.itextpdf.layout.renderer.TableWidths.toString()
com.itextpdf.kernel.pdf.PdfWriterTest.copyObject8()
com.itextpdf.kernel.pdf.annot.PdfSoundAnnotation.getSubtype()
com.itextpdf.kernel.pdf.PdfPage.getAnnotsSize()
com.itextpdf.kernel.pdf.colorspace.PdfShading.getMatrix()
com.itextpdf.kernel.pdf.PdfDictionaryTest.testEntrySetRetainAll()
com.itextpdf.kernel.pdf.canvas.CanvasTag.setProperties(PdfDictionary)
com.itextpdf.kernel.pdf.annot.PdfPolyGeomAnnotation.getLineEndingStyles()
com.itextpdf.kernel.pdf.PdfReader.hasXrefStm()
com.itextpdf.barcodes.qrcode.BitVector.sizeInBytes()
com.itextpdf.kernel.xmp.properties.XMPPropertyInfo.getValue()
com.itextpdf.io.util.FilterUtil.flateDecode(byte)
com.itextpdf.io.codec.brotli.dec.SynthTest.testInvalidWindowBits9()
com.itextpdf.io.codec.Jbig2SegmentReader.copyByteArray(byte)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff123Test.getFontName()
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.addNewKid(IAccessibleElement,boolean)
com.itextpdf.io.font.woff2.w3c.format.TabledataLocaSize003Test.getTestInfo()
com.itextpdf.forms.xfa.XfaForm.setXfaForm(XfaForm,PdfAcroForm)
com.itextpdf.kernel.pdf.PdfDictionaryTest.testValues()
com.itextpdf.barcodes.BarcodeQRCodeTest.barcodeVersioningTest()
com.itextpdf.io.AdobeGlyphListTest.testGlyphListCount()
com.itextpdf.kernel.pdf.PdfDocumentTest.readEncryptedDocumentWithFullCompression()
com.itextpdf.io.image.PngImageHelper.decodeUpFilter(byte,byte,int)
com.itextpdf.layout.font.FontFamilySplitter.splitFontFamily(String)
com.itextpdf.kernel.pdf.PdfActionTest.createDocument(PdfWriter,boolean)
com.itextpdf.barcodes.qrcode.FormatInformation.decodeFormatInformation(int,int)
com.itextpdf.layout.renderer.TextRendererTest.setFontAsText()
com.itextpdf.layout.renderer.IRenderer.getChildRenderers()
com.itextpdf.layout.ElementPropertyContainer.deleteOwnProperty(int)
com.itextpdf.io.source.RandomAccessSourceFactory.createSource(RandomAccessFile)
com.itextpdf.kernel.pdf.canvas.parser.util.InlineImageParsingUtils.parseUnfilteredSamples(PdfDictionary,PdfDictionary,PdfCanvasParser)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff029Test.isFontValid()
com.itextpdf.layout.renderer.AbstractRenderer.getPropertyAsColor(int)
com.itextpdf.layout.renderer.CollapsedTableBorders.getVerticalBorder(int)
com.itextpdf.kernel.pdf.PdfResources.addShading(PdfObject)
com.itextpdf.layout.Style.setMargin(float)
com.itextpdf.kernel.pdf.PdfReader.readObject(java,io,ObjectInputStream)
com.itextpdf.layout.ElementPropertyContainer.setWidthPercent(float)
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.setBorderEffect(PdfDictionary)
com.itextpdf.pdfa.PdfAFontTest.fontCheckPdfA3_01()
com.itextpdf.kernel.pdf.PdfAnnotationTest.linkAnnotationActionDestinationTest()
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.compareTo(ITextChunkLocation)
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.getLineNeutral()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff122Test.getTestInfo()
com.itextpdf.io.image.Jbig2ImageData.getNumberOfPages(RandomAccessFileOrArray)
com.itextpdf.forms.fields.PdfFormField.setAlternativeName(String)
com.itextpdf.kernel.pdf.PdfCanvasTest.canvasInitializationPageNoContentsKey()
com.itextpdf.kernel.font.PdfTrueTypeFont.getGlyph(int)
com.itextpdf.layout.property.UnitValue.createPointValue(float)
com.itextpdf.barcodes.qrcode.ByteMatrix.getArray()
com.itextpdf.kernel.xmp.options.AliasOptions.isArrayOrdered()
com.itextpdf.barcodes.qrcode.Encoder.isOnlyDoubleByteKanji(String)
com.itextpdf.kernel.pdf.PdfDictionary.copyTo(PdfDocument,List,boolean)
com.itextpdf.signatures.SignaturePolicyInfo.getPolicyIdentifier()
com.itextpdf.kernel.pdf.annot.PdfTrapNetworkAnnotation.getLastModified()
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingStandard40.computeOwnerKey(byte,byte)
com.itextpdf.io.font.OpenTypeParser.getPostTable()
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.subtractUsedTopBufferFromBottomBuffer(float)
com.itextpdf.layout.KeepWithNextTest.keepWithNextTest03()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff047Test.getTestInfo()
com.itextpdf.kernel.pdf.PdfDictionaryValues.iterator()
com.itextpdf.layout.element.Image.getImageScaledHeight()
com.itextpdf.kernel.pdf.PdfStructElemTest.structElemTest05()
com.itextpdf.kernel.utils.CompareTool.getIndex()
com.itextpdf.barcodes.Barcode128.getCodeSet()
com.itextpdf.kernel.pdf.ReaderProperties.setPassword(byte)
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.updateCollapseBeforeIfPrevKidIsFirstAndSelfCollapsed(MarginsCollapse)
com.itextpdf.layout.renderer.AbstractRenderer.resolveFirstPdfFont(String,FontProvider,FontCharacteristics)
com.itextpdf.layout.border.Border.hashCode()
com.itextpdf.io.codec.PngWriter.crc(byte)
com.itextpdf.io.font.OpenTypeParser.getOs_2Table()
com.itextpdf.io.font.otf.ContextualSubstRule.isGlyphMatchesBacktrack(int,int)
com.itextpdf.kernel.pdf.tagutils.DummyAccessibleElement.getAccessibilityProperties()
com.itextpdf.layout.Style.setKeepTogether(boolean)
com.itextpdf.layout.Canvas.isAutoTaggingEnabled()
com.itextpdf.kernel.pdf.PdfReader.getSafeFile()
com.itextpdf.io.font.OpenTypeParser.readStandardString(int)
com.itextpdf.kernel.pdf.ByteBufferOutputStream.append(char)
com.itextpdf.kernel.pdf.PdfTokenizerTest.testOneNumber()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff011Test.getFontName()
com.itextpdf.io.codec.brotli.dec.SynthTest.testOneInsert()
com.itextpdf.kernel.xmp.options.SerializeOptions.getUseCompactFormat()
com.itextpdf.io.source.PdfTokenizer.getStartxref()
com.itextpdf.kernel.pdf.canvas.draw.DottedLine.draw(PdfCanvas,Rectangle)
com.itextpdf.layout.AutoTaggingTest.tableTest01()
com.itextpdf.kernel.xmp.impl.XMPNode.addChild(XMPNode)
com.itextpdf.barcodes.qrcode.Version.getDimensionForVersion()
com.itextpdf.kernel.xmp.impl.XMPSchemaRegistryImpl.getAliases()
com.itextpdf.layout.element.TabStop.getTabAlignment()
com.itextpdf.layout.ImageTest.imageTest17()
com.itextpdf.io.font.woff2.w3c.format.TabledataGlyfCompositeBbox001Test.isFontValid()
com.itextpdf.kernel.crypto.securityhandler.PubKeySecurityHandler.getEncodedRecipients()
com.itextpdf.layout.AutoTaggingTest.emptyDivTest()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.setLineWidth(float)
com.itextpdf.barcodes.qrcode.QRCode.isValidMaskPattern(int)
com.itextpdf.barcodes.qrcode.MatrixUtil.maybeEmbedVersionInfo(int,ByteMatrix)
com.itextpdf.layout.TableTest.bigFooterTest01()
com.itextpdf.kernel.pdf.PdfDictionary.directEntrySet()
com.itextpdf.io.font.FontProgram.setFontName(String)
com.itextpdf.kernel.pdf.PdfEncryptionTest.encryptWithPasswordStandard40()
com.itextpdf.io.font.FontMetrics.getSuperscriptSize()
com.itextpdf.layout.minmaxwidth.RotationMinMaxWidth.calculate(double,double,MinMaxWidth)
com.itextpdf.signatures.testutils.builder.TestCrlBuilder.makeCrl(PrivateKey)
com.itextpdf.io.font.woff2.w3c.format.TabledataLocaSize001Test.getFontName()
com.itextpdf.kernel.geom.AffineTransform.getMatrix(float)
com.itextpdf.io.font.woff2.w3c.format.BlocksOrdering004Test.isFontValid()
com.itextpdf.layout.renderer.AreaBreakRenderer.isFlushed()
com.itextpdf.kernel.pdf.xobject.PdfImageXObject.identifyImageType()
com.itextpdf.kernel.pdf.PdfDestinationTest.beforeClass()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationLocaFormat002Test.getFontName()
com.itextpdf.io.font.woff2.w3c.format.BlocksMetadataPadding004Test.getFontName()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.resetFillColorCmyk()
com.itextpdf.layout.renderer.TextRenderer.moveYLineTo(float)
com.itextpdf.pdfa.PdfA1GraphicsTest.compareResult(String,String)
com.itextpdf.kernel.pdf.annot.Pdf3DAnnotation.getDefaultInitialView()
com.itextpdf.io.font.cmap.CMapByteCid.decodeSequence(byte,int,int)
com.itextpdf.kernel.pdf.PdfReader.readXrefStream(long)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff034Test.getFontName()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.getNormalAppearanceObject()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Point.getY()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff106Test.getTestInfo()
com.itextpdf.io.codec.brotli.dec.Decode.readBlockLength(int,int,BitReader)
com.itextpdf.io.util.TextUtil.isSurrogatePair(String,int)
com.itextpdf.layout.TableBorderTest.beforeClass()
com.itextpdf.signatures.PdfSignature.getByteRange()
com.itextpdf.layout.renderer.CollapsedTableBorders.checkAndReplaceBorderInArray(List,int,int,Border,boolean)
com.itextpdf.signatures.CertificateVerifier.setOnlineCheckingAllowed(boolean)
com.itextpdf.kernel.xmp.XMPMetaFactory.serializeToString(XMPMeta,SerializeOptions)
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.removeContentItem(PdfPage,int)
com.itextpdf.forms.fields.PdfTextFormField.isFileSelect()
com.itextpdf.io.font.otf.Glyph.toHex(int)
com.itextpdf.io.source.PdfTokenizer.setCloseStream(boolean)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff069Test.getFontName()
com.itextpdf.kernel.pdf.layer.PdfVisibilityExpression.isWrappedObjectMustBeIndirect()
com.itextpdf.forms.xfa.Xml2SomDatasets.hasChildren(Node)
com.itextpdf.layout.BlockTest.overflowTest02()
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.getEndLocation()
com.itextpdf.layout.element.Table.getNumberOfRows()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.openTag(TagReference)
com.itextpdf.pdfa.checker.PdfAChecker.checkPages(PdfDocument)
com.itextpdf.kernel.events.IEventDispatcher.addEventHandler(String,IEventHandler)
com.itextpdf.kernel.pdf.PdfEncryptionTest.stampDocNoUserPassword()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff098Test.getFontName()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff148Test.getFontName()
com.itextpdf.kernel.xmp.impl.XMPSerializerRDF.canBeRDFAttrProp(XMPNode)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getFont()
com.itextpdf.layout.renderer.TableWidths.getMinWidth()
com.itextpdf.layout.renderer.CollapsedTableBorders.buildBordersArrays(CellRenderer,int,boolean)
com.itextpdf.kernel.xmp.options.SerializeOptions.setPadding(int)
com.itextpdf.layout.hyphenation.TernaryTree.strlen(char,int)
com.itextpdf.io.font.cmap.CMapToUnicode.createDirectMapping()
com.itextpdf.io.codec.brotli.dec.SynthTest.testSimplePrefixDuplicateSymbols()
com.itextpdf.io.font.otf.OtfReadCommon.readUShortArray(RandomAccessFileOrArray,int,int)
com.itextpdf.kernel.xmp.options.Options.getOptionName(int)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setFillOverPrintFlag(boolean)
com.itextpdf.kernel.pdf.PdfIndirectReference.toString()
com.itextpdf.kernel.pdf.PdfDictionaryEntrySet.clear()
com.itextpdf.kernel.pdf.PdfDictionary.getAsString(PdfName)
com.itextpdf.kernel.pdf.PdfEncryptionTest.encryptWithCertificateAes128()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Point.distanceFromLineSqrd(Point,Point,Point)
com.itextpdf.kernel.pdf.PdfOutlineTest.outlinesWithPagesTest()
com.itextpdf.kernel.pdf.PdfStructElemTest.corruptedTagStructureTest03()
com.itextpdf.forms.fields.PdfFormField.createMultilineText(PdfDocument,Rectangle,String,String,PdfFont,int)
com.itextpdf.io.image.ImageDataFactory.createJpeg2000(byte)
com.itextpdf.kernel.pdf.PdfObject.isStream()
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.throwExceptionIfRoleIsInvalid(PdfName)
com.itextpdf.io.codec.brotli.dec.Dictionary.getData()
com.itextpdf.kernel.pdf.PdfPage.tryFlushPageTags()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff073Test.isFontValid()
com.itextpdf.layout.layout.PositionedLayoutContext.getParentOccupiedArea()
com.itextpdf.kernel.pdf.PdfStringTest.before()
com.itextpdf.pdfa.PdfA2EmbeddedFilesCheckTest.fileSpecCheckTest01()
com.itextpdf.layout.renderer.TableWidths.fillRendererCells(TableRenderer,byte)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.concatMatrix(PdfArray)
com.itextpdf.io.font.cmap.CMapObject.isArray()
com.itextpdf.io.image.ImageDataFactory.createImageInstance(byte,boolean)
com.itextpdf.kernel.pdf.PdfXrefTable.add(PdfIndirectReference)
com.itextpdf.barcodes.qrcode.QRCode.getNumRSBlocks()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff078Test.isFontValid()
com.itextpdf.kernel.xmp.impl.XMPNormalizer.moveExplicitAliases(XMPNode,ParseOptions)
com.itextpdf.kernel.font.PdfFont.writeText(GlyphLine,PdfOutputStream)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff107Test.getFontName()
com.itextpdf.io.font.FontMetrics.setUnderlinePosition(int)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setBlendMode(PdfObject)
com.itextpdf.io.font.otf.Glyph.getCode()
com.itextpdf.kernel.pdf.canvas.wmf.MetaFont.init(InputMeta)
com.itextpdf.kernel.pdf.PdfName.equals(Object)
com.itextpdf.kernel.pdf.PdfDocument.getDocumentFonts()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setTitle(PdfString)
com.itextpdf.kernel.utils.CompareTool.compareObjects(PdfObject,PdfObject,ObjectPath,CompareResult)
com.itextpdf.layout.border.OutsetBorder.getType()
com.itextpdf.layout.renderer.TypographyUtils.reorderLine(List,byte,byte)
com.itextpdf.kernel.pdf.SerializedObjectContent.hashCode()
com.itextpdf.io.font.OpenTypeParser.getHeadTable()
com.itextpdf.barcodes.qrcode.MaskUtil.applyMaskPenaltyRule3(ByteMatrix)
com.itextpdf.layout.property.UnitValue.equals(Object)
com.itextpdf.kernel.pdf.PdfResources.setProcSet(PdfArray)
com.itextpdf.test.LogListener.before()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.addXObject(PdfXObject,float,float,float,boolean)
com.itextpdf.kernel.font.PdfSimpleFont.isBuiltInFont()
com.itextpdf.kernel.pdf.action.PdfAction.buildArray(Object)
com.itextpdf.pdfa.PdfA2CatalogCheckTest.catalogCheck06()
com.itextpdf.kernel.pdf.PdfDocument.checkClosingStatus()
com.itextpdf.kernel.pdf.layer.PdfOCProperties.getDocument()
com.itextpdf.kernel.pdf.PdfDocumentTest.testFreeReference()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff035Test.getFontName()
com.itextpdf.signatures.LtvVerifier.verify(X509Certificate,X509Certificate,Date)
com.itextpdf.kernel.utils.PageRange.getQualifyingPageNums(int)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setBorder(PdfArray)
com.itextpdf.io.font.otf.OtfReadCommon.readLigatureArray(OpenTypeFontTableReader,int,int)
com.itextpdf.layout.OverflowTest.textOverflowTest04()
com.itextpdf.layout.AlignmentTest.justifyAlignmentTest03()
com.itextpdf.layout.hyphenation.ByteVector.trimToSize()
com.itextpdf.layout.renderer.TextRenderer.numberOfElementsLessThanOrEqual(ArrayList,int)
com.itextpdf.kernel.pdf.tagging.PdfObjRef.getPageObject()
com.itextpdf.kernel.pdf.canvas.draw.SolidLine.setColor(Color)
com.itextpdf.forms.fields.PdfFormField.createSignature(PdfDocument)
com.itextpdf.kernel.xmp.properties.XMPAliasInfo.getAliasForm()
com.itextpdf.kernel.xmp.impl.XMPNode.clone()
com.itextpdf.kernel.pdf.tagutils.AccessibilityProperties.combineAttributesList(PdfObject,List,PdfNumber)
com.itextpdf.layout.TabsTest.anchorTabStopsTest01()
com.itextpdf.io.font.CFFFont.getCard16()
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.getTagReference()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.getPropertyBase64(String,String)
com.itextpdf.layout.renderer.AbstractRenderer.endElementOpacityApplying(DrawContext)
com.itextpdf.pdfa.PdfA3EmbeddedFilesCheckTest.beforeClass()
com.itextpdf.kernel.pdf.PdfEncryptionTest.metadataReadingInEncryptedDoc()
com.itextpdf.kernel.pdf.PdfDictionaryValues.next()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.getDashPatternArray(float,float)
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingStandard40.calculatePermissions(int)
com.itextpdf.kernel.xmp.impl.Utils.isNameStartChar(char)
com.itextpdf.kernel.color.Color.makeColor(PdfColorSpace,float)
com.itextpdf.kernel.crypto.securityhandler.PubKeySecurityHandler.getSeed()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getLineCapStyle()
com.itextpdf.kernel.geom.Path.replaceCloseWithLine()
com.itextpdf.kernel.pdf.PdfNameTree.readTree(PdfDictionary)
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.startChildMarginsHandling(IRenderer,Rectangle)
com.itextpdf.forms.FormFieldFlatteningTest.formFlatteningTest_DefaultAppearanceGeneration_Rot90()
com.itextpdf.layout.element.AreaBreak.setPageSize(PageSize)
com.itextpdf.kernel.pdf.PdfDictionary.getAsArray(PdfName)
com.itextpdf.kernel.pdf.canvas.parser.data.ImageRenderInfo.getColorSpaceDictionary()
com.itextpdf.signatures.LtvVerification.outputDss(PdfDictionary,PdfDictionary,PdfArray,PdfArray,PdfArray)
com.itextpdf.io.util.TextUtil.isNewLine(Glyph)
com.itextpdf.layout.renderer.AbstractRenderer.isBorderBoxSizing(IRenderer)
com.itextpdf.io.source.ByteBuffer.append(String)
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6Format2.isGlyphMatchesBacktrack(int,int)
com.itextpdf.io.font.OpenTypeParser.readGlyphWidths()
com.itextpdf.io.image.ImageDataFactory.createGifFrame(URL,int)
com.itextpdf.forms.fields.PdfChoiceFormField.isMultiSelect()
com.itextpdf.layout.TableTest.nestedTablesWithMarginsTest01()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.execute(ClipType,PolyTree,PolyFillType)
com.itextpdf.signatures.testutils.client.TestCrlClient.getEncoded(X509Certificate,String)
com.itextpdf.io.font.woff2.Woff2Dec.tables(WOFF2Header,int)
com.itextpdf.io.color.IccProfile.getInstance(byte,int)
com.itextpdf.kernel.xmp.options.SerializeOptions.getEncodeUTF16BE()
com.itextpdf.io.image.PngImageHelper.readPng(InputStream,PngParameters)
com.itextpdf.layout.TabsTest.defaultTabsTest()
com.itextpdf.kernel.pdf.PdfWriterTest.copyObject2()
com.itextpdf.layout.renderer.TableRenderer.correctRowRange()
com.itextpdf.kernel.pdf.function.PdfFunction.getFunctionsArray(List)
com.itextpdf.signatures.OcspClientBouncyCastle.generateOCSPRequest(X509Certificate,BigInteger)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setTextKnockoutFlag(boolean)
com.itextpdf.forms.fields.PdfFormField.setOptions(PdfArray)
com.itextpdf.layout.font.FontSetCollection.next()
com.itextpdf.kernel.pdf.PdfDictionary.getAsInt(PdfName)
com.itextpdf.signatures.sign.SigningTest.signingIntoExistingReuseAppearanceTest()
com.itextpdf.pdfa.PdfA2AnnotationCheckTest.annotationCheckTest07()
com.itextpdf.forms.fields.PdfFormField.getBorderWidth()
com.itextpdf.signatures.testutils.SignTestPortUtil.parseCrlFromStream(InputStream)
com.itextpdf.barcodes.BarcodeDataMatrix.placeBarcode(PdfCanvas,Color,float)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setColor(Color,boolean)
com.itextpdf.io.source.RandomAccessFileOrArray.pushBack(byte)
com.itextpdf.barcodes.Barcode39Test.barcode02Test()
com.itextpdf.layout.renderer.TextRenderer.splitIgnoreFirstNewLine(int)
com.itextpdf.layout.border.Border3D.draw(PdfCanvas,float,float,float,float,float,Side,float,float)
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.setIntent(PdfName)
com.itextpdf.layout.ListTest.listOverflowTest03()
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.transformAngle(float)
com.itextpdf.io.font.woff2.w3c.format.HeaderReserved001Test.getTestInfo()
com.itextpdf.io.font.PdfEncodings.byteToChar(byte,String)
com.itextpdf.forms.xfa.Xml2Som.getInverseSearch()
com.itextpdf.signatures.testutils.client.TestOcspClient.getEncoded(X509Certificate,X509Certificate,String)
com.itextpdf.forms.fields.PdfFormField.createRadioGroup(PdfDocument,String,String)
com.itextpdf.kernel.pdf.PdfReaderTest.incorrectXrefSizeInTrailerAppend()
com.itextpdf.kernel.xmp.impl.XMPIteratorImpl.accumulatePath(XMPNode,String,int)
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingStandard128.calculatePermissions(int)
com.itextpdf.layout.TableTest.simpleTableTest16()
com.itextpdf.io.font.otf.IGlyphLineFilter.accept(Glyph)
com.itextpdf.kernel.pdf.canvas.parser.data.PathRenderInfo.getMiterLimit()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.setPropertyBoolean(String,String,boolean)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.concatMatrix(double,double,double,double,double,double)
com.itextpdf.io.util.TextUtil.isSurrogateLow(char)
com.itextpdf.kernel.pdf.FreeReferencesTest.freeReferencesTest06()
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.ignoreModelBottomMargin(IRenderer)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.getPropertyObject(String,String,int)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setFont(PdfArray)
com.itextpdf.io.source.RandomAccessSourceFactory.createSource(InputStream)
com.itextpdf.barcodes.qrcode.QRCode.getMaskPattern()
com.itextpdf.io.source.OutputStream.writeBytes(byte)
com.itextpdf.io.source.PdfTokenizer.get(long)
com.itextpdf.io.font.otf.Glyph.getChars(int)
com.itextpdf.kernel.pdf.PdfWriterTest.copyObject5()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.fillStroke()
com.itextpdf.io.image.ImageDataFactory.create(String)
com.itextpdf.barcodes.BarcodePDF417.getCodeColumns()
com.itextpdf.layout.renderer.TableRenderer.retrieveWidth(float)
com.itextpdf.kernel.xmp.impl.XMPNode.dumpNode(StringBuffer,boolean,int,int)
com.itextpdf.kernel.pdf.PdfString.decodeContent()
com.itextpdf.kernel.numbering.AlphabetNumbering.toAlphabetNumber(int,char)
com.itextpdf.kernel.pdf.PdfEncryption.computeUserPassword(byte)
com.itextpdf.io.util.IntHashtable.containsKey(int)
com.itextpdf.io.font.otf.Glyph.hasAdvance()
com.itextpdf.kernel.pdf.layer.PdfLayer.setLanguage(String,boolean)
com.itextpdf.signatures.PdfSignature.put(PdfName,PdfObject)
com.itextpdf.forms.fields.PdfFormField.getFormType()
com.itextpdf.layout.Style.getPaddingBottom()
com.itextpdf.layout.TableTest.nestedTableSkipHeaderFooterTest()
com.itextpdf.kernel.pdf.PdfResources.addExtGState(PdfObject)
com.itextpdf.kernel.xmp.impl.ParameterAsserts.assertSpecificLang(String)
com.itextpdf.barcodes.BarcodeInter25.getChecksum(String)
com.itextpdf.layout.hyphenation.PatternParser.getPattern(String)
com.itextpdf.forms.fields.PdfChoiceFormField.setSort(boolean)
com.itextpdf.kernel.geom.Matrix.subtract(Matrix)
com.itextpdf.kernel.pdf.colorspace.PdfSpecialCs.getDeviceNCsArray(PdfArray,PdfObject,PdfObject)
com.itextpdf.kernel.pdf.canvas.CanvasTag.getPropertyAsString(PdfName)
com.itextpdf.kernel.font.PdfType0Font.addRangeUni(TrueTypeFont,Map,boolean)
com.itextpdf.kernel.pdf.annot.PdfAnnotationAppearance.isWrappedObjectMustBeIndirect()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.applyRotation(PdfPage)
com.itextpdf.kernel.pdf.PdfOutputStream.readObject(java,io,ObjectInputStream)
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.displayImage(PdfStream,boolean)
com.itextpdf.layout.ImageTest.imageTest02()
com.itextpdf.io.source.MappedChannelRandomAccessSource.close()
com.itextpdf.layout.minmaxwidth.RotationMinMaxWidth.getMaxWidthOrigin()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.addImage(PdfXObject,float,float,float,float,float,float)
com.itextpdf.io.source.RAFRandomAccessSource.close()
com.itextpdf.layout.element.Div.setFillAvailableAreaOnSplit(boolean)
com.itextpdf.kernel.xmp.options.SerializeOptions.setEncodeUTF16BE(boolean)
com.itextpdf.kernel.pdf.PdfEncryptor.isScreenReadersAllowed(int)
com.itextpdf.layout.renderer.AbstractRenderer.drawChildren(DrawContext)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff010Test.getTestInfo()
com.itextpdf.kernel.xmp.impl.XMPSerializerRDF.emitRDFArrayTag(XMPNode,boolean,int)
com.itextpdf.layout.renderer.TableBorders.getMaxRightWidth()
com.itextpdf.layout.PositioningTest.fixedPositioningTest01()
com.itextpdf.kernel.geom.Point.getX()
com.itextpdf.io.codec.brotli.dec.State.setInput(State,InputStream)
com.itextpdf.layout.renderer.TableBorderUtil.getCellSideBorder(Cell,int)
com.itextpdf.io.font.cmap.CMapObject.setValue(Object)
com.itextpdf.kernel.pdf.colorspace.PdfColorSpace.makeColorSpace(PdfObject)
com.itextpdf.pdfa.PdfA1GraphicsTest.transparencyCheckTest2()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff090Test.getTestInfo()
com.itextpdf.kernel.xmp.XMPMetaFactory.getVersionInfo()
com.itextpdf.kernel.pdf.colorspace.PdfSpecialCs.isWrappedObjectMustBeIndirect()
com.itextpdf.forms.xfa.XfaForm.fillXfaForm(InputSource,boolean)
com.itextpdf.io.codec.brotli.dec.Decode.decodeLiteralBlockSwitch(State)
com.itextpdf.layout.layout.LayoutArea.setEmptyArea(boolean)
com.itextpdf.layout.hyphenation.TernaryTree.insert(char,int,char)
com.itextpdf.layout.renderer.MinWidthTest.divWithSmallRotatedParagraph()
com.itextpdf.io.codec.brotli.dec.SynthTest.testCompressedUncompressedShortCompressed()
com.itextpdf.io.font.FontRegisterProvider.clearRegisteredFonts()
com.itextpdf.io.font.cmap.CMapUniCid.addChar(String,CMapObject)
com.itextpdf.io.source.ByteBuffer.append(byte,int,int)
com.itextpdf.kernel.font.PdfFontFactory.registerDirectory(String)
com.itextpdf.kernel.pdf.PdfResources.addPattern(PdfObject)
com.itextpdf.barcodes.BarcodeInter25.placeBarcode(PdfCanvas,Color,Color)
com.itextpdf.barcodes.BarcodeQRCode.getBarcodeSize()
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingAes128.getDecryptor()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff020Test.getTestInfo()
com.itextpdf.kernel.pdf.PdfOutputIntent.setDestOutputProfile(InputStream)
com.itextpdf.kernel.crypto.securityhandler.PublicKeyRecipient.getPermission()
com.itextpdf.kernel.utils.CompareTool.resetDirectPath(PdfIndirectReference,PdfIndirectReference)
com.itextpdf.io.font.cmap.CMapToUnicode.lookup(byte)
com.itextpdf.kernel.pdf.PdfPagesTree.findPageParent(PdfPage)
com.itextpdf.forms.PdfFormFieldTest.choiceFieldTest01()
com.itextpdf.io.font.TrueTypeFont.hasKernPairs()
com.itextpdf.layout.TableBorderTest.simpleBorderTest03()
com.itextpdf.signatures.sign.PadesSignatureLevelTest.before()
com.itextpdf.kernel.xmp.impl.ParseRDF.rdf_ParseTypeResourcePropertyElement(XMPMetaImpl,XMPNode,Node,boolean)
com.itextpdf.io.source.RandomAccessSourceFactory.createBestSource(String)
com.itextpdf.kernel.pdf.PdfLayerTest.testInStamperMode2()
com.itextpdf.kernel.color.WebColors.getAlphaChannelValue(String)
com.itextpdf.layout.Document.ensureRootRendererNotNull()
com.itextpdf.layout.hyphenation.TernaryTree.insert(String,char)
com.itextpdf.kernel.font.DocTrueTypeFont.createFontProgram(PdfDictionary,CMapToUnicode)
com.itextpdf.layout.element.Cell.getRole()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff136Test.isFontValid()
com.itextpdf.forms.fields.PdfButtonFormField.isPushButton()
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getFont()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.getProperty(String,String,int)
com.itextpdf.kernel.xmp.impl.ParseRDF.rdf_PropertyElementList(XMPMetaImpl,XMPNode,Node,boolean)
com.itextpdf.io.font.TrueTypeFontSubset.readStandardString(int)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setTransferFunction(PdfObject)
com.itextpdf.io.font.otf.OpenTypeFontTableReader.readLookupTable(int)
com.itextpdf.layout.renderer.MinWidthTest.divWithRotatedPercentImage()
com.itextpdf.signatures.sign.PadesSigTest.basicCheckSignedDoc(String,String)
com.itextpdf.kernel.xmp.properties.XMPAliasInfo.getNamespace()
com.itextpdf.kernel.pdf.canvas.parser.filter.TextRegionEventFilter.accept(IEventData,EventType)
com.itextpdf.kernel.xmp.impl.XMPDateTimeImpl.getCalendar()
com.itextpdf.layout.Style.setSpacingRatio(float)
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.setContentStreamForTagging(PdfStream)
com.itextpdf.kernel.pdf.layer.PdfLayer.setIntents(List)
com.itextpdf.forms.fields.PdfTextFormField.setMultiline(boolean)
com.itextpdf.io.font.FontProgramFactory.createFont(String)
com.itextpdf.io.IOException.setMessageParams(Object)
com.itextpdf.kernel.font.PdfType0Font.writeText(GlyphLine,int,int,PdfOutputStream)
com.itextpdf.kernel.numbering.RomanNumbering.toRomanLowerCase(int)
com.itextpdf.forms.xfa.XfaForm.findFieldName(String)
com.itextpdf.pdfa.PdfA1AnnotationCheckTest.annotationCheckTest05()
com.itextpdf.kernel.pdf.PdfDocument.getCatalog()
com.itextpdf.kernel.pdf.PdfDocument.setXmpMetadata(XMPMeta,SerializeOptions)
com.itextpdf.kernel.pdf.PdfNumTree.iterateItems(PdfDictionary,PdfNumber)
com.itextpdf.layout.ListTest.listSymbolForcedPlacement01()
com.itextpdf.io.font.CFFFontSubset.CreateFDArray(OffsetItem,OffsetItem,int)
com.itextpdf.kernel.pdf.ByteBufferOutputStream.formatDouble(double,ByteBufferOutputStream)
com.itextpdf.io.font.CidFont.initializeCidFontProperties(Map)
com.itextpdf.layout.element.List.setListSymbol(Image)
com.itextpdf.kernel.pdf.annot.PdfTrapNetworkAnnotation.setFauxedFonts(List)
com.itextpdf.signatures.ITSAInfoBouncyCastle.inspectTimeStampTokenInfo(TimeStampTokenInfo)
com.itextpdf.kernel.pdf.TagTreePointerTest.compareResult(String,String,String)
com.itextpdf.io.font.woff2.Buffer.readShort()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff153Test.isFontValid()
com.itextpdf.io.font.otf.Glyph.getChars()
com.itextpdf.io.font.woff2.w3c.format.BlocksMetadataPadding003Test.getTestInfo()
com.itextpdf.layout.renderer.TableBorders.getWidestVerticalBorder(int,int,int)
com.itextpdf.kernel.pdf.PdfViewerPreferences.setPrintClip(PdfViewerPreferencesConstants)
com.itextpdf.layout.hyphenation.TernaryTree.find(char,int)
com.itextpdf.kernel.geom.Vector.toString()
com.itextpdf.layout.TableTest.cellAlignmentAndSplittingTest01()
com.itextpdf.kernel.pdf.PdfNumber.getType()
com.itextpdf.kernel.utils.PdfMerger.close()
com.itextpdf.kernel.xmp.impl.XMPDateTimeImpl.getNanoSecond()
com.itextpdf.kernel.font.PdfFontFactory.checkFontDictionary(PdfDictionary,PdfName,boolean)
com.itextpdf.layout.element.Table.addFooterCell(BlockElement)
com.itextpdf.layout.element.Text.setSkew(float,float)
com.itextpdf.layout.element.Paragraph.add(String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff092Test.getTestInfo()
com.itextpdf.io.source.PdfTokenizer.length()
com.itextpdf.kernel.pdf.PdfReaderTest.pdfVersionTest()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff133Test.isFontValid()
com.itextpdf.kernel.pdf.PdfDocument.getTagStructureContext()
com.itextpdf.kernel.pdf.canvas.parser.PdfTextExtractor.getTextFromPage(PdfPage)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Edge.reverseHorizontal()
com.itextpdf.layout.renderer.FloatingHelper.isRendererFloating(IRenderer)
com.itextpdf.io.font.otf.OpenTypeFontTableReader.getFeatures(String,String)
com.itextpdf.io.font.FontProgramFactory.getRegisteredFontFamilies()
com.itextpdf.io.source.ByteUtils.intSize(int)
com.itextpdf.io.util.FileUtil.directoryExists(String)
com.itextpdf.pdfa.checker.PdfA2Checker.checkFormXObject(PdfStream)
com.itextpdf.kernel.geom.Rectangle.getX()
com.itextpdf.kernel.pdf.canvas.parser.LocationExtractTest.fuzzyContainsAll(Collection,Collection)
com.itextpdf.io.font.otf.OpenTypeFeature.getRecords()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff141Test.isFontValid()
com.itextpdf.kernel.pdf.colorspace.PdfShading.getCoords()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff096Test.isFontValid()
com.itextpdf.signatures.PdfSignature.setDate(PdfDate)
com.itextpdf.layout.RootElement.getRenderer()
com.itextpdf.kernel.color.WebColors.getRGBChannelValue(String)
com.itextpdf.layout.RotationTest.innerRotationTest02()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.clip()
com.itextpdf.layout.RotationTest.rotationInfiniteLoopTest02()
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.registerContentOperator(String,IContentOperator)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff101Test.getFontName()
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.getBlackGenerationFunction2()
com.itextpdf.kernel.pdf.PdfFontTest.testFontRegister()
com.itextpdf.kernel.pdf.canvas.parser.clipper.PolyNode.getParent()
com.itextpdf.pdfa.PdfAFontTest.symbolicTtfCharEncodingsPdfA1Test02()
com.itextpdf.layout.TableTest.bigRowspanTest04()
com.itextpdf.kernel.pdf.PdfViewerPreferences.setDisplayDocTitle(boolean)
com.itextpdf.io.source.OutputStream.writeDouble(double)
com.itextpdf.kernel.pdf.PdfFontTest.createDocumentWithStSong()
com.itextpdf.kernel.pdf.PdfDocument.isXmpMetaHasProperty(XMPMeta,String,String)
com.itextpdf.kernel.pdf.PdfIndirectReference.setIndex(long)
com.itextpdf.kernel.xmp.impl.XMPNode.setParent(XMPNode)
com.itextpdf.layout.hyphenation.Hyphenator.getHyphenationTree(String,String,Map)
com.itextpdf.kernel.pdf.PdfEncryptionTest.encryptWithPasswordAes128()
com.itextpdf.kernel.pdf.PdfFontTest.testFontDirectoryRegister()
com.itextpdf.layout.renderer.TableBorders.getMaxLeftWidth()
com.itextpdf.forms.xfa.XfaForm.resolveEntity(String,String)
com.itextpdf.io.source.WriteNumbersTest.round(double,int)
com.itextpdf.kernel.pdf.PdfReaderTest.pagesTest07()
com.itextpdf.forms.xfa.Xml2Som.escapeSom(String)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.resetStrokeColorRgb()
com.itextpdf.io.image.JpegImageHelper.marker(int)
com.itextpdf.layout.element.Div.getAccessibilityProperties()
com.itextpdf.kernel.xmp.options.IteratorOptions.isJustLeafnodes()
com.itextpdf.io.font.FontCacheKey.create(byte)
com.itextpdf.layout.renderer.TextFilteringReversedRangesTest.test03()
com.itextpdf.kernel.geom.Rectangle.getHeight()
com.itextpdf.io.font.cmap.CMapToUnicode.convertToInt(char)
com.itextpdf.io.codec.Base64.encodeObject(java,io,Serializable)
com.itextpdf.kernel.numbering.GreekAlphabetNumbering.toGreekAlphabetNumber(int,boolean,boolean)
com.itextpdf.io.source.ThreadSafeRandomAccessSource.length()
com.itextpdf.layout.TextWritingTest.firstLineIndentTest01()
com.itextpdf.io.util.ArrayUtil.cloneArray(int)
com.itextpdf.signatures.PdfPKCS7.initSignature(PublicKey)
com.itextpdf.layout.renderer.CellRenderer.retrieveWidth(float)
com.itextpdf.kernel.log.NoOpCounter.onDocumentRead(long)
com.itextpdf.io.codec.brotli.dec.SynthTest.testBlockCountMessage()
com.itextpdf.kernel.pdf.PdfEncryption.readAndSetCryptoModeForStdHandler(PdfDictionary)
com.itextpdf.signatures.PdfSignature.getDate()
com.itextpdf.io.font.FontMetrics.setStemH(int)
com.itextpdf.io.font.otf.OtfClass.isMarkOtfClass(int)
com.itextpdf.layout.property.TransparentColor.applyTransparency(PdfCanvas,boolean)
com.itextpdf.io.source.RandomAccessFileOrArray.read()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff080Test.getTestInfo()
com.itextpdf.kernel.pdf.WriterProperties.setModifiedDocumentId(PdfString)
com.itextpdf.layout.TableTest.simpleTableTest04()
com.itextpdf.io.codec.Base64.flushBase64()
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6Format3.getSetOfRulesForStartGlyph(int)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.writeLiteral(char)
com.itextpdf.barcodes.Barcode1D.setAltText(String)
com.itextpdf.io.codec.brotli.dec.SynthTest.testTransformedDictWord()
com.itextpdf.kernel.xmp.impl.XMPNode.isTypeNode()
com.itextpdf.io.source.ByteBuffer.getHex(int)
com.itextpdf.kernel.pdf.PdfImageXObjectTest.testCcittFilters()
com.itextpdf.kernel.pdf.tagutils.BackedAccessibleProperties.getActualText()
com.itextpdf.kernel.pdf.PdfOutline.addDestination(PdfDestination)
com.itextpdf.pdfa.PdfA2AnnotationCheckTest.annotationCheckTest02()
com.itextpdf.layout.minmaxwidth.RotationMinMaxWidth.getMinWidthHeight()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setColor(float)
com.itextpdf.io.codec.TIFFFaxDecompressor.SetOptions(int,int,int,int)
com.itextpdf.kernel.xmp.options.PropertyOptions.isArrayAltText()
com.itextpdf.kernel.pdf.PdfResources.getProcSet()
com.itextpdf.layout.renderer.ListRenderer.createSplitRenderer(int)
com.itextpdf.kernel.pdf.tagging.PdfStructElem.isStructElem(PdfDictionary)
com.itextpdf.layout.element.Image.setMinHeight(float)
com.itextpdf.io.codec.TIFFFaxDecompressor.decodeT4()
com.itextpdf.kernel.pdf.PdfStampingTest.stampingAppend8()
com.itextpdf.forms.PdfFormCopyTest.unnamedFieldsHierarchyTest()
com.itextpdf.io.font.woff2.w3c.format.TabledataExtraneousData001Test.getFontName()
com.itextpdf.kernel.geom.Subpath.getLastPoint()
com.itextpdf.layout.hyphenation.TernaryTreeIterator.hasMoreElements()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff127Test.getTestInfo()
com.itextpdf.kernel.pdf.layer.PdfVisibilityExpression.addOperand(PdfVisibilityExpression)
com.itextpdf.kernel.pdf.PdfObject.processCopying(PdfDocument,boolean)
com.itextpdf.kernel.pdf.xobject.PdfXObject.setLayer(IPdfOCG)
com.itextpdf.kernel.crypto.securityhandler.PubSecHandlerUsingAes128.initKey(byte,int)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.getStructParentIndex()
com.itextpdf.layout.FloatTest.floatDivTest01()
com.itextpdf.io.image.GifImageData.getLogicalWidth()
com.itextpdf.kernel.xmp.impl.XMPDateTimeImpl.setSecond(int)
com.itextpdf.pdfa.PdfA3EmbeddedFilesCheckTest.fileSpecCheckTest03()
com.itextpdf.kernel.pdf.xobject.PdfImageXObject.getWidth()
com.itextpdf.io.font.woff2.w3c.format.BlocksExtraneousData001Test.isFontValid()
com.itextpdf.layout.PdfTextExtractorEncodingsTest.createPdf(PdfFont)
com.itextpdf.layout.element.Table.setExtendBottomRow(boolean)
com.itextpdf.io.font.otf.lookuptype5.SubTableLookup5Format2.getSubstLookupRecords()
com.itextpdf.kernel.pdf.tagutils.IAccessibleElement.getAccessibilityProperties()
com.itextpdf.io.image.ImageDataFactory.create(java,awt,Image,java,awt,Color)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff033Test.getTestInfo()
com.itextpdf.forms.PdfSigFieldLockDictionary.getLockActionValue(LockAction)
com.itextpdf.io.font.woff2.w3c.format.TabledataTransformGlyfLoca002Test.getTestInfo()
com.itextpdf.io.codec.BitFile.writeBits(int,int)
com.itextpdf.signatures.CertificateUtil.getTSAURL(X509Certificate)
com.itextpdf.forms.fields.PdfFormField.createText(PdfDocument,Rectangle,String,String,PdfFont,float,boolean)
com.itextpdf.io.font.woff2.w3c.format.TabledataHmtxTransform003Test.isFontValid()
com.itextpdf.layout.TableBorderTest.headerTopBorderTest01()
com.itextpdf.layout.SimpleTextExtractionStrategyTest.testRotatedText2()
com.itextpdf.layout.element.Text.getAccessibilityProperties()
com.itextpdf.io.image.PngImageHelper.decodePass(int,int,int,int,int,int,PngParameters)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setStrokeColorShading(PdfPattern,Shading)
com.itextpdf.kernel.pdf.tagging.PdfStructTreeRoot.getPageMarkedContentReferences(PdfPage)
com.itextpdf.layout.TableBorderTest.splitCellsTest10()
com.itextpdf.layout.FontSelectorTest.searchNames()
com.itextpdf.io.font.woff2.w3c.format.BlocksExtraneousData003Test.getFontName()
com.itextpdf.kernel.pdf.PdfDate.getW3CDate()
com.itextpdf.signatures.PdfSignature.isWrappedObjectMustBeIndirect()
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.getCurrentStructElem()
com.itextpdf.kernel.pdf.PdfActionTest.actionTest01()
com.itextpdf.layout.hyphenation.HyphenationTreeCache.getHyphenationTree(String,String)
com.itextpdf.layout.ElementPropertyContainer.setBackgroundColor(Color)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff119Test.isFontValid()
com.itextpdf.io.codec.CCITTG4Encoder.Fax3Encode2DRow()
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.hasPositiveHeight(IRenderer)
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingAes128.setSpecificHandlerDicEntries(PdfDictionary,boolean,boolean)
com.itextpdf.kernel.utils.CompareTool.compareLinkAnnotations(PdfLinkAnnotation,PdfLinkAnnotation,PdfDocument,PdfDocument)
com.itextpdf.layout.element.Image.makeNewRenderer()
com.itextpdf.io.font.otf.GposLookupType6.readSubTable(int)
com.itextpdf.pdfa.checker.PdfAChecker.checkOpenAction(PdfObject)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Path.getPointCount()
com.itextpdf.kernel.xmp.impl.XMPSchemaRegistryImpl.registerStandardNamespaces()
com.itextpdf.io.codec.TIFFField.compareTo(TIFFField)
com.itextpdf.io.font.FontEncoding.createFontSpecificEncoding()
com.itextpdf.kernel.log.DefaultCounter.plusOne()
com.itextpdf.io.codec.Base64.decode(String)
com.itextpdf.layout.renderer.LineRenderer.baseCharactersCount()
com.itextpdf.kernel.pdf.annot.PdfSoundAnnotation.correctWavFile(InputStream)
com.itextpdf.io.font.woff2.JavaUnsignedUtil.toU8(int)
com.itextpdf.kernel.pdf.colorspace.PdfShading.flush()
com.itextpdf.kernel.xmp.XMPMetaFactory.parse(InputStream)
com.itextpdf.signatures.PdfSignatureAppearance.getPageRect()
com.itextpdf.kernel.pdf.action.PdfAction.isWrappedObjectMustBeIndirect()
com.itextpdf.layout.TableBorderTest.splitCellsTest06()
com.itextpdf.test.ExtendedITextTest.beforeTestMethodAction()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff059Test.getTestInfo()
com.itextpdf.kernel.pdf.PdfPage.containsAnnotation(PdfAnnotation)
com.itextpdf.signatures.SignUtils.generateCertificateId(X509Certificate,BigInteger,AlgorithmIdentifier)
com.itextpdf.kernel.xmp.impl.XMPSerializerRDF.writeNewline()
com.itextpdf.io.codec.TIFFLZWDecoder.decode(byte,byte,int)
com.itextpdf.layout.renderer.AbstractRenderer.move(float,float)
com.itextpdf.signatures.TSAClientBouncyCastle.getTSAReqPolicy()
com.itextpdf.kernel.font.IDocFontProgram.getFontFile()
com.itextpdf.kernel.pdf.PdfStructElemTest.structTreeCopyingTest09()
com.itextpdf.signatures.PdfSignatureAppearance.getPageNumber()
com.itextpdf.kernel.pdf.PdfFontTest.createWrongAfm1()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Edge.setCurrent(LongPoint)
com.itextpdf.kernel.pdf.PdfBoolean.makeIndirect(PdfDocument,PdfIndirectReference)
com.itextpdf.layout.TableTest.imageInTableTest_HA()
com.itextpdf.kernel.pdf.PdfPage.rebuildFormFieldParent(PdfDictionary,PdfDictionary,PdfDocument)
com.itextpdf.kernel.pdf.PdfPage.getMediaBox()
com.itextpdf.io.source.ByteBuffer.append(byte)
com.itextpdf.kernel.pdf.canvas.parser.IndicTextExtractionTest.test01()
com.itextpdf.signatures.verify.OcspVerifierTest.invalidUnknownOcspTest01()
com.itextpdf.kernel.pdf.canvas.draw.DottedLine.getColor()
com.itextpdf.kernel.pdf.PdfPagesTree.getPage(PdfDictionary)
com.itextpdf.barcodes.qrcode.MatrixUtil.embedDarkDotAtLeftBottomCorner(ByteMatrix)
com.itextpdf.io.IOException.getMessageParams()
com.itextpdf.pdfa.checker.PdfAChecker.readObject(ObjectInputStream)
com.itextpdf.kernel.pdf.PdfPage.copyAsFormXObject(PdfDocument)
com.itextpdf.io.source.PdfTokenizer.isWhitespace(int,boolean)
com.itextpdf.kernel.pdf.PdfEncryption.createInfoId(byte,byte)
com.itextpdf.kernel.pdf.annot.PdfFreeTextAnnotation.setDefaultStyleString(PdfString)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff108Test.getTestInfo()
com.itextpdf.kernel.pdf.EncodingTest.surrogatePairTest()
com.itextpdf.kernel.PdfException.setMessageParams(Object)
com.itextpdf.io.font.woff2.Woff2Out.write(byte,int,int)
com.itextpdf.signatures.SignaturePolicyInfo.getPolicyDigestAlgorithm()
com.itextpdf.kernel.xmp.impl.ParseRDF.parse(Node)
com.itextpdf.forms.FormFieldsTaggingTest.formFieldTaggingTest03()
com.itextpdf.layout.renderer.AbstractRenderer.createFontCharacteristics()
com.itextpdf.kernel.utils.CompareTool.compareStrings(PdfString,PdfString)
com.itextpdf.layout.LinkTest.linkTest01()
com.itextpdf.layout.ElementPropertyContainer.setHyphenation(HyphenationConfig)
com.itextpdf.io.font.FontMetrics.setCapHeight(int)
com.itextpdf.pdfa.checker.PdfAChecker.getConformanceLevel()
com.itextpdf.barcodes.BarcodePDF417.getOptions()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff074Test.isFontValid()
com.itextpdf.io.util.StreamUtil.writeHexedString(OutputStream,byte)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.getAppearanceObject(PdfName)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff003Test.isFontValid()
com.itextpdf.forms.PdfFormCopyTest.largeFilePerformanceTest()
com.itextpdf.io.font.otf.OpenTypeFontTableReader.getLookupTable(int)
com.itextpdf.io.source.ThreadSafeRandomAccessSource.get(long,byte,int,int)
com.itextpdf.layout.Style.getMarginLeft()
com.itextpdf.pdfa.PdfAFontTest.cidFontCheckTest1()
com.itextpdf.kernel.pdf.canvas.parser.clipper.IClipper.clear()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.addImage(PdfImageXObject,float,float)
com.itextpdf.layout.minmaxwidth.RotationMinMaxWidth.calculate(WidthFunction,double,double)
com.itextpdf.signatures.PdfSigner.signDetached(IExternalDigest,IExternalSignature,Certificate,Collection,IOcspClient,ITSAClient,int,CryptoStandard,SignaturePolicyIdentifier)
com.itextpdf.barcodes.BarcodeDataMatrix.randomizationAlgorithm255(byte,int)
com.itextpdf.barcodes.BarcodeQRCode.regenerate()
com.itextpdf.kernel.pdf.tagging.PdfStructElem.addKid(PdfMcr)
com.itextpdf.layout.renderer.TypographyUtils.findClass(String)
com.itextpdf.kernel.pdf.WriterProperties.setCompressionLevel(int)
com.itextpdf.kernel.pdf.PdfPage.setPageLabel(PageLabelNumberingStyleConstants,String)
com.itextpdf.barcodes.dmcode.Placement.corner2(int)
com.itextpdf.kernel.pdf.PdfNull.copyTo(PdfDocument)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setStructParentIndex(int)
com.itextpdf.barcodes.Barcode1D.isStartStopText()
com.itextpdf.io.font.cmap.AbstractCMap.getSupplement()
com.itextpdf.layout.element.Image.getImageHeight()
com.itextpdf.kernel.utils.TaggedPdfReaderTool.fixTagName(String)
com.itextpdf.layout.renderer.AbstractRenderer.getMargins()
com.itextpdf.io.image.BmpImageHelper.readWord(InputStream)
com.itextpdf.signatures.PdfSigner.getRangeStream()
com.itextpdf.layout.RootElement.showTextAligned(Paragraph,float,float,int,TextAlignment,VerticalAlignment,float)
com.itextpdf.kernel.pdf.canvas.parser.listener.SimpleTextExtractionStrategy.getSupportedEvents()
com.itextpdf.kernel.xmp.impl.ParseRDF.rdf_PropertyElement(XMPMetaImpl,XMPNode,Node,boolean)
com.itextpdf.signatures.sign.PadesSigTest.signApproval(String,String)
com.itextpdf.kernel.pdf.PdfEncryptionTest.encryptWithPassword(String,int,int)
com.itextpdf.kernel.utils.XmlUtils.writeXmlDocToStream(Document,OutputStream)
com.itextpdf.layout.FloatTest.clearanceApplyingPageSplit06()
com.itextpdf.kernel.pdf.PdfPrimitiveObject.hasContent()
com.itextpdf.kernel.xmp.options.SerializeOptions.getIncludeThumbnailPad()
com.itextpdf.kernel.pdf.PdfPage.flushResourcesContentStreams()
com.itextpdf.kernel.pdf.PdfWriterTest.copyObject6()
com.itextpdf.kernel.pdf.collection.PdfCollectionSchema.getField(String)
com.itextpdf.barcodes.qrcode.MatrixUtil.maybeEmbedPositionAdjustmentPatterns(int,ByteMatrix)
com.itextpdf.kernel.pdf.navigation.PdfStringDestination.replaceNamedDestination(Map)
com.itextpdf.forms.PdfFormCopyTest.copyFieldsTest09()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.doHorzSegmentsOverlap(long,long,long,long)
com.itextpdf.io.font.cmap.CMapByteCid.decodeSingle(byte,Cursor)
com.itextpdf.layout.TableTest.tableWithDocumentRelayoutTest()
com.itextpdf.kernel.pdf.tagging.PdfStructElem.addKidObject(PdfDictionary,int,PdfObject)
com.itextpdf.kernel.xmp.XMPMeta.setPropertyCalendar(String,String,Calendar,PropertyOptions)
com.itextpdf.io.codec.Base64.decode4to3(byte,int,byte,int,int)
com.itextpdf.io.util.EncodingUtil.convertToBytes(char,String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff021Test.getTestInfo()
com.itextpdf.pdfa.PdfA2CatalogCheckTest.catalogCheck07()
com.itextpdf.barcodes.qrcode.BitMatrix.get(int,int)
com.itextpdf.io.font.FontNames.getFontWidth()
com.itextpdf.kernel.pdf.PdfStampingTest.stampingXmp1()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.execute(ClipType,Paths)
com.itextpdf.layout.TableBorderTest.closeDocumentAndCompareOutputs(Document)
com.itextpdf.kernel.font.PdfSimpleFont.writeText(GlyphLine,int,int,PdfOutputStream)
com.itextpdf.kernel.pdf.function.PdfFunction.getOutputSize()
com.itextpdf.io.font.CFFFontSubset.CountCharset(int,int)
com.itextpdf.kernel.pdf.PdfWriterTest.useObjectForMultipleTimes2()
com.itextpdf.kernel.pdf.PdfFontTest.createDocumentWithType0OtfFont()
com.itextpdf.io.font.cmap.AbstractCMap.getRegistry()
com.itextpdf.layout.element.Cell.getAccessibilityProperties()
com.itextpdf.io.font.CidFontProperties.readFontProperties(String)
com.itextpdf.kernel.pdf.PdfReaderTest.fixPdfTest03()
com.itextpdf.forms.xfa.XfaForm.serializeDocument(Node)
com.itextpdf.kernel.pdf.navigation.PdfExplicitDestination.createFitV(int,float)
com.itextpdf.io.font.woff2.Woff2Common.collectionHeaderSize(int,int)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setNormalAppearance(PdfAnnotationAppearance)
com.itextpdf.io.source.OutputStream.writeFloat(float)
com.itextpdf.io.source.PdfTokenizer.getPosition()
com.itextpdf.kernel.pdf.PdfNumber.generateValue()
com.itextpdf.kernel.crypto.securityhandler.StandardSecurityHandler.getPermissions()
com.itextpdf.io.source.FileChannelRandomAccessSource.length()
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.getHalftone()
com.itextpdf.layout.renderer.AbstractRenderer.isNotFittingWidth(LayoutArea)
com.itextpdf.io.image.Jpeg2000Test.openJpeg2000_1()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.getPageObject()
com.itextpdf.layout.renderer.TableRenderer.prepareFooterOrHeaderRendererForLayout(TableRenderer,float)
com.itextpdf.pdfa.PdfA2GraphicsCheckTest.colorCheckTest2()
com.itextpdf.forms.fields.PdfFormField.setColor(Color)
com.itextpdf.io.font.FontMetrics.getBbox()
com.itextpdf.barcodes.qrcode.QRCode.at(int,int)
com.itextpdf.kernel.font.PdfFont.makeObjectIndirect(PdfObject)
com.itextpdf.kernel.pdf.PdfNull.copyContent(PdfObject,PdfDocument)
com.itextpdf.kernel.pdf.PdfPage.setArtBox(Rectangle)
com.itextpdf.layout.hyphenation.TernaryTree.keys()
com.itextpdf.kernel.pdf.PdfReader.readObjectStream(PdfStream)
com.itextpdf.io.source.ByteBufferRandomAccessSource.readObject(ObjectInputStream)
com.itextpdf.kernel.pdf.PdfFontTest.createDocumentWithHelveticaBoldOblique()
com.itextpdf.io.codec.brotli.dec.SynthTest.testNegativeRemainingLenBetweenMetablocks()
com.itextpdf.layout.element.ListItem.makeNewRenderer()
com.itextpdf.barcodes.BarcodeDataMatrix.getNumber(byte,int,int)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setOverprintMode(int)
com.itextpdf.kernel.geom.Path.lineTo(float,float)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.setNode(XMPNode,Object,PropertyOptions,boolean)
com.itextpdf.layout.Style.setMargins(float,float,float,float)
com.itextpdf.layout.element.Image.scaleToFit(float,float)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff108Test.isFontValid()
com.itextpdf.kernel.pdf.PdfResources.setDefaultRgb(PdfColorSpace)
com.itextpdf.layout.TableBorderTest.tableWithHeaderFooterTest06()
com.itextpdf.io.source.GetBufferedRandomAccessSource.get(long,byte,int,int)
com.itextpdf.io.font.cmap.AbstractCMap.toUnicodeString(String,boolean)
com.itextpdf.pdfa.checker.PdfAChecker.checkFlag(int,int)
com.itextpdf.kernel.pdf.annot.PdfLinkAnnotation.setHighlightMode(PdfName)
com.itextpdf.io.color.IccProfile.getInstance(RandomAccessFileOrArray)
com.itextpdf.kernel.xmp.impl.XMPNodeUtils.findSchemaNode(XMPNode,String,boolean)
com.itextpdf.kernel.geom.Vector.normalize()
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.moveToKid(int)
com.itextpdf.io.font.CFFFontSubset.BuildSubrUsed(int,int,int,int,Map,List)
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.removeAllConnectionsToTags()
com.itextpdf.kernel.pdf.annot.PdfLinkAnnotation.setUriAction(PdfDictionary)
com.itextpdf.kernel.font.PdfType0Font.convertToBytes(String)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.evaluateNodeValue(int,XMPNode)
com.itextpdf.layout.renderer.MinWidthTest.colspanRowspanTableTest()
com.itextpdf.kernel.pdf.PdfOutlineTest.copyPagesWithOutlines()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff137Test.getFontName()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff155Test.getTestInfo()
com.itextpdf.io.font.otf.GlyphLine.iterator()
com.itextpdf.io.codec.brotli.dec.Utils.fillWithZeroes(int,int,int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff085Test.getTestInfo()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff007Test.isFontValid()
com.itextpdf.kernel.pdf.annot.PdfLineAnnotation.getCaptionOffset()
com.itextpdf.layout.ImageTest.beforeClass()
com.itextpdf.pdfa.PdfADocument.getPdfVersionForPdfA(PdfAConformanceLevel)
com.itextpdf.kernel.geom.AffineTransform.getRotateInstance(double,double,double)
com.itextpdf.kernel.pdf.colorspace.PdfShading.getDomain()
com.itextpdf.kernel.geom.Rectangle.intersectsLine(float,float,float,float)
com.itextpdf.kernel.pdf.PdfAnnotationTest.rubberStampWrongStampTest()
com.itextpdf.io.codec.brotli.dec.DictionaryTest.crc64(ByteBuffer)
com.itextpdf.io.codec.Base64.suspendEncoding()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff044Test.getTestInfo()
com.itextpdf.forms.xfa.XfaForm.fillXfaForm(InputSource)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.addImage(PdfImageXObject,float,float,float)
com.itextpdf.layout.LinkTest.rotatedLinkAtFixedPosition()
com.itextpdf.signatures.IExternalSignature.getHashAlgorithm()
com.itextpdf.kernel.xmp.XMPUtils.convertFromLong(long)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff043Test.getFontName()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff093Test.getFontName()
com.itextpdf.kernel.pdf.PdfDocument.copyPagesTo(List,PdfDocument,int,IPdfPageExtraCopier)
com.itextpdf.io.font.TrueTypeFontSubset.assembleFont()
com.itextpdf.layout.TableTest.simpleTableTest19()
com.itextpdf.io.font.CMapEncoding.getCmapCode(int)
com.itextpdf.layout.property.TransparentColor.isTransparent()
com.itextpdf.pdfa.PdfA2CatalogCheckTest.compareResult(String,String)
com.itextpdf.layout.renderer.LineSeparatorRenderer.getNextRenderer()
com.itextpdf.kernel.pdf.PdfReaderTest.appendModeWith10PagesFix1()
com.itextpdf.forms.PdfFormFieldTest.fillFormTwiceWithoutResources()
com.itextpdf.io.font.OpenTypeParser.readFormat6()
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.distPerpendicular()
com.itextpdf.io.util.IntHashtable.toString()
com.itextpdf.layout.LinkTest.beforeClass()
com.itextpdf.io.codec.brotli.dec.SynthTest.checkSynth(byte,boolean,String)
com.itextpdf.barcodes.BarcodeEANTest.beforeClass()
com.itextpdf.layout.KeepWithNextTest.keepWithNextTest07()
com.itextpdf.kernel.xmp.XMPMeta.getPropertyString(String,String)
com.itextpdf.signatures.PdfSignatureAppearance.getCertificate()
com.itextpdf.layout.border.Border.getWidth()
com.itextpdf.kernel.pdf.PdfNumber.isDoubleNumber()
com.itextpdf.io.font.woff2.w3c.format.BlocksExtraneousData004Test.getFontName()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.doMaxima(Edge)
com.itextpdf.kernel.xmp.impl.XMPNode.getChild(int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff015Test.getTestInfo()
com.itextpdf.layout.element.Image.setFixedPosition(int,float,float)
com.itextpdf.kernel.pdf.tagging.PdfStructElem.isWrappedObjectMustBeIndirect()
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingStandard128.computeGlobalEncryptionKey(byte,byte,boolean)
com.itextpdf.io.font.cmap.AbstractCMap.decodeStringToByte(String)
com.itextpdf.pdfa.PdfA1ActionCheckTest.actionCheck06()
com.itextpdf.layout.TableTest.simpleTableTest21()
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.getLineCapStyle()
com.itextpdf.kernel.pdf.canvas.parser.data.ImageRenderInfo.getImageCtm()
com.itextpdf.forms.fields.PdfChoiceFormField.setTopIndex(int)
com.itextpdf.pdfa.PdfA2GraphicsCheckTest.transparencyCheckTest2()
com.itextpdf.forms.xfa.Xml2Som.getOrder()
com.itextpdf.kernel.xmp.impl.XMPUtilsImpl.removeSchemaChildren(XMPNode,boolean)
com.itextpdf.signatures.verify.LtvVerifierTest.validLtvDocTest02()
com.itextpdf.kernel.font.PdfType1Font.isSubset()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.buildResult2(PolyTree)
com.itextpdf.kernel.pdf.PdfDocumentInfo.setKeywords(String)
com.itextpdf.kernel.pdf.action.PdfMediaClipData.flush()
com.itextpdf.kernel.pdf.PdfWriterTest.copyObject1()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setLayer(IPdfOCG)
com.itextpdf.layout.renderer.FloatingHelper.adjustBlockAreaAccordingToFloatRenderers(List,Rectangle,float,boolean)
com.itextpdf.kernel.utils.CompareTool.writeReportToXml(OutputStream)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff046Test.isFontValid()
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.printDiagnostics()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff135Test.getTestInfo()
com.itextpdf.layout.renderer.LineRenderer.isInlineBlockChild(IRenderer)
com.itextpdf.kernel.pdf.xobject.PdfXObject.getHeight()
com.itextpdf.kernel.pdf.colorspace.PdfPattern.isWrappedObjectMustBeIndirect()
com.itextpdf.barcodes.qrcode.MaskUtil.applyMaskPenaltyRule1Internal(ByteMatrix,boolean)
com.itextpdf.layout.renderer.TextRenderer.getMinMaxWidth(float)
com.itextpdf.io.font.FontIdentification.setPanose(byte)
com.itextpdf.io.font.woff2.w3c.format.BlocksOrdering003Test.getFontName()
com.itextpdf.kernel.xmp.XMPDateTime.getTimeZone()
com.itextpdf.kernel.pdf.PdfFontTest.testCheckTTCSize()
com.itextpdf.io.font.OpenTypeParser.getFullFont()
com.itextpdf.signatures.LtvVerification.addVerification(String,IOcspClient,ICrlClient,CertificateOption,Level,CertificateInclusion)
com.itextpdf.layout.renderer.RootRenderer.flushWaitingDrawingElements()
com.itextpdf.layout.LinkTest.testCreateLocalLinkInRotatedCell()
com.itextpdf.layout.renderer.LineRenderer.getMaxAscent()
com.itextpdf.layout.element.Paragraph.addTabStopsAsProperty(java,util)
com.itextpdf.barcodes.Barcode128.getBarsCode128Raw(String)
com.itextpdf.kernel.pdf.function.PdfFunction.getInputSize()
com.itextpdf.io.source.WriteNumbersTest.WriteNumber3Test()
com.itextpdf.kernel.pdf.PdfNull.copyTo(PdfDocument,boolean)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.fixupFirstLefts1(OutRec,OutRec)
com.itextpdf.kernel.xmp.properties.XMPProperty.getOptions()
com.itextpdf.layout.font.FontCharacteristics.modified()
com.itextpdf.pdfa.PdfA1GraphicsTest.transparencyCheckTest3()
com.itextpdf.layout.TextWritingTest.charSpacingTest01()
com.itextpdf.kernel.pdf.PdfOutputIntent.getDestOutputProfile()
com.itextpdf.kernel.pdf.annot.PdfFreeTextAnnotation.getSubtype()
com.itextpdf.forms.fields.PdfFormField.drawTextAppearance(Rectangle,PdfFont,int,String,PdfFormXObject)
com.itextpdf.barcodes.qrcode.BitArray.clear()
com.itextpdf.kernel.pdf.PdfCatalog.setCollection(PdfCollection)
com.itextpdf.io.image.TiffImageData.getNumberOfPages(byte)
com.itextpdf.kernel.utils.PdfSplitterTest.splitDocumentTest04()
com.itextpdf.kernel.geom.Point.move(double,double)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.setLeading(float)
com.itextpdf.kernel.font.PdfType3Font.addFontStream(PdfDictionary)
com.itextpdf.io.font.CidFontProperties.createMetric(String)
com.itextpdf.layout.element.IElement.setNextRenderer(IRenderer)
com.itextpdf.kernel.pdf.PdfDictionaryValues.remove()
com.itextpdf.io.font.FontIdentification.setType1Xuid(Integer)
com.itextpdf.barcodes.qrcode.QRCode.getNumDataBytes()
com.itextpdf.kernel.pdf.PdfNumber.floatValue()
com.itextpdf.layout.margincollapse.MarginsCollapse.joinMargin(MarginsCollapse)
com.itextpdf.io.font.OpenTypeParser.isCff()
com.itextpdf.kernel.pdf.PdfPage.getCropBox()
com.itextpdf.kernel.utils.PdfResourceCounter.getResources()
com.itextpdf.io.font.CFFFontSubset.ReconstructPrivateSubrs(int,IndexBaseItem,OffsetItem)
com.itextpdf.forms.fields.PdfFormField.getFieldName()
com.itextpdf.kernel.pdf.action.PdfTargetDictionary.getName()
com.itextpdf.layout.font.FontSet.addFont(String,String,String)
com.itextpdf.layout.font.FontInfo.getPdfFont(FontProvider)
com.itextpdf.kernel.pdf.PdfName.getType()
com.itextpdf.kernel.xmp.impl.XMPSchemaRegistryImpl.registerStandardAliases()
com.itextpdf.io.codec.TIFFFaxDecoder.setRecoverFromImageError(boolean)
com.itextpdf.kernel.pdf.PdfNameTree.getNames()
com.itextpdf.kernel.color.WebColors.parseRGBColors(float,StringTokenizer)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.getPacketHeader()
com.itextpdf.kernel.pdf.PdfEncryptionTest.openEncryptedDocWithWrongPassword()
com.itextpdf.pdfa.PdfA1AnnotationCheckTest.annotationCheckTest04()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff143Test.getTestInfo()
com.itextpdf.kernel.pdf.PdfPagesTree.generateTree()
com.itextpdf.layout.TableBorderTest.wideBorderTest03()
com.itextpdf.layout.renderer.ParagraphRenderer.getNextRenderer()
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.getSubject()
com.itextpdf.layout.renderer.AbstractRenderer.retrieveMaxWidth(float)
com.itextpdf.kernel.xmp.impl.ParseRDF.rdf_NodeElement(XMPMetaImpl,XMPNode,Node,boolean)
com.itextpdf.kernel.color.PatternColor.equals(Object)
com.itextpdf.barcodes.qrcode.Encoder.appendKanjiBytes(String,BitVector)
com.itextpdf.kernel.pdf.tagging.PdfStructElem.setE(PdfString)
com.itextpdf.kernel.geom.AffineTransform.preConcatenate(AffineTransform)
com.itextpdf.kernel.font.PdfTrueTypeFont.addRangeUni(Set)
com.itextpdf.layout.renderer.BlockRenderer.checkPointSide(Point,Point,Point)
com.itextpdf.layout.renderer.TableBorders.setStartRow(int)
com.itextpdf.signatures.PdfSignatureAppearance.setLocationCaption(String)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.getOptions()
com.itextpdf.kernel.pdf.ReaderProperties.setPublicKeySecurityParams(Certificate,IExternalDecryptionProcess)
com.itextpdf.io.font.woff2.JavaUnsignedUtil.asU16(short)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.addImage(ImageData,Rectangle,boolean)
com.itextpdf.layout.hyphenation.HyphenationTree.packValues(String)
com.itextpdf.layout.PositioningTest.showTextAlignedTest01()
com.itextpdf.kernel.pdf.PdfFontTest.testNewTrueTypeFont2BasedExistingFont()
com.itextpdf.kernel.geom.AffineTransform.getDeterminant()
com.itextpdf.barcodes.qrcode.QRCode.setMatrix(ByteMatrix)
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.removeOldRoot(PdfStructElem)
com.itextpdf.barcodes.BarcodeDataMatrix.C40OrTextEncodation(byte,int,int,byte,int,int,boolean,int,int,int)
com.itextpdf.kernel.pdf.colorspace.PdfSpecialCs.getIndexedCsArray(PdfObject,int,PdfString)
com.itextpdf.layout.LargeElementTest.largeEmptyTableTest()
com.itextpdf.layout.element.Table.getFinishRow()
com.itextpdf.kernel.pdf.PdfXObjectTest.createDocumentFromImages2()
com.itextpdf.signatures.LtvVerifier.verify(List)
com.itextpdf.layout.font.FontCharacteristics.isItalic()
com.itextpdf.io.font.FontRegisterProvider.saveCopyOfRegularFont(String,String)
com.itextpdf.layout.element.BlockElement.setSpacingRatio(float)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.getOverlap(long,long,long,long,long,long)
com.itextpdf.layout.renderer.TextRenderer.getText()
com.itextpdf.kernel.pdf.canvas.parser.listener.SimpleTextExtractionStrategy.getResultantText()
com.itextpdf.kernel.utils.PageRange.addPageSequence(int,int)
com.itextpdf.kernel.pdf.PdfViewerPreferences.setHideMenubar(boolean)
com.itextpdf.kernel.xmp.impl.Utils.isXMLName(String)
com.itextpdf.kernel.pdf.PdfReaderTest.fixPdfTest15()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setFillColorShading(PdfPattern,Shading)
com.itextpdf.io.font.FontMetrics.setItalicAngle(float)
com.itextpdf.kernel.xmp.impl.XMPSerializerRDF.serialize(XMPMeta,OutputStream,SerializeOptions)
com.itextpdf.kernel.pdf.xobject.PdfImageXObject.put(PdfName,PdfObject)
com.itextpdf.forms.FormFieldFlatteningTest.beforeClass()
com.itextpdf.layout.layout.LayoutResult.getAreaBreak()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.fixupFirstLefts2(OutRec,OutRec)
com.itextpdf.barcodes.qrcode.ReedSolomonEncoder.buildGenerator(int)
com.itextpdf.layout.LargeElementTest.largeTableWithHeaderFooterTest01B()
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.applySelfCollapsedKidMarginWithClearance(Rectangle)
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.createNextMcidForStructElem(PdfStructElem,int)
com.itextpdf.io.codec.LZWCompressor.flush()
com.itextpdf.io.source.PdfTokenizer.checkPdfHeader()
com.itextpdf.io.codec.brotli.dec.TransformTest.crc64(byte)
com.itextpdf.kernel.pdf.tagging.PdfStructElem.setRole(PdfName)
com.itextpdf.layout.font.FontSet.contains(String)
com.itextpdf.kernel.pdf.collection.PdfCollection.setInitialDocument(String)
com.itextpdf.io.source.RAFRandomAccessSource.get(long)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.setPropertyBase64(String,String,byte,PropertyOptions)
com.itextpdf.layout.AreaBreakTest.lastPageAreaBreakTest03()
com.itextpdf.kernel.pdf.PdfReaderTest.incrementalUpdateWithOnlyZeroObjectUpdate()
com.itextpdf.kernel.pdf.PdfCatalog.addOutlineToPage(PdfOutline,Map)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff131Test.isFontValid()
com.itextpdf.kernel.pdf.tagutils.BackedAccessibleProperties.getAlternateDescription()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getFlatnessTolerance()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setBorderStyle(PdfName)
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.saveState(PdfCanvas)
com.itextpdf.signatures.PdfPKCS7.getSigningInfoVersion()
com.itextpdf.io.font.Type1Font.createStandardFont(String)
com.itextpdf.kernel.pdf.PdfEncryptor.isPrintingAllowed(int)
com.itextpdf.kernel.xmp.XMPMeta.doesArrayItemExist(String,String,int)
com.itextpdf.kernel.pdf.canvas.parser.HighlightItemsTest.highlightReferencePage604Test()
com.itextpdf.kernel.crypto.securityhandler.PubSecHandlerUsingAes256.getDigestAlgorithm()
com.itextpdf.io.font.otf.OpenTypeFontTableReader.readCoverages(int,List)
com.itextpdf.layout.element.AbstractElement.addStyle(Style)
com.itextpdf.io.source.ByteBufferRandomAccessSource.clean(java,nio,ByteBuffer)
com.itextpdf.layout.hyphenation.PatternParser.fatalError(SAXParseException)
com.itextpdf.signatures.LtvVerifier.switchToPreviousRevision()
com.itextpdf.forms.PdfFormCopyTest.copyFieldsTest12()
com.itextpdf.io.source.OutputStream.isCloseStream()
com.itextpdf.layout.OpacityTest.divElementOpacity01()
com.itextpdf.kernel.font.PdfSimpleFont.convertToBytes(String)
com.itextpdf.layout.renderer.AbstractRenderer.calculatePaddingBorderHeight(AbstractRenderer)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff017Test.isFontValid()
com.itextpdf.io.font.cmap.CMapObject.getValue()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.setObjectName(String)
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperOffset.offsetPoint(int,int,JoinType)
com.itextpdf.layout.TableBorderTest.tableWithHeaderFooterTest10()
com.itextpdf.kernel.pdf.PdfFontTest.createDocumentWithTrueTypeFont1()
com.itextpdf.io.font.FontNames.isBold()
com.itextpdf.kernel.pdf.annot.PdfTextAnnotation.getStateModel()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff141Test.getFontName()
com.itextpdf.io.util.IntHashtable.put(int,int)
com.itextpdf.kernel.utils.CompareTool.printOutCmpDirectories()
com.itextpdf.layout.renderer.CollapsedTableBorders.skipHeader(Border)
com.itextpdf.forms.fields.PdfTextFormField.setComb(boolean)
com.itextpdf.kernel.pdf.PdfPage.setTabOrder(PdfName)
com.itextpdf.kernel.pdf.ByteBufferOutputStream.writeTo(OutputStream)
com.itextpdf.kernel.pdf.PdfString.getValueBytes()
com.itextpdf.layout.element.List.setListSymbol(ListNumberingType)
com.itextpdf.layout.renderer.TableRenderer.calculateScaledColumnWidths(Table,float)
com.itextpdf.io.font.woff2.w3c.format.BlocksPrivate001Test.getFontName()
com.itextpdf.layout.font.ComplexFontSelectorStrategy.isSignificantUnicodeScript(Character,UnicodeScript)
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getMcid()
com.itextpdf.kernel.xmp.options.PropertyOptions.setHasType(boolean)
com.itextpdf.kernel.pdf.PdfNumber.setValue(double)
com.itextpdf.io.source.OutputStream.writeFloats(float)
com.itextpdf.kernel.geom.Rectangle.getRight()
com.itextpdf.io.font.CFFFontSubset.ReadFDArray(int)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setUndercolorRemovalFunction2(PdfObject)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff118Test.isFontValid()
com.itextpdf.io.font.FontMetrics.setIsFixedPitch(boolean)
com.itextpdf.kernel.pdf.EncodingTest.customSimpleEncodingTimesRomanTest()
com.itextpdf.layout.RotationTest.fixedTextRotationTest03()
com.itextpdf.kernel.pdf.colorspace.PdfPattern.getPatternInstance(PdfDictionary)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff072Test.isFontValid()
com.itextpdf.kernel.xmp.impl.Utils.initCharTables()
com.itextpdf.kernel.xmp.options.AliasOptions.toPropertyOptions()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff145Test.getFontName()
com.itextpdf.layout.minmaxwidth.MinMaxWidth.getAvailableWidth()
com.itextpdf.kernel.geom.AffineTransform.setTransform(AffineTransform)
com.itextpdf.kernel.pdf.collection.PdfCollection.setSchema(PdfCollectionSchema)
com.itextpdf.io.font.FontEncoding.fillCustomEncoding()
com.itextpdf.io.font.FontMetrics.setSubscriptSize(int)
com.itextpdf.layout.renderer.TypographyUtils.callConstructor(String,Class,Object)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff122Test.isFontValid()
com.itextpdf.barcodes.qrcode.BitMatrix.getHeight()
com.itextpdf.layout.renderer.AbstractRenderer.getPropertyAsBoolean(int)
com.itextpdf.kernel.font.PdfFont.containsGlyph(String,int)
com.itextpdf.layout.border.DottedBorder.getType()
com.itextpdf.kernel.geom.Rectangle.moveLeft(float)
com.itextpdf.kernel.pdf.action.PdfAction.put(PdfName,PdfObject)
com.itextpdf.forms.PdfFormFieldTest.fillFormWithDefaultResources()
com.itextpdf.layout.renderer.TextRenderer.getNextRenderer()
com.itextpdf.kernel.xmp.XMPMetaFactory.toString()
com.itextpdf.pdfa.PdfA2ActionCheckTest.actionCheck11()
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.setTextAlign(int)
com.itextpdf.forms.fields.PdfFormField.createChoice(PdfDocument,Rectangle,int)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setExtGState(PdfExtGState)
com.itextpdf.kernel.xmp.options.AliasOptions.setArray(boolean)
com.itextpdf.kernel.pdf.xobject.PdfTransparencyGroup.isWrappedObjectMustBeIndirect()
com.itextpdf.forms.fields.PdfChoiceFormField.isSpellCheck()
com.itextpdf.io.font.FontIdentification.setTtfVersion(String)
com.itextpdf.io.source.OutputStream.setCloseStream(boolean)
com.itextpdf.io.source.PdfTokenizer.getByteContent()
com.itextpdf.forms.xfa.Xml2Som.inverseSearchGlobal(List)
com.itextpdf.layout.TableTest.simpleTableTest08()
com.itextpdf.kernel.xmp.XMPMeta.getPropertyCalendar(String,String)
com.itextpdf.io.font.FontNames.isUnderline()
com.itextpdf.layout.renderer.TableWidths.layout()
com.itextpdf.layout.renderer.AccessibleAttributesApplier.getListAttributes(AbstractRenderer,TagTreePointer)
com.itextpdf.io.font.FontMetrics.setTypoAscender(int)
com.itextpdf.io.image.ImageData.getImageAttributes()
com.itextpdf.layout.renderer.ImageRenderer.getMinMaxWidth(float)
com.itextpdf.layout.property.Underline.getYPositionMul()
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingAes256.getEncryptionStream(OutputStream)
com.itextpdf.forms.xfa.XfaForm.createDatasetsNode(Node)
com.itextpdf.pdfa.PdfADocument.checkIsoConformance()
com.itextpdf.layout.renderer.CollapsedTableBorders.drawHorizontalBorder(int,float,float,PdfCanvas,float)
com.itextpdf.kernel.pdf.PdfStructElemTest.corruptedTagStructureTest01()
com.itextpdf.test.WrappedSamplesRunner.isLookLikeTest(Class)
com.itextpdf.kernel.pdf.PdfPagesTest.removePageWithFormFieldsTest()
com.itextpdf.layout.hyphenation.CharVector.clear()
com.itextpdf.kernel.pdf.canvas.wmf.MetaPen.init(InputMeta)
com.itextpdf.kernel.pdf.canvas.parser.data.ImageRenderInfo.getArea()
com.itextpdf.signatures.PdfPKCS7.getDigestAlgorithmOid()
com.itextpdf.kernel.utils.PageRangeTest.addSingle()
com.itextpdf.kernel.pdf.canvas.parser.listener.GlyphEventListener.getSupportedEvents()
com.itextpdf.kernel.utils.PageRangeTest.addSingleConstructor()
com.itextpdf.layout.TabsTest.outOfPageBoundsTest()
com.itextpdf.kernel.pdf.PdfDocument.setTagged()
com.itextpdf.layout.renderer.AbstractRenderer.adjustPositionedRendererLayoutBoxWidth(IRenderer,Rectangle,Float,Float)
com.itextpdf.kernel.xmp.impl.xpath.XMPPathSegment.setAlias(boolean)
com.itextpdf.layout.renderer.TableBorders.getLastVerticalBorder()
com.itextpdf.signatures.PdfPKCS7.getHashAlgorithm()
com.itextpdf.layout.renderer.TypographyUtils.applyKerning(FontProgram,GlyphLine)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Paths.reversePaths()
com.itextpdf.layout.element.Table.addCell(String)
com.itextpdf.kernel.pdf.tagging.PdfStructTreeRoot.copyTo(PdfDocument,Map)
com.itextpdf.layout.FloatTest.floatingImageToNextPage()
com.itextpdf.kernel.utils.CompareTool.getOutReaderProperties()
com.itextpdf.barcodes.dmcode.Placement.utah(int,int,int)
com.itextpdf.kernel.pdf.tagging.PdfStructElem.getDocument()
com.itextpdf.kernel.pdf.filespec.PdfFileSpec.getFileIdentifier()
com.itextpdf.io.codec.Base64.decodeToFile(String,String)
com.itextpdf.kernel.pdf.PdfStampingTest.stampingAppend3()
com.itextpdf.forms.PdfEncryptionTest.encryptedDocumentWithFormFields()
com.itextpdf.layout.element.List.setRole(PdfName)
com.itextpdf.kernel.pdf.PdfNumber.generateContent()
com.itextpdf.kernel.xmp.XMPVersionInfo.getMajor()
com.itextpdf.kernel.pdf.PdfArray.getAsBoolean(int)
com.itextpdf.io.font.otf.Glyph.setXPlacement(short)
com.itextpdf.layout.RotationTest.beforeClass()
com.itextpdf.layout.hyphenation.PatternParser.getExceptionWord(ArrayList)
com.itextpdf.io.codec.TIFFFaxDecompressor.decodeRLE()
com.itextpdf.layout.font.FontInfo.create(FontProgram,String,String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff080Test.getFontName()
com.itextpdf.kernel.pdf.annot.PdfLineAnnotation.setLineEndingStyles(PdfArray)
com.itextpdf.pdfa.PdfA1CanvasCheckTest.canvasCheckTest3()
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.flushTag()
com.itextpdf.kernel.xmp.XMPMeta.getPropertyBoolean(String,String)
com.itextpdf.signatures.PdfSignatureAppearance.setContact(String)
com.itextpdf.kernel.pdf.PdfArray.add(int,PdfObject)
com.itextpdf.kernel.xmp.XMPIterator.skipSubtree()
com.itextpdf.io.source.ByteBuffer.toByteArray()
com.itextpdf.kernel.pdf.filespec.PdfFileSpec.setVolatile(PdfBoolean)
com.itextpdf.forms.fields.PdfFormField.getAdditionalAction()
com.itextpdf.layout.hyphenation.TernaryTreeIterator.run()
com.itextpdf.layout.renderer.TableBorders.initializeBorders()
com.itextpdf.barcodes.BarcodeEAN.getBarsUPCE(String)
com.itextpdf.kernel.geom.AffineTransform.getType()
com.itextpdf.kernel.pdf.PdfDictionary.remove(PdfName)
com.itextpdf.forms.fields.PdfFormField.getMappingName()
com.itextpdf.io.font.woff2.w3c.format.HeaderFlavor001Test.isFontValid()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.setZ(LongPoint,Edge,Edge)
com.itextpdf.kernel.xmp.impl.XMPNode.removeQualifier(XMPNode)
com.itextpdf.layout.TableBorderTest.splitCellsTest05()
com.itextpdf.kernel.xmp.XMPMeta.setArrayItem(String,String,int,String)
com.itextpdf.kernel.font.Type3FontProgram.getGlyphsCount()
com.itextpdf.layout.renderer.TextRenderer.updateRangeBasedOnRemovedCharacters(ArrayList,int)
com.itextpdf.signatures.PdfSigner.timestamp(ITSAClient,String)
com.itextpdf.io.font.otf.GsubLookupType6.readSubTableFormat3(int)
com.itextpdf.kernel.xmp.impl.XMPNormalizer.transplantArrayItemAlias(Iterator,XMPNode,XMPNode)
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getWordSpacing()
com.itextpdf.kernel.pdf.annot.PdfLinkAnnotation.getSubtype()
com.itextpdf.layout.renderer.BlockRenderer.isPossibleBadTagging(PdfName)
com.itextpdf.io.util.ArrayUtil.fillWithValue(int,int)
com.itextpdf.kernel.xmp.impl.XMPSerializerRDF.serializeCompactRDFElementProps(XMPNode,int)
com.itextpdf.io.codec.Jbig2SegmentReader.readSegment(Jbig2Segment)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.remove(PdfName)
com.itextpdf.forms.fields.PdfFormField.drawCheckBox(PdfCanvas,float,float,float,boolean)
com.itextpdf.layout.font.FontProvider.addSystemFonts()
com.itextpdf.signatures.PdfSigner.addDeveloperExtension(PdfDeveloperExtension)
com.itextpdf.layout.renderer.AbstractRenderer.getProperty(int)
com.itextpdf.kernel.pdf.annot.PdfTextAnnotation.getSubtype()
com.itextpdf.kernel.pdf.PdfDocument.copyPagesTo(List,PdfDocument)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff061Test.getTestInfo()
com.itextpdf.layout.renderer.LineRenderer.createOverflowRenderer()
com.itextpdf.kernel.pdf.PdfDocument.getPage(int)
com.itextpdf.kernel.pdf.TagTreePointerTest.tagStructureRemovingTest04()
com.itextpdf.io.image.ImageData.getColorSpace()
com.itextpdf.kernel.pdf.PdfEncryptionTest.encryptAes256Pdf2NotEncryptMetadata()
com.itextpdf.io.util.StreamUtil.transferBytes(RandomAccessFileOrArray,java,io,OutputStream)
com.itextpdf.io.util.FileUtil.createTempFile(String)
com.itextpdf.layout.layout.LayoutArea.setBBox(Rectangle)
com.itextpdf.layout.element.Cell.add(IBlockElement)
com.itextpdf.kernel.pdf.PdfDocument.getDefaultFont()
com.itextpdf.layout.renderer.TextRenderer.numberOfElementsLessThan(ArrayList,int)
com.itextpdf.io.source.PdfTokenizer.getTokenType()
com.itextpdf.kernel.pdf.PdfDictionary.getAsBoolean(PdfName)
com.itextpdf.kernel.crypto.securityhandler.PubSecHandlerUsingStandard40.getEncryptionStream(OutputStream)
com.itextpdf.kernel.pdf.PdfDestinationTest.destCopyingTest04()
com.itextpdf.barcodes.BarcodePDF417.byteCompaction(int,int)
com.itextpdf.io.font.CFFFontSubset.HandelStack()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff121Test.isFontValid()
com.itextpdf.kernel.geom.Vector.multiply(float)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.swapPositionsInSEL(Edge,Edge)
com.itextpdf.layout.AutoTaggingTest.floatListItemTest()
com.itextpdf.kernel.xmp.options.PropertyOptions.isCompositeProperty()
com.itextpdf.kernel.xmp.impl.XMPDateTimeImpl.setMonth(int)
com.itextpdf.layout.font.FontSet.addDirectory(String,boolean)
com.itextpdf.layout.renderer.AccessibleAttributesApplier.applyCommonLayoutAttributes(AbstractRenderer,PdfDictionary)
com.itextpdf.kernel.pdf.PdfResources.getResourceName(PdfObjectWrapper)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff076Test.isFontValid()
com.itextpdf.kernel.pdf.collection.PdfCollection.getSchema()
com.itextpdf.io.source.WriteStringsTest.writePdfStringTest()
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingStandard128.computeUserKey()
com.itextpdf.kernel.pdf.PdfDictionaryValues.hasNext()
com.itextpdf.layout.PositioningTest.relativePositioningTest02()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff070Test.getFontName()
com.itextpdf.kernel.pdf.PdfStampingTest.stamping3()
com.itextpdf.kernel.pdf.PdfPage.getContentStream(int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff040Test.getTestInfo()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Path.cleanPolygon(double)
com.itextpdf.kernel.font.DocTrueTypeFont.createFontProgram(PdfDictionary,FontEncoding)
com.itextpdf.io.font.FontMetrics.getCapHeight()
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.addNewKid(PdfStructElem)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff060Test.isFontValid()
com.itextpdf.signatures.PdfSignatureAppearance.getReason()
com.itextpdf.kernel.pdf.PdfObjectTest.indirectsChain4()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff134Test.getFontName()
com.itextpdf.signatures.SignUtils.getCertificates(KeyStore)
com.itextpdf.layout.renderer.TableWidths.getColspan()
com.itextpdf.kernel.geom.Rectangle.getTop()
com.itextpdf.kernel.crypto.securityhandler.PubKeySecurityHandler.computeGlobalKeyOnReading(PdfDictionary,PrivateKey,Certificate,String,IExternalDecryptionProcess,boolean,String)
com.itextpdf.kernel.xmp.XMPPathFactory.assertFieldName(String)
com.itextpdf.kernel.pdf.annot.PdfWidgetAnnotation.getSubtype()
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.startsWithSpace(String)
com.itextpdf.signatures.IExternalSignatureContainer.modifySigningDictionary(PdfDictionary)
com.itextpdf.kernel.pdf.PdfPrimitiveObject.makeIndirect(PdfDocument,PdfIndirectReference)
com.itextpdf.kernel.pdf.PdfDocument.getXmpMetadata(boolean)
com.itextpdf.kernel.pdf.PdfPage.newContentStreamBefore()
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.getTransferFunction()
com.itextpdf.kernel.pdf.PdfDictionary.getAsName(PdfName)
com.itextpdf.kernel.pdf.canvas.parser.LocationExtractTest.processPage(ILocationExtractionStrategy,PdfPage)
com.itextpdf.layout.FloatTest.clearanceApplyingPageSplit09()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff087Test.isFontValid()
com.itextpdf.layout.element.LineSeparator.makeNewRenderer()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff022Test.getFontName()
com.itextpdf.io.util.TextUtil.convertFromUtf32ToCharArray(int)
com.itextpdf.io.source.PdfTokenizer.getSafeFile()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.iterator()
com.itextpdf.layout.element.Text.makeNewRenderer()
com.itextpdf.pdfa.PdfA3EmbeddedFilesCheckTest.fileSpecCheckTest01()
com.itextpdf.io.image.ImageData.makeMask()
com.itextpdf.kernel.pdf.PdfReaderTest.StreamLengthCorrection7()
com.itextpdf.kernel.pdf.navigation.PdfExplicitDestination.createFitB(PdfPage)
com.itextpdf.kernel.pdf.PdfLiteral.copyContent(PdfObject,PdfDocument)
com.itextpdf.layout.renderer.TableRenderer.correctRowCellsOccupiedAreas(LayoutResult,int,int,int,List,float,float)
com.itextpdf.io.util.IntHashtable.clear()
com.itextpdf.barcodes.qrcode.QRCode.getMode()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff028Test.isFontValid()
com.itextpdf.barcodes.qrcode.MaskUtil.getDataMaskBit(int,int,int)
com.itextpdf.kernel.pdf.PdfBoolean.generateContent()
com.itextpdf.layout.element.AbstractElement.getRenderer()
com.itextpdf.kernel.pdf.PdfExtGStateTest.egsTest1()
com.itextpdf.kernel.xmp.options.ParseOptions.getAcceptLatin1()
com.itextpdf.kernel.xmp.impl.XMPSerializerRDF.serializeCompactRDFStructProp(XMPNode,int,boolean)
com.itextpdf.kernel.font.DocType1Font.getFontFileName()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.makeAnnotation(PdfObject)
com.itextpdf.layout.TableTest.cellAlignmentAndKeepTogetherTest01()
com.itextpdf.kernel.utils.CompareTool.compareStreamsExtended(PdfStream,PdfStream,ObjectPath,CompareResult)
com.itextpdf.layout.renderer.TextRenderer.setText(String)
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperOffset.doOffset(double)
com.itextpdf.io.source.ByteBufferRandomAccessSource.length()
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingAes256.setAES256DicEntries(PdfDictionary,byte,byte,byte,boolean,boolean)
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingStandard40.isValidPassword(byte,byte)
com.itextpdf.barcodes.qrcode.MaskUtil.applyMaskPenaltyRule1(ByteMatrix)
com.itextpdf.kernel.pdf.tagging.PdfMcrDictionary.getMcid()
com.itextpdf.layout.hyphenation.TernaryTreeIterator.reset()
com.itextpdf.io.font.FontProgram.setFixedPitch(boolean)
com.itextpdf.signatures.PdfSigner.setSignatureEvent(ISignatureEvent)
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.addTag(int,IAccessibleElement)
com.itextpdf.pdfa.PdfA2CatalogCheckTest.catalogCheck03()
com.itextpdf.forms.PdfFormCopyTest.copyFieldsTest02()
com.itextpdf.kernel.pdf.action.PdfAction.createGoToR(String,int,boolean)
com.itextpdf.io.font.FontProgramDescriptor.getStyle()
com.itextpdf.layout.ListTest.addListOnShortPage1()
com.itextpdf.kernel.pdf.PdfOutputStream.decodeFlateBytes(PdfStream,byte)
com.itextpdf.layout.font.FontInfo.getAlias()
com.itextpdf.io.source.PagedChannelRandomAccessSource.sourceInUse(IRandomAccessSource)
com.itextpdf.forms.PdfAcroForm.setXFAResource(PdfStream)
com.itextpdf.barcodes.qrcode.CharacterSetECI.getValue()
com.itextpdf.kernel.xmp.impl.XMPIteratorImpl.skipSiblings()
com.itextpdf.io.image.ImageData.isRawImage()
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperBase.disposeLocalMinimaList()
com.itextpdf.layout.ElementPropertyContainer.setBackgroundColor(Color,float,float,float,float)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff030Test.getTestInfo()
com.itextpdf.kernel.pdf.layer.PdfLayerMembership.isWrappedObjectMustBeIndirect()
com.itextpdf.kernel.pdf.PdfDocument.copyPagesTo(List,PdfDocument,IPdfPageExtraCopier)
com.itextpdf.layout.renderer.TextRenderer.hasNext()
com.itextpdf.kernel.utils.PageRange.addPageRangePart(IPageRangePart)
com.itextpdf.io.font.woff2.w3c.format.BlocksExtraneousData006Test.getTestInfo()
com.itextpdf.layout.ElementPropertyContainer.getTextRenderingMode()
com.itextpdf.layout.font.FontInfo.equals(Object)
com.itextpdf.layout.element.Text.setRole(PdfName)
com.itextpdf.layout.renderer.MinWidthTest.headerFooterTableTest()
com.itextpdf.kernel.pdf.action.PdfAction.createURI(String)
com.itextpdf.kernel.pdf.PdfArray.remove(int)
com.itextpdf.kernel.xmp.properties.XMPPropertyInfo.getOptions()
com.itextpdf.barcodes.qrcode.BitVector.appendBits(int,int)
com.itextpdf.layout.element.Image.getAccessibilityProperties()
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getLeading()
com.itextpdf.kernel.xmp.impl.XMPNode.getParent()
com.itextpdf.kernel.pdf.PdfObject.setModified()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.writeLiteral(float)
com.itextpdf.kernel.pdf.PdfPages.getParent()
com.itextpdf.io.font.FontNames.getNames(int)
com.itextpdf.kernel.pdf.PdfDocument.copyPagesTo(int,int,PdfDocument)
com.itextpdf.signatures.testutils.Pkcs12FileHelper.readFirstChain(String,char)
com.itextpdf.kernel.font.PdfFontFactory.registerSystemDirectories()
com.itextpdf.kernel.pdf.colorspace.PdfSpecialCs.getNChannelCsArray(PdfArray,PdfObject,PdfObject,PdfDictionary)
com.itextpdf.kernel.pdf.PdfCanvasTest.create10PagesDocumentWithFullCompression()
com.itextpdf.io.font.otf.GlyphLine.removeGlyph(int)
com.itextpdf.layout.ElementPropertyContainer.setBorderTop(Border)
com.itextpdf.kernel.pdf.PdfResources.addFont(PdfDocument,PdfFont)
com.itextpdf.layout.renderer.TableWidths.fillAndSortCells()
com.itextpdf.kernel.font.Type3Glyph.getUry()
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.actualizeTagsProperties()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setHorizontalScaling(float)
com.itextpdf.kernel.pdf.PdfObjectWrapper.getPdfObject()
com.itextpdf.kernel.pdf.PdfResources.getResourceNames(PdfName)
com.itextpdf.kernel.pdf.canvas.wmf.InputMeta.readColor()
com.itextpdf.io.source.GetBufferedRandomAccessSource.length()
com.itextpdf.layout.element.IElement.getRenderer()
com.itextpdf.kernel.pdf.filters.LZWDecodeFilter.LZWDecode(byte)
com.itextpdf.kernel.pdf.PdfDocumentIdTest.changeIdTest()
com.itextpdf.kernel.crypto.securityhandler.PubSecHandlerUsingAes128.getDigestAlgorithm()
com.itextpdf.kernel.pdf.annot.PdfCaretAnnotation.setSymbol(PdfString)
com.itextpdf.io.font.otf.ActualTextIterator.glyphLinePartNeedsActualText(GlyphLine,GlyphLinePart)
com.itextpdf.layout.renderer.TableRenderer.split(int,boolean,boolean)
com.itextpdf.layout.renderer.TableRenderer.getTable()
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.getTransferFunction2()
com.itextpdf.signatures.SignaturePermissions.getFields()
com.itextpdf.io.codec.TIFFDirectory.getFieldAsFloat(int)
com.itextpdf.signatures.CertificateInfo.getIssuer(byte)
com.itextpdf.kernel.pdf.PdfXrefTable.clear()
com.itextpdf.kernel.pdf.canvas.parser.clipper.PolyNode.isOpen()
com.itextpdf.io.image.ImageDataFactory.createTiff(URL,boolean,int,boolean)
com.itextpdf.kernel.pdf.SerializedObjectContent.calculateHash(byte)
com.itextpdf.layout.renderer.IRenderer.draw(DrawContext)
com.itextpdf.kernel.xmp.impl.Base64.encode(String)
com.itextpdf.io.font.FontNames.isItalic()
com.itextpdf.kernel.pdf.action.PdfTargetDictionary.createChildTarget(String,String)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.addXObject(PdfXObject,float,float,float,float,float,float)
com.itextpdf.forms.fields.PdfFormField.setValue(String)
com.itextpdf.layout.FloatTest.floatsOnPageSplit13()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff052Test.isFontValid()
com.itextpdf.kernel.pdf.tagging.ParentTreeHandler.registerMcr(PdfMcr)
com.itextpdf.layout.TableTest.simpleTableTest15()
com.itextpdf.signatures.sign.LtvSigTest.before()
com.itextpdf.io.font.TrueTypeFont.getGposTable()
com.itextpdf.kernel.xmp.impl.Utils.isNameChar(char)
com.itextpdf.io.font.AdobeGlyphList.unicodeToName(int)
com.itextpdf.barcodes.BarcodeDataMatrix.setHeight(int)
com.itextpdf.kernel.pdf.layer.PdfLayer.isOn()
com.itextpdf.layout.hyphenation.TernaryTree.strcmp(char,int,char,int)
com.itextpdf.layout.FloatTest.floatsOnPageSplit03()
com.itextpdf.io.font.FontNames.setFullName(String)
com.itextpdf.barcodes.BarcodePDF417.createFormXObject(Color,PdfDocument)
com.itextpdf.kernel.pdf.canvas.CanvasTag.getProperties()
com.itextpdf.io.font.FontProgramFactory.registerFont(String,String)
com.itextpdf.kernel.pdf.PdfDictionaryTest.testEntrySetRemoveAll2()
com.itextpdf.io.font.otf.GlyphLine.get(int)
com.itextpdf.kernel.xmp.impl.XMPSerializerRDF.serializeCompactRDFSchemas(int)
com.itextpdf.barcodes.BarcodePostnet.getBarsPostnet(String)
com.itextpdf.io.font.woff2.StoreBytes.storeU16(byte,int,int)
com.itextpdf.kernel.pdf.PdfStructElemTest.structTreeCopyingTest05()
com.itextpdf.kernel.xmp.options.ParseOptions.setRequireXMPMeta(boolean)
com.itextpdf.layout.renderer.BlockRenderer.applyRotationLayout(Rectangle)
com.itextpdf.io.codec.TIFFField.getAsInts()
com.itextpdf.kernel.font.PdfType0Font.isAppendableGlyph(Glyph)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff135Test.getFontName()
com.itextpdf.pdfa.PdfA2AcroFormCheckTest.acroFormCheck03()
com.itextpdf.io.image.ImageDataFactory.create(URL,boolean)
com.itextpdf.forms.fields.PdfFormField.createMultilineText(PdfDocument,Rectangle,String,String)
com.itextpdf.layout.LargeElementTest.beforeClass()
com.itextpdf.kernel.crypto.securityhandler.PubKeySecurityHandler.computeRecipientInfo(X509Certificate,byte)
com.itextpdf.layout.renderer.TextRenderer.drawSingleUnderline(Underline,Color,PdfCanvas,float,float)
com.itextpdf.io.font.woff2.Woff2Dec.computeWOFF2FinalSize(byte,int)
com.itextpdf.io.image.GifImageData.setLogicalWidth(float)
com.itextpdf.kernel.pdf.PdfStructElemTest.corruptedTagStructureTest04()
com.itextpdf.kernel.pdf.tagging.PdfStructElem.getRole()
com.itextpdf.kernel.pdf.PdfName.makeIndirect(PdfDocument)
com.itextpdf.kernel.xmp.impl.XMPNode.setValue(String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff017Test.getTestInfo()
com.itextpdf.kernel.font.IDocFontProgram.getFontFileName()
com.itextpdf.kernel.pdf.canvas.parser.TextRenderInfoTest.getLineSegments()
com.itextpdf.barcodes.qrcode.Version.getECBlocks()
com.itextpdf.io.font.otf.Glyph.hashCode()
com.itextpdf.kernel.geom.AffineTransform.getTranslateY()
com.itextpdf.kernel.pdf.canvas.parser.TextMarginFinderTest.test()
com.itextpdf.kernel.pdf.tagging.PdfStructElem.convertPdfObjectToIPdfStructElem(PdfObject)
com.itextpdf.kernel.xmp.XMPMeta.iterator(IteratorOptions)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff069Test.getTestInfo()
com.itextpdf.io.font.FontMetrics.setTypoDescender(int)
com.itextpdf.barcodes.BarcodeDataMatrix.setCode(String)
com.itextpdf.kernel.font.DocFontEncoding.fillBaseEncoding(DocFontEncoding,PdfName)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.addForm(PdfFormXObject,float,float,float)
com.itextpdf.kernel.utils.CompareTool.setCompareByContentErrorsLimit(int)
com.itextpdf.io.font.woff2.w3c.format.TabledataHmtxTransform002Test.getFontName()
com.itextpdf.signatures.sign.SigningTest.init()
com.itextpdf.kernel.xmp.impl.XMPUtilsImpl.applyQuotes(String,char,char,boolean)
com.itextpdf.layout.border.Border.getBorderSide(float,float,float,float,Side)
com.itextpdf.kernel.pdf.PdfFontTest.otfByStringNames()
com.itextpdf.forms.PdfFormFieldTest.formFieldTest03()
com.itextpdf.pdfa.PdfA2AnnotationCheckTest.annotationCheckTest11()
com.itextpdf.kernel.crypto.AesDecryptor.update(byte,int,int)
com.itextpdf.layout.renderer.AbstractRenderer.getPropertyAsTransparentColor(int)
com.itextpdf.io.image.ImageData.getColorTransform()
com.itextpdf.layout.renderer.AbstractRenderer.getPropertyAsFont(int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff139Test.getFontName()
com.itextpdf.kernel.font.PdfSimpleFont.setFontProgram(T)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.newlineText()
com.itextpdf.forms.fields.PdfChoiceFormField.getTopIndex()
com.itextpdf.io.font.FontNames.isCondensed()
com.itextpdf.io.font.FontEncoding.createFontEncoding(String)
com.itextpdf.io.font.woff2.w3c.format.BlocksExtraneousData006Test.isFontValid()
com.itextpdf.test.LogListenerHelper.equalsMessageByTemplate(String,String)
com.itextpdf.kernel.pdf.PdfDocument.setUserProperties(boolean)
com.itextpdf.layout.renderer.TextRenderer.convertToGlyphLine(String)
com.itextpdf.kernel.geom.Subpath.isClosed()
com.itextpdf.kernel.font.PdfFont.addSubsetRange(int)
com.itextpdf.layout.renderer.RootRenderer.processRenderer(IRenderer,List)
com.itextpdf.layout.renderer.TableRenderer.applyFixedXOrYPosition(boolean,Rectangle)
com.itextpdf.kernel.pdf.PdfDocumentInfo.setMoreInfo(String,String)
com.itextpdf.io.font.woff2.w3c.format.HeaderReserved001Test.getFontName()
com.itextpdf.io.image.ImageDataFactory.create(byte,boolean)
com.itextpdf.layout.renderer.AreaBreakRenderer.hasProperty(int)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.updateEdgeIntoAEL(Edge)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff012Test.isFontValid()
com.itextpdf.layout.CollapsingMarginsTest.collapsingMarginsTest03()
com.itextpdf.barcodes.qrcode.BitMatrix.setRegion(int,int,int,int)
com.itextpdf.io.image.PngImageHelper.decodeAverageFilter(byte,byte,int,int)
com.itextpdf.kernel.pdf.annot.PdfPolyGeomAnnotation.getVertices()
com.itextpdf.kernel.utils.CompareTool.convertPdfStringToBytes(PdfString)
com.itextpdf.io.font.woff2.w3c.W3CWoff2DecodeTest.runTest()
com.itextpdf.layout.renderer.AbstractRenderer.retrieveUnitValue(float,int)
com.itextpdf.io.font.FontNames.setAllNames(Map)
com.itextpdf.signatures.SignUtils.createSigPolicyQualifiers(SigPolicyQualifierInfo)
com.itextpdf.io.codec.brotli.dec.BitReader.init(BitReader,InputStream)
com.itextpdf.kernel.pdf.PdfObjectTest.indirectsChain3()
com.itextpdf.layout.minmaxwidth.RotationMinMaxWidth.getMin()
com.itextpdf.io.font.CFFFont.increment(int)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.getFlatnessTolerance()
com.itextpdf.kernel.pdf.PdfDocument.getDocumentId()
com.itextpdf.layout.AlignmentTest.justifyAllTest02()
com.itextpdf.kernel.xmp.impl.XMPIteratorImpl.getOptions()
com.itextpdf.kernel.pdf.PdfArray.remove(PdfObject)
com.itextpdf.kernel.pdf.tagging.PdfStructTreeRoot.getKids()
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6Format1.isGlyphMatchesBacktrack(int,int)
com.itextpdf.io.image.ImageDataFactory.createGif(byte)
com.itextpdf.barcodes.qrcode.Encoder.appendNumericBytes(String,BitVector)
com.itextpdf.kernel.pdf.PdfDeveloperExtension.getDeveloperExtensions()
com.itextpdf.barcodes.Barcode128Test.barcode01Test()
com.itextpdf.io.font.CFFFontSubset.CountRange(int,int)
com.itextpdf.signatures.SignUtils.getMessageDigest(String)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.addImage(ImageData,float,float,boolean)
com.itextpdf.kernel.geom.AffineTransform.setToIdentity()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff065Test.getFontName()
com.itextpdf.kernel.font.PdfSimpleFont.createGlyphLine(String)
com.itextpdf.io.codec.TIFFFaxDecompressor.setToBlack(int,int)
com.itextpdf.kernel.utils.TaggedPdfReaderTool.convertToXml(OutputStream)
com.itextpdf.kernel.pdf.PdfDocument.open(PdfVersion)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getAlphaIsShape()
com.itextpdf.io.source.RandomAccessFileOrArray.readUnsignedShort()
com.itextpdf.layout.FloatTest.clearanceApplyingPageSplit02()
com.itextpdf.kernel.pdf.canvas.parser.TextRenderInfoTest.testCharacterRenderInfos()
com.itextpdf.kernel.pdf.canvas.parser.ParserGraphicsState.getClippingPath()
com.itextpdf.signatures.PdfSignatureAppearance.getSignDate()
com.itextpdf.signatures.SignUtils.verifyCertificateSignature(X509Certificate,PublicKey,String)
com.itextpdf.layout.renderer.ListItemRenderer.calculateAscenderDescender()
com.itextpdf.io.font.woff2.w3c.format.Valid005Test.getFontName()
com.itextpdf.layout.PreLayoutTest.columnDocumentRendererRelayoutTest()
com.itextpdf.io.source.OutputStream.setHighPrecision(boolean)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff025Test.getFontName()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff084Test.isFontValid()
com.itextpdf.layout.renderer.TextRenderer.draw(DrawContext)
com.itextpdf.kernel.pdf.annot.PdfLineAnnotation.setCaptionPosition(PdfName)
com.itextpdf.io.font.woff2.Woff2Converter.convert(byte)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.restoreState()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff104Test.getFontName()
com.itextpdf.kernel.pdf.PdfImageXObjectTest.testAscii85Filters()
com.itextpdf.barcodes.BarcodePDF417.dumpList()
com.itextpdf.kernel.font.FontUtil.getToUnicodeFromUniMap(String)
com.itextpdf.layout.font.FontProvider.addStandardPdfFonts()
com.itextpdf.kernel.pdf.PdfReaderTest.openDocWithFlateFilter()
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperOffset.clear()
com.itextpdf.layout.FontSelectorTest.cyrillicAndLatinGroup2()
com.itextpdf.io.font.CidFont.getCompatibleUniMap(String)
com.itextpdf.kernel.pdf.layer.PdfLayer.createTitleSilent(String,PdfDocument)
com.itextpdf.forms.fields.PdfFormField.getKids()
com.itextpdf.layout.renderer.AbstractRenderer.getBorderAreaBBox()
com.itextpdf.layout.TabsTest.drawTabStopsPositions(float,Document,int,int,int)
com.itextpdf.forms.xfa.Xml2Som.inverseSearchAdd(Map,Stack,String)
com.itextpdf.barcodes.qrcode.ByteMatrix.getHeight()
com.itextpdf.layout.Style.getPaddingRight()
com.itextpdf.kernel.pdf.canvas.parser.LocationExtractTest.testLocationExtraction()
com.itextpdf.io.util.SystemUtil.getFreeMemory()
com.itextpdf.layout.RootElement.hasOwnProperty(int)
com.itextpdf.layout.renderer.TableRenderer.drawChildren(DrawContext)
com.itextpdf.kernel.pdf.canvas.parser.PdfTextExtractorUnicodeIdentityTest.test()
com.itextpdf.io.codec.Base64.decode(byte,int,int,int)
com.itextpdf.forms.PdfAcroForm.getNeedAppearances()
com.itextpdf.layout.SimpleTextExtractionStrategyTest.extractFromIsoTc171()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff020Test.isFontValid()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff034Test.isFontValid()
com.itextpdf.kernel.log.DefaultCounter.onDocumentWritten(long)
com.itextpdf.layout.Style.getMarginBottom()
com.itextpdf.io.font.woff2.w3c.format.BlocksOrdering004Test.getFontName()
com.itextpdf.kernel.pdf.canvas.parser.util.InlineImageParsingUtils.getAlternateValue(PdfName,PdfObject)
com.itextpdf.kernel.pdf.PdfPage.copyInheritedProperties(PdfPage,PdfDocument)
com.itextpdf.layout.LinkTest.simpleMarginsTest01()
com.itextpdf.io.util.FileUtil.wrapWithBufferedOutputStream(OutputStream)
com.itextpdf.kernel.pdf.PdfStream.getType()
com.itextpdf.kernel.pdf.PdfObject.makeIndirect(PdfDocument)
com.itextpdf.io.image.ImageData.setWidth(float)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Point.isPt2BetweenPt1AndPt3(LongPoint,LongPoint,LongPoint)
com.itextpdf.kernel.pdf.PdfOutputIntent.setOutputCondition(String)
com.itextpdf.kernel.pdf.canvas.wmf.WmfImageData.readImageType(URL)
com.itextpdf.signatures.PdfSigner.setOriginalOutputStream(OutputStream)
com.itextpdf.kernel.pdf.PdfDocument.addPage(PdfPage)
com.itextpdf.barcodes.qrcode.BitMatrix.getRow(int,BitArray)
com.itextpdf.io.font.woff2.w3c.format.BlocksMetadataPadding002Test.getFontName()
com.itextpdf.io.codec.TIFFFaxDecoder.reverseBits(byte)
com.itextpdf.layout.layout.LayoutResult.getOverflowRenderer()
com.itextpdf.kernel.pdf.PdfResources.addImage(PdfObject)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff022Test.isFontValid()
com.itextpdf.barcodes.dmcode.ReedSolomon.getPoly(int)
com.itextpdf.forms.fields.PdfSignatureFormField.getFormType()
com.itextpdf.kernel.utils.CompareTool.compareTagStructures(String,String)
com.itextpdf.kernel.xmp.XMPMeta.setProperty(String,String,Object,PropertyOptions)
com.itextpdf.kernel.utils.CompareTool.createIgnoredAreasPdfs(String,Map)
com.itextpdf.layout.renderer.TableBorders.getFirstVerticalBorder()
com.itextpdf.kernel.xmp.options.ParseOptions.setStrictAliasing(boolean)
com.itextpdf.pdfa.PdfA2ActionCheckTest.actionCheck06()
com.itextpdf.kernel.xmp.XMPSchemaRegistry.findAliases(String)
com.itextpdf.signatures.CRLVerifier.getCRL(X509Certificate,X509Certificate)
com.itextpdf.kernel.pdf.PdfOutputStream.isXRefStream(PdfStream)
com.itextpdf.layout.margincollapse.MarginsCollapseInfo.setUsedBufferSpaceOnTop(float)
com.itextpdf.kernel.color.DeviceN.getDefaultColorants(int)
com.itextpdf.layout.renderer.AbstractRenderer.setProperty(int,Object)
com.itextpdf.io.source.OutputStream.write(byte)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.doesArrayItemExist(String,String,int)
com.itextpdf.io.font.FontProgramDescriptor.getFontNameLowerCase()
com.itextpdf.layout.BorderTest.borders3DTest()
com.itextpdf.layout.renderer.AreaBreakRenderer.addChild(IRenderer)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff083Test.getTestInfo()
com.itextpdf.io.font.otf.OpenTypeFontTableReader.getGlyph(int)
com.itextpdf.layout.renderer.TableWidths.isFlexible()
com.itextpdf.layout.renderer.LineRenderer.getTopLeadingIndent(Leading)
com.itextpdf.kernel.pdf.navigation.PdfExplicitDestination.createXYZ(int,float,float,float)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.isParam1RightOfParam2(OutRec,OutRec)
com.itextpdf.kernel.pdf.PdfDocument.cloneOutlines(Set,PdfOutline,PdfOutline,Map,PdfDocument)
com.itextpdf.kernel.font.PdfType1Font.addFontStream(PdfDictionary)
com.itextpdf.kernel.xmp.impl.XMPNode.hasNext()
com.itextpdf.kernel.pdf.action.PdfActionOcgState.getObjectList()
com.itextpdf.kernel.pdf.PdfAnnotationTest.textMarkupTest02()
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.getJustification()
com.itextpdf.io.util.SystemUtil.getSystemTimeMillis()
com.itextpdf.kernel.utils.PageRangeTest.addSequenceAndSingleConstructor()
com.itextpdf.layout.element.Table.initializeRows()
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingStandard40.padPassword(byte)
com.itextpdf.forms.fields.PdfFormField.setRequired(boolean)
com.itextpdf.io.font.woff2.w3c.format.HeaderLength002Test.getFontName()
com.itextpdf.layout.property.UnitValue.getValue()
com.itextpdf.kernel.pdf.canvas.parser.ParserGraphicsState.updateCtm(Matrix)
com.itextpdf.layout.renderer.ListRenderer.getNextRenderer()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff132Test.isFontValid()
com.itextpdf.pdfa.checker.PdfA2Checker.checkForm(PdfDictionary)
com.itextpdf.layout.font.FontCharacteristics.isUndefined()
com.itextpdf.kernel.pdf.PdfStream.makeIndirect(PdfDocument)
com.itextpdf.io.source.RandomAccessFileOrArray.readUnsignedShortLE()
com.itextpdf.kernel.geom.MatrixTest.testAdd()
com.itextpdf.forms.fields.PdfFormField.getDocument()
com.itextpdf.kernel.pdf.PdfPage.isPageRotationInverseMatrixWritten()
com.itextpdf.kernel.crypto.StandardDecryptor.update(byte,int,int)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setTextMatrix(float,float)
com.itextpdf.layout.NonBreakableSpaceTest.simpleParagraphTest()
com.itextpdf.kernel.utils.CompareToolTest.compareToolErrorReportTest04()
com.itextpdf.io.font.Pfm2afm.outval(int)
com.itextpdf.signatures.CertificateInfo.getSubjectFields(X509Certificate)
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getUnscaledWidth()
com.itextpdf.barcodes.dmcode.Placement.corner1(int)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.getRenderingIntent()
com.itextpdf.io.font.CFFFontSubset.CreateFDSelect(OffsetItem,int)
com.itextpdf.kernel.pdf.tagging.PdfStructElem.getActualText()
com.itextpdf.layout.font.FontInfo.hashCode()
com.itextpdf.kernel.pdf.canvas.parser.data.PathRenderInfo.getPath()
com.itextpdf.layout.renderer.ParagraphRenderer.getLastYLineRecursively()
com.itextpdf.signatures.sign.PdfSignatureAppearanceTest.before()
com.itextpdf.barcodes.BarcodeDataMatrix.solveFAndSwitchMode(int,int,int)
com.itextpdf.signatures.PdfSignatureAppearance.setReason(String)
com.itextpdf.pdfa.PdfA1ActionCheckTest.actionCheck08()
com.itextpdf.kernel.pdf.PdfPagesTree.addPage(int,PdfPage)
com.itextpdf.layout.TableTest.tableSplitTest02()
com.itextpdf.io.image.BmpImageHelper.read1Bit(int,BmpParameters)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff004Test.getTestInfo()
com.itextpdf.kernel.pdf.PdfDictionaryEntrySet.setValue(PdfObject)
com.itextpdf.kernel.pdf.annot.PdfRedactAnnotation.getRepeat()
com.itextpdf.layout.element.Tab.makeNewRenderer()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.addImage(ImageData,float,float,float,float,float,float)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff124Test.getTestInfo()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Path.isPointInPolygon(Point,LongPoint)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff022Test.getTestInfo()
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.endText()
com.itextpdf.io.codec.TIFFDirectory.getFieldAsByte(int)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setPage(PdfPage)
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.getCurrentContentStream()
com.itextpdf.kernel.pdf.PdfName.newInstance()
com.itextpdf.layout.border.Border.getOpacity()
com.itextpdf.io.font.woff2.w3c.format.BlocksMetadataAbsent002Test.isFontValid()
com.itextpdf.kernel.pdf.PdfTokenizerTest.checkTokenValues(String,byte)
com.itextpdf.io.font.cmap.CMapContentParser.toHex(int)
com.itextpdf.layout.renderer.TableWidths.setPoints(float)
com.itextpdf.kernel.crypto.securityhandler.EncryptionUtils.cipherBytes(X509Certificate,byte,AlgorithmIdentifier)
com.itextpdf.layout.OpacityTest.backgroundOpacityTest01()
com.itextpdf.io.font.PdfEncodings.convertToBytes(String,String)
com.itextpdf.kernel.pdf.PdfEncryptionTest.encryptWithCertificateAes256NoCompression()
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.setCurrentStructElem(PdfStructElem)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Point.set(Point)
com.itextpdf.io.image.TiffImageData.getImage(URL,boolean,int,boolean)
com.itextpdf.forms.fields.PdfTextFormField.setScroll(boolean)
com.itextpdf.io.image.RawImageData.setTypeCcitt(int)
com.itextpdf.layout.renderer.BlockRenderer.updateHeightsOnSplit(boolean,AbstractRenderer)
com.itextpdf.kernel.pdf.PdfFontTest.testType1FontUpdateContent2()
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.getTextAlign()
com.itextpdf.kernel.xmp.impl.XMPNode.getHasAliases()
com.itextpdf.kernel.utils.PageRange.getRangeObject(String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff009Test.isFontValid()
com.itextpdf.layout.border.Border.getBorderSide(float,float,float,float)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Point.getX()
com.itextpdf.kernel.xmp.impl.XMPDateTimeImpl.setDay(int)
com.itextpdf.kernel.font.PdfType3Font.getFontMatrix()
com.itextpdf.layout.DefaultLayoutTest.textWithWhitespacesTest01()
com.itextpdf.io.font.otf.GlyphLine.addAllGlyphs(int,List)
com.itextpdf.kernel.geom.AffineTransform.getTranslateInstance(double,double)
com.itextpdf.layout.TableTest.skipHeaderTest01()
com.itextpdf.io.font.TrueTypeFont.getActiveCmap()
com.itextpdf.layout.renderer.TableWidths.calculateTableWidth(float,boolean)
com.itextpdf.kernel.pdf.XMPMetadataTest.emptyDocumentWithXmpAppendMode02()
com.itextpdf.kernel.geom.Rectangle.clone()
com.itextpdf.io.font.otf.Glyph.getXAdvance()
com.itextpdf.layout.hyphenation.Hyphenation.toString()
com.itextpdf.layout.renderer.TypographyUtils.findConstructor(String,Class)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.insertArrayItem(String,String,int,String,PropertyOptions)
com.itextpdf.kernel.crypto.OutputStreamAesEncryption.finish()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setLineJoinStyle(int)
com.itextpdf.barcodes.Barcode1D.createFormXObject(Color,Color,PdfDocument)
com.itextpdf.kernel.pdf.PdfDocument.setFlushUnusedObjects(boolean)
com.itextpdf.kernel.pdf.canvas.parser.data.ImageRenderInfo.getStartPoint()
com.itextpdf.layout.RotationTest.alignedTextRotationTest01()
com.itextpdf.layout.hyphenation.TernaryTree.size()
com.itextpdf.io.font.CidFontProperties.getCompatibleFont(String)
com.itextpdf.layout.element.Table.normalizeColumnWidths(float)
com.itextpdf.kernel.pdf.function.PdfFunction.flush()
com.itextpdf.kernel.pdf.ByteBufferOutputStream.append(byte)
com.itextpdf.kernel.xmp.XMPPathFactory.assertQualNS(String)
com.itextpdf.kernel.font.PdfType3Font.containsGlyph(int)
com.itextpdf.kernel.xmp.impl.xpath.XMPPath.add(XMPPathSegment)
com.itextpdf.kernel.utils.CompareTool.getKey()
com.itextpdf.layout.minmaxwidth.RotationMinMaxWidth.correctSinCos(double)
com.itextpdf.barcodes.qrcode.MatrixUtil.isEmpty(byte)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff042Test.getFontName()
com.itextpdf.layout.renderer.IRenderer.isFlushed()
com.itextpdf.signatures.verify.OcspVerifierTest.invalidOutdatedOcspTest01()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setAdditionalAction(PdfName,PdfAction)
com.itextpdf.kernel.events.PdfDocumentEvent.getDocument()
com.itextpdf.kernel.events.EventDispatcher.hasEventHandler(String)
com.itextpdf.kernel.pdf.canvas.wmf.InputMeta.readByte()
com.itextpdf.layout.LocationTextExtractionStrategyTest.testRotatedPage()
com.itextpdf.layout.Canvas.setRenderer(CanvasRenderer)
com.itextpdf.barcodes.qrcode.GF256.getZero()
com.itextpdf.barcodes.qrcode.Version.getECCodewordsPerBlock()
com.itextpdf.kernel.pdf.canvas.wmf.MetaDo.wrapBMP(ImageData)
com.itextpdf.barcodes.qrcode.ByteMatrix.getWidth()
com.itextpdf.layout.AutoTaggingTest.beforeClass()
com.itextpdf.layout.AlignmentTest.justifyAllTest01()
com.itextpdf.io.codec.PngWriter.writeIccProfile(byte)
com.itextpdf.io.codec.brotli.dec.SynthTest.testSimplePrefixOutOfRangeSymbols()
com.itextpdf.layout.LocationTextExtractionStrategyTest.createPdfWithRotatedXObject(String)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setFillColorRgb(float,float,float)
com.itextpdf.kernel.xmp.XMPUtils.separateArrayItems(XMPMeta,String,String,String,PropertyOptions,boolean)
com.itextpdf.layout.renderer.ListRenderer.layout(LayoutContext)
com.itextpdf.barcodes.qrcode.ErrorCorrectionLevel.toString()
com.itextpdf.kernel.pdf.PdfNameTree.iterateItems(PdfDictionary,Map,PdfString)
com.itextpdf.layout.renderer.LineRenderer.split()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff054Test.isFontValid()
com.itextpdf.kernel.pdf.PdfDocument.checkShowTextIsoConformance(Object,PdfResources)
com.itextpdf.kernel.xmp.impl.ParseRDF.isWhitespaceNode(Node)
com.itextpdf.layout.element.List.setListSymbolAlignment(ListSymbolAlignment)
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.eventOccurred(IEventData,EventType)
com.itextpdf.forms.PdfPageFormCopier.getParentField(PdfDictionary,PdfDocument)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.circle(double,double,double)
com.itextpdf.kernel.pdf.PdfPrimitivesTest.nextString()
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getDescentLine()
com.itextpdf.kernel.pdf.PdfIndirectReference.setRefersTo(PdfObject)
com.itextpdf.kernel.pdf.canvas.parser.FilteredTextEventListenerTest.testRegion()
com.itextpdf.kernel.pdf.PdfWriter.writeToBody(PdfObject)
com.itextpdf.kernel.pdf.PdfResources.checkAndResolveCircularReferences(PdfObject)
com.itextpdf.kernel.geom.Vector.dot(Vector)
com.itextpdf.kernel.pdf.PdfVersion.fromString(String)
com.itextpdf.kernel.xmp.options.PropertyOptions.isSimple()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Paths.cleanPolygons()
com.itextpdf.kernel.pdf.tagging.StructureTreeCopier.copyTo(PdfDocument,Map,PdfDocument,boolean,int)
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.getText()
com.itextpdf.layout.AutoTaggingTest.tableTest08()
com.itextpdf.io.codec.Base64.encodeBytes(byte,int)
com.itextpdf.io.source.RandomAccessFileOrArray.getPosition()
com.itextpdf.kernel.pdf.PdfObject.isDictionary()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff140Test.getTestInfo()
com.itextpdf.kernel.crypto.IVGenerator.getIV(int)
com.itextpdf.io.font.CFFFont.getDictItem()
com.itextpdf.layout.border.Border3D.draw(PdfCanvas,float,float,float,float,float,float)
com.itextpdf.signatures.SignaturePermissions.toString()
com.itextpdf.kernel.pdf.PdfReader.readPdfName(boolean)
com.itextpdf.kernel.pdf.PdfEncryptor.isDegradedPrintingAllowed(int)
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getExpansionText()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.addToPropertiesAndBeginLayer(IPdfOCG)
com.itextpdf.io.font.FontCache.getAllPredefinedCidFonts()
com.itextpdf.kernel.pdf.colorspace.PdfShading.isWrappedObjectMustBeIndirect()
com.itextpdf.kernel.geom.MatrixTest.testDeterminant()
com.itextpdf.io.codec.brotli.dec.Decode.moveToFront(int,int)
com.itextpdf.io.font.cmap.CMapContentParser.readObject()
com.itextpdf.io.image.RawImageHelper.updateImageAttributes(RawImageData,Map)
com.itextpdf.io.font.CidFont.isFontSpecific()
com.itextpdf.layout.PreLayoutTest.beforeClass()
com.itextpdf.layout.renderer.RotationUtils.countRotationMinMaxWidth(MinMaxWidth,AbstractRenderer)
com.itextpdf.signatures.PdfSignatureAppearance.setSignatureCreator(String)
com.itextpdf.kernel.log.SystemOutCounter.onDocumentWritten(long)
com.itextpdf.layout.hyphenation.CharVector.get(int)
com.itextpdf.layout.element.Text.setText(String)
com.itextpdf.kernel.pdf.xobject.PdfXObject.makeXObject(PdfStream)
com.itextpdf.forms.PdfPageFormCopier.mergeFieldsWithTheSameName(PdfFormField)
com.itextpdf.kernel.xmp.XMPMetaFactory.parseFromString(String,ParseOptions)
com.itextpdf.kernel.pdf.PdfStampingTest.beforeClass()
com.itextpdf.layout.OverflowTest.textOverflowTest01()
com.itextpdf.kernel.font.PdfFontFactory.createFont(String)
com.itextpdf.signatures.PdfSignatureAppearance.addTextToCanvas(String,PdfFont,Rectangle)
com.itextpdf.kernel.utils.CompareTool.getCmpObject()
com.itextpdf.layout.SimpleTextExtractionStrategyTest.extractFromPage229()
com.itextpdf.io.codec.brotli.dec.SynthTest.testNegativeDistance()
com.itextpdf.layout.element.Table.getNumberOfColumns()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff013Test.getTestInfo()
com.itextpdf.io.font.FontIdentification.getTtfUniqueId()
com.itextpdf.layout.renderer.AreaBreakRenderer.draw(DrawContext)
com.itextpdf.kernel.pdf.navigation.PdfDestination.makeDestination(PdfObject)
com.itextpdf.kernel.xmp.XMPMeta.setPropertyBase64(String,String,byte)
com.itextpdf.signatures.LtvVerification.getParent(X509Certificate,Certificate)
com.itextpdf.io.source.ByteBuffer.capacity()
com.itextpdf.kernel.pdf.layer.PdfLayer.addChild(PdfLayer)
com.itextpdf.kernel.xmp.impl.XMPNode.isImplicit()
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setStrokeOverPrintFlag(boolean)
com.itextpdf.barcodes.qrcode.MatrixUtil.embedBasicPatterns(int,ByteMatrix)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Edge.isIntermediate(double)
com.itextpdf.kernel.color.PatternColor.getPattern()
com.itextpdf.io.source.RandomAccessFileOrArray.readLong()
com.itextpdf.kernel.pdf.PdfCatalog.getPageTree()
com.itextpdf.kernel.pdf.PdfViewerPreferences.setPageBoundary(PdfViewerPreferencesConstants,PdfViewerPreferencesConstants)
com.itextpdf.io.source.ByteBuffer.getInternalBuffer()
com.itextpdf.barcodes.BarcodePDF417.get(int)
com.itextpdf.kernel.pdf.canvas.parser.HighlightItemsTest.parseAndHighlight(String,String,boolean)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getStrokeOverprint()
com.itextpdf.io.codec.brotli.dec.DecodeTest.testX()
com.itextpdf.layout.Canvas.close()
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setLineWidth(float)
com.itextpdf.kernel.pdf.PdfName.generateContent()
com.itextpdf.io.font.woff2.w3c.format.Valid005Test.isFontValid()
com.itextpdf.pdfa.PdfA2ActionCheckTest.actionCheck09()
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.setInteriorColor(PdfArray)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff147Test.getTestInfo()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getLineWidth()
com.itextpdf.kernel.xmp.impl.xpath.XMPPathParser.verifyXPathRoot(String,String)
com.itextpdf.layout.font.FontCharacteristics.setBoldFlag(boolean)
com.itextpdf.io.util.HashCode.combine(int,int)
com.itextpdf.layout.TableBorderTest.borderCollapseTest03()
com.itextpdf.kernel.xmp.impl.xpath.XMPPathParser.verifyQualName(String)
com.itextpdf.kernel.xmp.options.PropertyOptions.getHasLanguage()
com.itextpdf.kernel.pdf.canvas.parser.HighlightItemsTest.highlightPage229()
com.itextpdf.io.codec.brotli.dec.BitReader.intAvailable(BitReader)
com.itextpdf.kernel.pdf.layer.PdfLayerMembership.getVisibilityPolicy()
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingAes256.getDecryptor()
com.itextpdf.layout.font.FontProvider.getPdfFont(FontInfo,FontSet)
com.itextpdf.layout.element.Cell.getRow()
com.itextpdf.layout.renderer.FloatingHelper.isRendererFloating(IRenderer,FloatPropertyValue)
com.itextpdf.kernel.pdf.layer.PdfLayer.addOCGRadioGroup(PdfDocument,List)
com.itextpdf.layout.renderer.RotationUtils.getLayoutRotatedWidth(AbstractRenderer,float,Rectangle,double)
com.itextpdf.layout.renderer.TableWidths.setParent(TableRenderer)
com.itextpdf.kernel.pdf.PdfNameTree.isModified()
com.itextpdf.kernel.pdf.annot.PdfLineAnnotation.getLeaderLineOffset()
com.itextpdf.kernel.pdf.PdfDocument.getDocumentInfo()
com.itextpdf.pdfa.checker.PdfA1Checker.getForbiddenActions()
com.itextpdf.io.image.BmpImageHelper.read1632Bit(boolean,BmpParameters)
com.itextpdf.kernel.pdf.navigation.PdfStringDestination.isWrappedObjectMustBeIndirect()
com.itextpdf.kernel.xmp.impl.XMPSerializerHelper.serializeToBuffer(XMPMetaImpl,SerializeOptions)
com.itextpdf.kernel.geom.Rectangle.decreaseHeight(float)
com.itextpdf.signatures.PdfSigner.signDeferred(PdfDocument,String,OutputStream,IExternalSignatureContainer)
com.itextpdf.kernel.xmp.options.Options.toString()
com.itextpdf.kernel.pdf.filespec.PdfFileSpec.isVolatile()
com.itextpdf.layout.element.Cell.getDefaultProperty(int)
com.itextpdf.io.font.otf.lookuptype5.SubTableLookup5Format2.setSubClassSets(List)
com.itextpdf.forms.PdfFormCopyTest.beforeClass()
com.itextpdf.layout.renderer.TableRenderer.drawBorders(DrawContext,boolean,boolean)
com.itextpdf.barcodes.Barcode1D.getBaseline()
com.itextpdf.kernel.pdf.action.PdfActionOcgState.getState()
com.itextpdf.kernel.xmp.options.PropertyOptions.defineOptionName(int)
com.itextpdf.kernel.pdf.PdfDocument.isAppendMode()
com.itextpdf.kernel.utils.TaggedPdfReaderTool.isValidCharacterValue(int)
com.itextpdf.layout.ElementPropertyContainer.getSplitCharacters()
com.itextpdf.kernel.pdf.PdfOutputIntent.getInfo()
com.itextpdf.signatures.KeyStoreUtil.loadCacertsKeyStore()
com.itextpdf.kernel.pdf.canvas.parser.listener.CharacterRenderInfo.mapString(List)
com.itextpdf.kernel.pdf.tagging.StructureTreeCopier.copyObject(PdfDictionary,Set,PdfDocument,Map,boolean)
com.itextpdf.kernel.pdf.PdfPage.addAnnotation(PdfAnnotation)
com.itextpdf.kernel.pdf.ParentTreeTest.beforeClass()
com.itextpdf.kernel.xmp.impl.XMPSerializerRDF.writeTreeName()
com.itextpdf.kernel.pdf.PdfArray.getType()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.addImage(ImageData,float,float,float,boolean)
com.itextpdf.kernel.pdf.annot.PdfTextMarkupAnnotation.getSubtype()
com.itextpdf.kernel.pdf.annot.PdfWatermarkAnnotation.setFixedPrint(PdfFixedPrint)
com.itextpdf.kernel.geom.AffineTransform.transform(double,int,double,int,int)
com.itextpdf.kernel.xmp.impl.ParseRDF.rdf_ParseTypeLiteralPropertyElement()
com.itextpdf.forms.fields.PdfFormField.put(PdfName,PdfObject)
com.itextpdf.layout.property.UnitValue.createPercentValue(float)
com.itextpdf.layout.renderer.MinWidthTest.multipleDivTest()
com.itextpdf.barcodes.BarcodePDF417.setMacroSegmentId(int)
com.itextpdf.kernel.pdf.navigation.PdfExplicitDestination.createFitH(int,float)
com.itextpdf.kernel.geom.Rectangle.getY()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setColor(PdfColorSpace,float,PdfPattern,boolean)
com.itextpdf.kernel.pdf.PdfDictionaryEntrySet.contains(Object)
com.itextpdf.layout.renderer.AbstractRenderer.updateMinHeight(Float)
com.itextpdf.layout.TableTest.fixedLayoutTest02()
com.itextpdf.kernel.xmp.impl.XMPSchemaRegistryImpl.deleteNamespace(String)
com.itextpdf.kernel.pdf.PdfTokenizerTest.readPdfStringTest()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff100Test.getFontName()
com.itextpdf.io.codec.TIFFDirectory.readUnsignedInt(RandomAccessFileOrArray)
com.itextpdf.pdfa.PdfADocument.setChecker(PdfAConformanceLevel)
com.itextpdf.layout.border.DoubleBorder.draw(PdfCanvas,float,float,float,float,float,Side,float,float)
com.itextpdf.kernel.pdf.PdfReader.get(long)
com.itextpdf.kernel.pdf.PdfEncryption.getPermissions()
com.itextpdf.kernel.pdf.PdfWriter.setSmartMode(boolean)
com.itextpdf.layout.TableTest.simpleTableTest01()
com.itextpdf.kernel.font.PdfSimpleFont.getContentWidth(PdfString)
com.itextpdf.layout.element.BlockElement.getPaddingBottom()
com.itextpdf.io.font.cmap.CMapCidUni.getCids()
com.itextpdf.kernel.pdf.PdfDocument.dispatchEvent(com,itextpdf,kernel,events,Event,boolean)
com.itextpdf.kernel.pdf.PdfViewerPreferences.setViewArea(PdfViewerPreferencesConstants)
com.itextpdf.layout.renderer.TextRenderer.updateFontAndText()
com.itextpdf.kernel.pdf.action.PdfAction.createGoTo(String)
com.itextpdf.layout.element.List.setListSymbol(Text)
com.itextpdf.io.codec.Base64.encodeToFile(byte,String)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.getPropertyBoolean(String,String)
com.itextpdf.io.image.GifImageHelper.setPixel(int,int,int,GifParameters)
com.itextpdf.layout.element.BlockElement.getMarginBottom()
com.itextpdf.kernel.pdf.canvas.draw.ILineDrawer.setLineWidth(float)
com.itextpdf.barcodes.BarcodeQRCode.createAwtImage(java,awt,Color,java,awt,Color)
com.itextpdf.kernel.utils.CompareTool.addError(ObjectPath,String)
com.itextpdf.kernel.pdf.canvas.draw.DashedLine.setColor(Color)
com.itextpdf.forms.fields.PdfFormField.getDefaultAppearance()
com.itextpdf.pdfa.PdfADocument.getCounter()
com.itextpdf.kernel.pdf.ByteBufferOutputStream.append(String)
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.hasTopPadding(IRenderer)
com.itextpdf.kernel.pdf.PdfPage.flushWithResources(PdfDictionary)
com.itextpdf.kernel.utils.CompareTool.compareImagesOfPdfs(String,String,List)
com.itextpdf.kernel.pdf.canvas.parser.clipper.PolyTree.getFirst()
com.itextpdf.kernel.pdf.PdfResources.addResource(PdfObject,ResourceNameGenerator)
com.itextpdf.layout.Document.flush()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff050Test.isFontValid()
com.itextpdf.kernel.xmp.XMPDateTime.getYear()
com.itextpdf.signatures.sign.PdfSignatureAppearanceTest.textAutoscaleTest04()
com.itextpdf.pdfa.PdfA1ActionCheckTest.actionCheck11()
com.itextpdf.kernel.pdf.PdfReader.readArray(boolean)
com.itextpdf.layout.hyphenation.HyphenationTree.loadPatterns(InputStream,String)
com.itextpdf.kernel.pdf.StampingProperties.preserveEncryption()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff136Test.getFontName()
com.itextpdf.kernel.log.CounterFactory.getCounter()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff133Test.getFontName()
com.itextpdf.kernel.pdf.canvas.parser.listener.SimpleTextExtractionStrategy.eventOccurred(IEventData,EventType)
com.itextpdf.io.image.TiffImageHelper.decodePackbits(byte,byte)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff056Test.getFontName()
com.itextpdf.layout.TableTest.tableSplitTest01()
com.itextpdf.io.source.FileChannelRandomAccessSource.close()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff026Test.getTestInfo()
com.itextpdf.kernel.pdf.PdfReaderTest.correctSimpleDoc3()
com.itextpdf.kernel.xmp.XMPSchemaRegistry.deleteNamespace(String)
com.itextpdf.layout.ImageTest.imageTest05()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff114Test.getFontName()
com.itextpdf.kernel.pdf.PdfCatalog.addDeveloperExtension(PdfDeveloperExtension)
com.itextpdf.io.codec.Jbig2SegmentReader.toString()
com.itextpdf.kernel.pdf.PdfAnnotationTest.fileAttachmentTest()
com.itextpdf.kernel.pdf.PdfDocument.addCustomMetadataExtensions(XMPMeta)
com.itextpdf.kernel.pdf.PdfObjectTest.pdtIndirectReferenceLateInitializing3()
com.itextpdf.layout.ElementPropertyContainer.setFont(PdfFont)
com.itextpdf.io.font.TrueTypeFont.readGposTable()
com.itextpdf.kernel.pdf.PdfEncryptionTest.getPrivateKey()
com.itextpdf.layout.AutoTaggingTest.tableTest03()
com.itextpdf.kernel.pdf.PdfArray.copyTo(PdfDocument)
com.itextpdf.signatures.PdfSignature.setContents(byte)
com.itextpdf.kernel.pdf.canvas.parser.clipper.PolyNode.getNextSiblingUp()
com.itextpdf.kernel.pdf.PdfTextArray.add(String)
com.itextpdf.layout.Canvas.getPdfDocument()
com.itextpdf.layout.renderer.AbstractRenderer.getOwnProperty(int)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Path.getBottomPt()
com.itextpdf.pdfa.checker.PdfA1Checker.checkFont(PdfFont)
com.itextpdf.io.image.ImageData.getFilter()
com.itextpdf.pdfa.PdfAFontTest.compareResult(String,String)
com.itextpdf.forms.fields.PdfFormField.createPushButton(PdfDocument,Rectangle,String,String,PdfFont,int)
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.setInReplyTo(PdfAnnotation)
com.itextpdf.io.font.CFFFont.set(int)
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.removeRendererChild(int)
com.itextpdf.layout.StylesTest.stylesTest01()
com.itextpdf.kernel.geom.Subpath.getPiecewiseLinearApproximation()
com.itextpdf.layout.renderer.AccessibleAttributesApplier.transformNumberingTypeToName(ListNumberingType)
com.itextpdf.barcodes.BarcodeDataMatrix.valuePositionInColumn(int,int,int)
com.itextpdf.layout.property.Background.getExtraTop()
com.itextpdf.layout.PositioningTest.fixedPositioningTest04()
com.itextpdf.pdfa.checker.PdfA2Checker.checkSeparationCS(PdfArray)
com.itextpdf.io.source.PdfTokenizer.nextValidToken()
com.itextpdf.barcodes.BarcodeDataMatrix.setWidth(int)
com.itextpdf.io.util.SystemUtil.getPropertyOrEnvironmentVariable(String)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.curveTo(double,double,double,double,double,double)
com.itextpdf.forms.xfa.InverseStore.getDefaultName()
com.itextpdf.kernel.xmp.impl.XMPDateTimeImpl.getMinute()
com.itextpdf.kernel.pdf.PdfCanvasTest.colorTest02()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff067Test.getTestInfo()
com.itextpdf.layout.renderer.TableRenderer.split(int,boolean)
com.itextpdf.layout.ElementPropertyContainer.setBackgroundColor(Color,float)
com.itextpdf.pdfa.PdfA2CanvasCheckTest.canvasCheckTest2()
com.itextpdf.layout.font.FontSelector.getFonts()
com.itextpdf.layout.renderer.AbstractRenderer.applyDestination(PdfDocument)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setAppearance(PdfName,PdfDictionary)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationChecksum002Test.getTestInfo()
com.itextpdf.kernel.pdf.PdfReader.length()
com.itextpdf.kernel.pdf.canvas.parser.HighlightItemsTest.highlightCharactersHeaderFooter()
com.itextpdf.layout.ImageTest.flushOnDrawTest()
com.itextpdf.kernel.pdf.PdfString.setHexWriting(boolean)
com.itextpdf.io.image.TiffTest.openTiff5()
com.itextpdf.kernel.pdf.PdfResources.setDefaultGray(PdfColorSpace)
com.itextpdf.kernel.xmp.impl.xpath.XMPPathSegment.getName()
com.itextpdf.layout.element.ILargeElement.flushContent()
com.itextpdf.kernel.xmp.XMPMeta.setStructField(String,String,String,String,String)
com.itextpdf.kernel.pdf.PdfDocument.hasOutlines()
com.itextpdf.forms.FormFieldAppendTest.flatten(String,String)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setHalftone(PdfObject)
com.itextpdf.layout.OpacityTest.paraElementOpacity01()
com.itextpdf.kernel.xmp.impl.XMPNodeUtils.chooseLocalizedText(XMPNode,String,String)
com.itextpdf.io.font.woff2.w3c.format.Valid008Test.isFontValid()
com.itextpdf.kernel.utils.TaggedPdfReaderTool.parseTag(PdfMcr)
com.itextpdf.kernel.pdf.PdfPage.getAnnotations()
com.itextpdf.layout.font.FontSetCollection.iterator()
com.itextpdf.kernel.pdf.canvas.parser.listener.FilteredTextEventListener.getResultantText()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Paths.getBounds()
com.itextpdf.kernel.pdf.PdfReaderTest.getMemoryUse()
com.itextpdf.layout.hyphenation.HyphenationTree.calcForeWordsSize(List,int)
com.itextpdf.kernel.pdf.PdfLiteral.toString()
com.itextpdf.io.font.otf.OpenTypeFontTableReader.readTagAndLocations(int)
com.itextpdf.io.font.cmap.CMapObject.isName()
com.itextpdf.layout.minmaxwidth.RotationMinMaxWidth.getMinWidthOrigin()
com.itextpdf.barcodes.BarcodePDF417.getBarcodeSize()
com.itextpdf.io.font.Pfm2afm.puttrailer()
com.itextpdf.io.source.RandomAccessFileOrArray.readUnsignedInt()
com.itextpdf.layout.element.LineSeparator.setRole(PdfName)
com.itextpdf.kernel.pdf.PdfObject.getIndirectReference()
com.itextpdf.io.image.ImageData.setImageAttributes(Map)
com.itextpdf.kernel.xmp.options.Options.setOption(int,boolean)
com.itextpdf.io.font.CFFFontSubset.CreateNewStringIndex(int)
com.itextpdf.layout.renderer.AbstractRenderer.resolveFirstPdfFont()
com.itextpdf.kernel.pdf.xobject.PdfImageXObject.findColorspace(PdfObject,boolean)
com.itextpdf.kernel.crypto.securityhandler.PubKeySecurityHandler.getEncodedRecipient(int)
com.itextpdf.layout.renderer.EmptyNestedTableTest.beforeClass()
com.itextpdf.kernel.pdf.PdfDictionary.values(boolean)
com.itextpdf.layout.ElementPropertyContainer.setWidth(UnitValue)
com.itextpdf.kernel.xmp.options.PropertyOptions.setQualifier(boolean)
com.itextpdf.io.source.IndependentRandomAccessSource.get(long)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getFontSize()
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.getCurrentPage()
com.itextpdf.kernel.pdf.PdfPage.newContentStream(boolean)
com.itextpdf.kernel.pdf.action.PdfAction.createSound(PdfStream)
com.itextpdf.signatures.SignatureUtil.getSignature(String)
com.itextpdf.kernel.pdf.collection.PdfCollectionItem.isWrappedObjectMustBeIndirect()
com.itextpdf.kernel.pdf.PdfReaderTest.getTestPdfDictionary()
com.itextpdf.kernel.pdf.PdfFontTest.createDocumentWithTrueTypeOtfFont()
com.itextpdf.barcodes.qrcode.GF256Poly.divide(GF256Poly)
com.itextpdf.barcodes.BarcodeEAN.createAwtImage(java,awt,Color,java,awt,Color)
com.itextpdf.kernel.pdf.PdfReaderTest.appendModeWith1000Pages()
com.itextpdf.io.font.otf.GposLookupType4.readSubTable(int)
com.itextpdf.test.ITextTest.readFile(String)
com.itextpdf.kernel.pdf.annot.PdfLineAnnotation.getContentsAsCaption()
com.itextpdf.layout.ImageTest.imageWithMinMaxHeightTest01()
com.itextpdf.io.image.Jbig2ImageData.canImageBeInline()
com.itextpdf.kernel.pdf.canvas.wmf.MetaDo.getArc(float,float,float,float)
com.itextpdf.signatures.SignaturePolicyInfo.toSignaturePolicyIdentifier()
com.itextpdf.io.codec.brotli.dec.EnumTest.testRunningState()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getHorizontalScaling()
com.itextpdf.kernel.geom.Matrix.equals(Object)
com.itextpdf.kernel.font.PdfFont.checkTrueTypeFontDictionary(PdfDictionary,boolean)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.setHorizontalScaling(float)
com.itextpdf.kernel.geom.IShape.getBasePoints()
com.itextpdf.forms.PdfAcroForm.setCalculationOrder(PdfArray)
com.itextpdf.signatures.SignUtils.readAllCerts(byte)
com.itextpdf.layout.hyphenation.TernaryTree.redimNodeArrays(int)
com.itextpdf.kernel.crypto.ARCFOUREncryption.encryptARCFOUR(byte,int,int,byte,int)
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingStandard40.setSpecificHandlerDicEntries(PdfDictionary,boolean,boolean)
com.itextpdf.signatures.CertificateInfo.getSubject(byte)
com.itextpdf.io.image.PngImageHelper.checkMarker(String)
com.itextpdf.io.font.FontProgramFactory.clearRegisteredFonts()
com.itextpdf.kernel.pdf.colorspace.PdfPattern.setShading(com,itextpdf,kernel,pdf,colorspace,PdfShading)
com.itextpdf.forms.xfa.XfaForm.setDomDocument(org,w3c,dom,Document)
com.itextpdf.kernel.utils.CompareTool.compareVisually(String,String,String,String)
com.itextpdf.layout.OverflowTest.textOverflowTest02()
com.itextpdf.kernel.pdf.PdfOutline.setStyle(int)
com.itextpdf.test.WrappedSamplesRunner.getClassNamesRecursively(File,String,RunnerSearchConfig)
com.itextpdf.kernel.pdf.PdfArray.indexOf(PdfObject)
com.itextpdf.kernel.pdf.PdfNumTree.addEntry(Integer,PdfObject)
com.itextpdf.kernel.pdf.PdfAnnotationTest.screenTestExternalWavFile()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff038Test.isFontValid()
com.itextpdf.layout.renderer.ILeafElementRenderer.getAscent()
com.itextpdf.kernel.pdf.PdfObject.flush()
com.itextpdf.io.font.woff2.w3c.format.DirectoryTableOrder002Test.getFontName()
com.itextpdf.io.font.FontProgramFactory.createFont()
com.itextpdf.layout.element.Cell.toString()
com.itextpdf.kernel.xmp.options.SerializeOptions.clone()
com.itextpdf.signatures.PdfSigner.processCrl(Certificate,Collection)
com.itextpdf.kernel.pdf.filters.LZWDecoder.decode(byte,OutputStream)
com.itextpdf.test.ITextTest.createStringByEscaped(byte)
com.itextpdf.layout.renderer.RootRenderer.layout(LayoutContext)
com.itextpdf.kernel.geom.Rectangle.setY(float)
com.itextpdf.io.font.woff2.w3c.format.TabledataBrotli001Test.getFontName()
com.itextpdf.kernel.xmp.XMPDateTimeFactory.create()
com.itextpdf.io.util.TextUtil.convertFromUtf32(int,int,int)
com.itextpdf.kernel.pdf.canvas.draw.DashedLine.draw(PdfCanvas,Rectangle)
com.itextpdf.layout.renderer.FloatingHelper.getBoxesAtYLevel(List,float)
com.itextpdf.layout.OpacityTest.listElementOpacity01()
com.itextpdf.io.font.FontCacheKey.create(byte,int)
com.itextpdf.layout.minmaxwidth.RotationMinMaxWidth.calculate(double,double,MinMaxWidth,double)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff067Test.isFontValid()
com.itextpdf.io.font.FontProgramFactory.createFont(byte,boolean)
com.itextpdf.io.font.AdobeGlyphList.nameToUnicode(String)
com.itextpdf.io.font.woff2.w3c.format.TabledataTransformGlyfLoca001Test.getFontName()
com.itextpdf.kernel.pdf.xobject.PdfTransparencyGroup.put(PdfName,PdfObject)
com.itextpdf.layout.renderer.AbstractRenderer.updateWidth(UnitValue)
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperBridge.convertToPath(PolyTree)
com.itextpdf.kernel.utils.PdfSplitter.getPageByOutline(int,PdfOutline)
com.itextpdf.kernel.pdf.PdfCanvasTest.colorTest04()
com.itextpdf.io.image.PngImageHelper.setPixel(byte,int,int,int,int,int,int,int)
com.itextpdf.layout.BlockTest.borderRadiusTest01()
com.itextpdf.io.codec.brotli.dec.HuffmanTreeGroup.decode(HuffmanTreeGroup,BitReader)
com.itextpdf.kernel.pdf.XMPMetadataTest.createEmptyDocumentWithAbcXmp()
com.itextpdf.layout.renderer.ImageWidthTest.imageWidthTest02()
com.itextpdf.kernel.pdf.PdfReaderTest.pagesTest02()
com.itextpdf.layout.FloatTest.floatingTwoImages()
com.itextpdf.pdfa.PdfA2GraphicsCheckTest.colorCheckTest7()
com.itextpdf.kernel.pdf.PdfDocument.copyPagesTo(int,int,PdfDocument,int,IPdfPageExtraCopier)
com.itextpdf.layout.TableBorderTest.tableWithHeaderFooterTest06B()
com.itextpdf.signatures.testutils.builder.TestOcspResponseBuilder.setThisUpdate(Calendar)
com.itextpdf.io.font.otf.OpenTypeGdefTableReader.readTable()
com.itextpdf.io.source.RandomAccessFileOrArray.readIntLE()
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperBase.parseFirstLeft(Path,OutRec)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.doSetArrayItem(XMPNode,int,String,PropertyOptions,boolean)
com.itextpdf.kernel.pdf.canvas.parser.data.PathRenderInfo.isPathModifiesClippingPath()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff043Test.getTestInfo()
com.itextpdf.layout.renderer.LineRenderer.getLeadingValue(Leading)
com.itextpdf.io.font.TrueTypeFont.getDirectoryOffset()
com.itextpdf.layout.renderer.MaxSumWidthHandler.updateMinChildWidth(float)
com.itextpdf.layout.LocationTextExtractionStrategyTest.test01()
com.itextpdf.kernel.pdf.PdfPrimitivesTest.generatePdfArrayWithBooleans(PdfDocument,boolean)
com.itextpdf.kernel.pdf.PdfArray.set(int,PdfObject)
com.itextpdf.kernel.xmp.impl.XMPSchemaRegistryImpl.registerNamespace(String,String)
com.itextpdf.forms.fields.PdfFormField.createMultilineText(PdfDocument,Rectangle,String,String,PdfFont,float)
com.itextpdf.kernel.pdf.PdfCanvasTest.createSimpleCanvasWithPageFlushAndFullCompression()
com.itextpdf.layout.Style.getPaddingLeft()
com.itextpdf.io.codec.Base64.read()
com.itextpdf.kernel.pdf.PdfNull.newInstance()
com.itextpdf.layout.TableBorderTest.tableWithHeaderFooterTest13()
com.itextpdf.io.codec.TIFFFaxDecompressor.findNextLine()
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperBase.reset()
com.itextpdf.layout.ImageTest.imageInTableTest01()
com.itextpdf.kernel.pdf.PdfReader.getPermissions()
com.itextpdf.signatures.SignaturePermissions.getAction()
com.itextpdf.kernel.xmp.options.IteratorOptions.setJustLeafname(boolean)
com.itextpdf.io.font.TrueTypeFont.getKerning(Glyph,Glyph)
com.itextpdf.layout.property.Transform.addSingleTransform(SingleTransform)
com.itextpdf.barcodes.BarcodePDF417.setCode(byte)
com.itextpdf.io.codec.brotli.dec.BitReader.close(BitReader)
com.itextpdf.layout.AutoTaggingTest.textInParagraphTest01()
com.itextpdf.io.font.OpenTypeParser.getHheaTable()
com.itextpdf.kernel.pdf.PdfIndirectReference.copyContent(PdfObject,PdfDocument)
com.itextpdf.pdfa.PdfA2AnnotationCheckTest.annotationCheckTest05()
com.itextpdf.kernel.xmp.XMPPathFactory.assertFieldNS(String)
com.itextpdf.kernel.xmp.impl.ByteBuffer.charAt(int)
com.itextpdf.layout.minmaxwidth.MinMaxWidthUtils.countDefaultMinMaxWidth(IRenderer,float)
com.itextpdf.io.font.woff2.w3c.format.Valid007Test.isFontValid()
com.itextpdf.io.font.woff2.w3c.format.Valid007Test.getFontName()
com.itextpdf.layout.hyphenation.Hyphenation.getHyphenationPoints()
com.itextpdf.layout.renderer.TableRenderer.createSplitRenderer(Table,RowRange)
com.itextpdf.signatures.PdfPKCS7.signCertificateChain()
com.itextpdf.kernel.font.PdfFont.getDescent(int,float)
com.itextpdf.layout.hyphenation.Hyphenator.hyphenate(String)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setFlatnessTolerance(float)
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.removeTag()
com.itextpdf.kernel.utils.TaggedPdfReaderToolTest.setUp()
com.itextpdf.io.font.FontNames.getFullName()
com.itextpdf.kernel.geom.Point.hashCode()
com.itextpdf.layout.property.TransparentColor.getOpacity()
com.itextpdf.layout.renderer.TableRenderer.applyPaddings(Rectangle,float,boolean)
com.itextpdf.layout.Canvas.enableAutoTagging(PdfPage)
com.itextpdf.kernel.utils.PageRangeTest.addCustomAfterConstructor()
com.itextpdf.kernel.pdf.PdfReader.readObject(PdfIndirectReference)
com.itextpdf.kernel.pdf.tagutils.BackedAccessibleProperties.setActualText(String)
com.itextpdf.kernel.pdf.PdfString.getEncoding()
com.itextpdf.pdfa.checker.PdfAChecker.checkResourcesOfAppearanceStreams(PdfDictionary)
com.itextpdf.io.font.otf.ContextualSubstRule.getBacktrackContextLength()
com.itextpdf.kernel.pdf.PdfDictionary.getAsStream(PdfName)
com.itextpdf.kernel.xmp.impl.ByteBuffer.getByteStream()
com.itextpdf.io.font.otf.OtfReadCommon.readSubstLookupRecords(RandomAccessFileOrArray,int)
com.itextpdf.kernel.pdf.PdfCanvasTest.gifImageTest02()
com.itextpdf.barcodes.Barcode128.createAwtImage(java,awt,Color,java,awt,Color)
com.itextpdf.kernel.pdf.PdfEncryptor.isCopyAllowed(int)
com.itextpdf.io.image.BmpImageHelper.findShift(int)
com.itextpdf.io.source.OutputStream.writeNewLine()
com.itextpdf.barcodes.BarcodePDF417.getMaxSquare()
com.itextpdf.barcodes.Barcode1D.setX(float)
com.itextpdf.kernel.pdf.PdfReader.readObject(boolean)
com.itextpdf.layout.ImageTest.imageTest08()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.closePathStroke()
com.itextpdf.kernel.pdf.PdfDocument.getFileId(PdfObject,WriterProperties)
com.itextpdf.kernel.pdf.PdfDocument.setCloseWriter(boolean)
com.itextpdf.io.codec.TIFFLZWDecoder.getNextCode()
com.itextpdf.kernel.xmp.XMPMetaFactory.serialize(XMPMeta,OutputStream)
com.itextpdf.kernel.font.FontUtil.processToUnicode(PdfObject)
com.itextpdf.io.font.otf.GsubLookupType1.transformOne(GlyphLine)
com.itextpdf.io.font.woff2.w3c.format.TabledataLocaSize001Test.getTestInfo()
com.itextpdf.io.font.cmap.CMapByteCid.addChar(String,CMapObject)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationLocaFormat001Test.getTestInfo()
com.itextpdf.forms.fields.PdfFormField.getAppearanceStates()
com.itextpdf.kernel.pdf.PdfDocumentTest.addUnusedObjectsInStampingModeTest()
com.itextpdf.kernel.pdf.TagTreePointerTest.tagStructureRemovingTest02()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff119Test.getTestInfo()
com.itextpdf.layout.renderer.FloatingHelper.includeChildFloatsInOccupiedArea(List,IRenderer)
com.itextpdf.kernel.pdf.PdfArray.toLongArray()
com.itextpdf.io.font.TrueTypeFontSubset.locaToBytes()
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.getColor(PdfColorSpace,List,PdfResources)
com.itextpdf.io.image.ImageDataFactory.isSupportedType(byte)
com.itextpdf.barcodes.Barcode39.getChecksum(String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff095Test.getTestInfo()
com.itextpdf.kernel.pdf.PdfOutputStream.write(PdfObject)
com.itextpdf.kernel.pdf.PdfArray.get(int)
com.itextpdf.kernel.xmp.options.ParseOptions.getRequireXMPMeta()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.doesQualifierExist(String,String,String,String)
com.itextpdf.layout.TextWritingTest.underlineTest()
com.itextpdf.signatures.TSAClientBouncyCastle.getTimeStampToken(byte)
com.itextpdf.pdfa.checker.PdfA2Checker.checkPdfStream(PdfStream)
com.itextpdf.kernel.pdf.PdfPage.getOutlines(boolean)
com.itextpdf.kernel.pdf.colorspace.PdfSpecialCs.flush()
com.itextpdf.kernel.pdf.tagging.PdfStructElem.addKid(PdfStructElem)
com.itextpdf.kernel.pdf.action.PdfTargetDictionary.getPage()
com.itextpdf.kernel.crypto.securityhandler.PubSecHandlerUsingAes128.getDecryptor()
com.itextpdf.layout.property.UnitValue.setValue(float)
com.itextpdf.kernel.pdf.layer.PdfLayerMembership.getLayers()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Point.setX(T)
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.transformY(int)
com.itextpdf.layout.PositioningTest.fixedPositioningTest03()
com.itextpdf.kernel.xmp.XMPMeta.deleteStructField(String,String,String,String)
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.addTag(IAccessibleElement,boolean)
com.itextpdf.kernel.pdf.colorspace.PdfShading.getColorSpace()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff144Test.getFontName()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.iterator(IteratorOptions)
com.itextpdf.kernel.font.PdfType0Font.appendAnyGlyph(String,int,List)
com.itextpdf.barcodes.Barcode128.setCodeSet(Barcode128CodeSet)
com.itextpdf.kernel.pdf.function.PdfFunction.makeFunction(PdfDictionary)
com.itextpdf.io.image.ImageData.getDecodeParms()
com.itextpdf.io.font.FontMetrics.getMaxGlyphId()
com.itextpdf.kernel.xmp.impl.XMPIteratorImpl.iterateChildren(Iterator)
com.itextpdf.layout.element.Table.isComplete()
com.itextpdf.layout.TableBorderTest.splitCellsTest09()
com.itextpdf.layout.element.Table.setSkipFirstHeader(boolean)
com.itextpdf.kernel.pdf.PdfDictionary.keySet()
com.itextpdf.kernel.pdf.PdfOutlineTest.setupUpdateOutlineTitle()
com.itextpdf.kernel.pdf.PdfCatalog.getPageLayout()
com.itextpdf.layout.element.AreaBreak.getType()
com.itextpdf.layout.renderer.ParagraphRenderer.drawChildren(DrawContext)
com.itextpdf.io.font.cmap.CMapParser.parseCid(String,AbstractCMap,ICMapLocation)
com.itextpdf.layout.renderer.CollapsedTableBorders.getBottomBorderCollapseWith()
com.itextpdf.pdfa.PdfAFlushingTest.flushingTest01()
com.itextpdf.kernel.font.PdfFontFactory.register(String,String)
com.itextpdf.signatures.PdfSignature.setReason(String)
com.itextpdf.io.font.Type1Parser.getAfmPath()
com.itextpdf.io.image.ImageData.isInverted()
com.itextpdf.io.codec.TIFFFaxDecoder.decodeT6(byte,byte,int,int,long)
com.itextpdf.io.font.FontEncoding.fillNamedEncoding()
com.itextpdf.forms.fields.PdfFormField.setDefaultAppearance(String)
com.itextpdf.kernel.pdf.PdfDictionary.put(PdfName,PdfObject)
com.itextpdf.kernel.pdf.PdfWriterTest.validateUseObjectForMultipleTimesTest(String)
com.itextpdf.io.image.BmpImageHelper.readDWord(InputStream)
com.itextpdf.kernel.pdf.PdfStream.getCompressionLevel()
com.itextpdf.kernel.pdf.WriterProperties.setPdfVersion(PdfVersion)
com.itextpdf.io.codec.PngWriter.update_crc(int,byte,int,int)
com.itextpdf.io.source.ByteBufferRandomAccessSource.run()
com.itextpdf.io.image.TiffTest.openTiff6()
com.itextpdf.layout.IPropertyContainer.getDefaultProperty(int)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Path.getLowerMostRec(OutRec,OutRec)
com.itextpdf.signatures.LtvVerifier.verifySignature()
com.itextpdf.layout.font.FontSelectorCache.put(FontSelectorKey,FontSelector,FontSet)
com.itextpdf.layout.hyphenation.HyphenationTreeCache.constructLlccKey(String,String)
com.itextpdf.io.font.PdfEncodings.isPdfDocEncoding(String)
com.itextpdf.layout.renderer.ImageRenderer.getMatrix(AffineTransform,float,float)
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6.getMatchingContextRule(GlyphLine)
com.itextpdf.kernel.pdf.PdfDocument.copyPagesTo(int,int,PdfDocument,int)
com.itextpdf.pdfa.checker.PdfAChecker.checkStructure(PdfAConformanceLevel)
com.itextpdf.io.font.woff2.w3c.format.TabledataGlyfCompositeBbox001Test.getTestInfo()
com.itextpdf.forms.xfa.Xml2Som.getName2Node()
com.itextpdf.kernel.pdf.PdfReaderTest.pagesTest09()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.doesPropertyExist(String,String)
com.itextpdf.kernel.pdf.PdfDocument.addFileAttachment(String,byte,String,PdfName,PdfDictionary,PdfName)
com.itextpdf.io.font.otf.GlyphLine.size()
com.itextpdf.signatures.PdfSignatureAppearance.getLayer2()
com.itextpdf.barcodes.BarcodePDF417.createFormXObject(Color,float,float,PdfDocument)
com.itextpdf.forms.fields.PdfFormField.createText(PdfDocument,Rectangle,String,String)
com.itextpdf.layout.renderer.BlockRenderer.createRotationTransformInsideOccupiedArea()
com.itextpdf.layout.renderer.AreaBreakRenderer.getOwnProperty(int)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Point.slopesEqual(LongPoint,LongPoint,LongPoint,LongPoint,boolean)
com.itextpdf.forms.fields.PdfFormField.generateDefaultAppearanceString(PdfFont,float,Color,PdfResources)
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.registerXObjectDoHandler(PdfName,IXObjectDoHandler)
com.itextpdf.io.codec.brotli.dec.SynthTest.decompress(byte)
com.itextpdf.kernel.geom.Path.addSubpath(Subpath)
com.itextpdf.layout.ImageTest.imageRelativePositionTest()
com.itextpdf.io.font.otf.ContextualSubTable.checkIfContextMatch(GlyphLine,ContextualSubstRule)
com.itextpdf.io.image.ImageData.setRotation(float)
com.itextpdf.kernel.pdf.PdfPage.getFirstContentStream()
com.itextpdf.forms.fields.PdfFormField.getValueAsString()
com.itextpdf.kernel.pdf.PdfEncryptionTest.encryptWithCertificateStandard128()
com.itextpdf.layout.renderer.TextRenderer.length()
com.itextpdf.layout.RootElement.setProperty(int,Object)
com.itextpdf.kernel.pdf.PdfDocument.flushFonts()
com.itextpdf.layout.TableTest.tableWithCustomRendererTest01()
com.itextpdf.kernel.pdf.filters.RunLengthDecodeFilter.decode(byte,PdfName,PdfObject,PdfDictionary)
com.itextpdf.forms.fields.PdfFormField.getDefaultStyle()
com.itextpdf.barcodes.BarcodeDataMatrixTest.barcode06Test()
com.itextpdf.layout.renderer.LineRenderer.processDefaultTab(IRenderer,float,float)
com.itextpdf.kernel.pdf.PdfWriter.setDebugMode()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.setArrayItem(String,String,int,String)
com.itextpdf.kernel.pdf.PdfViewerPreferences.setPickTrayByPDFSize(boolean)
com.itextpdf.layout.renderer.TextRenderer.getAscent()
com.itextpdf.kernel.pdf.action.PdfAction.createGoToE(PdfFileSpec,PdfDestination,boolean,PdfTargetDictionary)
com.itextpdf.forms.fields.PdfFormField.makeFieldFlag(int)
com.itextpdf.kernel.pdf.PdfDictionaryValues.clear()
com.itextpdf.signatures.sign.SigningTest.simpleSigningTest()
com.itextpdf.barcodes.qrcode.GF256Poly.toString()
com.itextpdf.io.codec.TIFFDirectory.getFieldAsDouble(int)
com.itextpdf.io.source.ByteUtils.getIsoBytes(double,ByteBuffer)
com.itextpdf.kernel.utils.PdfSplitter.splitByOutline(String)
com.itextpdf.forms.fields.PdfFormField.setCheckType(int)
com.itextpdf.layout.renderer.FloatingHelper.calculateMinMaxWidthForFloat(AbstractRenderer,FloatPropertyValue)
com.itextpdf.io.source.PdfTokenizer.getDecodedStringContent()
com.itextpdf.layout.renderer.LineRenderer.updateChildrenParent()
com.itextpdf.kernel.utils.PdfMergerTest.beforeClass()
com.itextpdf.signatures.PdfSigner.getSignatureDictionary()
com.itextpdf.kernel.pdf.collection.PdfCollection.setView(int)
com.itextpdf.kernel.pdf.colorspace.PdfPattern.setYStep(float)
com.itextpdf.kernel.geom.Path.getSubpaths()
com.itextpdf.kernel.pdf.annot.PdfTextMarkupAnnotation.createStrikeout(Rectangle,float)
com.itextpdf.kernel.pdf.PdfArray.isEmpty()
com.itextpdf.io.font.cmap.AbstractCMap.getName()
com.itextpdf.layout.border.DashedBorder.getDotsGap(double,float)
com.itextpdf.io.font.woff2.w3c.format.Valid006Test.getFontName()
com.itextpdf.io.color.IccProfile.getInstance(String)
com.itextpdf.kernel.pdf.navigation.PdfExplicitDestination.createFitH(PdfPage,float)
com.itextpdf.layout.renderer.CollapsedTableBorders.applyTopTableBorder(Rectangle,Rectangle,boolean,boolean,boolean)
com.itextpdf.layout.renderer.DocumentRenderer.updateCurrentArea(LayoutResult)
com.itextpdf.io.font.otf.Glyph.hasPlacement()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.newPath()
com.itextpdf.kernel.utils.TaggedPdfReaderTool.convertToXml(OutputStream,String)
com.itextpdf.layout.renderer.ImageRenderer.adjustPositionAfterRotation(float,float,float)
com.itextpdf.kernel.pdf.canvas.parser.listener.DefaultPdfTextLocation.setPageNr(int)
com.itextpdf.kernel.pdf.PdfDictionary.containsKey(PdfName)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.getResources()
com.itextpdf.signatures.PdfSignature.getCert()
com.itextpdf.kernel.pdf.PdfDictionaryTest.testValuesRemoveAll()
com.itextpdf.kernel.xmp.impl.XMPNodeUtils.deleteNode(XMPNode)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.getHTP()
com.itextpdf.kernel.pdf.colorspace.PdfPattern.getShading()
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.setLineJoinRectangle(PdfCanvas)
com.itextpdf.barcodes.BarcodePDF417.getLenCodewords()
com.itextpdf.layout.ImageTest.imageWithBordersSurroundedByTextTest()
com.itextpdf.kernel.pdf.canvas.parser.listener.CharacterRenderInfo.getBoundingBox()
com.itextpdf.kernel.pdf.PdfAnnotationTest.screenTestEmbeddedWavFile01()
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.getPopupObject()
com.itextpdf.io.codec.brotli.dec.DecodeTest.testUtils()
com.itextpdf.barcodes.qrcode.BitVector.appendBitVector(BitVector)
com.itextpdf.kernel.xmp.XMPMetaFactory.parseFromString(String)
com.itextpdf.barcodes.Barcode1D.isGuardBars()
com.itextpdf.kernel.pdf.tagging.StructureTreeCopier.cloneParents(PdfDictionary,LastClonedAncestor,PdfDocument)
com.itextpdf.kernel.pdf.canvas.wmf.MetaBrush.getHatch()
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingStandard40.initKeyAndFillDictionary(PdfDictionary,byte,byte,int,boolean,boolean,byte)
com.itextpdf.kernel.pdf.tagging.PdfStructElem.getAlt()
com.itextpdf.io.font.CFFFont.xref()
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.throwExceptionIfCurrentPageIsNotInited()
com.itextpdf.kernel.pdf.PdfDate.isWrappedObjectMustBeIndirect()
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperBase.isPreserveCollinear()
com.itextpdf.kernel.pdf.PdfDictionary.getAsNumber(PdfName)
com.itextpdf.signatures.PdfPKCS7.getDigestEncryptionAlgorithmOid()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff051Test.isFontValid()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.getPt()
com.itextpdf.layout.RotationTest.tableRotationTest02()
com.itextpdf.io.font.otf.Glyph.getWidth()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff064Test.isFontValid()
com.itextpdf.layout.renderer.IRenderer.getOccupiedArea()
com.itextpdf.kernel.pdf.PdfCatalog.getDocument()
com.itextpdf.kernel.crypto.securityhandler.PubKeySecurityHandler.createDERForRecipient(byte,X509Certificate)
com.itextpdf.kernel.pdf.tagging.PdfStructTreeRoot.flushAllKids(IPdfStructElem)
com.itextpdf.io.font.FontRegisterProvider.registerFont(String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff008Test.isFontValid()
com.itextpdf.io.font.FontRegisterProvider.registerStandardFonts()
com.itextpdf.kernel.pdf.PdfDictionary.containsValue(PdfObject)
com.itextpdf.layout.TableBorderTest.borderCollapseTest02()
com.itextpdf.kernel.events.PdfDocumentEvent.getPage()
com.itextpdf.layout.hyphenation.HyphenationTreeCache.noteMissing(String)
com.itextpdf.forms.xfa.XfaForm.fillXfaForm(File,boolean)
com.itextpdf.kernel.pdf.PdfReaderTest.pagesTest01()
com.itextpdf.layout.renderer.AbstractRenderer.getLastYLineRecursively()
com.itextpdf.kernel.pdf.PdfCatalog.setViewerPreferences(PdfViewerPreferences)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.minkowskiSum(Path,Paths,boolean)
com.itextpdf.kernel.pdf.ByteBufferOutputStream.reset()
com.itextpdf.kernel.pdf.annot.PdfPolyGeomAnnotation.setVertices(PdfArray)
com.itextpdf.layout.renderer.AbstractRenderer.getOccupiedArea()
com.itextpdf.kernel.pdf.collection.PdfCollection.isWrappedObjectMustBeIndirect()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.resetFlag(int)
com.itextpdf.kernel.xmp.options.SerializeOptions.getValidOptions()
com.itextpdf.pdfa.PdfAFontTest.fontCheckPdfA1_03()
com.itextpdf.kernel.pdf.PdfStampingTest.verifyPdfPagesCount(PdfObject)
com.itextpdf.kernel.pdf.canvas.wmf.InputMeta.readShort()
com.itextpdf.io.font.woff2.w3c.format.HeaderReserved001Test.isFontValid()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff113Test.getFontName()
com.itextpdf.io.font.FontEncoding.canEncode(int)
com.itextpdf.io.codec.brotli.dec.HuffmanTreeGroup.init(HuffmanTreeGroup,int,int)
com.itextpdf.io.source.PdfTokenizer.getLongValue()
com.itextpdf.barcodes.BarcodeEANSUPP.getBarcodeSize()
com.itextpdf.layout.hyphenation.Hyphen.toString()
com.itextpdf.io.font.OpenTypeParser.readFormat4(boolean)
com.itextpdf.io.codec.LZWStringTable.Hash(short,byte)
com.itextpdf.forms.xfa.InverseStore.isSimilar(String)
com.itextpdf.kernel.pdf.canvas.parser.HighlightItemsTest.setUp()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.arc(double,double,double,double,double,double)
com.itextpdf.kernel.xmp.XMPPathFactory.composeStructFieldPath(String,String)
com.itextpdf.kernel.pdf.ByteBufferOutputStream.write(int)
com.itextpdf.io.codec.brotli.dec.BitReaderTest.testReadAfterEos()
com.itextpdf.layout.font.FontInfo.getFontNamesFromCache(FontCacheKey)
com.itextpdf.layout.renderer.TextRenderer.getGlyphLineWidth(GlyphLine,float,float,Float,Float)
com.itextpdf.forms.fields.PdfFormField.drawPdfA1CheckAppearance(float,float,String,int)
com.itextpdf.io.codec.PngWriter.writeChunk(byte,byte)
com.itextpdf.kernel.pdf.PdfArray.toString()
com.itextpdf.kernel.xmp.XMPPathFactory.composeLangSelector(String,String)
com.itextpdf.kernel.pdf.xobject.PdfImageXObject.createPdfStream(ImageData,PdfImageXObject)
com.itextpdf.layout.element.Table.addFooterCell(Cell)
com.itextpdf.pdfa.checker.PdfA2Checker.checkPageObject(PdfDictionary,PdfDictionary)
com.itextpdf.kernel.pdf.annot.PdfLinkAnnotation.setAction(PdfAction)
com.itextpdf.kernel.xmp.XMPMeta.getPropertyDate(String,String)
com.itextpdf.kernel.pdf.PdfIndirectReference.getObjNumber()
com.itextpdf.kernel.pdf.annot.PdfWidgetAnnotation.setVisibility(int)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getSmoothnessTolerance()
com.itextpdf.kernel.xmp.impl.ParseRDF.fixupQualifiedNode(XMPNode)
com.itextpdf.kernel.pdf.PdfXrefTable.get(int)
com.itextpdf.layout.font.FontInfo.calculateHashCode(String,byte,String)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.flush()
com.itextpdf.io.font.FontProgram.getFontIdentification()
com.itextpdf.io.source.OutputStream.reset()
com.itextpdf.layout.renderer.AbstractRenderer.initElementAreas(LayoutArea)
com.itextpdf.kernel.pdf.tagging.StructureTreeCopier.copyTo(PdfDocument,int,Map,PdfDocument)
com.itextpdf.kernel.pdf.PdfFontTest.testUpdateCjkFontBasedExistingFont()
com.itextpdf.layout.TableBorderTest.forcedPlacementTest01()
com.itextpdf.kernel.font.PdfType0Font.getUniMapFromOrdering(String)
com.itextpdf.kernel.xmp.impl.XMPNode.next()
com.itextpdf.kernel.pdf.annot.Pdf3DAnnotation.setDefaultInitialView(PdfObject)
com.itextpdf.io.font.FontProgram.setRegistry(String)
com.itextpdf.io.codec.TIFFFaxDecompressor.decodeT6()
com.itextpdf.test.LogListener.append(ILoggingEvent)
com.itextpdf.io.image.GifImageHelper.readColorTable(int,GifParameters)
com.itextpdf.signatures.sign.SigningTest.getTestMap(Rectangle)
com.itextpdf.kernel.font.PdfTrueTypeFont.flush()
com.itextpdf.kernel.pdf.PdfEncryption.flush()
com.itextpdf.io.source.PagedChannelRandomAccessSource.getStartingSourceIndex(long)
com.itextpdf.kernel.pdf.PdfCanvasTest.gifImageTest01()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff070Test.isFontValid()
com.itextpdf.signatures.sign.PadesSigTest.signApproval(String,String,SignaturePolicyIdentifier)
com.itextpdf.layout.element.Table.useAllAvailableWidth()
com.itextpdf.layout.renderer.CollapsedTableBorders.applyCellIndents(Rectangle,float,float,float,float,boolean)
com.itextpdf.io.util.StreamUtil.inputStreamToArray(InputStream)
com.itextpdf.layout.FloatTest.floatDivTest03()
com.itextpdf.barcodes.Barcode39.getCode39Ex(String)
com.itextpdf.io.image.ImageDataFactory.create(java,awt,Image,java,awt,Color,boolean)
com.itextpdf.kernel.xmp.XMPDateTime.getHour()
com.itextpdf.io.image.BmpImageHelper.processImage(ImageData)
com.itextpdf.layout.renderer.TableWidths.fixedLayout()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff109Test.getFontName()
com.itextpdf.kernel.pdf.PdfStream.newInstance()
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.getInReplyToObject()
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.readObject(ObjectInputStream)
com.itextpdf.layout.BlockTest.blockWithSetHeightProperties02()
com.itextpdf.kernel.pdf.PdfArray.getAsStream(int)
com.itextpdf.signatures.PdfSigner.getWidgetPageNumber(PdfWidgetAnnotation)
com.itextpdf.layout.KeepWithNextTest.keepWithNextTest02()
com.itextpdf.io.font.otf.OtfClass.create(RandomAccessFileOrArray,int)
com.itextpdf.kernel.xmp.impl.XMPNode.setAlias(boolean)
com.itextpdf.layout.renderer.CollapsedTableBorders.fixHeaderOccupiedArea(Rectangle,Rectangle)
com.itextpdf.layout.font.FontSet.addFont(FontInfo)
com.itextpdf.io.font.FontProgramDescriptorFactory.fetchDescriptor(FontProgram)
com.itextpdf.barcodes.Barcode128Test.beforeClass()
com.itextpdf.io.source.RASInputStream.read(byte,int,int)
com.itextpdf.io.source.PdfTokenizer.readLineSegment(ByteBuffer,boolean)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff014Test.isFontValid()
com.itextpdf.kernel.xmp.options.PropertyOptions.isSchemaNode()
com.itextpdf.kernel.pdf.colorspace.PdfShading.getVerticesPerRow()
com.itextpdf.io.font.CFFFontSubset.PushStack()
com.itextpdf.kernel.utils.PdfSplitterTest.getNextPdfWriter(PageRange)
com.itextpdf.layout.font.FontSet.addFont(byte,String,String)
com.itextpdf.io.font.FontNames.listToArray(List)
com.itextpdf.kernel.pdf.PdfDictionaryTest.testEntrySetClear()
com.itextpdf.kernel.xmp.impl.XMPNode.dumpNode(boolean)
com.itextpdf.kernel.pdf.PdfPages.addPages(PdfPages)
com.itextpdf.io.font.cmap.CMapContentParser.parse(List)
com.itextpdf.signatures.PdfPKCS7.verifySigAttributes(byte)
com.itextpdf.kernel.pdf.PdfOutline.addAction(PdfAction)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.closePathEoFillStroke()
com.itextpdf.io.image.PngImageHelper.getString(InputStream)
com.itextpdf.kernel.pdf.colorspace.PdfPattern.setTilingType(int)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Edge.isHorizontal()
com.itextpdf.kernel.pdf.PdfResources.addPattern(PdfPattern)
com.itextpdf.io.color.IccProfile.getInstance(byte)
com.itextpdf.layout.FloatTest.floatParagraphTest01()
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.isReversedChars()
com.itextpdf.io.font.OpenTypeParser.getGlyphWidth(int)
com.itextpdf.io.image.JpegTest.openJpeg1()
com.itextpdf.kernel.pdf.PdfReader.hasFixedXref()
com.itextpdf.kernel.pdf.PdfCanvasTest.gifImageTest04()
com.itextpdf.kernel.pdf.PdfWriterTest.closeStream1()
com.itextpdf.kernel.pdf.PdfFontTest.testSplitString()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff044Test.getFontName()
com.itextpdf.signatures.LtvVerification.updateDss()
com.itextpdf.barcodes.BarcodePostnet.fitWidth(float)
com.itextpdf.io.font.otf.GlyphLine.setActualText(int,int,String)
com.itextpdf.kernel.pdf.PdfAnnotationTest.addFreeTextAnnotation01()
com.itextpdf.barcodes.BarcodePDF417.setLenCodewords(int)
com.itextpdf.layout.renderer.TableRenderer.drawBackground(DrawContext)
com.itextpdf.io.codec.brotli.dec.SynthTest.testBaseDictWordFinishBlockOnRingbufferWrap()
com.itextpdf.io.util.HashCode.combine(int,long)
com.itextpdf.io.image.Jbig2ImageHelper.processImage(ImageData)
com.itextpdf.io.font.woff2.w3c.format.BlocksMetadataPadding003Test.getFontName()
com.itextpdf.signatures.PdfSignatureAppearance.setLayer2FontSize(float)
com.itextpdf.layout.TableTest.bigFooterTest02()
com.itextpdf.kernel.pdf.PdfObjectStream.getSize()
com.itextpdf.kernel.pdf.PdfCanvasTest.colorTest03()
com.itextpdf.layout.IPropertyContainer.hasProperty(int)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.getAppearanceState()
com.itextpdf.forms.fields.PdfFormField.getAlternativeName()
com.itextpdf.kernel.font.PdfType0Font.convertToBytes(Glyph,ByteBuffer)
com.itextpdf.io.image.ImageData.setDeflated(boolean)
com.itextpdf.io.image.TiffImageHelper.processImage(ImageData)
com.itextpdf.layout.renderer.AbstractRenderer.isAbsolutePosition()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationLocaFormat002Test.isFontValid()
com.itextpdf.io.font.OpenTypeParser.readOs_2Table()
com.itextpdf.io.font.woff2.w3c.format.BlocksExtraneousData003Test.isFontValid()
com.itextpdf.io.font.CFFFont.emit(byte)
com.itextpdf.pdfa.PdfA2CanvasCheckTest.canvasCheckTest3()
com.itextpdf.io.util.StreamUtil.createBufferedEscapedString(byte)
com.itextpdf.kernel.pdf.canvas.parser.HighlightItemsTest.highlightCharactersIsoTc171()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff152Test.getFontName()
com.itextpdf.kernel.pdf.PdfXObjectTest.beforeClass()
com.itextpdf.io.font.otf.OpenTypeFontTableReader.getSpecificFeatures(List,String)
com.itextpdf.forms.fields.PdfChoiceFormField.setListSelected(int)
com.itextpdf.forms.fields.PdfFormField.drawCheckAppearance(float,float,String)
com.itextpdf.layout.font.FontInfo.create(String,String,String)
com.itextpdf.kernel.utils.PdfSplitter.splitByOutlines(List)
com.itextpdf.signatures.IExternalSignature.sign(byte)
com.itextpdf.kernel.utils.TaggedPdfReaderTool.getSupportedEvents()
com.itextpdf.kernel.pdf.PdfDictionaryTest.testEntrySetContains()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff150Test.isFontValid()
com.itextpdf.io.font.CFFFontSubset.AssembleIndex(int,byte)
com.itextpdf.barcodes.BarcodeEAN.getBarsSupplemental5(String)
com.itextpdf.io.codec.Jbig2SegmentReader.readHeader()
com.itextpdf.layout.renderer.AbstractRenderer.transformPoints(List,AffineTransform)
com.itextpdf.kernel.xmp.XMPMetaFactory.parseFromBuffer(byte)
com.itextpdf.layout.BlockTest.overflowTest03()
com.itextpdf.io.codec.PngWriter.outputInt(int,OutputStream)
com.itextpdf.kernel.events.EventDispatcher.addEventHandler(String,IEventHandler)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getMiterLimit()
com.itextpdf.kernel.pdf.PdfStampingTest.stampingVersionTest01()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Path.orientation()
com.itextpdf.layout.LargeElementTest.largeTableWithHeaderFooterTest01C()
com.itextpdf.io.source.PagedChannelRandomAccessSource.buildSources(FileChannel,int)
com.itextpdf.kernel.pdf.PdfPrimitivesTest.equalNames()
com.itextpdf.layout.Canvas.getRootArea()
com.itextpdf.signatures.PdfSigner.getUnderlyingSource()
com.itextpdf.layout.ListTest.listItemTest01()
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getText()
com.itextpdf.io.image.RawImageData.isRawImage()
com.itextpdf.kernel.xmp.impl.XMPSerializerRDF.declareUsedNamespaces(XMPNode,Set,int)
com.itextpdf.io.codec.brotli.dec.DecodeTest.testMonkey()
com.itextpdf.layout.border.RoundDotsBorder.getDotsGap(double,float)
com.itextpdf.kernel.font.PdfType3Font.setFontMatrix(double)
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.firstChildMarginAdjoinedToParent(IRenderer)
com.itextpdf.io.image.GifImageHelper.readLSD(GifParameters)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff148Test.isFontValid()
com.itextpdf.layout.renderer.FloatingHelper.removeFloatsAboveRendererBottom(List,IRenderer)
com.itextpdf.kernel.pdf.PdfDestinationTest.destCopyingTest01()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.iteratorToList(Iterator)
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.markedContentNotInPageStream()
com.itextpdf.kernel.pdf.tagutils.TagReference.removeProperty(PdfName)
com.itextpdf.pdfa.checker.PdfAChecker.checkResources(PdfDictionary)
com.itextpdf.barcodes.qrcode.ReedSolomonEncoder.encode(int,int)
com.itextpdf.layout.renderer.TableWidths.calculateMinMaxWidths()
com.itextpdf.layout.renderer.TableRenderer.calculateColumnWidths(float)
com.itextpdf.kernel.utils.PdfSplitter.getAbsoluteTreeNextOutline(PdfOutline)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff077Test.isFontValid()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff068Test.getFontName()
com.itextpdf.io.source.RandomAccessFileOrArray.readLongLE()
com.itextpdf.kernel.geom.Point.getLocation()
com.itextpdf.layout.hyphenation.HyphenationTree.getWordFromCharArray(char,int,int)
com.itextpdf.barcodes.qrcode.BitVector.appendByte(int)
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperOffset.execute(PolyTree,double)
com.itextpdf.kernel.xmp.options.PropertyOptions.isStruct()
com.itextpdf.kernel.font.Type3Glyph.isColor()
com.itextpdf.io.font.FontNames.isExtended()
com.itextpdf.pdfa.PdfA2GraphicsCheckTest.egsCheckTest2()
com.itextpdf.kernel.pdf.PdfEncryption.isOpenedWithFullPermission()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setQuadPoints(PdfArray)
com.itextpdf.kernel.xmp.impl.XMPDateTimeImpl.hasTime()
com.itextpdf.test.RunnerSearchConfig.addClassToRunnerSearchPath(String)
com.itextpdf.layout.hyphenation.HyphenationTreeCache.isMissing(String)
com.itextpdf.layout.layout.LayoutResult.getSplitRenderer()
com.itextpdf.io.font.otf.ContextualSubstRule.getLookaheadContextLength()
com.itextpdf.pdfa.PdfA2AnnotationCheckTest.beforeClass()
com.itextpdf.forms.fields.PdfFormField.setFieldFlags(int)
com.itextpdf.kernel.pdf.tagutils.BackedAccessibleProperties.setLanguage(String)
com.itextpdf.io.source.ArrayRandomAccessSource.close()
com.itextpdf.layout.renderer.TextRenderer.getCharWidth(Glyph,float,Float,Float,Float)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.buildIntersectList(long)
com.itextpdf.io.font.woff2.Woff2Dec.storeLoca(int,int,Woff2Out)
com.itextpdf.io.font.cmap.CMapToUnicode.lookup(int)
com.itextpdf.layout.renderer.BlockRenderer.applyBordersPaddingsMargins(Rectangle,Border,float)
com.itextpdf.signatures.ProviderDigest.getMessageDigest(String)
com.itextpdf.layout.element.BlockElement.setMargin(float)
com.itextpdf.io.util.FileUtil.listAllFiles(String,List)
com.itextpdf.layout.element.BlockElement.setRotationAngle(double)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.execute(ClipType,PolyTree)
com.itextpdf.kernel.font.PdfFont.getFontProgram()
com.itextpdf.kernel.xmp.XmlDomWriter.sortAttributes(NamedNodeMap)
com.itextpdf.layout.hyphenation.HyphenationTree.findPattern(String)
com.itextpdf.signatures.SignUtils.getSignatureHelper(String,String)
com.itextpdf.forms.xfa.Xml2Som.setName2Node(Map)
com.itextpdf.io.util.HashCode.append(Object)
com.itextpdf.kernel.pdf.PdfLiteral.equals(Object)
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.processPageContent(PdfPage)
com.itextpdf.pdfa.PdfA2CatalogCheckTest.catalogCheck01()
com.itextpdf.kernel.pdf.action.PdfAction.setAdditionalAction(PdfObjectWrapper,PdfName,PdfAction)
com.itextpdf.kernel.pdf.collection.PdfCollectionSort.isWrappedObjectMustBeIndirect()
com.itextpdf.pdfa.PdfA1AnnotationCheckTest.annotationCheckTest01()
com.itextpdf.layout.AlignmentTest.justifyAlignmentTest02()
com.itextpdf.layout.TabsTest.anchorTabStopsTest02()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.curveFromTo(double,double,double,double)
com.itextpdf.io.font.FontProgramDescriptorFactory.fetchTrueTypeFontDescriptor(String)
com.itextpdf.signatures.sign.PadesSignatureLevelTest.padesSignatureLevelLTTest01()
com.itextpdf.kernel.geom.AffineTransform.isIdentity()
com.itextpdf.kernel.pdf.PdfReaderTest.fixPdfTest01()
com.itextpdf.io.codec.Base64.encode3to4(byte,int,int,byte,int,int)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.getSoftMask()
com.itextpdf.barcodes.BarcodeDataMatrix.asciiEncodation(byte,int,int,byte,int,int,int,int,int)
com.itextpdf.kernel.pdf.PdfObject.clearState(short)
com.itextpdf.kernel.pdf.collection.PdfCollection.getInitialDocument()
com.itextpdf.layout.LinkTest.rotatedLinkInnerRotation()
com.itextpdf.io.font.FontMetrics.setStrikeoutSize(int)
com.itextpdf.kernel.pdf.PdfPage.flush(boolean)
com.itextpdf.io.source.PdfTokenizer.getHeaderOffset()
com.itextpdf.kernel.pdf.PdfXrefTable.ensureCount(int)
com.itextpdf.kernel.geom.MatrixTest.testMultiply()
com.itextpdf.kernel.pdf.PdfStampingTest.stampingAppend11()
com.itextpdf.io.font.FontProgramFactory.createFontCacheKey(String,byte)
com.itextpdf.kernel.xmp.options.SerializeOptions.setExactPacketLength(boolean)
com.itextpdf.barcodes.Barcode1D.getCode()
com.itextpdf.layout.element.List.add(ListItem)
com.itextpdf.signatures.LtvVerification.getSignatureHashKey(String)
com.itextpdf.layout.ElementPropertyContainer.setFontKerning(FontKerning)
com.itextpdf.kernel.pdf.action.PdfRendition.flush()
com.itextpdf.forms.xfa.Xml2Som.getShortName(String)
com.itextpdf.io.font.FontProgramDescriptorFactory.fetchDescriptor(String)
com.itextpdf.kernel.pdf.canvas.parser.FilteredTextEventListenerTest.textIsInRectangle(PdfDocument,String,Rectangle)
com.itextpdf.kernel.events.EventDispatcher.readObject(ObjectInputStream)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff084Test.getFontName()
com.itextpdf.kernel.pdf.colorspace.PdfDeviceCs.getNumberOfComponents()
com.itextpdf.layout.font.FontSet.addFont(byte,String)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setStrokeOpacity(float)
com.itextpdf.layout.renderer.BlockRenderer.correctPositionedLayout(Rectangle)
com.itextpdf.barcodes.BarcodePDF417.setAspectRatio(float)
com.itextpdf.barcodes.qrcode.Mode.getName()
com.itextpdf.kernel.xmp.XMPMeta.getProperty(String,String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff095Test.isFontValid()
com.itextpdf.forms.PdfFormCopyTest.copyFieldsTest07()
com.itextpdf.kernel.xmp.XMPDateTime.getNanoSecond()
com.itextpdf.kernel.pdf.tagging.PdfStructElem.removeKid(int)
com.itextpdf.signatures.CrlClientOnline.getEncoded(X509Certificate,String)
com.itextpdf.kernel.pdf.filespec.PdfFileSpec.setCollectionItem(PdfCollectionItem)
com.itextpdf.kernel.pdf.PdfImageXObjectTest.testMultiStageFilters()
com.itextpdf.layout.renderer.RootRenderer.updateCurrentAndInitialArea(LayoutResult)
com.itextpdf.io.image.TiffImageData.getNumberOfPages(RandomAccessFileOrArray)
com.itextpdf.kernel.font.PdfSimpleFont.decode(PdfString)
com.itextpdf.kernel.xmp.impl.XMPNode.getQualifierLength()
com.itextpdf.layout.LocationTextExtractionStrategyTest.testSuperscript()
com.itextpdf.kernel.pdf.PdfNumber.setValue(int)
com.itextpdf.pdfa.PdfA2AnnotationCheckTest.annotationCheckTest06()
com.itextpdf.io.font.woff2.w3c.format.HeaderLength002Test.getTestInfo()
com.itextpdf.layout.renderer.TableBorders.getWidestHorizontalBorder(int,int,int)
com.itextpdf.kernel.pdf.PdfDocument.checkIsoConformance()
com.itextpdf.kernel.xmp.impl.XMPUtilsImpl.separateArrayItems(XMPMeta,String,String,String,PropertyOptions,boolean)
com.itextpdf.layout.renderer.AbstractRenderer.hasOwnOrModelProperty(IRenderer,int)
com.itextpdf.forms.fields.PdfButtonFormField.isRadio()
com.itextpdf.kernel.pdf.PdfPage.getContentBytes()
com.itextpdf.kernel.pdf.PdfCopyTest.copying1()
com.itextpdf.layout.hyphenation.TernaryTree.strlen(char)
com.itextpdf.layout.font.FontInfo.getEncoding()
com.itextpdf.kernel.pdf.canvas.parser.clipper.PolyTree.getAllPolys()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getFillColor()
com.itextpdf.layout.CollapsingMarginsTest.drawPageBorders(PdfDocument,int)
com.itextpdf.kernel.pdf.PdfDocument.copyOutlines(Set,PdfDocument,Map)
com.itextpdf.io.codec.TIFFFaxDecompressor.nextNBits(int)
com.itextpdf.io.image.TiffImageData.getImage(byte,boolean,int,boolean)
com.itextpdf.kernel.pdf.PdfBoolean.copyTo(PdfDocument,boolean)
com.itextpdf.io.codec.TIFFField.getAsLong(int)
com.itextpdf.layout.TableBorderTest.tableWithHeaderFooterTest04()
com.itextpdf.signatures.PdfPKCS7.setLocation(String)
com.itextpdf.io.source.ArrayRandomAccessSource.length()
com.itextpdf.forms.fields.PdfFormField.setAction(PdfAction)
com.itextpdf.layout.element.BlockElement.setKeepWithNext(boolean)
com.itextpdf.layout.TableTest.simpleTableTest17()
com.itextpdf.layout.hyphenation.ByteVector.put(int,byte)
com.itextpdf.io.font.otf.Glyph.setYPlacement(short)
com.itextpdf.kernel.pdf.PdfString.equals(Object)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff004Test.getFontName()
com.itextpdf.kernel.pdf.PdfPage.getDocument()
com.itextpdf.io.source.RandomAccessFileOrArray.read(byte,int,int)
com.itextpdf.layout.renderer.TableRenderer.layout(LayoutContext)
com.itextpdf.kernel.pdf.PdfDocument.addFileAttachment(String,PdfFileSpec)
com.itextpdf.layout.SimpleTextExtractionStrategyTest.testTrailingSpace()
com.itextpdf.kernel.pdf.PdfOutline.removeOutline()
com.itextpdf.barcodes.Barcode128.isNextDigits(String,int,int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff150Test.getFontName()
com.itextpdf.signatures.PdfPKCS7.setSignDate(Calendar)
com.itextpdf.barcodes.qrcode.Version.getVersionForNumber(int)
com.itextpdf.kernel.pdf.annot.PdfLineAnnotation.getLeaderLine()
com.itextpdf.io.codec.TIFFDirectory.isBigEndian()
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingStandard40.getDecryptor()
com.itextpdf.layout.KeepWithNextTest.keepWithNextTest05()
com.itextpdf.io.image.ImageData.setXYRatio(float)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff081Test.isFontValid()
com.itextpdf.io.font.Pfm2afm.putheader()
com.itextpdf.layout.element.ILargeElement.isComplete()
com.itextpdf.layout.ColumnDocumentRenderer.getNextRenderer()
com.itextpdf.kernel.utils.CompareTool.compareXmp(String,String,boolean)
com.itextpdf.kernel.crypto.IVGenerator.getIV()
com.itextpdf.layout.font.FontSet.getId()
com.itextpdf.io.image.TiffImageData.setOriginalType(ImageType)
com.itextpdf.kernel.pdf.canvas.parser.PdfDocumentContentParser.processContent(int,E,Map)
com.itextpdf.kernel.xmp.impl.XMPSchemaRegistryImpl.getPrefixes()
com.itextpdf.kernel.xmp.impl.ISO8601Converter.render(XMPDateTime)
com.itextpdf.kernel.utils.PageRangeTest.addSingles()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff110Test.isFontValid()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff005Test.getTestInfo()
com.itextpdf.pdfa.checker.PdfAChecker.checkPdfObject(PdfObject)
com.itextpdf.kernel.pdf.PdfName.copyTo(PdfDocument)
com.itextpdf.io.font.otf.OtfClass.getOtfClass(int,boolean)
com.itextpdf.io.image.JpegTest.openJpeg6()
com.itextpdf.signatures.CertificateVerification.verifyCertificates(Certificate,KeyStore,Collection,Calendar)
com.itextpdf.layout.layout.TextLayoutResult.setWordHasBeenSplit(boolean)
com.itextpdf.kernel.pdf.PdfFontTest.kozminNames()
com.itextpdf.layout.margincollapse.MarginsCollapseInfo.getCollapseAfter()
com.itextpdf.kernel.xmp.impl.XMPDateTimeImpl.setHour(int)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.setLocalizedText(String,String,String,String,String)
com.itextpdf.io.color.IccProfile.getIccNumberOfComponents(byte)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.setPropertyDate(String,String,XMPDateTime)
com.itextpdf.barcodes.qrcode.FormatInformation.hashCode()
com.itextpdf.kernel.pdf.PdfOutputIntent.setOutputConditionIdentifier(String)
com.itextpdf.forms.fields.PdfFormField.setFontSizeAutoScale()
com.itextpdf.layout.ImageTest.imageTest01()
com.itextpdf.barcodes.qrcode.GF256.multiply(int,int)
com.itextpdf.kernel.xmp.impl.XMPNodeUtils.lookupQualSelector(XMPNode,String,String,int)
com.itextpdf.kernel.pdf.PdfPagesTree.getParents()
com.itextpdf.pdfa.checker.PdfA1Checker.checkForm(PdfDictionary)
com.itextpdf.forms.fields.PdfFormField.applyRotation(PdfFormXObject,float,float)
com.itextpdf.io.font.woff2.Woff2Dec.reconstructTransformedHmtx(byte,int,int,int,int,short,Woff2Out)
com.itextpdf.layout.Document.getLeftMargin()
com.itextpdf.kernel.pdf.PdfWriter.flushWaitingObjects()
com.itextpdf.io.font.FontProgramFactory.registerFontDirectory(String)
com.itextpdf.layout.AutoTaggingTest.tableTest07()
com.itextpdf.kernel.xmp.impl.XMPNormalizer.migrateAudioCopyright(XMPMeta,XMPNode)
com.itextpdf.io.font.TrueTypeCollection.isCached()
com.itextpdf.layout.ImageTest.imageTest15()
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.determineColorSpace(PdfName,PdfCanvasProcessor)
com.itextpdf.layout.hyphenation.TernaryTree.insert(char,char,int,char)
com.itextpdf.layout.ElementPropertyContainer.setFont(String)
com.itextpdf.io.source.RandomAccessFileOrArray.readDoubleLE()
com.itextpdf.layout.renderer.AbstractRenderer.getPaddings(IRenderer)
com.itextpdf.io.font.woff2.Round.round4(int)
com.itextpdf.kernel.geom.Point.getY()
com.itextpdf.kernel.pdf.colorspace.PdfDeviceCs.isWrappedObjectMustBeIndirect()
com.itextpdf.kernel.pdf.canvas.parser.GlyphTextEventListenerTest.test02()
com.itextpdf.kernel.log.Counter.onDocumentWritten(long)
com.itextpdf.pdfa.checker.PdfA3Checker.checkFileSpec(PdfDictionary)
com.itextpdf.kernel.xmp.impl.xpath.XMPPathParser.parseRootNode(String,PathPosition,XMPPath)
com.itextpdf.io.codec.TiffWriter.writeValue(OutputStream)
com.itextpdf.layout.Document.getPdfDocument()
com.itextpdf.signatures.PdfPKCS7.getTimeStampToken()
com.itextpdf.kernel.pdf.PdfEncryptor.encrypt(PdfReader,OutputStream,EncryptionProperties,Map)
com.itextpdf.kernel.pdf.canvas.parser.ParserGraphicsState.clip(Path,int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff096Test.getFontName()
com.itextpdf.kernel.pdf.ByteBufferOutputStream.formatDouble(double)
com.itextpdf.layout.TableBorderTest.tableWithHeaderFooterTest11()
com.itextpdf.io.font.CMapEncoding.isDirect()
com.itextpdf.kernel.font.PdfType0Font.appendUniGlyphs(String,int,int,List)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setUndercolorRemovalFunction(PdfObject)
com.itextpdf.forms.fields.PdfFormField.createChoice(PdfDocument,Rectangle,String,String,PdfArray,int)
com.itextpdf.signatures.testutils.SignTestPortUtil.generateCertificateId(X509Certificate,BigInteger,AlgorithmIdentifier)
com.itextpdf.kernel.pdf.tagging.PdfStructElem.getLang()
com.itextpdf.io.util.IntHashtable.toOrderedKeys()
com.itextpdf.io.font.CFFFontSubset.BuildNewCharString(int)
com.itextpdf.kernel.color.Color.getColorValue()
com.itextpdf.kernel.pdf.canvas.parser.listener.IPdfTextLocation.getText()
com.itextpdf.layout.Document.add(AreaBreak)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setTextRenderingMode(int)
com.itextpdf.layout.Document.checkClosingStatus()
com.itextpdf.io.codec.TIFFField.getCount()
com.itextpdf.kernel.pdf.PdfString.newInstance()
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.getRichText()
com.itextpdf.io.util.TextUtil.isSurrogateHigh(char)
com.itextpdf.kernel.pdf.PdfWriter.flushModifiedWaitingObjects()
com.itextpdf.io.font.woff2.w3c.format.BlocksPrivate001Test.isFontValid()
com.itextpdf.kernel.pdf.PdfStampingTest.stamping11()
com.itextpdf.io.image.BmpImageHelper.read4Bit(int,BmpParameters)
com.itextpdf.kernel.numbering.GreekAlphabetNumbering.toGreekAlphabetNumber(int,boolean)
com.itextpdf.io.codec.TiffWriter.compressLZW(OutputStream,int,byte,int,int,int)
com.itextpdf.kernel.pdf.canvas.parser.ParserGraphicsState.transformClippingPath(Matrix)
com.itextpdf.kernel.font.PdfType0Font.flushFontData()
com.itextpdf.forms.FormFieldsTaggingTest.formFieldTaggingTest07()
com.itextpdf.io.font.OpenTypeParser.readHeadTable()
com.itextpdf.kernel.crypto.OutputStreamEncryption.write(byte)
com.itextpdf.barcodes.BarcodeDataMatrix.createFormXObject(Color,PdfDocument)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.openTag(CanvasTag)
com.itextpdf.layout.Canvas.getPage()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.getContents()
com.itextpdf.kernel.pdf.PdfDocument.dispatchEvent(com,itextpdf,kernel,events,Event)
com.itextpdf.layout.AlignmentTest.beforeClass()
com.itextpdf.kernel.pdf.layer.PdfLayer.setName(String)
com.itextpdf.layout.renderer.AbstractRenderer.getRootRenderer()
com.itextpdf.layout.TableBorderTest.simpleBorderTest02()
com.itextpdf.io.font.cmap.CMapLocationFromBytes.getLocation(String)
com.itextpdf.layout.renderer.CollapsedTableBorders.updateBordersOnNewPage(boolean,boolean,TableRenderer,TableRenderer,TableRenderer)
com.itextpdf.signatures.EncryptionAlgorithms.getAlgorithm(String)
com.itextpdf.pdfa.PdfA2AcroFormCheckTest.beforeClass()
com.itextpdf.forms.xfa.XFAFormTest.beforeClass()
com.itextpdf.io.codec.TIFFFaxDecompressor.updatePointer(int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff010Test.getFontName()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff076Test.getTestInfo()
com.itextpdf.io.font.FontProgramDescriptor.getFullNameLowerCase()
com.itextpdf.kernel.pdf.PdfEncryptor.encrypt(PdfReader,OutputStream,EncryptionProperties)
com.itextpdf.layout.renderer.CollapsedTableBorders.getCollapsedBorder(Border,Border)
com.itextpdf.kernel.pdf.PdfFontTest.createDocumentWithStSongUni()
com.itextpdf.layout.element.List.getSymbolIndent()
com.itextpdf.kernel.pdf.PdfReader.close()
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.setRichText(PdfObject)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff025Test.getTestInfo()
com.itextpdf.kernel.xmp.options.SerializeOptions.getOmitXmpMetaElement()
com.itextpdf.kernel.font.PdfFontFactory.createType3Font(PdfDocument,boolean)
com.itextpdf.kernel.pdf.PdfDashPattern.getPhase()
com.itextpdf.kernel.crypto.IDecryptor.finish()
com.itextpdf.kernel.pdf.tagging.PdfStructTreeRoot.getParent()
com.itextpdf.kernel.pdf.colorspace.PdfSpecialCs.getNames()
com.itextpdf.layout.LocationTextExtractionStrategyTest.testYPosition()
com.itextpdf.forms.fields.PdfFormField.setAdditionalAction(PdfName,PdfAction)
com.itextpdf.kernel.pdf.PdfStampingTest.stampingVersionTest02()
com.itextpdf.io.font.cmap.CMapToUnicode.addChar(String,CMapObject)
com.itextpdf.kernel.xmp.options.SerializeOptions.setIncludeThumbnailPad(boolean)
com.itextpdf.signatures.PdfSigner.setCertificationLevel(int)
com.itextpdf.layout.element.Table.getHeader()
com.itextpdf.layout.renderer.CollapsedTableBorders.buildBordersArrays(CellRenderer,int,int,int)
com.itextpdf.signatures.OcspClientBouncyCastle.getOcspResponse(X509Certificate,X509Certificate,String)
com.itextpdf.signatures.DigestAlgorithms.getAllowedDigest(String)
com.itextpdf.kernel.pdf.PdfXObjectTest.createDocumentWithForms()
com.itextpdf.io.source.PdfTokenizer.decodeStringContent(byte,boolean)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Paths.makePolyTreeToPaths(PolyTree)
com.itextpdf.io.image.PngImageHelper.getPixel(byte,int,int,int,int)
com.itextpdf.layout.RotationTest.divRotationTest02()
com.itextpdf.io.codec.TIFFDirectory.getFields()
com.itextpdf.pdfa.PdfA1AnnotationCheckTest.annotationCheckTest02()
com.itextpdf.kernel.xmp.XMPMeta.setPropertyBoolean(String,String,boolean,PropertyOptions)
com.itextpdf.kernel.pdf.annot.PdfStampAnnotation.getStampName()
com.itextpdf.kernel.pdf.PdfStampingTest.stamping4()
com.itextpdf.signatures.PdfSignature.getReason()
com.itextpdf.kernel.pdf.PdfDocument.close()
com.itextpdf.kernel.pdf.action.PdfTargetDictionary.createChildTarget(int,int)
com.itextpdf.kernel.utils.CompareTool.prepareOutputDirs(String,String)
com.itextpdf.kernel.font.PdfType3Font.getGlyph(int)
com.itextpdf.io.codec.brotli.dec.SynthTest.testClClTreeExcess()
com.itextpdf.layout.ElementPropertyContainer.setFixedPosition(int,float,float,float)
com.itextpdf.io.image.RawImageHelper.updateRawImageParameters(RawImageData,int,int,int,int,byte)
com.itextpdf.io.font.CFFFont.getOffset(int)
com.itextpdf.kernel.pdf.PdfReader.readPdf()
com.itextpdf.io.font.woff2.Buffer.getInitialOffset()
com.itextpdf.layout.font.FontSelector.characteristicsSimilarity(String,FontCharacteristics,FontInfo)
com.itextpdf.layout.renderer.MinWidthTest.toEffectiveWidth(IBlockElement,float)
com.itextpdf.io.font.cmap.ICMapLocation.getLocation(String)
com.itextpdf.kernel.pdf.PdfDictionary.makeIndirect(PdfDocument)
com.itextpdf.kernel.font.PdfFont.getWidth(int,float)
com.itextpdf.pdfa.PdfA2GraphicsCheckTest.egsCheckTest1()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setColor(PdfArray)
com.itextpdf.layout.renderer.ImageRenderer.draw(DrawContext)
com.itextpdf.io.image.GifImageHelper.readHeader(GifParameters)
com.itextpdf.io.util.IntHashtable.getOneKey()
com.itextpdf.kernel.xmp.impl.XMPNodeUtils.findChildNode(XMPNode,String,boolean)
com.itextpdf.io.font.Type1Font.process()
com.itextpdf.kernel.pdf.tagging.PdfStructTreeRoot.isWrappedObjectMustBeIndirect()
com.itextpdf.kernel.pdf.PdfPrimitivesTest.primitivesBooleanTest()
com.itextpdf.barcodes.BarcodeCodabar.getBarsCodabar(String)
com.itextpdf.kernel.pdf.PdfLiteral.getType()
com.itextpdf.kernel.pdf.collection.PdfCollectionField.isWrappedObjectMustBeIndirect()
com.itextpdf.layout.renderer.ParagraphRenderer.getFirstYLineRecursively()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff012Test.getTestInfo()
com.itextpdf.kernel.pdf.WriterProperties.setFullCompressionMode(boolean)
com.itextpdf.layout.RootElement.showTextAligned(Paragraph,float,float,TextAlignment,VerticalAlignment)
com.itextpdf.kernel.pdf.PdfReaderTest.pagesTest06()
com.itextpdf.forms.fields.PdfTextFormField.isScroll()
com.itextpdf.kernel.pdf.PdfPage.newContentStreamAfter()
com.itextpdf.layout.SimpleTextExtractionStrategyTest.testWordSpacingCausedByExplicitGlyphPositioning()
com.itextpdf.kernel.pdf.PdfArray.makeIndirect(PdfDocument)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff097Test.isFontValid()
com.itextpdf.io.font.FontProgramFactory.createType1Font(byte,byte)
com.itextpdf.layout.property.IListSymbolFactory.createSymbol(int,IPropertyContainer,IPropertyContainer)
com.itextpdf.kernel.pdf.XMPMetadataTest.removeAlwaysDifferentEntries(byte)
com.itextpdf.layout.renderer.TableWidths.addPercents(float)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setLineCapStyle(int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff029Test.getFontName()
com.itextpdf.io.font.IExtraEncoding.charToByte(char,String)
com.itextpdf.signatures.verify.OcspVerifierTest.validOcspTest01()
com.itextpdf.signatures.CertificateUtil.getStringFromGeneralName(ASN1Primitive)
com.itextpdf.kernel.utils.PageRangeTest.addSinglesConstructor()
com.itextpdf.kernel.xmp.impl.XMPNodeUtils.setNodeValue(XMPNode,Object)
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.hasMcid(int)
com.itextpdf.kernel.xmp.XMPUtils.convertFromDate(XMPDateTime)
com.itextpdf.kernel.pdf.PdfReaderTest.appendModeWith1000PagesWithCompression()
com.itextpdf.kernel.pdf.xobject.PdfTransparencyGroup.setColorSpace(PdfArray)
com.itextpdf.layout.element.TabStop.setTabAlignment(TabAlignment)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.getRolloverAppearanceObject()
com.itextpdf.layout.renderer.TextRenderer.split(int)
com.itextpdf.layout.TableTest.emptyTableTest01()
com.itextpdf.forms.PdfAcroForm.setGenerateAppearance(boolean)
com.itextpdf.barcodes.BarcodePDF417.outCodeword18(int)
com.itextpdf.kernel.pdf.PdfWriter.write(int)
com.itextpdf.kernel.xmp.impl.XMPNode.remove()
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.compare(ITextChunkLocation,ITextChunkLocation)
com.itextpdf.io.codec.TIFFField.getAsLongs()
com.itextpdf.kernel.pdf.PdfXrefTable.writeKeyInfo(PdfWriter)
com.itextpdf.layout.renderer.ImageWidthTest.beforeClass()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setCharacterSpacing(float)
com.itextpdf.kernel.pdf.tagging.PdfMcr.getParent()
com.itextpdf.kernel.pdf.function.PdfFunction.isWrappedObjectMustBeIndirect()
com.itextpdf.io.font.FontNames.getStyle()
com.itextpdf.pdfa.PdfAFontTest.symbolicTtfCharEncodingsPdfA1Test03()
com.itextpdf.io.font.OpenTypeParser.getGlyphWidthsByIndex()
com.itextpdf.layout.splitting.DefaultSplitCharacters.isSplitCharacter(GlyphLine,int)
com.itextpdf.forms.fields.PdfFormField.getDefaultValue()
com.itextpdf.layout.element.Image.getImageWidth()
com.itextpdf.signatures.testutils.Pkcs12FileHelper.initStore(String,char)
com.itextpdf.layout.element.List.setPreSymbolText(String)
com.itextpdf.kernel.pdf.PdfDictionaryEntrySet.getKey()
com.itextpdf.layout.RotationTest.fixedTextRotationTest01()
com.itextpdf.barcodes.BarcodePostnet.createAwtImage(java,awt,Color,java,awt,Color)
com.itextpdf.kernel.font.PdfType1Font.getGlyph(int)
com.itextpdf.kernel.utils.PdfMergerTest.mergeDocumentTest01()
com.itextpdf.layout.ListTest.addListOnShortPage2()
com.itextpdf.kernel.pdf.PdfCanvasTest.copyPagesTest3()
com.itextpdf.kernel.xmp.XMPDateTime.setTimeZone(TimeZone)
com.itextpdf.kernel.xmp.XMPDateTime.setDay(int)
com.itextpdf.barcodes.BarcodeInter25Test.barcode01Test()
com.itextpdf.io.codec.TIFFLZWDecoder.addStringToTable(byte)
com.itextpdf.io.font.cmap.CMapObject.toString()
com.itextpdf.kernel.pdf.colorspace.PdfPattern.getTilingType()
com.itextpdf.forms.fields.PdfTextFormField.setPassword(boolean)
com.itextpdf.layout.hyphenation.CharVector.getArray()
com.itextpdf.kernel.pdf.PdfCopyTest.copying2()
com.itextpdf.signatures.SignaturePermissions.isFillInAllowed()
com.itextpdf.kernel.pdf.annot.PdfLinkAnnotation.removeDestination()
com.itextpdf.pdfa.PdfA2ActionCheckTest.actionCheck03()
com.itextpdf.layout.TableBorderTest.incompleteTableTest02()
com.itextpdf.kernel.pdf.PdfReader.getPdfAConformanceLevel()
com.itextpdf.kernel.pdf.PdfOutputIntent.getOutputCondition()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.joinCommonEdges()
com.itextpdf.kernel.pdf.PdfString.setEncoding(String)
com.itextpdf.io.font.FontIdentification.setPanose(String)
com.itextpdf.pdfa.PdfA2ActionCheckTest.actionCheck13()
com.itextpdf.kernel.pdf.PdfArray.toDoubleArray()
com.itextpdf.forms.fields.PdfFormField.drawRadioBorder(PdfCanvas,PdfFormXObject,float,float)
com.itextpdf.kernel.pdf.tagging.PdfStructElem.removeObjectFromArray(PdfArray,PdfObject)
com.itextpdf.kernel.font.PdfFont.compactRanges(List)
com.itextpdf.layout.element.Table.flushContent()
com.itextpdf.kernel.color.Color.makeColor(PdfColorSpace)
com.itextpdf.forms.fields.PdfChoiceFormField.isSort()
com.itextpdf.kernel.xmp.impl.XMPDateTimeImpl.setNanoSecond(int)
com.itextpdf.kernel.font.DocTrueTypeFont.fillFontDescriptor(DocTrueTypeFont,PdfDictionary)
com.itextpdf.io.codec.TIFFDirectory.initialize(RandomAccessFileOrArray)
com.itextpdf.forms.fields.PdfFormField.isRequired()
com.itextpdf.io.font.CidFontProperties.loadRegistry()
com.itextpdf.io.font.otf.OpenTableLookup.hasSubstitution(int)
com.itextpdf.io.source.OutputStream.assignBytes(byte,int)
com.itextpdf.barcodes.qrcode.BitArray.toString()
com.itextpdf.signatures.IOcspClient.getEncoded(X509Certificate,X509Certificate,String)
com.itextpdf.kernel.pdf.PdfDocumentTest.fullCompressionAppendMode()
com.itextpdf.io.source.MappedChannelRandomAccessSource.open()
com.itextpdf.forms.fields.PdfButtonFormField.setToggleOff(boolean)
com.itextpdf.signatures.ExternalBlankSignatureContainer.sign(InputStream)
com.itextpdf.kernel.pdf.canvas.parser.listener.RegexBasedLocationExtractionStrategy.toRectangles(List)
com.itextpdf.layout.element.Table.setSkipLastFooter(boolean)
com.itextpdf.kernel.pdf.PdfEncryptionTest.checkDecryptedWithPasswordContent(String,byte,String)
com.itextpdf.io.codec.Base64.getAlphabet(int)
com.itextpdf.kernel.geom.AffineTransform.transform(Point,int,Point,int,int)
com.itextpdf.kernel.pdf.canvas.parser.listener.IPdfTextLocation.getRectangle()
com.itextpdf.pdfa.PdfA2AnnotationCheckTest.annotationCheckTest01()
com.itextpdf.io.codec.TIFFDirectory.readInt(RandomAccessFileOrArray)
com.itextpdf.kernel.pdf.PdfNumber.doubleValue()
com.itextpdf.kernel.log.CounterFactory.getCounter(Class)
com.itextpdf.kernel.pdf.WriterProperties.setInitialDocumentId(PdfString)
com.itextpdf.kernel.pdf.PdfDocument.markObjectAsMustBeFlushed(PdfObject)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationLocaFormat001Test.isFontValid()
com.itextpdf.layout.renderer.TypographyUtils.findMethod(String,String,Class)
com.itextpdf.kernel.pdf.PdfDocument.getNumberOfPages()
com.itextpdf.kernel.pdf.PdfStampingTest.stampingAppend9()
com.itextpdf.kernel.pdf.PdfString.getType()
com.itextpdf.kernel.pdf.PdfDictionaryEntrySet.getValue()
com.itextpdf.kernel.pdf.PdfDocument.getPdfObject(int)
com.itextpdf.io.font.FontMetrics.setStrikeoutPosition(int)
com.itextpdf.io.font.woff2.w3c.format.BlocksExtraneousData001Test.getTestInfo()
com.itextpdf.barcodes.Barcode1D.setGenerateChecksum(boolean)
com.itextpdf.layout.FloatTest.floatDivTest02()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.toString()
com.itextpdf.kernel.pdf.PdfName.copyTo(PdfDocument,boolean)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setAppearance(PdfName,PdfAnnotationAppearance)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setHTP(PdfObject)
com.itextpdf.io.codec.TIFFFaxDecoder.decode2D(byte,byte,int,int,long)
com.itextpdf.kernel.pdf.ByteBufferOutputStream.append(int)
com.itextpdf.kernel.pdf.PdfIndirectReference.setFree()
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6Format3.isGlyphMatchesLookahead(int,int)
com.itextpdf.forms.fields.PdfFormField.setValue(String,String)
com.itextpdf.layout.renderer.AbstractRenderer.getMargins(IRenderer)
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getAscentDescent()
com.itextpdf.io.codec.brotli.dec.BrotliInputStream.read(byte,int,int)
com.itextpdf.io.image.ImageDataFactory.create(int,int,boolean,int,int,byte,int)
com.itextpdf.kernel.xmp.XmlDomWriter.normalizeAndPrint(String,boolean)
com.itextpdf.layout.margincollapse.MarginsCollapseInfo.copyTo(MarginsCollapseInfo)
com.itextpdf.forms.fields.PdfTextFormField.isSpellCheck()
com.itextpdf.kernel.pdf.PdfOutputStream.isNotMetadataPdfStream(PdfStream)
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperBase.initEdge2(Edge,PolyType)
com.itextpdf.barcodes.qrcode.BitVector.toString()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.getQuadPoints()
com.itextpdf.kernel.pdf.SmartModePdfObjectsSerializer.serObject(PdfObject,ByteBufferOutputStream,int,Map)
com.itextpdf.kernel.pdf.canvas.parser.data.ImageRenderInfo.isInline()
com.itextpdf.io.font.otf.Glyph.setXAdvance(short)
com.itextpdf.kernel.pdf.PdfPage.setTrimBox(Rectangle)
com.itextpdf.kernel.pdf.canvas.parser.listener.DefaultPdfTextLocation.getRectangle()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff016Test.isFontValid()
com.itextpdf.barcodes.Barcode1D.isExtended()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getRenderingIntent()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.getRoot()
com.itextpdf.io.util.HashCode.append(int)
com.itextpdf.kernel.pdf.PdfIndirectReference.setOffset(long)
com.itextpdf.io.util.TextUtil.isSpace(Glyph)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.getDashPattern()
com.itextpdf.kernel.xmp.impl.XMPSerializerRDF.endOuterRDFDescription(int)
com.itextpdf.kernel.pdf.canvas.parser.data.PathRenderInfo.getLineWidth()
com.itextpdf.kernel.pdf.PdfActionTest.actionTest02()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.saveState()
com.itextpdf.kernel.pdf.action.PdfAction.next(PdfAction)
com.itextpdf.kernel.pdf.tagging.StructureTreeCopier.addAllParentsToSet(PdfMcr,Set)
com.itextpdf.layout.FloatTest.floatingImageInCell()
com.itextpdf.layout.LocationTextExtractionStrategyTest.testSanityCheckOnVectorMath()
com.itextpdf.pdfa.PdfA1CanvasCheckTest.canvasCheckTest1()
com.itextpdf.layout.element.Paragraph.addAll(java,util)
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.getCurrentFont()
com.itextpdf.kernel.pdf.tagging.PdfStructElem.getAttributes(boolean)
com.itextpdf.kernel.pdf.PdfWriterTest.closeStream2()
com.itextpdf.layout.font.FontCharacteristics.equals(Object)
com.itextpdf.kernel.pdf.canvas.parser.clipper.PolyNode.getChildCount()
com.itextpdf.io.font.woff2.w3c.format.BlocksPrivate002Test.isFontValid()
com.itextpdf.kernel.pdf.tagging.ParentTreeHandler.buildParentTree()
com.itextpdf.kernel.pdf.PdfString.makeIndirect(PdfDocument,PdfIndirectReference)
com.itextpdf.forms.PdfAcroForm.getDefaultJustification()
com.itextpdf.layout.layout.LayoutResult.setSplitRenderer(IRenderer)
com.itextpdf.signatures.PdfPKCS7.isTsp()
com.itextpdf.layout.TableBorderTest.splitCellsTest07()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getTextKnockout()
com.itextpdf.forms.fields.PdfSignatureFormField.setValue(PdfObject)
com.itextpdf.kernel.pdf.annot.PdfLineAnnotation.getLineEndingStyles()
com.itextpdf.kernel.pdf.PdfStructElemTest.structTreeCopyingTest06()
com.itextpdf.layout.renderer.AbstractRenderer.overrideHeightProperties()
com.itextpdf.kernel.pdf.PdfPage.setXmpMetadata(XMPMeta)
com.itextpdf.layout.element.Paragraph.addTabStops(TabStop)
com.itextpdf.io.font.otf.lookuptype5.SubTableLookup5Format3.getSetOfRulesForStartGlyph(int)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.getTextKnockoutFlag()
com.itextpdf.kernel.pdf.PdfVersion.equals(Object)
com.itextpdf.io.codec.PngWriter.writeData(byte,int)
com.itextpdf.layout.renderer.ListRenderer.initializeListSymbols(LayoutContext)
com.itextpdf.layout.element.Image.setMarginLeft(float)
com.itextpdf.layout.renderer.MinWidthTest.beforeClass()
com.itextpdf.io.codec.brotli.dec.Decode.decodeCommandBlockSwitch(State)
com.itextpdf.kernel.utils.PageRangeTest.addCustomEvenConstructor()
com.itextpdf.layout.FontSelectorTest.standardPdfFonts()
com.itextpdf.layout.element.BlockElement.setMaxHeight(float)
com.itextpdf.io.codec.brotli.dec.DecodeTest.testEmpty()
com.itextpdf.kernel.pdf.navigation.PdfExplicitDestination.add(PdfPage)
com.itextpdf.kernel.pdf.PdfDictionaryTest.testValuesRemove()
com.itextpdf.kernel.pdf.PdfStampingTest.stamping9()
com.itextpdf.barcodes.qrcode.Version.buildFunctionPattern()
com.itextpdf.layout.TableBorderTest.bordersWithSpansTest03()
com.itextpdf.layout.renderer.TableBorderUtil.createAndFillBorderList(Border,int)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.setHoleState(Edge,OutRec)
com.itextpdf.layout.LocationTextExtractionStrategyTest.testRotatedPage3()
com.itextpdf.layout.property.Underline.getLineCapStyle()
com.itextpdf.kernel.xmp.impl.ParseRDF.rdf_EmptyPropertyElement(XMPMetaImpl,XMPNode,Node,boolean)
com.itextpdf.kernel.pdf.canvas.parser.clipper.PolyTree.getTotalSize()
com.itextpdf.io.font.otf.ActualTextIterator.next()
com.itextpdf.barcodes.BarcodePDF417.getTextTypeAndValue(byte,int,int)
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.hasHeightProp(IRenderer)
com.itextpdf.kernel.utils.PdfSplitter.setPreserveOutlines(boolean)
com.itextpdf.kernel.xmp.options.IteratorOptions.setOmitQualifiers(boolean)
com.itextpdf.io.codec.brotli.dec.Decode.translateShortCodes(int,int,int)
com.itextpdf.layout.renderer.TypographyUtils.isTypographyModuleInitialized()
com.itextpdf.kernel.pdf.PdfStructElemTest.structTreeCopyingTest01()
com.itextpdf.kernel.pdf.PdfResources.addShading(PdfShading)
com.itextpdf.io.font.CFFFont.getCard8()
com.itextpdf.kernel.crypto.securityhandler.PubKeySecurityHandler.createRecipientsArray()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff112Test.getTestInfo()
com.itextpdf.kernel.crypto.securityhandler.PubKeySecurityHandler.addAllRecipients(Certificate,int)
com.itextpdf.forms.FormFieldsTaggingTest.formFieldTaggingTest02()
com.itextpdf.forms.fields.PdfFormField.setDefaultStyle(PdfString)
com.itextpdf.signatures.SignUtils.getTimeStampDate(TimeStampToken)
com.itextpdf.kernel.xmp.options.ParseOptions.getValidOptions()
com.itextpdf.kernel.pdf.PdfDocument.addModifiedPostfix(String)
com.itextpdf.kernel.pdf.PdfWriter.writeHeader()
com.itextpdf.kernel.pdf.colorspace.PdfCieBasedCs.getIccProfileStream(InputStream,float)
com.itextpdf.layout.renderer.BlockRenderer.createSplitRenderer(int)
com.itextpdf.layout.ElementPropertyContainer.setFixedPosition(float,float,float)
com.itextpdf.kernel.pdf.annot.Pdf3DAnnotation.getActivationDictionary()
com.itextpdf.kernel.pdf.PdfCanvasTest.inlineImagesTest01()
com.itextpdf.kernel.pdf.annot.PdfPolyGeomAnnotation.setSubtype(PdfName)
com.itextpdf.layout.layout.LayoutContext.getMarginsCollapseInfo()
com.itextpdf.barcodes.qrcode.QRCode.getVersion()
com.itextpdf.io.font.woff2.w3c.format.BlocksExtraneousData007Test.getFontName()
com.itextpdf.kernel.pdf.EncodingTest.beforeClass()
com.itextpdf.kernel.pdf.PdfStampingTest.stamping1()
com.itextpdf.kernel.pdf.canvas.parser.util.PdfCanvasParser.readObject()
com.itextpdf.kernel.pdf.navigation.PdfExplicitDestination.createFitR(PdfPage,float,float,float,float)
com.itextpdf.kernel.pdf.PdfTokenizerTest.primitivesTest()
com.itextpdf.layout.renderer.ParagraphRenderer.move(float,float)
com.itextpdf.pdfa.checker.PdfA1Checker.checkTrailer(PdfDictionary)
com.itextpdf.kernel.font.PdfSimpleFont.setForceWidthsOutput(boolean)
com.itextpdf.test.RunnerSearchConfig.ignorePackageOrClass(String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff115Test.getFontName()
com.itextpdf.barcodes.qrcode.BitArray.flip(int)
com.itextpdf.kernel.pdf.canvas.parser.data.PathRenderInfo.getLineDashPattern()
com.itextpdf.kernel.pdf.PdfDocument.getTrailer()
com.itextpdf.io.font.woff2.w3c.format.Valid008Test.getTestInfo()
com.itextpdf.kernel.crypto.securityhandler.StandardSecurityHandler.isUsedOwnerPassword()
com.itextpdf.forms.fields.PdfFormField.getJustification()
com.itextpdf.io.codec.brotli.dec.BrotliInputStream.close()
com.itextpdf.kernel.pdf.filters.IFilterHandler.decode(byte,PdfName,PdfObject,PdfDictionary)
com.itextpdf.kernel.xmp.impl.xpath.XMPPath.getSegment(int)
com.itextpdf.kernel.pdf.tagging.PdfMcrNumber.getPageObject()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff141Test.getTestInfo()
com.itextpdf.layout.FloatTest.clearanceApplyingPageSplit07()
com.itextpdf.kernel.pdf.PdfArray.makeIndirect(PdfDocument,PdfIndirectReference)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff056Test.isFontValid()
com.itextpdf.kernel.pdf.PdfResources.getForm(PdfName)
com.itextpdf.kernel.color.DeviceCmyk.makeLighter(DeviceCmyk)
com.itextpdf.kernel.pdf.PdfDictionary.mergeDifferent(PdfDictionary)
com.itextpdf.forms.PdfFormCopyTest.copyFieldsTest08()
com.itextpdf.io.font.woff2.Woff2Dec.hashCode()
com.itextpdf.layout.renderer.AbstractRenderer.endTranformationIfApplied(PdfCanvas)
com.itextpdf.kernel.xmp.XMPSchemaRegistry.getNamespacePrefix(String)
com.itextpdf.kernel.xmp.impl.XMPDateTimeImpl.setTimeZone(TimeZone)
com.itextpdf.kernel.geom.Subpath.getStartPoint()
com.itextpdf.io.font.WoffConverter.convert(byte)
com.itextpdf.pdfa.checker.PdfAChecker.objectIsChecked(PdfObject)
com.itextpdf.forms.fields.PdfFormField.getFont()
com.itextpdf.kernel.pdf.PdfIndirectReference.fixOffset(long)
com.itextpdf.layout.renderer.TextRenderer.removeReversedRanges()
com.itextpdf.layout.renderer.AbstractRenderer.getDefaultProperty(int)
com.itextpdf.kernel.pdf.EncodingTest.symbolTrueTypeFontWinAnsiTest()
com.itextpdf.kernel.utils.PdfSplitter.splitByPageNumbers(List,IDocumentReadyListener)
com.itextpdf.kernel.utils.XmlUtils.compareXmls(InputStream,InputStream)
com.itextpdf.kernel.pdf.PdfCanvasTest.create1000PagesDocumentWithFullCompression()
com.itextpdf.layout.renderer.BlockRenderer.endRotationIfApplied(PdfCanvas)
com.itextpdf.layout.ListTest.listItemAlignmentTest01()
com.itextpdf.kernel.pdf.layer.PdfLayer.getUsage()
com.itextpdf.kernel.geom.Point.setLocation(int,int)
com.itextpdf.kernel.pdf.TagTreePointerTest.tagTreePointerTest03()
com.itextpdf.layout.renderer.TextRenderer.next()
com.itextpdf.io.font.otf.GlyphLine.replaceContent(GlyphLine)
com.itextpdf.io.font.woff2.Woff2Dec.findTable(ArrayList,int)
com.itextpdf.kernel.pdf.PdfIndirectReference.getType()
com.itextpdf.kernel.pdf.PdfStampingTest.stampingAppendVersionTest01()
com.itextpdf.kernel.pdf.PdfDocumentInfo.getKeywords()
com.itextpdf.layout.renderer.TableBorderUtil.createAndFillBorderList(List,Border,int)
com.itextpdf.kernel.pdf.PdfString.markAsUnencryptedObject()
com.itextpdf.kernel.pdf.PdfWriterTest.useObjectForMultipleTimes3()
com.itextpdf.kernel.pdf.PdfObject.isArray()
com.itextpdf.kernel.pdf.PdfArray.size()
com.itextpdf.layout.renderer.CanvasRenderer.flushSingleRenderer(IRenderer)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff062Test.isFontValid()
com.itextpdf.layout.Style.setPaddings(float,float,float,float)
com.itextpdf.barcodes.BarcodeDataMatrixTest.beforeClass()
com.itextpdf.io.source.OutputStream.writeDouble(double,boolean)
com.itextpdf.layout.RotationTest.splitTextRotationTest01()
com.itextpdf.layout.hyphenation.CharVector.length()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff145Test.isFontValid()
com.itextpdf.layout.SimpleTextExtractionStrategyTest.testWordSpacingCausedByExplicitGlyphPositioning2()
com.itextpdf.io.font.OpenTypeParser.loadTables(boolean)
com.itextpdf.kernel.font.PdfFont.getAscent(String,float)
com.itextpdf.kernel.font.PdfSimpleFont.decodeIntoGlyphLine(PdfString)
com.itextpdf.kernel.pdf.PdfArray.copyTo(PdfDocument,boolean)
com.itextpdf.io.font.FontEncoding.hasDifferences()
com.itextpdf.layout.renderer.TableRenderer.isFooterRenderer()
com.itextpdf.barcodes.BarcodeDataMatrix.getEncoding()
com.itextpdf.layout.renderer.TableRenderer.initializeTableLayoutBorders()
com.itextpdf.kernel.pdf.canvas.draw.DottedLine.setColor(Color)
com.itextpdf.io.image.ImageData.setColorSpace(int)
com.itextpdf.kernel.font.PdfType3Font.getFirstEmptyCode()
com.itextpdf.kernel.pdf.PdfPagesTree.getPage(int)
com.itextpdf.pdfa.checker.PdfA2Checker.checkPageSize(PdfDictionary)
com.itextpdf.layout.renderer.TableBorderUtil.getWidestBorder(List,int,int)
com.itextpdf.io.source.PagedChannelRandomAccessSource.readObject(ObjectInputStream)
com.itextpdf.layout.element.BlockElement.isKeepWithNext()
com.itextpdf.io.font.CFFFont.getIndex(int)
com.itextpdf.layout.renderer.TableWidths.getCell()
com.itextpdf.kernel.pdf.colorspace.PdfShading.getShadingType()
com.itextpdf.io.font.woff2.w3c.format.BlocksMetadataPadding002Test.getTestInfo()
com.itextpdf.io.font.woff2.w3c.format.Valid001Test.getTestInfo()
com.itextpdf.io.font.cmap.CMapCidUni.lookup(int)
com.itextpdf.kernel.xmp.properties.XMPProperty.getLanguage()
com.itextpdf.kernel.geom.Path.isEmpty()
com.itextpdf.forms.fields.PdfFormField.createCheckBox(PdfDocument,Rectangle,String,String,int)
com.itextpdf.kernel.crypto.ARCFOUREncryption.prepareARCFOURKey(byte)
com.itextpdf.io.font.FontMetrics.getWinAscender()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationChecksum001Test.isFontValid()
com.itextpdf.signatures.TSAClientBouncyCastle.setTSAInfo(ITSAInfoBouncyCastle)
com.itextpdf.io.font.FontMetrics.getSubscriptSize()
com.itextpdf.kernel.pdf.PdfCanvasTest.wmfImageTest01()
com.itextpdf.kernel.pdf.layer.PdfLayerMembership.addLayer(PdfLayer)
com.itextpdf.layout.TableBorderTest.incompleteTableTest01()
com.itextpdf.layout.renderer.AbstractRenderer.toString()
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.flushTag(PdfStructElem)
com.itextpdf.layout.BorderTest.simpleBordersTest()
com.itextpdf.io.font.otf.OtfReadCommon.readUShortArray(RandomAccessFileOrArray,int)
com.itextpdf.kernel.pdf.annot.PdfLinkAnnotation.setUriAction(PdfAction)
com.itextpdf.forms.fields.PdfFormField.createButton(PdfDocument,Rectangle,int)
com.itextpdf.kernel.pdf.annot.PdfPrinterMarkAnnotation.getArbitraryTypeName()
com.itextpdf.barcodes.qrcode.MaskUtil.applyMaskPenaltyRule2(ByteMatrix)
com.itextpdf.barcodes.BarcodeDataMatrix.setWs(int)
com.itextpdf.kernel.xmp.impl.XMPNode.replaceChild(int,XMPNode)
com.itextpdf.io.font.otf.ContextualSubstRule.isGlyphMatchesLookahead(int,int)
com.itextpdf.kernel.pdf.tagging.PdfStructTreeRoot.getNextMcidForPage(PdfPage)
com.itextpdf.layout.hyphenation.HyphenationTree.loadPatterns(String)
com.itextpdf.kernel.pdf.PdfFontTest.autoDetect5()
com.itextpdf.layout.font.FontProvider.getFontSet()
com.itextpdf.layout.renderer.LineRenderer.getYLine()
com.itextpdf.kernel.pdf.PdfTextArray.add(byte)
com.itextpdf.kernel.xmp.XMPMetaFactory.create()
com.itextpdf.io.font.otf.GlyphLine.substituteOneToMany(OpenTypeFontTableReader,int)
com.itextpdf.kernel.pdf.tagging.PdfStructElem.flush()
com.itextpdf.io.source.GroupedRandomAccessSource.length()
com.itextpdf.signatures.sign.PadesSignatureLevelTest.padesSignatureLevelTTest01()
com.itextpdf.io.font.CFFFontSubset.ReadCommand()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getTransferFunction2()
com.itextpdf.kernel.font.PdfType3Font.addGlyph(char,int,int,int,int,int)
com.itextpdf.kernel.font.PdfFontFactory.createFont(byte,boolean)
com.itextpdf.kernel.pdf.PdfIndirectReference.hashCode()
com.itextpdf.io.util.FileUtil.getRandomAccessFile(File)
com.itextpdf.barcodes.qrcode.BitMatrix.getWidth()
com.itextpdf.kernel.pdf.PdfResources.getPdfExtGState(PdfName)
com.itextpdf.kernel.pdf.PdfReaderTest.appendModeWith10PagesFix2()
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.populateXObjectDoHandlers()
com.itextpdf.layout.renderer.AreaBreakRenderer.hasOwnProperty(int)
com.itextpdf.signatures.PdfSignatureAppearance.setSignatureGraphic(ImageData)
com.itextpdf.layout.renderer.TableRenderer.cleanTableLayoutBorders()
com.itextpdf.kernel.pdf.PdfDocument.checkAndAddPage(int,PdfPage)
com.itextpdf.pdfa.checker.PdfA2Checker.checkBlendMode(PdfName)
com.itextpdf.kernel.pdf.canvas.parser.clipper.PolyNode.setEndType(EndType)
com.itextpdf.kernel.color.Color.hashCode()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff013Test.getFontName()
com.itextpdf.layout.element.BlockElement.getDefaultProperty(int)
com.itextpdf.kernel.pdf.annot.PdfFreeTextAnnotation.setCalloutLine(PdfArray)
com.itextpdf.layout.FloatTest.floatsOnPageSplit11()
com.itextpdf.layout.KeepWithNextTest.keepWithNextTest06()
com.itextpdf.layout.LargeElementTest.largeTableWithHeaderFooterTest03()
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.removePageTags(PdfPage)
com.itextpdf.kernel.xmp.XMPMeta.normalize(ParseOptions)
com.itextpdf.kernel.log.CounterFactory.getInstance()
com.itextpdf.kernel.pdf.colorspace.PdfShading.getBitsPerFlag()
com.itextpdf.kernel.pdf.PdfStampingTest.stampingStreamsCompression01()
com.itextpdf.kernel.utils.TaggedPdfReaderTool.escapeXML(String,boolean)
com.itextpdf.kernel.xmp.options.IteratorOptions.defineOptionName(int)
com.itextpdf.pdfa.PdfA1ActionCheckTest.actionCheck07()
com.itextpdf.layout.Canvas.getPdfCanvas()
com.itextpdf.io.font.FontMetrics.setWinDescender(int)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.hasFlag(int)
com.itextpdf.layout.renderer.MinWidthTest.divWithBigRotatedDiv()
com.itextpdf.kernel.pdf.canvas.parser.listener.SimpleTextExtractionStrategy.appendTextChunk(CharSequence)
com.itextpdf.kernel.pdf.canvas.parser.clipper.IClipper.addPath(Path,PolyType,boolean)
com.itextpdf.kernel.pdf.PdfEncryptionTest.openEncryptedDocWithWrongCertificateAndPrivateKey()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Point.setY(T)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff090Test.getFontName()
com.itextpdf.io.font.FontNames.setStyle(String)
com.itextpdf.io.font.FontRegisterProvider.registerFontDirectory(String,boolean)
com.itextpdf.io.source.GroupedRandomAccessSource.offsetN(long)
com.itextpdf.kernel.pdf.PdfName.createDirectName(String)
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.moveToRoot()
com.itextpdf.io.source.PdfTokenizer.getObjNr()
com.itextpdf.io.font.FontRegisterProvider.registerFontFamily(String,String,String)
com.itextpdf.layout.element.BlockElement.setMarginTop(float)
com.itextpdf.kernel.crypto.securityhandler.PubKeySecurityHandler.computeGlobalKey(String,boolean)
com.itextpdf.layout.renderer.CollapsedTableBorders.applyTopTableBorder(Rectangle,Rectangle,boolean)
com.itextpdf.barcodes.Barcode1D.isChecksumText()
com.itextpdf.kernel.font.PdfType0Font.getFontDescriptor(String)
com.itextpdf.io.font.FontMetrics.getGlyphWidths()
com.itextpdf.layout.font.ComplexFontSelectorStrategy.nextSignificantUnicodeScript(int)
com.itextpdf.kernel.pdf.PdfNull.equals(Object)
com.itextpdf.io.source.FileChannelRandomAccessSource.readObject(ObjectInputStream)
com.itextpdf.layout.font.FontCharacteristics.setFontStyle(String)
com.itextpdf.kernel.pdf.PdfPages.addPage(PdfDictionary)
com.itextpdf.kernel.pdf.PdfImageXObjectTest.testDctDecodeFilters()
com.itextpdf.io.font.FontProgram.setItalicAngle(int)
com.itextpdf.signatures.RootStoreVerifier.verify(X509Certificate,X509Certificate,Date)
com.itextpdf.signatures.testutils.builder.TestOcspResponseBuilder.setNextUpdate(Calendar)
com.itextpdf.kernel.pdf.filters.FlateDecodeFilter.decodePredictor(byte,PdfObject)
com.itextpdf.io.image.ImageData.getDpiX()
com.itextpdf.io.image.ImageData.loadData()
com.itextpdf.kernel.xmp.XmlDomWriter.setOutput(OutputStream,String)
com.itextpdf.test.RunnerSearchConfig.getSearchClasses()
com.itextpdf.layout.renderer.AreaBreakRenderer.layout(LayoutContext)
com.itextpdf.barcodes.Barcode1D.setSize(float)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setStrokeColorGray(float)
com.itextpdf.kernel.pdf.PdfReaderTest.StreamLengthCorrection9()
com.itextpdf.layout.hyphenation.IPatternConsumer.addClass(String)
com.itextpdf.signatures.sign.SigningTest.signingIntoExistingFieldTest02()
com.itextpdf.kernel.pdf.canvas.parser.data.PathRenderInfo.preserveGraphicsState()
com.itextpdf.kernel.xmp.impl.ParameterAsserts.assertArrayName(String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff089Test.getTestInfo()
com.itextpdf.kernel.pdf.PdfEncryptionTest.encryptWithPasswordStandard128NoCompression()
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.marginsCouldBeSelfCollapsing(IRenderer)
com.itextpdf.signatures.sign.PadesSigTest.padesEccSigTest01()
com.itextpdf.io.image.ImageDataFactory.createRawImage(byte)
com.itextpdf.layout.border.SolidBorder.drawCellBorder(PdfCanvas,float,float,float,float)
com.itextpdf.kernel.pdf.layer.PdfLayerMembership.getDocument()
com.itextpdf.kernel.pdf.annot.PdfFixedPrint.isWrappedObjectMustBeIndirect()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.getAdditionalAction()
com.itextpdf.io.codec.brotli.dec.Decode.readMetablockInfo(State)
com.itextpdf.kernel.xmp.XMPDateTimeFactory.convertToLocalTime(XMPDateTime)
com.itextpdf.pdfa.checker.PdfA1Checker.checkAction(PdfDictionary)
com.itextpdf.kernel.xmp.XMPMeta.setProperty(String,String,Object)
com.itextpdf.kernel.font.Type3FontProgram.isFontSpecific()
com.itextpdf.kernel.pdf.canvas.parser.listener.RegexBasedLocationExtractionStrategy.toCRI(TextRenderInfo)
com.itextpdf.layout.renderer.FloatingHelper.calculateClearHeightCorrection(IRenderer,List,Rectangle)
com.itextpdf.kernel.xmp.XMPMeta.deleteArrayItem(String,String,int)
com.itextpdf.kernel.pdf.PdfReaderTest.StreamLengthCorrection1()
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.convertWidthFromTextSpaceToUserSpace(float)
com.itextpdf.kernel.pdf.annot.PdfFreeTextAnnotation.getCalloutLine()
com.itextpdf.kernel.pdf.PdfNameTree.buildTree()
com.itextpdf.io.font.woff2.w3c.format.TabledataDecompressedLength001Test.getFontName()
com.itextpdf.kernel.xmp.impl.XMPUtilsImpl.catenateArrayItems(XMPMeta,String,String,String,String,boolean)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff011Test.isFontValid()
com.itextpdf.io.font.otf.OpenTypeFontTableReader.getRequiredFeature(String,String)
com.itextpdf.signatures.verify.LtvVerifierTest.after()
com.itextpdf.pdfa.PdfADocument.updateXmpMetadata()
com.itextpdf.layout.font.FontCharacteristics.isMonospace()
com.itextpdf.io.font.woff2.w3c.format.Valid001Test.getFontName()
com.itextpdf.io.util.HashCode.append(float)
com.itextpdf.layout.renderer.ParagraphRenderer.toString()
com.itextpdf.kernel.pdf.PdfBoolean.getType()
com.itextpdf.kernel.geom.AffineTransform.setToRotation(double,double,double)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff149Test.getFontName()
com.itextpdf.kernel.geom.Point.equals(Object)
com.itextpdf.kernel.geom.Vector.lengthSquared()
com.itextpdf.layout.margincollapse.MarginsCollapseInfo.getOwnCollapseAfter()
com.itextpdf.io.font.woff2.w3c.format.DirectoryTableOrder001Test.isFontValid()
com.itextpdf.kernel.pdf.tagging.ParentTreeHandler.unregisterMcr(PdfMcr)
com.itextpdf.kernel.pdf.annot.PdfFreeTextAnnotation.setLineEndingStyle(PdfName)
com.itextpdf.barcodes.Barcode128Test.barcodeRawValueGenerationTest01()
com.itextpdf.io.image.TiffImageData.isRecoverFromImageError()
com.itextpdf.layout.layout.LayoutArea.isEmptyArea()
com.itextpdf.kernel.pdf.PdfEncryptionTest.encryptWithPasswordAes128EmbeddedFilesOnly()
com.itextpdf.kernel.pdf.PdfLiteral.getPosition()
com.itextpdf.barcodes.dmcode.Placement.doPlacement(int,int)
com.itextpdf.barcodes.Barcode1D.setChecksumText(boolean)
com.itextpdf.signatures.ExternalBlankSignatureContainer.modifySigningDictionary(PdfDictionary)
com.itextpdf.io.font.FontMetrics.setGlyphWidths(int)
com.itextpdf.kernel.pdf.tagutils.IAccessibleElement.setRole(PdfName)
com.itextpdf.io.source.IndependentRandomAccessSource.get(long,byte,int,int)
com.itextpdf.kernel.geom.Point.distance(double,double)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.setTextRise(float)
com.itextpdf.kernel.pdf.canvas.wmf.MetaFont.isStrikeout()
com.itextpdf.kernel.pdf.colorspace.PdfShading.setBitsPerCoordinate(int)
com.itextpdf.kernel.pdf.PdfStampingTest.stamping12()
com.itextpdf.kernel.pdf.PdfDestinationTest.destTest01()
com.itextpdf.kernel.pdf.PdfOutline.addOutline(PdfOutline)
com.itextpdf.layout.ElementPropertyContainer.getHeight()
com.itextpdf.kernel.pdf.PdfObjectWrapper.unsetForbidRelease()
com.itextpdf.layout.font.FontSet.getFonts()
com.itextpdf.layout.element.Image.getMarginBottom()
com.itextpdf.io.font.FontProgram.setCapHeight(int)
com.itextpdf.kernel.pdf.PdfString.isHexWriting()
com.itextpdf.barcodes.qrcode.BlockPair.getDataBytes()
com.itextpdf.io.font.FontProgramDescriptor.getItalicAngle()
com.itextpdf.signatures.PdfPKCS7.getAuthenticatedAttributeBytes(byte,byte,Collection,PdfSigner,CryptoStandard)
com.itextpdf.io.font.FontNames.setWidth(int)
com.itextpdf.forms.FormFieldsTaggingTest.addFormFieldsToDocument(PdfDocument,PdfAcroForm)
com.itextpdf.kernel.pdf.canvas.parser.util.InlineImageParsingUtils.inlineImageStreamBytesAreComplete(byte,PdfDictionary)
com.itextpdf.io.image.BmpImageData.isNoHeader()
com.itextpdf.kernel.pdf.action.PdfTargetDictionary.createParentTarget()
com.itextpdf.kernel.pdf.ByteBufferOutputStream.getBuffer()
com.itextpdf.kernel.pdf.PdfStructElemTest.beforeClass()
com.itextpdf.barcodes.dmcode.Placement.corner3(int)
com.itextpdf.signatures.PdfPKCS7.getCertificates()
com.itextpdf.kernel.font.Type3Glyph.fillBBFromBytes(byte)
com.itextpdf.barcodes.Barcode1D.getDescender()
com.itextpdf.kernel.xmp.impl.xpath.XMPPathSegment.getAliasForm()
com.itextpdf.kernel.pdf.PdfDictionaryTest.testValuesRemoveAll2()
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.distParallelEnd()
com.itextpdf.kernel.pdf.tagutils.AccessibilityProperties.setAlternateDescription(String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff100Test.getTestInfo()
com.itextpdf.layout.margincollapse.MarginsCollapseInfo.setCollapseAfter(MarginsCollapse)
com.itextpdf.kernel.pdf.WriterProperties.useSmartMode()
com.itextpdf.io.codec.PngWriter.writePalette(byte)
com.itextpdf.barcodes.qrcode.QRCode.setNumECBytes(int)
com.itextpdf.kernel.pdf.PdfDictionaryEntrySet.remove()
com.itextpdf.pdfa.PdfA1AcroFormCheckTest.beforeClass()
com.itextpdf.kernel.pdf.PdfReader.isOpenedWithFullPermission()
com.itextpdf.layout.renderer.ParagraphRenderer.getDefaultProperty(int)
com.itextpdf.signatures.SignatureUtil.getSignatureDictionary(String)
com.itextpdf.layout.BorderTest.borderSidesTest()
com.itextpdf.io.font.otf.GsubLookupType1.hasSubstitution(int)
com.itextpdf.io.font.otf.GlyphLine.add(Glyph)
com.itextpdf.pdfa.checker.PdfA1Checker.checkInlineImage(PdfStream,PdfDictionary)
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.getInteriorColor()
com.itextpdf.layout.AutoTaggingTest.artifactTest02()
com.itextpdf.io.source.RandomAccessFileOrArray.readInt()
com.itextpdf.layout.element.BlockElement.setMaxWidth(float)
com.itextpdf.kernel.pdf.PdfReaderTest.openSimpleDoc()
com.itextpdf.signatures.PdfPKCS7.setExternalDigest(byte,byte,String)
com.itextpdf.kernel.font.PdfFontFactory.createRegisteredFont(String,String,boolean)
com.itextpdf.io.codec.brotli.dec.IntReader.init(IntReader,byte,int)
com.itextpdf.io.font.otf.GlyphLine.add(int,Glyph)
com.itextpdf.layout.AreaBreakTest.lastPageAreaBreakTest04()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff012Test.getFontName()
com.itextpdf.io.font.woff2.w3c.format.TabledataLocaSize002Test.isFontValid()
com.itextpdf.kernel.pdf.PdfObjectWrapper.flush()
com.itextpdf.io.codec.LZWStringTable.expandCode(byte,int,short,int)
com.itextpdf.kernel.pdf.PdfReaderTest.fixPdfTest14()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff086Test.isFontValid()
com.itextpdf.kernel.pdf.xobject.PdfFormXObject.setProcessColorModel(PdfName)
com.itextpdf.kernel.pdf.SmartModePdfObjectsSerializer.getSavedSerializedObject(SerializedObjectContent)
com.itextpdf.kernel.pdf.PdfReaderTest.fixPdfTest11()
com.itextpdf.layout.margincollapse.MarginsCollapseInfo.isSelfCollapsing()
com.itextpdf.io.font.woff2.StoreBytes.storeU32(byte,int,int)
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getPdfStringWidth(PdfString,boolean)
com.itextpdf.layout.renderer.ImageRenderer.getAscent()
com.itextpdf.pdfa.checker.PdfA2Checker.checkColor(Color,PdfDictionary,Boolean)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.beginVariableText()
com.itextpdf.layout.renderer.BlockRenderer.applyRotation()
com.itextpdf.layout.element.Table.setAutoLayout()
com.itextpdf.barcodes.qrcode.CharacterSetECI.getCharacterSetECIByName(String)
com.itextpdf.io.font.CFFFontSubset.BuildFDSubrsOffsets(int,int)
com.itextpdf.test.ITextTest.removeCryptographyRestrictions()
com.itextpdf.kernel.pdf.navigation.PdfExplicitDestination.createFitBH(PdfPage,float)
com.itextpdf.io.source.ByteUtils.getIsoBytes(byte,String)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Edge.getTop()
com.itextpdf.forms.fields.PdfFormField.createButton(PdfDocument,int)
com.itextpdf.kernel.pdf.PdfEncryptionTest.encryptWithPasswordStandard40NoCompression()
com.itextpdf.kernel.pdf.PdfIndirectReference.getObjStreamNumber()
com.itextpdf.forms.fields.PdfFormField.createCheckBox(PdfDocument,Rectangle,String,String)
com.itextpdf.io.image.GifImageData.getData()
com.itextpdf.barcodes.qrcode.ByteMatrix.toString()
com.itextpdf.layout.renderer.AccessibleAttributesApplier.applyInlineLevelLayoutAttributes(AbstractRenderer,PdfDictionary)
com.itextpdf.signatures.CertificateInfo.hasMoreTokens()
com.itextpdf.kernel.pdf.collection.PdfCollectionField.getOrder()
com.itextpdf.layout.element.Paragraph.setMultipliedLeading(float)
com.itextpdf.layout.BlockTest.marginsBordersPaddingOverflow03()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.compare(IntersectNode,IntersectNode)
com.itextpdf.layout.renderer.AbstractRenderer.isFlushed()
com.itextpdf.io.font.FontEncoding.isFontSpecific()
com.itextpdf.layout.TextWritingTest.fontStyleSimulationTest01()
com.itextpdf.kernel.pdf.PdfEncryption.setKeyLength(int)
com.itextpdf.io.font.otf.GsubLookupType2.transformOne(GlyphLine)
com.itextpdf.kernel.pdf.PdfPrimitivesTest.setup()
com.itextpdf.kernel.pdf.PdfCatalog.setLang(PdfString)
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.flushPageTags(PdfPage)
com.itextpdf.layout.BlockTest.borderRadiusTest04()
com.itextpdf.kernel.pdf.EncodingTest.symbolTrueTypeFontIdentityTest()
com.itextpdf.kernel.pdf.filespec.PdfFileSpec.isWrappedObjectMustBeIndirect()
com.itextpdf.pdfa.checker.PdfA1Checker.checkOutputIntents(PdfDictionary)
com.itextpdf.layout.renderer.TypographyUtils.applyOtfScript(FontProgram,GlyphLine,Character,UnicodeScript)
com.itextpdf.kernel.pdf.FreeReferencesTest.freeReferencesTest03()
com.itextpdf.kernel.xmp.impl.ParseRDF.isCoreSyntaxTerm(int)
com.itextpdf.io.font.otf.GsubLookupType5.transformOne(GlyphLine)
com.itextpdf.test.ExtendedITextTest.afterTestMethodAction()
com.itextpdf.pdfa.PdfA1EmbeddedFilesCheckTest.fileSpecCheckTest02()
com.itextpdf.kernel.xmp.impl.XMPNormalizer.compareAliasedSubtrees(XMPNode,XMPNode,boolean)
com.itextpdf.layout.ListTest.listNestedInTableTest01()
com.itextpdf.layout.font.FontCharacteristics.hashCode()
com.itextpdf.kernel.xmp.XMPDateTimeFactory.createFromISO8601(String)
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.setCurrentPoint(Point)
com.itextpdf.signatures.SignUtils.getIssuerX509Name(ASN1Sequence)
com.itextpdf.kernel.font.PdfType0Font.writeText(String,PdfOutputStream)
com.itextpdf.kernel.font.PdfFontFactory.getRegisteredFamilies()
com.itextpdf.layout.renderer.IRenderer.getNextRenderer()
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.hasMcid(int,boolean)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff018Test.getTestInfo()
com.itextpdf.io.font.FontNames.setWeight(int)
com.itextpdf.layout.renderer.CollapsedTableBorders.setTopBorderCollapseWith(List)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setLineJoinStyle(int)
com.itextpdf.io.image.TiffImageHelper.getDpi(TIFFField,int)
com.itextpdf.layout.renderer.IRenderer.addChild(IRenderer)
com.itextpdf.barcodes.BarcodeDataMatrix.setOptions(int)
com.itextpdf.kernel.font.PdfType0Font.getContentWidth(PdfString)
com.itextpdf.kernel.xmp.options.SerializeOptions.getReadOnlyPacket()
com.itextpdf.layout.renderer.AbstractRenderer.draw(DrawContext)
com.itextpdf.pdfa.PdfAFontTest.createDocumentWithFont(String,String,String,PdfAConformanceLevel)
com.itextpdf.layout.renderer.ParagraphRenderer.layout(LayoutContext)
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.getPolyFillMode()
com.itextpdf.layout.property.UnitValue.getUnitType()
com.itextpdf.barcodes.Barcode128.getRawText(String,boolean)
com.itextpdf.pdfa.PdfA2ActionCheckTest.actionCheck12()
com.itextpdf.layout.AreaBreakTest.areaBreakInsideDiv02Test()
com.itextpdf.kernel.pdf.annot.PdfTrapNetworkAnnotation.setFauxedFonts(PdfArray)
com.itextpdf.forms.FormFieldFlatteningTest.formFlatteningTest_DefaultAppearanceGeneration_Rot0()
com.itextpdf.signatures.PdfSignature.getContents()
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.getTagReference(int)
com.itextpdf.kernel.pdf.PdfEncryption.getEncryptionStream(OutputStream)
com.itextpdf.barcodes.BarcodeEAN.getBarsEAN8(String)
com.itextpdf.io.font.woff2.w3c.format.TabledataHmtxTransform001Test.getTestInfo()
com.itextpdf.layout.renderer.TextRenderer.isGlyphPartOfWordForHyphenation(Glyph)
com.itextpdf.kernel.pdf.tagutils.BackedAccessibleProperties.getLanguage()
com.itextpdf.forms.fields.PdfChoiceFormField.setMultiSelect(boolean)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff050Test.getTestInfo()
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.createLocation(TextRenderInfo,LineSegment)
com.itextpdf.kernel.pdf.PdfCatalog.remove(PdfName)
com.itextpdf.layout.FloatTest.inlineFloatingImageToNextPage()
com.itextpdf.kernel.xmp.XmlDomWriter.setOutput(java,io,Writer)
com.itextpdf.layout.SimpleTextExtractionStrategyTest.createRenderListenerForTest()
com.itextpdf.signatures.SignUtils.isSignatureValid(TimeStampToken,X509Certificate,String)
com.itextpdf.kernel.crypto.securityhandler.PubSecHandlerUsingStandard40.initKey(byte,int)
com.itextpdf.pdfa.PdfAFontTest.fontCheckPdfA2_01()
com.itextpdf.layout.TableTest.autoLayoutTest02()
com.itextpdf.io.font.FontProgramDescriptor.getFamilyNameLowerCase()
com.itextpdf.kernel.pdf.PdfCatalog.setOpenAction(PdfDestination)
com.itextpdf.io.font.FontMetrics.setBbox(int,int,int,int)
com.itextpdf.kernel.pdf.action.PdfTargetDictionary.put(PdfName,PdfObject)
com.itextpdf.layout.margincollapse.MarginsCollapse.clone()
com.itextpdf.kernel.xmp.impl.ByteBuffer.append(byte)
com.itextpdf.barcodes.BarcodeInter25.getBarcodeSize()
com.itextpdf.pdfa.checker.PdfA1Checker.checkColor(Color,PdfDictionary,Boolean)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.release()
com.itextpdf.kernel.pdf.colorspace.PdfPattern.setXStep(float)
com.itextpdf.kernel.font.PdfType3Font.containsGlyph(String,int)
com.itextpdf.layout.element.BlockElement.setHeight(float)
com.itextpdf.signatures.PdfSignatureAppearance.isInvisible()
com.itextpdf.signatures.LtvVerification.merge()
com.itextpdf.io.codec.brotli.dec.Decode.decompress(State)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.getAppearanceCharacteristics()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff041Test.getFontName()
com.itextpdf.kernel.pdf.PdfOutputIntent.getRegistryName()
com.itextpdf.layout.renderer.TextRenderer.getLastYLineRecursively()
com.itextpdf.layout.RotationTest.blockWithBorderBoxSizingTest01()
com.itextpdf.kernel.utils.CompareTool.compareVisually(String,String,Map,List)
com.itextpdf.pdfa.PdfA2EmbeddedFilesCheckTest.compareResult(String,String)
com.itextpdf.signatures.PdfPKCS7.getEncodedPKCS7(byte,ITSAClient,byte,Collection,PdfSigner,CryptoStandard)
com.itextpdf.barcodes.qrcode.QRCode.getECLevel()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.setWordSpacing(float)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.rectangle(Rectangle)
com.itextpdf.layout.hyphenation.HyphenationConfig.setHyphenSymbol(char)
com.itextpdf.layout.ElementPropertyContainer.setWidth(float)
com.itextpdf.kernel.xmp.options.Options.hashCode()
com.itextpdf.kernel.geom.Vector.equals(Object)
com.itextpdf.layout.border.DashedBorder.getType()
com.itextpdf.forms.PdfAcroForm.getDefaultResources()
com.itextpdf.kernel.pdf.PdfDocumentInfo.put(PdfName,PdfObject)
com.itextpdf.kernel.geom.Path.closeAllSubpaths()
com.itextpdf.signatures.PdfSigner.setFieldLockDict(PdfSigFieldLockDictionary)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.getUndercolorRemovalFunction2()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff097Test.getTestInfo()
com.itextpdf.io.font.woff2.w3c.format.TabledataHmtxTransform002Test.isFontValid()
com.itextpdf.layout.renderer.AccessibleAttributesApplier.applyBorderAttributes(AbstractRenderer,PdfDictionary)
com.itextpdf.io.font.TrueTypeFont.getGdefTable()
com.itextpdf.kernel.pdf.PdfOutputIntent.isWrappedObjectMustBeIndirect()
com.itextpdf.signatures.DigestAlgorithms.normalizeDigestName(String)
com.itextpdf.kernel.pdf.PdfIndirectReference.getGenNumber()
com.itextpdf.io.image.TiffImageHelper.getArrayLongShort(TIFFDirectory,int)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setColor(PdfColorSpace,float,boolean)
com.itextpdf.layout.AutoTaggingTest.linkTest01()
com.itextpdf.kernel.xmp.options.Options.procureOptionNames()
com.itextpdf.kernel.crypto.AESCipher.update(byte,int,int)
com.itextpdf.kernel.xmp.options.PropertyOptions.getHasType()
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.getModelBottomMargin(IRenderer)
com.itextpdf.layout.KeepTogetherTest.keepTogetherParagraphTest01()
com.itextpdf.barcodes.Barcode1D.getTextAlignment()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff047Test.isFontValid()
com.itextpdf.barcodes.qrcode.MatrixUtil.makeTypeInfoBits(ErrorCorrectionLevel,int,BitVector)
com.itextpdf.layout.property.UnitValue.setUnitType(int)
com.itextpdf.io.image.BmpImageHelper.readPalette(int,BmpParameters)
com.itextpdf.kernel.xmp.XMPDateTime.getSecond()
com.itextpdf.kernel.pdf.PdfFontTest.NotoSansCJKjpTest()
com.itextpdf.layout.element.Image.getRole()
com.itextpdf.io.codec.TIFFDirectory.readDouble(RandomAccessFileOrArray)
com.itextpdf.signatures.sign.TimestampSigTest.before()
com.itextpdf.kernel.pdf.PdfReader.getOriginalFileId()
com.itextpdf.layout.element.Table.addCell(Image)
com.itextpdf.layout.Style.getPaddingTop()
com.itextpdf.io.codec.TIFFDirectory.getFieldAsLong(int)
com.itextpdf.signatures.DigestAlgorithms.getMessageDigestFromOid(String,String)
com.itextpdf.layout.renderer.TextRenderer.createCopy(GlyphLine,PdfFont)
com.itextpdf.kernel.pdf.PdfCanvasTest.colorTest07()
com.itextpdf.layout.renderer.TableRenderer.getCell(int,int)
com.itextpdf.kernel.pdf.PdfReaderTest.fixPdfTest02()
com.itextpdf.kernel.pdf.canvas.parser.data.PathRenderInfo.isGraphicsStatePreserved()
com.itextpdf.io.image.ImageDataFactory.createImageInstance(URL,boolean)
com.itextpdf.kernel.pdf.PdfEncryptionTest.openEncryptedDocWithWrongCertificate()
com.itextpdf.layout.renderer.TableRenderer.isFooterRendererOfLargeTable()
com.itextpdf.kernel.pdf.xobject.PdfFormXObject.flush()
com.itextpdf.kernel.pdf.canvas.parser.data.PathRenderInfo.getStrokeColor()
com.itextpdf.io.source.RandomAccessFileOrArray.read(byte)
com.itextpdf.barcodes.BarcodeCodabarTest.beforeClass()
com.itextpdf.layout.layout.LayoutResult.toString()
com.itextpdf.signatures.sign.SigningTest.sign(String,String,String,Certificate,PrivateKey,String,PdfSigner,CryptoStandard,String,String,Rectangle,boolean,boolean)
com.itextpdf.io.font.FontMetrics.getSubscriptOffset()
com.itextpdf.io.font.TrueTypeCollection.getTTCSize()
com.itextpdf.layout.element.List.setListSymbol(String)
com.itextpdf.test.WrappedSamplesRunner.toString()
com.itextpdf.kernel.pdf.annot.PdfPolyGeomAnnotation.setLineEndingStyles(PdfArray)
com.itextpdf.signatures.sign.PadesSigTest.padesRsaSigTest01()
com.itextpdf.kernel.geom.AffineTransform.inverseTransform(float,int,float,int,int)
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperBridge.addPath(ClipperOffset,com,itextpdf,kernel,geom,Path,IClipper,JoinType,IClipper,EndType)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff108Test.getFontName()
com.itextpdf.kernel.pdf.layer.PdfLayer.setOn(boolean)
com.itextpdf.signatures.BouncyCastleDigest.getMessageDigest(String)
com.itextpdf.kernel.geom.AffineTransform.deltaTransform(double,int,double,int,int)
com.itextpdf.barcodes.qrcode.GF256.getOne()
com.itextpdf.kernel.utils.CompareTool.compareBooleansExtended(PdfBoolean,PdfBoolean,ObjectPath,CompareResult)
com.itextpdf.io.font.Type1Font.getGlyph(String)
com.itextpdf.kernel.xmp.impl.ParseRDF.addChildNode(XMPMetaImpl,XMPNode,Node,String,boolean)
com.itextpdf.layout.renderer.AbstractRenderer.getInnerAreaBBox()
com.itextpdf.barcodes.BarcodeEANSUPP.createAwtImage(java,awt,Color,java,awt,Color)
com.itextpdf.kernel.pdf.PdfDocument.storeLinkAnnotation(PdfPage,PdfLinkAnnotation)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Edge.getNextInAEL(Direction)
com.itextpdf.layout.TableBorderTest.wideBorderTest01()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff132Test.getFontName()
com.itextpdf.layout.renderer.EmptyNestedTableTest.buildEmptyTable()
com.itextpdf.pdfa.checker.PdfAChecker.checkPage(PdfPage)
com.itextpdf.layout.AreaBreakTest.beforeClass()
com.itextpdf.kernel.pdf.PdfEncryptionTest.encryptWithCertificateAes256()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff107Test.getTestInfo()
com.itextpdf.kernel.pdf.ByteBufferOutputStream.setCacheSize(int)
com.itextpdf.kernel.pdf.PdfPage.put(PdfName,PdfObject)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setLineDash(float)
com.itextpdf.barcodes.BarcodePDF417.getCode()
com.itextpdf.layout.renderer.ParagraphRenderer.fixOverflowRenderer(ParagraphRenderer)
com.itextpdf.kernel.pdf.filters.LZWDecoder.addStringToTable(byte,byte)
com.itextpdf.kernel.xmp.options.ParseOptions.getStrictAliasing()
com.itextpdf.io.source.RandomAccessFileOrArray.seek(long)
com.itextpdf.io.image.ImageDataFactory.createBmp(byte,boolean,int)
com.itextpdf.kernel.pdf.filters.FlateDecodeFilter.decode(byte,PdfName,PdfObject,PdfDictionary)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff093Test.getTestInfo()
com.itextpdf.kernel.font.PdfType3Font.isEmbedded()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff015Test.isFontValid()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff060Test.getTestInfo()
com.itextpdf.io.font.FontProgram.setFontWidth(String)
com.itextpdf.kernel.xmp.options.PropertyOptions.mergeWith(PropertyOptions)
com.itextpdf.kernel.xmp.impl.XMPNode.findChildByName(String)
com.itextpdf.kernel.pdf.PdfArrayDirectIterator.next()
com.itextpdf.layout.element.BlockElement.setPadding(float)
com.itextpdf.io.font.Pfm2afm.putkerntab()
com.itextpdf.layout.minmaxwidth.MinMaxWidth.toString()
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.isAtWordBoundary(ITextChunkLocation)
com.itextpdf.io.util.IntHashtable.containsValue(int)
com.itextpdf.io.font.woff2.w3c.format.HeaderNumTables001Test.getTestInfo()
com.itextpdf.layout.renderer.TableRenderer.isTopTablePart()
com.itextpdf.kernel.xmp.XMPMeta.insertArrayItem(String,String,int,String,PropertyOptions)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.deleteFromAEL(Edge)
com.itextpdf.kernel.pdf.action.PdfTargetDictionary.getTarget()
com.itextpdf.io.codec.TIFFLZWDecoder.writeString(byte)
com.itextpdf.kernel.pdf.PdfPrimitivesTest.equalNulls()
com.itextpdf.kernel.xmp.impl.XMPMetaParser.findRootNode(Node,boolean,Object)
com.itextpdf.io.font.woff2.w3c.format.TabledataTransformLength002Test.getTestInfo()
com.itextpdf.kernel.xmp.impl.ParseRDF.rdf_NodeElementAttrs(XMPMetaImpl,XMPNode,Node,boolean)
com.itextpdf.io.source.FileChannelRandomAccessSource.get(long,byte,int,int)
com.itextpdf.kernel.pdf.canvas.parser.filter.IEventFilter.accept(IEventData,EventType)
com.itextpdf.kernel.xmp.impl.XMPNode.getQualifier(int)
com.itextpdf.layout.renderer.MaxMaxWidthHandler.updateMinChildWidth(float)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setFillOpacity(float)
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingStandard40.checkPassword(boolean,byte,byte,byte)
com.itextpdf.kernel.geom.Point.setLocation(double,double)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.paintShading(PdfShading)
com.itextpdf.forms.fields.PdfFormField.normalizeFontSize(float,PdfFont,PdfArray,String)
com.itextpdf.layout.Style.setMarginRight(float)
com.itextpdf.io.image.Jpeg2000ImageData.getParameters()
com.itextpdf.layout.AutoTaggingTest.artifactTest01()
com.itextpdf.kernel.pdf.PdfIndirectReference.getOffset()
com.itextpdf.kernel.pdf.PdfPrimitivesTest.equalNumbers()
com.itextpdf.kernel.pdf.PdfAConformanceLevel.getPart()
com.itextpdf.layout.TableTest.tableWithSetHeightProperties03()
com.itextpdf.barcodes.dmcode.Placement.ecc200()
com.itextpdf.kernel.pdf.canvas.parser.TextRenderInfoTest.getSupportedEvents()
com.itextpdf.kernel.pdf.action.PdfAction.createGoTo(PdfDestination)
com.itextpdf.kernel.pdf.PdfName.generateValue()
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.getResources()
com.itextpdf.layout.AreaBreakTest.lastPageAreaBreakTest01()
com.itextpdf.kernel.pdf.PdfDocumentInfo.getCreator()
com.itextpdf.kernel.pdf.PdfPagesTree.getRoot()
com.itextpdf.kernel.pdf.canvas.parser.util.PdfCanvasParser.readDictionary()
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingAes256.isEncryptMetadata()
com.itextpdf.kernel.pdf.PdfViewerPreferences.setViewClip(PdfViewerPreferencesConstants)
com.itextpdf.io.font.FontNames.getMacStyle()
com.itextpdf.io.util.DateTimeUtil.getCurrentTimeDate()
com.itextpdf.kernel.pdf.action.PdfTargetDictionary.setAnnotation(String)
com.itextpdf.layout.hyphenation.PatternParser.getInterletterValues(String)
com.itextpdf.kernel.geom.Subpath.getSegments()
com.itextpdf.io.font.cmap.CMapContentParser.readArray()
com.itextpdf.kernel.utils.CompareToolTest.compareToolErrorReportTest01()
com.itextpdf.kernel.utils.PageRangeTest.addSequenceConstructor()
com.itextpdf.signatures.SignUtils.isSignatureValid(BasicOCSPResp,Certificate,String)
com.itextpdf.kernel.pdf.PdfWriter.calculateIndRefKey(PdfIndirectReference)
com.itextpdf.layout.ElementPropertyContainer.setBold()
com.itextpdf.layout.TableTest.nestedTablesCollapseTest01()
com.itextpdf.kernel.pdf.PdfWriter.write(byte)
com.itextpdf.io.font.woff2.w3c.format.BlocksOrdering003Test.isFontValid()
com.itextpdf.io.font.FontProgram.setStemH(int)
com.itextpdf.kernel.geom.Point.distanceSq(double,double)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff138Test.getTestInfo()
com.itextpdf.io.source.GroupedRandomAccessSource.getStartingSourceIndex(long)
com.itextpdf.forms.xfa.XfaForm.write(PdfAcroForm)
com.itextpdf.layout.LargeElementTest.largeTableWithHeaderFooterTest01D()
com.itextpdf.kernel.geom.Matrix.get(int)
com.itextpdf.layout.renderer.TableWidths.warn100percent()
com.itextpdf.kernel.pdf.WriterProperties.setStandardEncryption(byte,byte,int,int)
com.itextpdf.signatures.CertificateVerification.verifyCertificate(X509Certificate,Collection)
com.itextpdf.layout.renderer.LineRenderer.calculateTab(IRenderer,float,float)
com.itextpdf.layout.SimpleTextExtractionStrategyTest.createPdfWithArrayText(PdfTextArray)
com.itextpdf.kernel.font.PdfFontFactory.createFont(byte,String)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.getLineJoinStyle()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff111Test.isFontValid()
com.itextpdf.signatures.CertificateUtil.getCRLURL(X509Certificate)
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.setExtentWx(int)
com.itextpdf.kernel.color.Color.getColorSpace()
com.itextpdf.io.codec.brotli.dec.BitReader.jumpToByteBoundary(BitReader)
com.itextpdf.kernel.pdf.navigation.PdfExplicitDestination.createFitR(int,float,float,float,float)
com.itextpdf.kernel.pdf.filters.ASCII85DecodeFilter.ASCII85Decode(byte)
com.itextpdf.kernel.utils.CompareTool.compareXmp(String,String)
com.itextpdf.signatures.SignatureUtil.getTranslatedFieldName(String)
com.itextpdf.io.font.FontIdentification.setTtfUniqueId(String)
com.itextpdf.io.codec.TIFFLZWDecoder.addStringToTable(byte,byte)
com.itextpdf.kernel.pdf.PdfCanvasTest.create100PagesDocument()
com.itextpdf.forms.PdfFormFieldTest.autoScaleFontSizeInFormFields()
com.itextpdf.pdfa.PdfA2CatalogCheckTest.catalogCheck02()
com.itextpdf.layout.AutoTaggingTest.listTest01()
com.itextpdf.kernel.geom.AffineTransform.getRotateInstance(double)
com.itextpdf.io.source.PdfTokenizer.readLineSegment(ByteBuffer)
com.itextpdf.kernel.xmp.XMPDateTime.getMinute()
com.itextpdf.kernel.pdf.layer.PdfLayerMembership.setVisibilityPolicy(PdfName)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff062Test.getFontName()
com.itextpdf.io.codec.TIFFField.getAsString(int)
com.itextpdf.layout.TableTest.toLargeElementWithKeepTogetherPropertyInTableTest01()
com.itextpdf.layout.NonBreakableSpaceTest.beforeClass()
com.itextpdf.forms.PdfAcroForm.setDefaultJustification(int)
com.itextpdf.layout.renderer.TextFilteringReversedRangesTest.test02()
com.itextpdf.kernel.xmp.options.Options.isExactly(int)
com.itextpdf.io.image.PngImageHelper.decodePaethFilter(byte,byte,int,int)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setTextRise(float)
com.itextpdf.layout.border.DottedBorder.draw(PdfCanvas,float,float,float,float,float,float)
com.itextpdf.io.font.Type1Parser.getMetricsFile()
com.itextpdf.kernel.pdf.PdfDictionary.putAll(PdfDictionary)
com.itextpdf.io.codec.brotli.dec.SynthTest.testInsertTooLong()
com.itextpdf.io.font.Type1Font.getFontStreamBytes()
com.itextpdf.kernel.pdf.canvas.draw.ILineDrawer.draw(PdfCanvas,Rectangle)
com.itextpdf.kernel.pdf.PdfIndirectReference.newInstance()
com.itextpdf.kernel.xmp.impl.xpath.XMPPathSegment.isAlias()
com.itextpdf.layout.renderer.AbstractRenderer.calculateShiftToPositionBBoxOfPointsAt(float,float,List)
com.itextpdf.layout.property.Transform.getMultipleTransform()
com.itextpdf.kernel.utils.PdfSplitterTest.splitDocumentByOutlineTest()
com.itextpdf.layout.renderer.TextRenderer.getTabAnchorCharacterPosition()
com.itextpdf.layout.TableBorderTest.tableWithHeaderFooterTest08()
com.itextpdf.kernel.pdf.PdfWriterTest.createEmptyDocument()
com.itextpdf.kernel.pdf.PdfObject.release()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff066Test.getFontName()
com.itextpdf.kernel.font.Type3Glyph.getUrx()
com.itextpdf.kernel.pdf.annot.PdfStampAnnotation.setStampName(PdfName)
com.itextpdf.layout.hyphenation.Hyphenator.hyphenate(String,String,String,int,int)
com.itextpdf.signatures.PdfSigner.signDetached(IExternalDigest,IExternalSignature,Certificate,Collection,IOcspClient,ITSAClient,int,CryptoStandard,SignaturePolicyInfo)
com.itextpdf.io.font.TrueTypeFontSubset.createTableDirectory()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff005Test.isFontValid()
com.itextpdf.layout.font.FontSet.addFont(String,String)
com.itextpdf.signatures.sign.PadesSignatureLevelTest.padesSignatureLevelLTATest01()
com.itextpdf.kernel.pdf.PdfString.hashCode()
com.itextpdf.kernel.xmp.impl.XMPSchemaRegistryImpl.registerAlias(String,String,String,String,AliasOptions)
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.readObject(ObjectInputStream)
com.itextpdf.kernel.pdf.PdfCopyTest.copying3()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Path.TranslatePath(Point,LongPoint)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.getName()
com.itextpdf.io.font.CFFFontSubset.ReconstructPrivateDict(int,OffsetItem,IndexBaseItem,OffsetItem)
com.itextpdf.forms.fields.PdfFormField.getFieldFlag(int)
com.itextpdf.signatures.verify.LtvVerifierTest.validLtvDocTest01()
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.getStrokeOpacity()
com.itextpdf.barcodes.Barcode128.getPackedRawDigits(String,int,int)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Path.setOffPt(Point,LongPoint)
com.itextpdf.io.font.woff2.Woff2Dec.readNumHMetrics(byte,int,int)
com.itextpdf.pdfa.checker.PdfAChecker.checkTagStructureElement(PdfObject)
com.itextpdf.layout.border.GrooveBorder.setOuterHalfColor(PdfCanvas,Side)
com.itextpdf.kernel.pdf.PdfFontTest.NotoSansCJKjpTest02()
com.itextpdf.kernel.pdf.PdfNull.makeIndirect(PdfDocument)
com.itextpdf.kernel.pdf.action.PdfAction.createHide(String,boolean)
com.itextpdf.kernel.geom.Rectangle.moveRight(float)
com.itextpdf.kernel.geom.Line.getBasePoints()
com.itextpdf.layout.FloatTest.floatsOnPageSplit12()
com.itextpdf.signatures.SignUtils.next()
com.itextpdf.kernel.pdf.canvas.parser.listener.DefaultPdfTextLocation.setText(String)
com.itextpdf.barcodes.Barcode39.getBarsCode39(String)
com.itextpdf.kernel.pdf.PdfStream.setData(byte,boolean)
com.itextpdf.kernel.pdf.xobject.PdfXObject.isWrappedObjectMustBeIndirect()
com.itextpdf.io.codec.brotli.dec.BitReader.checkHealth(BitReader,boolean)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.addForm(PdfFormXObject,float,float,float,boolean)
com.itextpdf.barcodes.Barcode1D.setFont(PdfFont)
com.itextpdf.layout.layout.TextLayoutResult.isWordHasBeenSplit()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.closePath()
com.itextpdf.layout.border.DottedBorder.drawCellBorder(PdfCanvas,float,float,float,float)
com.itextpdf.io.codec.brotli.dec.SynthTest.testInvalidNoMetaBlocks()
com.itextpdf.barcodes.qrcode.Mode.getCharacterCountBits(Version)
com.itextpdf.io.image.GifImageHelper.process(InputStream,GifParameters,int)
com.itextpdf.kernel.pdf.PdfStructElemTest.structElemTest01()
com.itextpdf.forms.fields.PdfFormField.setFieldName(String)
com.itextpdf.io.source.MappedChannelRandomAccessSource.length()
com.itextpdf.layout.AutoTaggingTest.createParagraph2()
com.itextpdf.layout.TableBorderTest.createDocument()
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.endsWithSpace(String)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.getObjectName()
com.itextpdf.kernel.pdf.annot.PdfLineAnnotation.setContentsAsCaption(boolean)
com.itextpdf.layout.renderer.DocumentRenderer.flushSingleRenderer(IRenderer)
com.itextpdf.signatures.PdfSignatureAppearance.getLayer2Text()
com.itextpdf.layout.TableTest.simpleTableTest12()
com.itextpdf.kernel.pdf.PdfResources.addResource(PdfObject,PdfName,PdfName)
com.itextpdf.layout.renderer.LineRenderer.updateBidiLevels(int,BaseDirection)
com.itextpdf.kernel.pdf.PdfStreamTest.streamAppendDataOnJustCopiedWithCompression()
com.itextpdf.forms.FormFieldFlatteningTest.formFlatteningTest_DefaultAppearanceGeneration_Rot180()
com.itextpdf.kernel.font.PdfTrueTypeFont.containsGlyph(String,int)
com.itextpdf.io.source.RandomAccessFileOrArray.ensureByteSourceIsThreadSafe()
com.itextpdf.io.font.woff2.w3c.format.BlocksExtraneousData002Test.getTestInfo()
com.itextpdf.kernel.pdf.PdfPrimitivesTest.generatePdfArrayWithIntNumbers(PdfDocument,boolean)
com.itextpdf.io.image.ImageData.isInterpolation()
com.itextpdf.kernel.geom.AffineTransform.getTranslateX()
com.itextpdf.io.font.otf.lookuptype5.SubTableLookup5Format3.isGlyphMatchesInput(int,int)
com.itextpdf.io.font.FontProgramFactory.createFont(String,byte,boolean)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.updateCtm(Matrix)
com.itextpdf.io.codec.CCITTG4Encoder.putspan(int,int)
com.itextpdf.forms.fields.PdfFormField.generateDefaultAppearanceString(PdfFont,int,PdfResources)
com.itextpdf.kernel.pdf.PdfCanvasTest.create1000PagesDocument()
com.itextpdf.pdfa.PdfA2AcroFormCheckTest.acroFormCheck02()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff059Test.getFontName()
com.itextpdf.io.source.WindowRandomAccessSource.close()
com.itextpdf.layout.renderer.BlockRenderer.applyWidth(Rectangle,Float,OverflowPropertyValue)
com.itextpdf.kernel.Version.getLicenseKeyClass()
com.itextpdf.io.font.FontProgramFactory.registerSystemFontDirectories()
com.itextpdf.kernel.font.DocTrueTypeFont.getMissingWidth()
com.itextpdf.io.font.CFFFont.seek(int)
com.itextpdf.kernel.utils.PageRange.hashCode()
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.getStartLocation()
com.itextpdf.kernel.pdf.PdfEncryption.createInfoId(byte,boolean)
com.itextpdf.kernel.pdf.PdfPrimitivesTest.primitivesStringTest()
com.itextpdf.kernel.pdf.PdfAnnotationTest.addLinkAnnotation02()
com.itextpdf.io.image.TiffImageHelper.processExtraSamples(DeflaterOutputStream,DeflaterOutputStream,byte,int,int,int,int)
com.itextpdf.io.font.FontNames.isOutline()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff125Test.getFontName()
com.itextpdf.kernel.pdf.PdfDictionary.toString()
com.itextpdf.layout.renderer.RotationUtils.getValue()
com.itextpdf.kernel.pdf.PdfCopyTest.copySamePageWithAnnotationsSeveralTimes()
com.itextpdf.layout.renderer.LineRenderer.justify(float)
com.itextpdf.layout.PositioningTest.beforeClass()
com.itextpdf.kernel.pdf.canvas.parser.listener.DefaultPdfTextLocation.getText()
com.itextpdf.io.font.otf.GlyphLine.equals(Object)
com.itextpdf.pdfa.checker.PdfAChecker.checkNonSymbolicTrueTypeFont(PdfTrueTypeFont)
com.itextpdf.barcodes.BarcodeDataMatrix.getHeight()
com.itextpdf.kernel.Version.getRelease()
com.itextpdf.kernel.xmp.impl.XMPIteratorImpl.getChildrenIterator()
com.itextpdf.kernel.font.PdfType0Font.getOrdering(PdfDictionary)
com.itextpdf.kernel.pdf.PdfNameTree.getNameArray(PdfObject)
com.itextpdf.layout.CollapsingMarginsTest.collapsingMarginsTest02()
com.itextpdf.io.font.FontProgram.getKerning(int,int)
com.itextpdf.layout.element.Table.isSkipFirstHeader()
com.itextpdf.io.image.ImageData.getTransparency()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff048Test.isFontValid()
com.itextpdf.kernel.crypto.OutputStreamEncryption.close()
com.itextpdf.io.font.woff2.w3c.format.BlocksExtraneousData005Test.getTestInfo()
com.itextpdf.kernel.pdf.PdfPage.removeAnnotation(PdfAnnotation)
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessorTest.eventOccurred(IEventData,EventType)
com.itextpdf.barcodes.qrcode.QRCodeWriter.encode(String,int,int)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.getSubrangeWidth(GlyphLine,int,int)
com.itextpdf.kernel.pdf.canvas.parser.PdfTextExtractor.getTextFromPage(PdfPage,ITextExtractionStrategy)
com.itextpdf.io.image.ImageData.setTransparency(int)
com.itextpdf.io.font.otf.GposLookupType2.readSubTable(int)
com.itextpdf.layout.property.Underline.getYPosition(float)
com.itextpdf.barcodes.qrcode.FormatInformation.getDataMask()
com.itextpdf.kernel.pdf.PdfNameTree.addEntry(String,PdfObject)
com.itextpdf.layout.font.FontProvider.addFont(String)
com.itextpdf.kernel.pdf.PdfEncryptionTest.encryptWithPasswordStandard128()
com.itextpdf.io.source.PdfTokenizer.isHexString()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff045Test.getFontName()
com.itextpdf.kernel.font.Type3Glyph.writeMetrics(float,float,float,float,float,boolean)
com.itextpdf.kernel.pdf.PdfResources.setReadOnly(boolean)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.copyFrom(CanvasGraphicsState)
com.itextpdf.kernel.pdf.canvas.parser.clipper.PolyNode.isHoleNode()
com.itextpdf.layout.renderer.ListItemRenderer.applyListSymbolPosition()
com.itextpdf.layout.renderer.AbstractRenderer.retrieveWidth(float)
com.itextpdf.layout.BlockTest.overflowTest06()
com.itextpdf.kernel.pdf.PdfWriter.isFullCompression()
com.itextpdf.kernel.pdf.canvas.wmf.MetaDo.outputText(int,int,int,int,int,int,int,String)
com.itextpdf.io.font.CFFFont.exists(String)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Edge.getMaximaPair()
com.itextpdf.kernel.pdf.PdfPagesTest.testInheritedResources()
com.itextpdf.io.font.woff2.w3c.format.TabledataDecompressedLength001Test.isFontValid()
com.itextpdf.layout.renderer.TableRenderer.adjustFooterAndFixOccupiedArea(Rectangle)
com.itextpdf.io.font.cmap.CMapUniCid.lookup(int)
com.itextpdf.kernel.pdf.PdfPages.compareTo(int)
com.itextpdf.kernel.pdf.PdfObjectTest.indirectsChain2()
com.itextpdf.io.font.cmap.CMapObject.isNumber()
com.itextpdf.kernel.pdf.canvas.parser.HighlightItemsTest.getRectangles()
com.itextpdf.barcodes.BarcodeEAN.getBarcodeSize()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff006Test.isFontValid()
com.itextpdf.forms.fields.PdfFormField.getWidgets()
com.itextpdf.barcodes.BarcodePDF417.setMacroFileId(String)
com.itextpdf.test.ITextTest.deleteDirectory(String)
com.itextpdf.forms.xfa.AcroFieldsSearch.setAcroShort2LongName(Map)
com.itextpdf.io.font.OpenTypeParser.readCffFont()
com.itextpdf.signatures.SignUtils.hasNext()
com.itextpdf.io.codec.TIFFField.getType()
com.itextpdf.kernel.utils.CompareTool.compareByContent(String,String,String,String,Map,byte,byte)
com.itextpdf.kernel.xmp.options.SerializeOptions.getSort()
com.itextpdf.layout.FloatTest.clearanceApplyingPageSplit03()
com.itextpdf.kernel.pdf.tagutils.BackedAccessibleProperties.setAlternateDescription(String)
com.itextpdf.signatures.LtvVerification.hashBytesSha1(byte)
com.itextpdf.kernel.pdf.tagging.PdfStructElem.setAttributes(PdfObject)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.resetStrokeColorCmyk()
com.itextpdf.kernel.pdf.colorspace.PdfPattern.setColored(boolean)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff014Test.getFontName()
com.itextpdf.kernel.utils.TaggedPdfReaderTool.getMcidContent()
com.itextpdf.io.font.otf.ContextualSubTable.getMatchingContextRule(GlyphLine)
com.itextpdf.kernel.xmp.XMPMeta.setQualifier(String,String,String,String,String)
com.itextpdf.kernel.pdf.PdfResources.addForm(PdfFormXObject,PdfName)
com.itextpdf.kernel.pdf.PdfPrimitivesTest.generatePdfArrayWithNames(PdfDocument,boolean)
com.itextpdf.layout.ElementPropertyContainer.getStrokeWidth()
com.itextpdf.io.image.JpegImageHelper.updateAttributes(ImageData)
com.itextpdf.layout.ElementPropertyContainer.setBackgroundColor(Color,float,float,float,float,float)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff037Test.getFontName()
com.itextpdf.kernel.pdf.PdfDocumentInfo.isWrappedObjectMustBeIndirect()
com.itextpdf.kernel.geom.Vector.cross(Vector)
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.hasBottomPadding(IRenderer)
com.itextpdf.layout.OpacityTest.beforeClass()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.buildResult(Paths)
com.itextpdf.signatures.sign.PdfSignatureAppearanceTest.textAutoscaleTest03()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff082Test.getFontName()
com.itextpdf.kernel.pdf.PdfNumber.increment()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff104Test.isFontValid()
com.itextpdf.io.font.woff2.w3c.format.TabledataDecompressedLength003Test.isFontValid()
com.itextpdf.kernel.pdf.PdfResources.getShading(PdfName)
com.itextpdf.layout.renderer.ImageRenderer.autoScale(LayoutArea)
com.itextpdf.layout.element.Div.add(IBlockElement)
com.itextpdf.io.font.woff2.w3c.format.Valid002Test.getFontName()
com.itextpdf.io.source.PdfTokenizer.readFully(byte)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.intersectEdges(Edge,Edge,LongPoint)
com.itextpdf.signatures.PdfSignatureAppearance.setReuseAppearance(boolean)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff024Test.getFontName()
com.itextpdf.layout.renderer.AreaBreakRenderer.getChildRenderers()
com.itextpdf.layout.element.Cell.setRole(PdfName)
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6.checkIfBacktrackContextMatch(GlyphLine,ContextualSubstRule)
com.itextpdf.io.codec.brotli.dec.Decode.decodeContextMap(int,byte,BitReader)
com.itextpdf.barcodes.BarcodeQRCodeTest.barcode02Test()
com.itextpdf.signatures.OCSPVerifier.verify(BasicOCSPResp,X509Certificate,X509Certificate,Date)
com.itextpdf.layout.font.FontInfo.getFontName()
com.itextpdf.kernel.pdf.PdfPages.incrementCount()
com.itextpdf.kernel.pdf.xobject.PdfImageXObject.checkImageType(ImageData)
com.itextpdf.layout.element.Image.getMarginTop()
com.itextpdf.io.font.Type1Font.hasKernPairs()
com.itextpdf.kernel.pdf.PdfTextArray.addAll(Collection)
com.itextpdf.kernel.pdf.PdfDictionaryValues.remove(Object)
com.itextpdf.io.codec.PngWriter.outputInt(int)
com.itextpdf.layout.renderer.IRenderer.setParent(IRenderer)
com.itextpdf.layout.renderer.ImageRenderer.applyConcatMatrix(DrawContext,Float)
com.itextpdf.kernel.pdf.layer.PdfLayer.getDocument()
com.itextpdf.layout.border.OutsetBorder.setOuterHalfColor(PdfCanvas,Border,Side)
com.itextpdf.barcodes.Barcode2D.createFormXObject(PdfDocument)
com.itextpdf.io.font.TrueTypeCollection.setCached(boolean)
com.itextpdf.kernel.xmp.options.Options.getOption(int)
com.itextpdf.forms.PdfAcroForm.setDefaultAppearance(String)
com.itextpdf.layout.TableTest.tableWithIncompleteFooter()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.simplifyPolygon(Path)
com.itextpdf.layout.font.FontCharacteristicsUtils.parseFontWeight(String)
com.itextpdf.layout.renderer.TableBorders.getMaxTopWidth()
com.itextpdf.kernel.pdf.action.PdfAction.createLaunch(PdfFileSpec,PdfWin,boolean)
com.itextpdf.kernel.xmp.impl.XMPNode.getValue()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff150Test.getTestInfo()
com.itextpdf.kernel.pdf.canvas.wmf.MetaFont.getFont()
com.itextpdf.io.font.woff2.Woff2Dec.computeOffsetToFirstTable(WOFF2Header)
com.itextpdf.layout.ElementPropertyContainer.setBaseDirection(BaseDirection)
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.applyTopMargin(Rectangle,float)
com.itextpdf.forms.fields.PdfChoiceFormField.setSpellCheck(boolean)
com.itextpdf.barcodes.BarcodePDF417.setOptions(int)
com.itextpdf.kernel.pdf.colorspace.PdfPattern.setBBox(Rectangle)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setRectangle(PdfArray)
com.itextpdf.kernel.pdf.PdfDictionaryValues.add(PdfObject)
com.itextpdf.kernel.pdf.annot.PdfFreeTextAnnotation.setCalloutLine(float)
com.itextpdf.io.codec.TIFFDirectory.readUnsignedInt(RandomAccessFileOrArray,boolean)
com.itextpdf.io.source.PagedChannelRandomAccessSource.writeObject(ObjectOutputStream)
com.itextpdf.kernel.pdf.PdfCatalog.getPageLabelsTree(boolean)
com.itextpdf.kernel.pdf.PdfEncryption.isMetadataEncrypted()
com.itextpdf.io.font.cmap.AbstractCMap.getOrdering()
com.itextpdf.kernel.pdf.PdfPrimitiveObject.copyContent(PdfObject,PdfDocument)
com.itextpdf.layout.element.Image.setFixedPosition(float,float)
com.itextpdf.pdfa.PdfA2GraphicsCheckTest.imageCheckTest4()
com.itextpdf.kernel.xmp.XMPUtils.convertToInteger(String)
com.itextpdf.layout.FontSelectorTest.getFirst(Collection)
com.itextpdf.layout.element.Image.checkImageType(ImageData)
com.itextpdf.io.util.GenericArray.get(int)
com.itextpdf.io.source.GetBufferedRandomAccessSource.close()
com.itextpdf.io.font.FontCache.loadRegistry()
com.itextpdf.layout.renderer.TypographyUtils.hashCode()
com.itextpdf.signatures.PdfPKCS7.initSignature(PrivateKey)
com.itextpdf.io.image.Jbig2ImageHelper.getGlobalSegment(RandomAccessFileOrArray)
com.itextpdf.io.font.woff2.w3c.format.BlocksOrdering004Test.getTestInfo()
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.selectMetaObject(int,PdfCanvas)
com.itextpdf.io.font.otf.GposLookupType5.transformOne(GlyphLine)
com.itextpdf.signatures.OCSPVerifier.verify(X509Certificate,X509Certificate,Date)
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.addMetaObject(MetaObject)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff019Test.isFontValid()
com.itextpdf.layout.Style.setPaddingTop(float)
com.itextpdf.kernel.pdf.action.PdfTargetDictionary.isWrappedObjectMustBeIndirect()
com.itextpdf.io.image.BmpImageData.getSize()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.isWrappedObjectMustBeIndirect()
com.itextpdf.signatures.CrlClientOnline.addUrl(String)
com.itextpdf.io.codec.TIFFDirectory.getFieldAsByte(int,int)
com.itextpdf.layout.renderer.AreaBreakRenderer.getNextRenderer()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff059Test.isFontValid()
com.itextpdf.barcodes.Barcode1D.setStartStopText(boolean)
com.itextpdf.io.font.TrueTypeFontSubset.writeFontString(String)
com.itextpdf.kernel.pdf.canvas.parser.data.PathRenderInfo.getLineCapStyle()
com.itextpdf.kernel.pdf.PdfAnnotationTest.textMarkupTest03()
com.itextpdf.io.source.PdfTokenizer.read()
com.itextpdf.layout.renderer.TextFilteringReversedRangesTest.test01()
com.itextpdf.layout.renderer.TableBorders.getStartRow()
com.itextpdf.kernel.pdf.PdfReader.decodeBytes(byte,PdfDictionary)
com.itextpdf.layout.FloatTest.floatsOnPageSplit04()
com.itextpdf.kernel.pdf.tagging.ParentTreeHandler.findObjRefByStructParentIndex(PdfDictionary,int)
com.itextpdf.kernel.utils.TaggedPdfReaderTool.eventOccurred(IEventData,EventType)
com.itextpdf.layout.renderer.BlockRenderer.getMinMaxWidth(float)
com.itextpdf.io.font.otf.OtfReadCommon.readGposValueRecord(OpenTypeFontTableReader,int)
com.itextpdf.io.font.otf.OpenTypeGdefTableReader.getGlyphClassTable()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.setProperty(String,String,Object,PropertyOptions)
com.itextpdf.layout.renderer.TableWidths.getCellWidth(CellRenderer,boolean)
com.itextpdf.layout.element.Table.getFooter()
com.itextpdf.kernel.pdf.PdfDocument.copyLinkAnnotations(PdfDocument,Map)
com.itextpdf.layout.border.DottedBorder.getDotsGap(double,float)
com.itextpdf.kernel.xmp.impl.XMPNodeUtils.lookupFieldSelector(XMPNode,String,String)
com.itextpdf.kernel.crypto.securityhandler.EncryptionUtils.fetchEnvelopedData(Key,Certificate,String,IExternalDecryptionProcess,PdfArray)
com.itextpdf.layout.element.BlockElement.setVerticalAlignment(VerticalAlignment)
com.itextpdf.layout.hyphenation.TernaryTree.strcpy(char,int,char,int)
com.itextpdf.kernel.xmp.XMPSchemaRegistry.resolveAlias(String,String)
com.itextpdf.kernel.utils.PageRangeTest.addSingleAndSequenceConstructor()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff055Test.getFontName()
com.itextpdf.barcodes.qrcode.Encoder.generateECBytes(ByteArray,int)
com.itextpdf.kernel.pdf.action.PdfAction.createThread(PdfFileSpec)
com.itextpdf.io.font.CFFFontSubset.BuildNewFile(int)
com.itextpdf.layout.AlignmentTest.blockAlignmentTest01()
com.itextpdf.pdfa.PdfA1ActionCheckTest.actionCheck09()
com.itextpdf.kernel.xmp.options.AliasOptions.defineOptionName(int)
com.itextpdf.io.font.otf.Glyph.toString()
com.itextpdf.io.font.otf.Glyph.hasOffsets()
com.itextpdf.layout.element.AbstractElement.isEmpty()
com.itextpdf.io.source.MappedChannelRandomAccessSource.exceptionIsMapFailureException(java,io,IOException)
com.itextpdf.layout.AutoTaggingTest.createParagraph1()
com.itextpdf.kernel.pdf.PdfViewerPreferences.setPrintArea(PdfViewerPreferencesConstants)
com.itextpdf.kernel.pdf.PdfDocument.setDefaultPageSize(PageSize)
com.itextpdf.layout.layout.LineLayoutResult.setSplitForcedByNewline(boolean)
com.itextpdf.kernel.geom.Subpath.isSinglePointClosed()
com.itextpdf.io.image.Jpeg2000ImageHelper.jp2_read_colr(Jpeg2000Box,InputStream)
com.itextpdf.pdfa.PdfA2PageCheckTest.catalogCheck01()
com.itextpdf.kernel.pdf.function.PdfFunction.getType()
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setLineCapStyle(int)
com.itextpdf.io.font.OpenTypeParser.process()
com.itextpdf.kernel.pdf.PdfDocument.addFont(PdfFont)
com.itextpdf.kernel.pdf.PdfEncryptor.isFillInAllowed(int)
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.isGraphicsStatePreserved()
com.itextpdf.kernel.pdf.PdfCatalog.getPagesWithOutlines()
com.itextpdf.kernel.pdf.PdfOutputStream.write(PdfString)
com.itextpdf.io.codec.Base64.encodeBytes(byte,int,int,int)
com.itextpdf.layout.renderer.TableRenderer.drawBorders(DrawContext)
com.itextpdf.io.image.ImageDataFactory.createJpeg(byte)
com.itextpdf.io.font.woff2.w3c.format.BlocksMetadataAbsent002Test.getTestInfo()
com.itextpdf.kernel.pdf.tagging.PdfMcr.getKids()
com.itextpdf.kernel.pdf.annot.PdfPopupAnnotation.setParent(PdfAnnotation)
com.itextpdf.io.image.ImageData.canBeMask()
com.itextpdf.kernel.pdf.xobject.PdfTransparencyGroup.setKnockout(boolean)
com.itextpdf.kernel.Version.isExpired()
com.itextpdf.kernel.color.Color.getNumberOfComponents()
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getRise()
com.itextpdf.pdfa.checker.PdfA2Checker.isAltCSIsTheSame(PdfObject,PdfObject)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setStrokeColor(Color)
com.itextpdf.signatures.testutils.builder.TestOcspResponseBuilder.makeOcspResponse(byte,PrivateKey)
com.itextpdf.kernel.pdf.PdfTextArray.add(PdfObject)
com.itextpdf.layout.layout.LayoutResult.getOccupiedArea()
com.itextpdf.layout.ImageTest.imageTest10()
com.itextpdf.kernel.xmp.impl.XMPNode.setImplicit(boolean)
com.itextpdf.kernel.pdf.PdfEncryption.getDocumentId()
com.itextpdf.forms.PdfFormFieldTest.formFieldTest01()
com.itextpdf.pdfa.PdfA1GraphicsTest.colorCheckTest2()
com.itextpdf.barcodes.qrcode.ByteArray.set(int,int)
com.itextpdf.kernel.xmp.impl.XMPIteratorImpl.getPath()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.eoFill()
com.itextpdf.io.codec.TIFFDirectory.getFieldAsFloat(int,int)
com.itextpdf.io.source.IndependentRandomAccessSource.close()
com.itextpdf.forms.fields.PdfFormField.createText(PdfDocument)
com.itextpdf.io.codec.TIFFField.getAsFloat(int)
com.itextpdf.kernel.font.Type3FontProgram.getKerning(Glyph,Glyph)
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperBridge.addRectToClipper(IClipper,com,itextpdf,kernel,geom,Point,IClipper,PolyType)
com.itextpdf.kernel.pdf.PdfDocument.updateXmpMetadata()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.addOutPt(Edge,LongPoint)
com.itextpdf.io.font.TrueTypeFont.getGsubTable()
com.itextpdf.layout.renderer.AbstractRenderer.getParent()
com.itextpdf.io.font.woff2.w3c.format.TabledataDecompressedLength002Test.getFontName()
com.itextpdf.kernel.pdf.tagutils.TagReference.getRole()
com.itextpdf.kernel.pdf.layer.PdfLayer.setPrint(String,boolean)
com.itextpdf.kernel.xmp.XMPVersionInfo.getMicro()
com.itextpdf.kernel.pdf.filespec.PdfFileSpec.createEmbeddedFileSpec(PdfDocument,PdfStream,String,String,PdfName,PdfName,boolean)
com.itextpdf.barcodes.BarcodeDataMatrix.getWidth()
com.itextpdf.layout.renderer.TextRenderer.getReversedRanges()
com.itextpdf.kernel.utils.PageRangeTest.addCustomEven()
com.itextpdf.test.WrappedSamplesRunner.isIgnoredClassOrPackage(String,RunnerSearchConfig)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff115Test.isFontValid()
com.itextpdf.layout.element.BlockElement.setPaddingRight(float)
com.itextpdf.io.codec.TIFFField.getAsSRationals()
com.itextpdf.kernel.pdf.canvas.parser.clipper.PolyNode.addChild(PolyNode)
com.itextpdf.kernel.pdf.PdfReaderTest.indirectsChain1()
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6Format2.getBacktrackContextLength()
com.itextpdf.io.codec.Jbig2SegmentReader.readFileHeader()
com.itextpdf.kernel.pdf.collection.PdfCollectionField.getVisibility()
com.itextpdf.signatures.CertificateUtil.getOCSPURL(X509Certificate)
com.itextpdf.kernel.pdf.tagging.StructureTreeCopier.copyTo(PdfDocument,Map,PdfDocument,boolean)
com.itextpdf.kernel.xmp.impl.XMPIteratorImpl.getBaseNS()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff115Test.getTestInfo()
com.itextpdf.kernel.pdf.PdfNumTree.readTree(PdfDictionary)
com.itextpdf.io.font.otf.GlyphLine.setReversed(boolean)
com.itextpdf.kernel.pdf.canvas.parser.GlyphTextEventListenerTest.testWithMultiFilteredRenderListener()
com.itextpdf.kernel.pdf.PdfViewerPreferences.isWrappedObjectMustBeIndirect()
com.itextpdf.layout.renderer.LineRenderer.applyLeading(float)
com.itextpdf.io.image.JpegImageHelper.processImage(ImageData)
com.itextpdf.layout.renderer.AbstractRenderer.preparePositionedRendererAndAreaForLayout(IRenderer,Rectangle,Rectangle)
com.itextpdf.pdfa.checker.PdfA1Checker.getAllowedNamedActions()
com.itextpdf.kernel.pdf.PdfDictionary.clone(List)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getUnderColorRemovalFunction2()
com.itextpdf.forms.fields.PdfChoiceFormField.isEdit()
com.itextpdf.io.util.EncodingUtil.convertToString(byte,String)
com.itextpdf.layout.margincollapse.MarginsCollapseInfo.isClearanceApplied()
com.itextpdf.layout.hyphenation.TernaryTree.knows(String)
com.itextpdf.kernel.utils.CompareTool.getBaseOutObject()
com.itextpdf.kernel.font.PdfFont.getPdfFontStream(byte,int)
com.itextpdf.kernel.pdf.annot.PdfRedactAnnotation.setRedactRolloverAppearance(PdfStream)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.addImage(PdfImageXObject,Rectangle)
com.itextpdf.kernel.utils.PdfSplitterTest.splitDocumentTest03()
com.itextpdf.layout.renderer.ListRenderer.correctListSplitting(IRenderer,IRenderer,IRenderer,LayoutArea)
com.itextpdf.barcodes.qrcode.QRCode.getMatrix()
com.itextpdf.kernel.utils.PageRange.isPageInRange(int)
com.itextpdf.layout.property.Leading.getValue()
com.itextpdf.io.image.GifImageHelper.newBpc(int)
com.itextpdf.signatures.PdfSigner.preClose(Map)
com.itextpdf.kernel.xmp.XMPDateTime.getMonth()
com.itextpdf.io.image.ImageData.getBpc()
com.itextpdf.kernel.pdf.PdfObject.isIndirectReference()
com.itextpdf.io.font.FontProgramDescriptorFactory.fetchOpenTypeFontDescriptor(OpenTypeParser)
com.itextpdf.io.codec.Jbig2SegmentReader.getGlobal(boolean)
com.itextpdf.kernel.pdf.EncryptionProperties.clearEncryption()
com.itextpdf.io.font.TrueTypeFont.getCodePagesSupported()
com.itextpdf.signatures.PdfSigner.getFieldName()
com.itextpdf.kernel.pdf.action.PdfAction.createLaunch(PdfFileSpec)
com.itextpdf.kernel.font.FontUtil.convertSimpleWidthsArray(PdfArray,int,int)
com.itextpdf.io.codec.TIFFField.getAsFloats()
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.setPolyFillMode(int)
com.itextpdf.io.image.BmpImageHelper.read8Bit(int,BmpParameters)
com.itextpdf.forms.fields.PdfFormField.setVisibility(int)
com.itextpdf.kernel.pdf.PdfResources.getResourceName(PdfObject)
com.itextpdf.io.codec.TIFFField.getAsDoubles()
com.itextpdf.pdfa.PdfA3EmbeddedFilesCheckTest.fileSpecCheckTest02()
com.itextpdf.kernel.pdf.PdfReaderTest.StreamLengthCorrection2()
com.itextpdf.io.font.FontMetrics.getStrikeoutSize()
com.itextpdf.layout.minmaxwidth.MinMaxWidthUtils.isEqual(double,double)
com.itextpdf.layout.renderer.TableRenderer.initFooterOrHeaderRenderer(boolean,Border)
com.itextpdf.forms.fields.PdfFormField.createComboBox(PdfDocument,Rectangle,String,String,String)
com.itextpdf.signatures.PdfSigner.close(PdfDictionary)
com.itextpdf.io.font.FontProgramFactory.getRegisteredFonts()
com.itextpdf.io.util.TextUtil.convertFromUtf32(int)
com.itextpdf.signatures.SignatureUtil.asLongArray(PdfArray)
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.addAnnotationTag(PdfAnnotation)
com.itextpdf.kernel.pdf.PdfDocument.addNewPage(PageSize)
com.itextpdf.barcodes.qrcode.QRCodeWriter.setRowColor(byte,byte)
com.itextpdf.layout.property.BackgroundImage.isRepeatX()
com.itextpdf.io.font.woff2.w3c.format.TabledataGlyfCompositeBbox001Test.getFontName()
com.itextpdf.kernel.pdf.PdfResources.addPattern(PdfDictionary)
com.itextpdf.kernel.pdf.PdfObjectStream.releaseContent(boolean)
com.itextpdf.forms.xfa.XfaForm.findDataNode(Node)
com.itextpdf.io.font.TrueTypeFont.getFontStreamBytes()
com.itextpdf.kernel.pdf.tagging.PdfStructTreeRoot.getRoleMap()
com.itextpdf.kernel.font.PdfType1Font.isBuiltInFont()
com.itextpdf.io.source.WriteStringsTest.writeStringTest()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.addImage(ImageData,float,float,float,boolean,boolean)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff080Test.isFontValid()
com.itextpdf.layout.renderer.ParagraphRenderer.createOverflowRenderer()
com.itextpdf.barcodes.BarcodePDF417.setCodeRows(int)
com.itextpdf.io.color.IccProfile.getData()
com.itextpdf.kernel.font.PdfFontFactory.registerFamily(String,String,String)
com.itextpdf.kernel.pdf.PdfPagesTest.reversePagesTest2()
com.itextpdf.kernel.xmp.impl.XMPUtilsImpl.isClosingingQuote(char,char,char)
com.itextpdf.pdfa.PdfA1CanvasCheckTest.beforeClass()
com.itextpdf.kernel.pdf.PdfEncryptionTest.checkEncryptedWithCertificateDocumentStamping(String,Certificate)
com.itextpdf.kernel.xmp.impl.XMPSchemaRegistryImpl.getNamespaces()
com.itextpdf.kernel.xmp.options.SerializeOptions.getPadding()
com.itextpdf.io.codec.Jbig2SegmentReader.read()
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.getRootTag()
com.itextpdf.layout.element.Table.normalizeColumnWidths(int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff027Test.getFontName()
com.itextpdf.pdfa.checker.PdfA1Checker.checkMetaData(PdfDictionary)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Paths.cleanPolygons(double)
com.itextpdf.layout.hyphenation.PatternParser.getExternalClasses()
com.itextpdf.kernel.font.Type3FontProgram.addGlyph(int,int,int,int,Type3Glyph)
com.itextpdf.kernel.xmp.XMPMeta.countArrayItems(String,String)
com.itextpdf.forms.fields.PdfButtonFormField.isToggleOff()
com.itextpdf.signatures.SignUtils.getHttpResponseForOcspRequest(byte,URL)
com.itextpdf.signatures.PdfPKCS7.getAuthenticatedAttributeSet(byte,byte,Collection,PdfSigner,CryptoStandard)
com.itextpdf.forms.fields.PdfTextFormField.setRichText(boolean)
com.itextpdf.layout.border.Border.setColor(Color)
com.itextpdf.kernel.pdf.PdfIndirectReference.isFree()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff134Test.isFontValid()
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6Format2.setSubClassSets(List)
com.itextpdf.kernel.utils.PageRangeTest.addCustomAnd()
com.itextpdf.kernel.pdf.annot.PdfLinkAnnotation.getDestinationObject()
com.itextpdf.layout.element.Text.getHorizontalScaling()
com.itextpdf.io.util.IntHashtable.get(int)
com.itextpdf.kernel.pdf.PdfOutputStream.write(PdfPrimitiveObject)
com.itextpdf.kernel.color.DeviceRgb.makeLighter(DeviceRgb)
com.itextpdf.io.font.otf.GsubLookupType3.readSubTable(int)
com.itextpdf.kernel.pdf.tagging.PdfStructElem.identifyType(PdfDocument,PdfName)
com.itextpdf.io.font.woff2.Woff2Converter.isWoff2Font(byte)
com.itextpdf.kernel.pdf.colorspace.PdfPattern.isColored()
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.endMarkedContent()
com.itextpdf.kernel.log.CounterFactory.setCounter(Counter)
com.itextpdf.io.codec.Jbig2SegmentReader.numberOfPages()
com.itextpdf.barcodes.BarcodeInter25Test.beforeClass()
com.itextpdf.kernel.xmp.impl.XMPDateTimeImpl.getISO8601String()
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.initClippingPath(PdfPage)
com.itextpdf.kernel.pdf.PdfPrimitivesTest.equalLiterals()
com.itextpdf.layout.RotationTest.marginsRotatedTest01()
com.itextpdf.layout.renderer.TableBorders.setTableBoundingBorders(Border)
com.itextpdf.kernel.pdf.PdfDocumentIdTest.beforeClass()
com.itextpdf.kernel.pdf.PdfObjectStream.addObject(PdfObject)
com.itextpdf.kernel.xmp.options.IteratorOptions.isJustLeafname()
com.itextpdf.io.font.woff2.w3c.format.BlocksExtraneousData006Test.getFontName()
com.itextpdf.kernel.pdf.collection.PdfCollectionSchema.addField(String,PdfCollectionField)
com.itextpdf.layout.renderer.RootRenderer.getCurrentArea()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setLineDash(float,float)
com.itextpdf.layout.ElementPropertyContainer.getWidth()
com.itextpdf.kernel.pdf.PdfStream.updateLength(int)
com.itextpdf.kernel.xmp.options.Options.containsOneOf(int)
com.itextpdf.signatures.testutils.builder.TestCrlBuilder.setNextUpdate(Date)
com.itextpdf.layout.font.FontProvider.getPdfFont(FontInfo)
com.itextpdf.layout.renderer.TypographyUtils.getSupportedScripts()
com.itextpdf.kernel.pdf.PdfWriter.getObjectStream()
com.itextpdf.kernel.xmp.options.SerializeOptions.getBaseIndent()
com.itextpdf.layout.TableBorderTest.tableWithHeaderFooterTest09()
com.itextpdf.kernel.pdf.PdfArrayDirectIterator.hasNext()
com.itextpdf.signatures.PdfSignatureAppDictionary.setSignatureCreator(String)
com.itextpdf.layout.element.Paragraph.add(IBlockElement)
com.itextpdf.barcodes.BarcodePDF417.outPaintCode()
com.itextpdf.kernel.xmp.XMPMetaFactory.parseFromBuffer(byte,ParseOptions)
com.itextpdf.layout.renderer.CellRenderer.getModelElement()
com.itextpdf.forms.fields.PdfTextFormField.getMaxLen()
com.itextpdf.kernel.xmp.options.PropertyOptions.isArray()
com.itextpdf.io.font.FontProgram.isFontSpecific()
com.itextpdf.io.font.FontMetrics.getSuperscriptOffset()
com.itextpdf.kernel.pdf.PdfArray.clear()
com.itextpdf.layout.TableTest.fixedLayoutTest01()
com.itextpdf.kernel.utils.CompareTool.compareByContent(String,String,Map)
com.itextpdf.forms.PdfAcroForm.getFormFields()
com.itextpdf.kernel.pdf.annot.PdfSoundAnnotation.getSound()
com.itextpdf.layout.renderer.CanvasRenderer.getNextRenderer()
com.itextpdf.pdfa.PdfA2AnnotationCheckTest.annotationCheckTest10()
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.transformX(int)
com.itextpdf.kernel.xmp.impl.XMPSerializerRDF.serializeCompactRDFArrayProp(XMPNode,int)
com.itextpdf.forms.fields.PdfFormField.isWrappedObjectMustBeIndirect()
com.itextpdf.layout.Document.setBottomMargin(float)
com.itextpdf.kernel.xmp.options.PropertyOptions.setArrayAltText(boolean)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff075Test.isFontValid()
com.itextpdf.kernel.xmp.options.SerializeOptions.getNewline()
com.itextpdf.layout.SimpleTextExtractionStrategyTest.testPartiallyRotatedText()
com.itextpdf.kernel.pdf.canvas.parser.IXObjectDoHandler.handleXObject(PdfCanvasProcessor,PdfStream)
com.itextpdf.kernel.pdf.PdfCanvasTest.wmfImageTest02()
com.itextpdf.kernel.pdf.PdfTextArray.addAll(PdfArray)
com.itextpdf.kernel.pdf.PdfDictionaryTest.testValuesIndirectRemove()
com.itextpdf.signatures.sign.LtvWithTwoSignatures.AddLtvInfo()
com.itextpdf.kernel.pdf.PdfBoolean.hashCode()
com.itextpdf.kernel.pdf.colorspace.PdfShading.setDecode(float)
com.itextpdf.layout.renderer.TextRenderer.initReversedRanges()
com.itextpdf.io.source.RandomAccessFileOrArray.readFully(byte,int,int)
com.itextpdf.kernel.pdf.PdfReader.readStreamBytes(PdfStream,boolean)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.getPropertyDate(String,String)
com.itextpdf.barcodes.qrcode.ByteMatrix.set(int,int,byte)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setRenderingIntent(PdfName)
com.itextpdf.io.codec.Base64.encode3to4(byte,byte,int,int)
com.itextpdf.io.font.OpenTypeParser.getPsFontName()
com.itextpdf.kernel.xmp.XMPMetaFactory.getMicro()
com.itextpdf.kernel.xmp.options.SerializeOptions.defineOptionName(int)
com.itextpdf.io.util.HashCode.combine(int,boolean)
com.itextpdf.kernel.utils.IDocumentReadyListener.documentReady(PdfDocument,PageRange)
com.itextpdf.io.font.CidFont.compatibleWith(String)
com.itextpdf.kernel.crypto.securityhandler.EncryptionUtils.generateSeed(int)
com.itextpdf.kernel.Version.isAGPLVersion()
com.itextpdf.layout.Canvas.ensureRootRendererNotNull()
com.itextpdf.forms.fields.PdfFormField.setFontSize(int)
com.itextpdf.io.codec.TIFFDirectory.readShort(RandomAccessFileOrArray)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff128Test.isFontValid()
com.itextpdf.pdfa.PdfA1ActionCheckTest.actionCheck10()
com.itextpdf.kernel.xmp.impl.XMPSerializerRDF.checkOptionsConsistence()
com.itextpdf.kernel.xmp.XmlDomWriter.write(Node)
com.itextpdf.kernel.pdf.PdfViewerPreferences.setFitWindow(boolean)
com.itextpdf.kernel.pdf.PdfCanvasTest.createSimpleCanvasWithDrawing()
com.itextpdf.kernel.pdf.canvas.parser.clipper.PolyNode.isHole()
com.itextpdf.pdfa.checker.PdfA1Checker.checkCanvasStack(char)
com.itextpdf.layout.renderer.TextRenderer.trimFirst()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setAppearanceCharacteristics(PdfDictionary)
com.itextpdf.io.font.otf.OpenTypeScript.readLanguageRecord(TagAndLocation)
com.itextpdf.layout.font.ComplexFontSelectorStrategy.getCurrentFont()
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.getDocument()
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.overrideModelTopMargin(IRenderer,float)
com.itextpdf.io.codec.TiffWriter.writeShort(int,OutputStream)
com.itextpdf.kernel.geom.Path.closeSubpath()
com.itextpdf.kernel.pdf.PdfArrayTest.testIndexOf2()
com.itextpdf.layout.renderer.AccessibleAttributesApplier.transformBorderTypeToName(int)
com.itextpdf.layout.PreLayoutTest.preLayoutTest01()
com.itextpdf.layout.renderer.TextRenderer.hasOtfFont()
com.itextpdf.kernel.pdf.PdfDocument.readObject(ObjectInputStream)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff142Test.isFontValid()
com.itextpdf.forms.fields.PdfButtonFormField.getFormType()
com.itextpdf.layout.ImageTest.imageTest04()
com.itextpdf.kernel.xmp.impl.QName.hasPrefix()
com.itextpdf.kernel.utils.PdfSplitterTest.splitDocumentTest02()
com.itextpdf.kernel.pdf.PdfArrayTest.testRemove()
com.itextpdf.layout.renderer.TextRenderer.isNewLine(GlyphLine,int)
com.itextpdf.layout.AutoTaggingTest.tableTest02()
com.itextpdf.kernel.xmp.XMPMeta.setPropertyDouble(String,String,double,PropertyOptions)
com.itextpdf.io.image.JpegTest.openJpeg3()
com.itextpdf.kernel.pdf.PdfObjectTest.pdtIndirectReferenceLateInitializing2()
com.itextpdf.io.font.FontCache.saveFont(FontProgram,FontCacheKey)
com.itextpdf.kernel.pdf.PdfTextArray.add(float)
com.itextpdf.layout.font.FontInfo.getFontData()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff003Test.getTestInfo()
com.itextpdf.kernel.crypto.ARCFOUREncryption.encryptARCFOUR(byte)
com.itextpdf.kernel.pdf.canvas.parser.HighlightItemsTest.eventOccurred(IEventData,EventType)
com.itextpdf.layout.renderer.AccessibleAttributesApplier.applyListAttributes(AbstractRenderer)
com.itextpdf.kernel.pdf.PdfPrimitivesTest.equalBoolean()
com.itextpdf.layout.font.FontSet.addFont(byte)
com.itextpdf.layout.minmaxwidth.MinMaxWidth.getMinWidth()
com.itextpdf.forms.fields.PdfButtonFormField.isRadiosInUnison()
com.itextpdf.kernel.utils.PdfMerger.setCloseSourceDocuments(boolean)
com.itextpdf.layout.renderer.FloatingHelper.adjustBoxForFloatRight(Rectangle,float)
com.itextpdf.kernel.pdf.PdfPage.getResources()
com.itextpdf.kernel.pdf.tagging.PdfStructTreeRoot.getRole()
com.itextpdf.kernel.pdf.annot.PdfLineAnnotation.setLeaderLineLength(float)
com.itextpdf.barcodes.BarcodeDataMatrix.EdifactEncodation(byte,int,int,byte,int,int,int,int,int,boolean)
com.itextpdf.io.font.CidFontProperties.getAllFonts()
com.itextpdf.kernel.pdf.PdfTextArray.add(String,PdfFont)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff133Test.getTestInfo()
com.itextpdf.layout.element.Link.getLinkAnnotation()
com.itextpdf.kernel.xmp.options.SerializeOptions.setOmitPacketWrapper(boolean)
com.itextpdf.kernel.pdf.action.PdfMediaClipData.isWrappedObjectMustBeIndirect()
com.itextpdf.kernel.pdf.PdfCanvasTest.colorTest05()
com.itextpdf.kernel.pdf.PdfArrayTest.testContains()
com.itextpdf.kernel.pdf.layer.PdfLayer.setView(boolean)
com.itextpdf.signatures.sign.TimestampSigTest.timestampTest01()
com.itextpdf.layout.element.Paragraph.makeNewRenderer()
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.lastChildMarginAdjoinedToParent(IRenderer)
com.itextpdf.layout.renderer.DivRenderer.getNextRenderer()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff030Test.getFontName()
com.itextpdf.kernel.xmp.XMPMeta.getStructField(String,String,String,String)
com.itextpdf.io.util.UrlUtil.openStream(URL)
com.itextpdf.layout.property.Underline.getColor()
com.itextpdf.kernel.geom.Path.moveTo(float,float)
com.itextpdf.barcodes.qrcode.QRCode.getNumECBytes()
com.itextpdf.layout.ElementPropertyContainer.setUnderline(Color,float,float,float,float,int)
com.itextpdf.kernel.pdf.EncodingTest.notdefInStandardFontTest()
com.itextpdf.layout.property.Background.getExtraRight()
com.itextpdf.layout.renderer.CollapsedTableBorders.getCellBorderIndents(int,int,int,int)
com.itextpdf.kernel.pdf.PdfArray.releaseContent()
com.itextpdf.kernel.geom.LineSegment.getEndPoint()
com.itextpdf.io.font.woff2.w3c.format.Valid005Test.getTestInfo()
com.itextpdf.kernel.pdf.xobject.PdfImageXObject.prepareAndFindColorspace(PdfObject)
com.itextpdf.io.font.CFFFontSubset.ReadASubr(int,int,int,int,Map,List,int)
com.itextpdf.io.util.IntHashtable.contains(int)
com.itextpdf.barcodes.Barcode128Test.barcode02Test()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff107Test.isFontValid()
com.itextpdf.kernel.pdf.PdfPrimitivesTest.primitivesStringIndirectTest()
com.itextpdf.barcodes.qrcode.MatrixUtil.embedTimingPatterns(ByteMatrix)
com.itextpdf.barcodes.qrcode.MatrixUtil.embedPositionDetectionPatternsAndSeparators(ByteMatrix)
com.itextpdf.kernel.xmp.impl.XMPNode.hasQualifier()
com.itextpdf.barcodes.BarcodePostnet.getBarcodeSize()
com.itextpdf.layout.renderer.AccessibleAttributesApplier.applyPaddingAttribute(AbstractRenderer,PdfDictionary)
com.itextpdf.kernel.pdf.PdfOutputStream.write(PdfLiteral)
com.itextpdf.barcodes.qrcode.MatrixUtil.embedDataBits(BitVector,int,ByteMatrix)
com.itextpdf.kernel.pdf.TagTreePointerTest.tagTreePointerTest04()
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.handleXObject(PdfCanvasProcessor,PdfStream)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff048Test.getFontName()
com.itextpdf.io.font.Pfm2afm.putchartab()
com.itextpdf.layout.renderer.TextRenderer.setGlyphLineAndFont(GlyphLine,PdfFont)
com.itextpdf.io.image.ImageDataFactory.imageTypeIs(byte,byte)
com.itextpdf.io.font.otf.ActualTextIterator.remove()
com.itextpdf.barcodes.qrcode.BitArray.makeArray(int)
com.itextpdf.layout.element.List.add(String)
com.itextpdf.layout.AutoTaggingTest.flushingTest02()
com.itextpdf.io.codec.TIFFFaxDecoder.updatePointer(int)
com.itextpdf.kernel.utils.CompareTool.getExplicitDestinationPageNum(PdfArray)
com.itextpdf.kernel.pdf.PdfCatalog.getOutlines(boolean)
com.itextpdf.kernel.pdf.PdfWriterTest.createPdfStreamByInputStream()
com.itextpdf.io.font.woff2.Woff2DecodeTest.saveFile(byte,String)
com.itextpdf.io.font.FontIdentification.getType1Xuid()
com.itextpdf.pdfa.checker.PdfA1Checker.checkAnnotation(PdfDictionary)
com.itextpdf.kernel.xmp.options.AliasOptions.setArrayAltText(boolean)
com.itextpdf.layout.hyphenation.TernaryTree.balance()
com.itextpdf.kernel.log.NoOpCounter.onDocumentWritten(long)
com.itextpdf.kernel.font.PdfType0Font.getGlyph(int)
com.itextpdf.layout.TableTest.tableMinMaxWidthTest01()
com.itextpdf.signatures.testutils.builder.TestTimestampTokenBuilder.createTimeStampToken(TimeStampRequest)
com.itextpdf.pdfa.PdfA2CatalogCheckTest.beforeClass()
com.itextpdf.layout.AutoTaggingTest.wordBreaksLineEndingsTest04()
com.itextpdf.kernel.pdf.PdfArray.get(int,boolean)
com.itextpdf.layout.splitting.ISplitCharacters.isSplitCharacter(GlyphLine,int)
com.itextpdf.kernel.pdf.PdfString.getValue()
com.itextpdf.forms.PdfAcroForm.setSignatureFlag(int)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.rectangle(double,double,double,double)
com.itextpdf.kernel.pdf.TagTreePointerTest.tagStructureFlushingTest05()
com.itextpdf.pdfa.checker.PdfAChecker.getOutlines(PdfDictionary)
com.itextpdf.kernel.pdf.PdfFontTest.testUpdateType3FontBasedExistingFont()
com.itextpdf.io.font.CidFontProperties.getRegistryNames()
com.itextpdf.kernel.xmp.XMPMeta.setObjectName(String)
com.itextpdf.layout.ElementPropertyContainer.setUnderline(float,float)
com.itextpdf.kernel.xmp.options.Options.setOptions(int)
com.itextpdf.kernel.geom.Path.curveTo(float,float,float,float)
com.itextpdf.kernel.geom.AffineTransform.transform(double,int,float,int,int)
com.itextpdf.kernel.font.Type3Glyph.addImage(ImageData,float,float,float,float,float,float,boolean)
com.itextpdf.io.source.ByteUtils.getIsoBytes(byte,String,byte)
com.itextpdf.kernel.pdf.PdfOutline.setOpen(boolean)
com.itextpdf.layout.renderer.CellRenderer.getNextRenderer()
com.itextpdf.forms.fields.PdfFormField.setBorderStyle(PdfDictionary)
com.itextpdf.test.ITextTest.createOrClearDestinationFolder(String)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setFontAndSize(PdfFont,float)
com.itextpdf.kernel.utils.PdfResourceCounter.loopOver(PdfObject)
com.itextpdf.kernel.pdf.canvas.parser.clipper.PolyNode.getContour()
com.itextpdf.kernel.pdf.action.PdfAction.createResetForm(Object,int)
com.itextpdf.kernel.pdf.tagging.PdfStructTreeRoot.createParentTreeEntryForPage(PdfPage)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff089Test.getFontName()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff063Test.getTestInfo()
com.itextpdf.layout.font.FontSelectorCache.get(FontSelectorKey)
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.getDefaultAppearance()
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.relocateKid(int,TagTreePointer)
com.itextpdf.barcodes.BarcodePDF417.macroCodes()
com.itextpdf.layout.OverflowTest.textOverflowTest03()
com.itextpdf.layout.TableTest.tableWithHeaderInTheBottomOfPageTest()
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.getModelTopMargin(IRenderer)
com.itextpdf.layout.OverflowTest.beforeClass()
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperBase.processBound(Edge,boolean)
com.itextpdf.kernel.xmp.impl.ByteBuffer.append(ByteBuffer)
com.itextpdf.kernel.font.PdfFontFactory.createRegisteredFont(String)
com.itextpdf.kernel.pdf.PdfDocument.removePage(PdfPage)
com.itextpdf.io.image.PngImageHelper.getWord(InputStream)
com.itextpdf.layout.layout.LayoutContext.isClippedHeight()
com.itextpdf.layout.renderer.TableRenderer.isOriginalRenderer()
com.itextpdf.kernel.xmp.XMPDateTimeFactory.getCurrentDateTime()
com.itextpdf.forms.fields.PdfFormField.drawPdfACheckBox(PdfCanvas,float,float,boolean)
com.itextpdf.barcodes.qrcode.Encoder.append8BitBytes(String,BitVector,String)
com.itextpdf.kernel.pdf.tagutils.AccessibilityProperties.clearAttributes()
com.itextpdf.layout.LocationTextExtractionStrategyTest.testNegativeCharacterSpacing()
com.itextpdf.barcodes.Barcode1D.getInkSpreading()
com.itextpdf.io.font.woff2.w3c.W3CWoff2DecodeTest.getLocalPackage()
com.itextpdf.layout.renderer.AbstractRenderer.calculateBBox(List)
com.itextpdf.kernel.pdf.PdfDocument.removeAllHandlers()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.beginMarkedContent(PdfName,PdfDictionary)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setWordSpacing(float)
com.itextpdf.signatures.PdfSignatureAppearance.getLocation()
com.itextpdf.io.font.otf.OpenTypeFontTableReader.getGlyphClass(int)
com.itextpdf.kernel.pdf.canvas.parser.IndicTextExtractionTest.test02()
com.itextpdf.kernel.pdf.PdfDocumentIdTest.changeIdTest02()
com.itextpdf.pdfa.PdfA2GraphicsCheckTest.colorCheckTest6()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getOverprintMode()
com.itextpdf.kernel.pdf.PdfDocument.isClosed()
com.itextpdf.io.font.otf.ActualTextIterator.hasNext()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.setArrayItem(String,String,int,String,PropertyOptions)
com.itextpdf.kernel.pdf.annot.PdfPrinterMarkAnnotation.setArbitraryTypeName(PdfName)
com.itextpdf.kernel.pdf.PdfXrefTable.size()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff064Test.getTestInfo()
com.itextpdf.layout.renderer.MinWidthTest.simpleTableTest()
com.itextpdf.kernel.pdf.PdfPage.copyTo(PdfDocument,IPdfPageExtraCopier)
com.itextpdf.io.font.woff2.w3c.format.HeaderFlavor002Test.getTestInfo()
com.itextpdf.kernel.xmp.impl.XMPUtilsImpl.getClosingQuote(char)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff127Test.isFontValid()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff071Test.getFontName()
com.itextpdf.io.codec.TiffWriter.getValueSize()
com.itextpdf.kernel.geom.VectorTest.testCrossVector()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.closePathFillStroke()
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperOffset.execute(Paths,double)
com.itextpdf.io.font.WoffConverter.bytesToUInt(byte,int)
com.itextpdf.layout.TableTest.bigRowspanTest03()
com.itextpdf.kernel.xmp.options.PropertyOptions.equalArrayTypes(PropertyOptions)
com.itextpdf.barcodes.Barcode1D.setExtended(boolean)
com.itextpdf.kernel.utils.CompareTool.enableEncryptionCompare()
com.itextpdf.kernel.xmp.impl.CountOutputStream.write(int)
com.itextpdf.layout.BlockTest.createDiv(Div,String,DeviceRgb,boolean,boolean,boolean)
com.itextpdf.kernel.xmp.impl.XMPNodeUtils.normalizeLangArray(XMPNode)
com.itextpdf.kernel.pdf.tagging.PdfStructTreeRoot.getKidsObject()
com.itextpdf.kernel.pdf.PdfFontTest.createDocumentWithTrueTypeAsType0BasedExistingFont()
com.itextpdf.layout.font.FontSet.addFont(String)
com.itextpdf.layout.renderer.AbstractRenderer.getMinMaxWidth(float)
com.itextpdf.kernel.pdf.PdfDocumentTest.addUnusedObjectsInWriterModeTest()
com.itextpdf.forms.fields.PdfTextFormField.getFormType()
com.itextpdf.pdfa.checker.PdfA1Checker.checkPdfStream(PdfStream)
com.itextpdf.io.codec.brotli.dec.Decode.readMetablockHuffmanCodesAndContextMaps(State)
com.itextpdf.kernel.geom.PageSize.clone()
com.itextpdf.kernel.pdf.action.PdfAction.createGoToR(String,String)
com.itextpdf.io.font.woff2.w3c.format.Valid006Test.getTestInfo()
com.itextpdf.kernel.geom.AffineTransform.setTransform(double,double,double,double,double,double)
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.getColor(int,List)
com.itextpdf.io.font.FontCache.createMetric(String)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Path.isFirstBottomPt(Path,OutPt,Path,OutPt)
com.itextpdf.kernel.xmp.impl.XMPNode.getChildrenLength()
com.itextpdf.barcodes.BarcodePDF417.remove(int)
com.itextpdf.kernel.utils.CompareTool.compareVisually(String,String,String,String,Map)
com.itextpdf.kernel.pdf.canvas.draw.SolidLine.setLineWidth(float)
com.itextpdf.io.font.FontProgram.setXHeight(int)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Path.getPoints()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff109Test.isFontValid()
com.itextpdf.layout.renderer.AbstractRenderer.isNotFittingHeight(LayoutArea)
com.itextpdf.kernel.pdf.xobject.PdfFormXObject.getTrapStyles()
com.itextpdf.layout.minmaxwidth.MinMaxWidth.getChildrenMinWidth()
com.itextpdf.kernel.pdf.PdfOutlineTest.addOutlinesWithNamedDestinations01()
com.itextpdf.kernel.pdf.PdfNumber.getValue()
com.itextpdf.io.font.cmap.CMapToUnicode.addChar(int,char)
com.itextpdf.layout.OpacityTest.elementOpacityTest(String)
com.itextpdf.layout.renderer.TableWidths.setFixed(boolean)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff023Test.getFontName()
com.itextpdf.kernel.pdf.PdfStream.releaseContent()
com.itextpdf.barcodes.BarcodeDataMatrix.createFormXObject(Color,float,PdfDocument)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.simplifyPolygons(Paths)
com.itextpdf.kernel.xmp.options.SerializeOptions.setEncodeUTF16LE(boolean)
com.itextpdf.kernel.pdf.canvas.parser.util.InlineImageParsingUtils.getComponentsPerPixel(PdfName,PdfDictionary)
com.itextpdf.layout.LinkTest.borderedLinkTest()
com.itextpdf.io.source.ByteUtils.getIsoBytes(int)
com.itextpdf.kernel.utils.CompareTool.isComparing(PdfIndirectReference,PdfIndirectReference)
com.itextpdf.io.source.WindowRandomAccessSource.get(long)
com.itextpdf.kernel.xmp.XMPSchemaRegistry.getPrefixes()
com.itextpdf.layout.renderer.AreaBreakRenderer.getProperty(int,T1)
com.itextpdf.kernel.pdf.PdfResources.addForm(PdfStream)
com.itextpdf.kernel.xmp.impl.xpath.XMPPathParser.verifySimpleXMLName(String)
com.itextpdf.forms.xfa.XfaForm.getDomDocument()
com.itextpdf.layout.font.FontSet.get(String)
com.itextpdf.forms.PdfAcroForm.getCalculationOrder()
com.itextpdf.layout.element.Div.setRole(PdfName)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff106Test.isFontValid()
com.itextpdf.kernel.pdf.PdfAnnotationTest.rubberStampTest()
com.itextpdf.layout.PositioningTest.drawCross(PdfCanvas,float,float)
com.itextpdf.signatures.testutils.SignTestPortUtil.generateOcspRequestWithNonce(CertificateID)
com.itextpdf.layout.element.Table.startNewRow()
com.itextpdf.signatures.DigestAlgorithms.getDigest(String)
com.itextpdf.io.source.PdfTokenizer.isDelimiter(int)
com.itextpdf.io.font.CFFFont.getInt()
com.itextpdf.kernel.pdf.annot.PdfLineAnnotation.getCaptionPosition()
com.itextpdf.signatures.LtvVerifier.getOCSPResponsesFromDSS()
com.itextpdf.barcodes.qrcode.Version.getCount()
com.itextpdf.barcodes.qrcode.GF256Poly.multiply(GF256Poly)
com.itextpdf.layout.TableBorderTest.tableWithHeaderFooterTest14()
com.itextpdf.kernel.pdf.canvas.wmf.WmfImageData.imageTypeIs(byte,byte)
com.itextpdf.layout.ImageTest.imageTest07()
com.itextpdf.kernel.xmp.impl.XMPNormalizer.touchUpDataModel(XMPMetaImpl)
com.itextpdf.kernel.pdf.ByteBufferOutputStream.toString(String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff082Test.getTestInfo()
com.itextpdf.kernel.crypto.OutputStreamStandardEncryption.write(byte,int,int)
com.itextpdf.pdfa.PdfA2AcroFormCheckTest.compareResult(String,String)
com.itextpdf.layout.OpacityTest.borderOpacityTest01()
com.itextpdf.io.image.Jpeg2000ImageHelper.processParameters(Jpeg2000ImageData)
com.itextpdf.kernel.pdf.layer.PdfLayer.getChildren()
com.itextpdf.kernel.xmp.XMPUtils.convertToBoolean(String)
com.itextpdf.kernel.utils.CompareToolTest.compareToolErrorReportTest03()
com.itextpdf.kernel.xmp.XMPMeta.appendArrayItem(String,String,String)
com.itextpdf.kernel.pdf.annot.PdfLinkAnnotation.getHighlightMode()
com.itextpdf.kernel.pdf.PdfDictionary.size()
com.itextpdf.kernel.geom.LineSegment.containsSegment(LineSegment)
com.itextpdf.layout.font.FontSetCollection.size()
com.itextpdf.layout.PositioningTest.fixedPositioningTest02()
com.itextpdf.layout.TableTest.autoLayoutTest01()
com.itextpdf.layout.minmaxwidth.MinMaxWidthUtils.getMax()
com.itextpdf.forms.PdfFormFieldTest.buttonFieldTest02()
com.itextpdf.kernel.pdf.PdfCatalog.getPageMode()
com.itextpdf.kernel.pdf.canvas.parser.PdfDocumentContentParser.processContent(int,E)
com.itextpdf.kernel.pdf.PdfResources.setModified(boolean)
com.itextpdf.io.font.FontMetrics.getStemH()
com.itextpdf.test.WrappedSamplesRunner.generateTestsList()
com.itextpdf.test.WrappedSamplesRunner.initClass()
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.populateOperators()
com.itextpdf.kernel.font.PdfType3Font.isSubset()
com.itextpdf.kernel.xmp.options.SerializeOptions.setUseCanonicalFormat(boolean)
com.itextpdf.layout.element.BlockElement.setMinHeight(float)
com.itextpdf.kernel.pdf.PdfDictionary.releaseContent()
com.itextpdf.layout.Style.isKeepTogether()
com.itextpdf.io.codec.brotli.dec.SynthTest.testBlockSwitchMessage()
com.itextpdf.kernel.xmp.XMPMeta.doesPropertyExist(String,String)
com.itextpdf.layout.renderer.TableWidths.retrieveTableWidth(float)
com.itextpdf.layout.renderer.AbstractRenderer.retrieveMinWidth(float)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff126Test.getFontName()
com.itextpdf.io.font.FontProgramFactory.clearRegisteredFontFamilies()
com.itextpdf.kernel.pdf.PdfDocumentInfo.setMoreInfo(Map)
com.itextpdf.layout.font.FontSelectorKey.hashCode()
com.itextpdf.forms.fields.PdfFormField.createText(PdfDocument,Rectangle,String,String,PdfFont,float)
com.itextpdf.signatures.SignatureUtil.verifySignature(String,String)
com.itextpdf.kernel.pdf.PdfBoolean.toString()
com.itextpdf.kernel.xmp.impl.ParseRDF.rdf_RDF(XMPMetaImpl,Node)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff151Test.getFontName()
com.itextpdf.layout.renderer.TextRenderer.remove()
com.itextpdf.barcodes.qrcode.QRCode.setNumRSBlocks(int)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.getPropertyString(String,String)
com.itextpdf.kernel.pdf.canvas.CanvasTag.getMcid()
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.beginMarkedContent(PdfName,PdfDictionary)
com.itextpdf.layout.ImageTest.imageTest12_HorizontalAlignment_CENTER()
com.itextpdf.kernel.pdf.PdfCatalog.isOCPropertiesMayHaveChanged()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.addXObject(PdfXObject,float,float,float)
com.itextpdf.barcodes.qrcode.MaskUtil.applyMaskPenaltyRule4(ByteMatrix)
com.itextpdf.layout.element.ListItem.setListSymbol(ListNumberingType)
com.itextpdf.kernel.pdf.PdfDocumentInfo.setCreator(String)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.setPropertyDouble(String,String,double,PropertyOptions)
com.itextpdf.io.source.PdfTokenizer.decodeStringContent(byte,int,int,boolean)
com.itextpdf.barcodes.BarcodePDF417.setMacroSegmentCount(int)
com.itextpdf.layout.renderer.AbstractRenderer.getPropertyAsInteger(int)
com.itextpdf.io.font.woff2.Woff2Dec.woff2Uncompress(byte,int,int,byte,int,int)
com.itextpdf.signatures.SignaturePermissions.getFieldLocks()
com.itextpdf.kernel.crypto.AESCipherCBCnoPad.processBlock(byte,int,int)
com.itextpdf.io.image.PngImageHelper.decodeSubFilter(byte,int,int)
com.itextpdf.kernel.pdf.PdfDashPattern.getGap()
com.itextpdf.forms.FormFieldsTaggingTest.formFieldTaggingTest05()
com.itextpdf.kernel.geom.AffineTransform.getShearX()
com.itextpdf.io.image.ImageData.setProfile(IccProfile)
com.itextpdf.io.font.otf.GsubLookupType3.transformOne(GlyphLine)
com.itextpdf.kernel.xmp.XMPVersionInfo.getBuild()
com.itextpdf.test.LogListener.starting(Description)
com.itextpdf.kernel.geom.Subpath.isEmpty()
com.itextpdf.layout.TableBorderTest.tableWithHeaderFooterTest05()
com.itextpdf.kernel.xmp.impl.ParameterAsserts.assertPropName(String)
com.itextpdf.layout.renderer.LineRenderer.splitNotFittingFloat(int,LayoutResult)
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperBase.clear()
com.itextpdf.kernel.xmp.impl.xpath.XMPPathSegment.getKind()
com.itextpdf.kernel.xmp.impl.XMPDateTimeImpl.hasTimeZone()
com.itextpdf.barcodes.BarcodeDataMatrix.isDigit(int)
com.itextpdf.kernel.pdf.PdfDocument.addNewPage(int,PageSize)
com.itextpdf.layout.AutoTaggingTest.imageTest02()
com.itextpdf.kernel.pdf.PdfCatalog.addNameToNameTree(String,PdfObject,PdfName)
com.itextpdf.kernel.pdf.colorspace.PdfShading.setFunction(PdfFunction)
com.itextpdf.layout.renderer.ParagraphRenderer.getLines()
com.itextpdf.layout.property.UnitValue.toString()
com.itextpdf.kernel.pdf.collection.PdfCollectionItem.addItem(String,PdfDate)
com.itextpdf.io.font.cmap.CMapContentParser.decodeCMapObject(CMapObject)
com.itextpdf.io.font.cmap.CMapCidUni.addChar(String,CMapObject)
com.itextpdf.layout.AutoTaggingTest.flushingTest01()
com.itextpdf.kernel.xmp.XMPPathFactory.composeFieldSelector(String,String,String,String)
com.itextpdf.barcodes.BarcodeEAN.convertUPCAtoUPCE(String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff073Test.getFontName()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Path.duplicate(boolean)
com.itextpdf.forms.xfa.XfaForm.getFirstElementNode(Node)
com.itextpdf.kernel.pdf.PdfArrayTest.testIndexOf()
com.itextpdf.layout.PdfTextExtractorEncodingsTest.testUnicodeFont()
com.itextpdf.layout.font.FontInfo.toString()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff105Test.getFontName()
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.setSubject(PdfString)
com.itextpdf.layout.RotationTest.fixedWidthRotationTest03()
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6Format2.getSetOfRulesForStartGlyph(int)
com.itextpdf.signatures.sign.LtvSigTest.ltvEnabledTest01()
com.itextpdf.kernel.pdf.annot.PdfSquareAnnotation.getSubtype()
com.itextpdf.kernel.xmp.options.Options.getOptionsString()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff033Test.isFontValid()
com.itextpdf.io.font.otf.Glyph.getAnchorDelta()
com.itextpdf.io.font.woff2.w3c.format.Valid004Test.getFontName()
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setAutomaticStrokeAdjustmentFlag(boolean)
com.itextpdf.layout.layout.MinMaxWidthLayoutResult.setMinMaxWidth(MinMaxWidth)
com.itextpdf.layout.TableBorderTest.noVerticalBorderTest()
com.itextpdf.forms.fields.PdfFormField.createSignature(PdfDocument,Rectangle)
com.itextpdf.layout.KeepTogetherTest.keepTogetherParagraphTest02()
com.itextpdf.kernel.security.IExternalDecryptionProcess.getCmsRecipient()
com.itextpdf.barcodes.BarcodeQRCodeTest.beforeClass()
com.itextpdf.io.font.FontProgramDescriptorFactory.fetchCachedDescriptor(String,byte)
com.itextpdf.kernel.utils.CompareTool.compareVisually(String,String,Map)
com.itextpdf.kernel.pdf.PdfTokenizerTest.tokenTypesTest()
com.itextpdf.kernel.pdf.PdfFontTest.autoDetect2()
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getUnscaledBaselineWithOffset(float)
com.itextpdf.kernel.pdf.PdfFontTest.testNewCjkFontBasedExistingFont()
com.itextpdf.kernel.pdf.canvas.wmf.WmfImageHelper.processParameters()
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperBridge.getFillType(int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff152Test.isFontValid()
com.itextpdf.kernel.pdf.PdfOutline.getDestination()
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6Format3.isGlyphMatchesBacktrack(int,int)
com.itextpdf.layout.TableTest.splitCellWithStyles()
com.itextpdf.layout.hyphenation.TernaryTree.find(String)
com.itextpdf.kernel.pdf.PdfFontTest.ttfByStreamNames()
com.itextpdf.forms.fields.PdfFormField.setNoExport(boolean)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.newlineShowText(String)
com.itextpdf.kernel.xmp.impl.XMPUtilsImpl.isSurroundingQuote(char,char,char)
com.itextpdf.kernel.pdf.PdfWriter.markDictionaryContentToFlush(PdfDictionary)
com.itextpdf.kernel.pdf.PdfOutputIntent.setOutputIntentSubtype(PdfName)
com.itextpdf.layout.FloatTest.floatInlineBlockTest01()
com.itextpdf.forms.fields.PdfFormField.drawButton(PdfCanvas,float,float,float,float,String,PdfFont,int)
com.itextpdf.io.util.IntHashtable.size()
com.itextpdf.layout.renderer.TableBorderUtil.getWidestBorder(List)
com.itextpdf.forms.xfa.XfaForm.initXfaForm(PdfObject)
com.itextpdf.kernel.pdf.annot.PdfLineAnnotation.getLeaderLineExtension()
com.itextpdf.signatures.PdfSignatureAppearance.getSignatureCreator()
com.itextpdf.layout.element.Image.setRotationAngle(double)
com.itextpdf.kernel.pdf.PdfVersion.compareTo(PdfVersion)
com.itextpdf.kernel.xmp.options.PropertyOptions.assertConsistency(int)
com.itextpdf.kernel.xmp.impl.ParseRDF.rdf_ResourcePropertyElement(XMPMetaImpl,XMPNode,Node,boolean)
com.itextpdf.layout.element.Paragraph.setFirstLineIndent(float)
com.itextpdf.kernel.pdf.colorspace.PdfShading.setDomain(PdfArray)
com.itextpdf.kernel.pdf.PdfArray.iterator()
com.itextpdf.kernel.pdf.PdfReaderTest.appendModeWith10Pages()
com.itextpdf.layout.hyphenation.Hyphenator.getHyphenationTreeCache()
com.itextpdf.forms.xfa.XfaForm.isXfaPresent()
com.itextpdf.layout.renderer.FloatingHelper.adjustLineAreaAccordingToFloats(List,Rectangle)
com.itextpdf.layout.element.Table.setExtendBottomRowOnSplit(boolean)
com.itextpdf.kernel.pdf.navigation.PdfExplicitDestination.createFit(int)
com.itextpdf.barcodes.BarcodeEAN.getBarsSupplemental2(String)
com.itextpdf.kernel.pdf.canvas.CanvasTag.removeProperty(PdfName)
com.itextpdf.io.image.GifImageData.loadData()
com.itextpdf.kernel.pdf.PdfEncryption.setCryptoMode(int,int)
com.itextpdf.kernel.pdf.colorspace.PdfShading.setDecode(PdfArray)
com.itextpdf.io.codec.brotli.dec.WordTransformType.getOmitLast(int)
com.itextpdf.layout.hyphenation.HyphenationTree.addException(String,List)
com.itextpdf.kernel.pdf.PdfPage.getContentStreamCount()
com.itextpdf.forms.fields.PdfFormField.createText(PdfDocument,Rectangle)
com.itextpdf.kernel.xmp.XMPDateTime.hasTimeZone()
com.itextpdf.kernel.utils.PdfSplitter.getNextRange(int,int,long)
com.itextpdf.signatures.PdfSignatureAppearance.getLayer2Font()
com.itextpdf.layout.renderer.RootRenderer.shrinkCurrentAreaAndProcessRenderer(IRenderer,List,LayoutResult)
com.itextpdf.kernel.geom.Path.addSubpaths(List)
com.itextpdf.layout.renderer.CellRenderer.applyMargins(Rectangle,float,boolean)
com.itextpdf.io.font.OpenTypeParser.readFormat12()
com.itextpdf.kernel.pdf.PdfPrimitivesTest.primitivesIntNumberTest()
com.itextpdf.kernel.utils.PdfMergerTest.mergeDocumentTest03()
com.itextpdf.kernel.pdf.PdfDocumentTest.removeUnusedObjectsInStampingModeTest()
com.itextpdf.io.font.FontEncoding.convertToByte(int)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Edge.isContributing(PolyFillType,PolyFillType,ClipType)
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.setScalingX(float)
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.processUsedChildBufferSpaceOnTop(Rectangle)
com.itextpdf.pdfa.PdfAFontTest.symbolicTtfCharEncodingsPdfA1Test01()
com.itextpdf.kernel.geom.Rectangle.getCommonRectangle(Rectangle)
com.itextpdf.kernel.pdf.PdfDocumentIdTest.changeIdTest03()
com.itextpdf.kernel.xmp.impl.XMPIteratorImpl.getReturnProperty()
com.itextpdf.kernel.xmp.options.AliasOptions.isArrayAltText()
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.addTag(int,IAccessibleElement,boolean)
com.itextpdf.layout.renderer.LinkRenderer.draw(DrawContext)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff097Test.getFontName()
com.itextpdf.kernel.pdf.function.PdfFunction.makeType3(PdfArray,PdfArray,PdfArray,PdfArray,PdfArray)
com.itextpdf.signatures.PdfPKCS7.getDigestAlgorithm()
com.itextpdf.layout.hyphenation.Hyphenator.hyphenateBasedOnSoftHyphens(String,int,int)
com.itextpdf.io.font.OpenTypeParser.close()
com.itextpdf.kernel.pdf.canvas.parser.ParserGraphicsState.setClippingPath(Path)
com.itextpdf.io.font.OpenTypeParser.readPostTable()
com.itextpdf.kernel.pdf.PdfReader.hasRebuiltXref()
com.itextpdf.io.font.FontProgram.getWidth(int)
com.itextpdf.io.source.GroupedRandomAccessSource.sourceInUse(IRandomAccessSource)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff121Test.getTestInfo()
com.itextpdf.io.font.CMapEncoding.getUniMapName()
com.itextpdf.kernel.xmp.impl.Base64.encode(byte)
com.itextpdf.io.codec.BitFile.flush()
com.itextpdf.io.font.otf.lookuptype5.SubTableLookup5Format1.getContextLength()
com.itextpdf.kernel.pdf.PdfCatalog.isOutlineMode()
com.itextpdf.io.font.cmap.AbstractCMap.setRegistry(String)
com.itextpdf.signatures.PdfSignatureAppearance.setLayer2Text(String)
com.itextpdf.signatures.LtvVerifier.setCertificateOption(CertificateOption)
com.itextpdf.kernel.utils.TaggedPdfReaderTool.inspectKids(List)
com.itextpdf.kernel.xmp.impl.Utils.isXMLNameNS(String)
com.itextpdf.forms.FormFieldAppendTest.beforeClass()
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getActualText()
com.itextpdf.kernel.pdf.tagging.PdfStructElem.getK()
com.itextpdf.kernel.xmp.impl.XMPIteratorImpl.getValue()
com.itextpdf.layout.layout.TextLayoutResult.setSplitForcedByNewline(boolean)
com.itextpdf.kernel.pdf.action.PdfAction.getPdfArrayFromAnnotationsList(PdfAnnotation)
com.itextpdf.kernel.pdf.PdfArray.getAsNumber(int)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.setProperty(String,String,Object)
com.itextpdf.layout.border.SolidBorder.draw(PdfCanvas,float,float,float,float,float,Side,float,float)
com.itextpdf.io.codec.TIFFFaxDecoder.setToBlack(byte,int,int,int)
com.itextpdf.kernel.color.Color.convertCmykToRgb(DeviceCmyk)
com.itextpdf.kernel.pdf.tagging.PdfStructTreeRoot.findMcrByMcid(PdfDictionary,int)
com.itextpdf.kernel.geom.AffineTransform.concatenate(AffineTransform)
com.itextpdf.kernel.pdf.PdfArray.getAsDictionary(int)
com.itextpdf.kernel.pdf.PdfReader.readObject(PdfIndirectReference,boolean)
com.itextpdf.layout.renderer.LineRenderer.getNextTabStop(float)
com.itextpdf.layout.FloatTest.floatsOnPageSplit08()
com.itextpdf.kernel.pdf.collection.PdfCollection.setSort(PdfCollectionSort)
com.itextpdf.signatures.PdfPKCS7.findCRL(ASN1Sequence)
com.itextpdf.pdfa.checker.PdfA2Checker.fillOrderRecursively(PdfArray,Set)
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingAes128.setHashKeyForNextObject(int,int)
com.itextpdf.io.util.SystemUtil.runProcessAndWait(String,String)
com.itextpdf.kernel.pdf.canvas.parser.listener.RegexBasedLocationExtractionStrategy.eventOccurred(IEventData,EventType)
com.itextpdf.signatures.SignUtils.generateCertificateId(X509Certificate,BigInteger,ASN1ObjectIdentifier)
com.itextpdf.layout.SimpleTextExtractionStrategyTest.testUnRotatedText()
com.itextpdf.kernel.pdf.PdfWriter.flushCopiedObjects(long)
com.itextpdf.io.font.woff2.w3c.format.Valid006Test.isFontValid()
com.itextpdf.io.font.woff2.Woff2Dec.equals(Object)
com.itextpdf.signatures.verify.OcspVerifierTest.verifyTest(TestOcspResponseBuilder)
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.releaseGraphicsState()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Edge.swapPolyIndexes(Edge,Edge)
com.itextpdf.signatures.PdfSignature.setCert(byte)
com.itextpdf.layout.property.Underline.getThickness(float)
com.itextpdf.layout.Document.getPageEffectiveArea(PageSize)
com.itextpdf.layout.KeepWithNextTest.keepWithNextTest01()
com.itextpdf.barcodes.BarcodePDF417.placeBarcode(PdfCanvas,Color,float,float)
com.itextpdf.kernel.pdf.action.PdfAction.createNamed(PdfName)
com.itextpdf.forms.PdfAcroForm.addField(PdfFormField,PdfPage)
com.itextpdf.io.color.IccProfile.getIccColorSpaceName(byte)
com.itextpdf.kernel.pdf.tagutils.TagReference.createNextMcid()
com.itextpdf.io.font.FontMetrics.getWinDescender()
com.itextpdf.io.source.ThreadSafeRandomAccessSource.close()
com.itextpdf.layout.renderer.AccessibleAttributesApplier.getTableAttributes(AbstractRenderer,TagTreePointer)
com.itextpdf.kernel.pdf.PdfDocument.addNamedDestination(String,PdfObject)
com.itextpdf.barcodes.BarcodeInter25.keepNumbers(String)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.getLanguage()
com.itextpdf.io.codec.brotli.dec.Decode.maybeReallocateRingBuffer(State)
com.itextpdf.layout.element.TabStop.getTabAnchor()
com.itextpdf.kernel.pdf.tagging.PdfStructElem.addKid(int,PdfMcr)
com.itextpdf.io.font.TrueTypeFont.initializeFontProperties()
com.itextpdf.io.font.FontProgramFactory.createFont(byte)
com.itextpdf.io.image.JpegTest.openJpeg2()
com.itextpdf.forms.xfa.XfaForm.findDatasetsNode(String)
com.itextpdf.io.font.FontEncoding.canDecode(int)
com.itextpdf.pdfa.checker.PdfAChecker.setPdfAOutputIntentColorSpace(PdfDictionary)
com.itextpdf.kernel.xmp.XMPUtils.convertToDouble(String)
com.itextpdf.io.font.woff2.w3c.W3CWoff2DecodeTest.setUp()
com.itextpdf.layout.element.Table.addHeaderCell(BlockElement)
com.itextpdf.kernel.pdf.PdfAnnotationTest.addSquareAndCircleAnnotations01()
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getPdfString()
com.itextpdf.kernel.pdf.canvas.parser.PdfTextExtractor.getTextFromPage(PdfPage,ITextExtractionStrategy,Map)
com.itextpdf.forms.fields.PdfFormField.createList(PdfDocument,Rectangle,String,String,String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff067Test.getFontName()
com.itextpdf.kernel.pdf.PdfArray.add(PdfObject)
com.itextpdf.io.util.FilterUtil.getInflaterInputStream(InputStream)
com.itextpdf.io.font.Type1Font.setKerning(int,int,int)
com.itextpdf.io.font.FontNames.getFontName()
com.itextpdf.kernel.pdf.canvas.PdfPatternCanvas.setColor(PdfColorSpace,float,PdfPattern,boolean)
com.itextpdf.signatures.verify.CrlVerifierTest.before()
com.itextpdf.kernel.pdf.annot.PdfRichMediaAnnotation.getSubtype()
com.itextpdf.kernel.utils.XmlUtils.resolveEntity(String,String)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.doesStructFieldExist(String,String,String,String)
com.itextpdf.kernel.xmp.impl.ParseRDF.isOldTerm(int)
com.itextpdf.kernel.pdf.PdfDocument.addOutputIntent(PdfOutputIntent)
com.itextpdf.kernel.pdf.PdfEncryptionTest.writeTextBytesOnPageContent(PdfPage,String)
com.itextpdf.kernel.pdf.PdfStampingTest.stampingTestWithFullCompression02()
com.itextpdf.layout.hyphenation.PatternParser.characters(char,int,int)
com.itextpdf.kernel.pdf.layer.PdfLayer.isLocked()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff068Test.getTestInfo()
com.itextpdf.signatures.LtvVerification.deleteOldReferences(PdfArray,PdfArray)
com.itextpdf.kernel.pdf.annot.Pdf3DAnnotation.getViewBox()
com.itextpdf.kernel.xmp.XMPMeta.deleteProperty(String,String)
com.itextpdf.kernel.pdf.PdfReader.get(long,byte,int,int)
com.itextpdf.io.font.woff2.w3c.format.HeaderSignature001Test.getFontName()
com.itextpdf.kernel.pdf.PdfTokenizerTest.checkTokenTypes(String,PdfTokenizer,TokenType)
com.itextpdf.kernel.pdf.PdfNumTree.buildTree()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setFillColorCmyk(float,float,float,float)
com.itextpdf.layout.hyphenation.CharVector.trimToSize()
com.itextpdf.io.font.woff2.Woff2Out.write(byte,int,int,int)
com.itextpdf.layout.Style.getMarginTop()
com.itextpdf.layout.hyphenation.IPatternConsumer.addException(String,List)
com.itextpdf.layout.renderer.AbstractRenderer.hasOwnOrModelProperty(int)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setDownAppearance(PdfAnnotationAppearance)
com.itextpdf.io.font.otf.lookuptype5.SubTableLookup5Format3.getContextLength()
com.itextpdf.kernel.pdf.PdfResources.addExtGState(PdfDictionary)
com.itextpdf.kernel.pdf.canvas.parser.TextRenderInfoTest.eventOccurred(IEventData,EventType)
com.itextpdf.io.source.ArrayRandomAccessSource.get(long)
com.itextpdf.kernel.xmp.impl.Utils.normalizeLangValue(String)
com.itextpdf.layout.renderer.AbstractRenderer.getPropertyAsFloat(int,Float)
com.itextpdf.kernel.pdf.colorspace.PdfShading.makeShading(PdfDictionary)
com.itextpdf.io.source.ByteBuffer.append(int)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.showText(GlyphLine)
com.itextpdf.kernel.pdf.annot.PdfFixedPrint.setHorizontalTranslation(float)
com.itextpdf.kernel.pdf.PdfPagesTest.removeFlushedPage()
com.itextpdf.barcodes.qrcode.QRCode.isValid()
com.itextpdf.forms.xfa.XfaForm.findDatasetsName(String)
com.itextpdf.kernel.pdf.tagging.PdfStructElem.getType()
com.itextpdf.forms.fields.PdfFormField.drawPdfA1RadioAppearance(float,float,String)
com.itextpdf.layout.AlignmentTest.imageAlignmentTest01()
com.itextpdf.signatures.verify.CrlVerifierTest.invalidOutdatedCrl01()
com.itextpdf.layout.renderer.CollapsedTableBorders.collapseTableWithHeader(TableBorders,boolean)
com.itextpdf.io.codec.LZWStringTable.AddCharString(short,byte)
com.itextpdf.pdfa.PdfAFontTest.cidFontCheckTest2()
com.itextpdf.layout.TableBorderTest.wideBorderTest04()
com.itextpdf.io.font.FontProgram.toString()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff111Test.getFontName()
com.itextpdf.io.font.FontProgram.setFontWeight(int)
com.itextpdf.kernel.utils.PageRange.equals(Object)
com.itextpdf.barcodes.BarcodePostnetTest.beforeClass()
com.itextpdf.layout.border.GrooveBorder.setInnerHalfColor(PdfCanvas,Side)
com.itextpdf.layout.element.BlockElement.getMarginTop()
com.itextpdf.kernel.pdf.PdfDocumentTest.removeUnusedObjectsInWriterModeTest()
com.itextpdf.kernel.pdf.PdfReader.getOffsetTokeniser(IRandomAccessSource)
com.itextpdf.kernel.pdf.annot.PdfLineAnnotation.setCaptionOffset(float)
com.itextpdf.kernel.xmp.XMPDateTime.getISO8601String()
com.itextpdf.kernel.pdf.PdfDocumentInfo.getStringValue(PdfName)
com.itextpdf.layout.renderer.AbstractRenderer.isFirstOnRootArea()
com.itextpdf.kernel.pdf.WriterProperties.isPublicKeyEncryptionUsed()
com.itextpdf.kernel.pdf.PdfWriter.copyObject(PdfObject,PdfDocument,boolean)
com.itextpdf.layout.renderer.TableRenderer.extendLastRow(CellRenderer,Rectangle)
com.itextpdf.kernel.pdf.PdfDocument.addNewPage(int)
com.itextpdf.kernel.pdf.PdfXrefTable.writeXrefTableAndTrailer(PdfDocument,PdfObject,PdfObject)
com.itextpdf.io.font.woff2.SimpleWoff2DecodeTest.runTest(String)
com.itextpdf.layout.minmaxwidth.MinMaxWidthUtils.getMarginsWidth(IPropertyContainer)
com.itextpdf.io.codec.brotli.dec.BitReader.prepare(BitReader)
com.itextpdf.io.font.Type1Font.getFontStreamLengths()
com.itextpdf.barcodes.BarcodePDF417.getCodewords()
com.itextpdf.layout.FloatTest.floatingTwoImagesLR()
com.itextpdf.layout.renderer.TableWidths.getTable()
com.itextpdf.kernel.pdf.PdfNumber.intValue()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff053Test.isFontValid()
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.setBackgroundMode(int)
com.itextpdf.kernel.utils.CompareTool.compareNumbersExtended(PdfNumber,PdfNumber,ObjectPath,CompareResult)
com.itextpdf.kernel.pdf.PdfNumber.decrement()
com.itextpdf.kernel.pdf.colorspace.PdfShading.setCoords(PdfArray)
com.itextpdf.kernel.xmp.XMPSchemaRegistry.getNamespaceURI(String)
com.itextpdf.signatures.PdfPKCS7.findOcsp(ASN1Sequence)
com.itextpdf.io.source.ByteUtils.getIsoBytes(double)
com.itextpdf.layout.font.FontProvider.createFontSelector(Collection,List,FontCharacteristics)
com.itextpdf.layout.hyphenation.IPatternConsumer.addPattern(String,String)
com.itextpdf.signatures.CertificateUtil.getCRL(String)
com.itextpdf.barcodes.qrcode.GF256Poly.addOrSubtract(GF256Poly)
com.itextpdf.layout.hyphenation.HyphenationTree.getHyphPointsForWords(List,int,int)
com.itextpdf.kernel.font.PdfType0Font.containsGlyph(int)
com.itextpdf.kernel.pdf.annot.PdfRedactAnnotation.setRepeat(PdfBoolean)
com.itextpdf.kernel.xmp.impl.ParameterAsserts.assertNotNull(Object)
com.itextpdf.layout.FloatTest.clearanceApplyingPageSplit04()
com.itextpdf.layout.hyphenation.PatternParser.error(SAXParseException)
com.itextpdf.kernel.pdf.PdfPage.initParentPages()
com.itextpdf.layout.renderer.CollapsedTableBorders.applyBottomTableBorder(Rectangle,Rectangle,boolean,boolean,boolean)
com.itextpdf.kernel.crypto.securityhandler.StandardSecurityHandler.setStandardHandlerDicEntries(PdfDictionary,byte,byte)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.addXObject(PdfXObject,float,float)
com.itextpdf.layout.renderer.TableRenderer.draw(DrawContext)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff058Test.isFontValid()
com.itextpdf.kernel.pdf.PdfArray.copyContent(PdfObject,PdfDocument)
com.itextpdf.barcodes.qrcode.ErrorCorrectionLevel.getBits()
com.itextpdf.kernel.font.DocFontEncoding.createDocFontEncoding(PdfObject,CMapToUnicode)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.updateCtm(float,float,float,float,float,float)
com.itextpdf.layout.AlignmentTest.justifyAlignmentTest01()
com.itextpdf.kernel.pdf.navigation.PdfExplicitDestination.createFitBV(int,float)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setTextMatrix(AffineTransform)
com.itextpdf.kernel.xmp.XMPDateTimeFactory.create(int,int,int)
com.itextpdf.io.font.cmap.CMapObject.isDictionary()
com.itextpdf.kernel.pdf.PdfDocument.getPage(PdfDictionary)
com.itextpdf.io.source.RandomAccessFileOrArray.readLine()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff146Test.getTestInfo()
com.itextpdf.kernel.pdf.PdfName.copyContent(PdfObject,PdfDocument)
com.itextpdf.layout.margincollapse.MarginsCollapse.getCollapsedMarginsSize()
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.getEventListener()
com.itextpdf.kernel.pdf.annot.PdfTrapNetworkAnnotation.getFauxedFonts()
com.itextpdf.kernel.Version.addAGPLPostfix(Throwable)
com.itextpdf.kernel.xmp.impl.XMPUtilsImpl.classifyCharacter(char)
com.itextpdf.io.image.Jpeg2000Test.openJpeg2000_2()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff082Test.isFontValid()
com.itextpdf.barcodes.Barcode1D.getAltText()
com.itextpdf.signatures.CertificateInfo.getIssuerFields(X509Certificate)
com.itextpdf.barcodes.Barcode1D.isGenerateChecksum()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff147Test.getFontName()
com.itextpdf.io.util.IntHashtable.getValue()
com.itextpdf.barcodes.BarcodeDataMatrix.processExtensions(byte,int,int,byte)
com.itextpdf.barcodes.Barcode128.getBarcodeSize()
com.itextpdf.layout.ImageTest.fixedPositionImageTest01()
com.itextpdf.kernel.geom.Rectangle.equalsWithEpsilon(Rectangle)
com.itextpdf.layout.LocationTextExtractionStrategyTest.createRenderListenerForTest()
com.itextpdf.io.font.otf.lookuptype5.SubTableLookup5Format1.isGlyphMatchesInput(int,int)
com.itextpdf.kernel.pdf.PdfStampingTest.stampingAppend10()
com.itextpdf.signatures.PdfPKCS7.isRevocationValid()
com.itextpdf.io.codec.brotli.dec.Decode.decodeVarLenUnsignedByte(BitReader)
com.itextpdf.io.font.woff2.Buffer.readAsNumber(int)
com.itextpdf.forms.PdfFormCopyTest.copyFieldsTest06()
com.itextpdf.kernel.pdf.PdfStream.setCompressionLevel(int)
com.itextpdf.forms.PdfAcroForm.setSignatureFlags(int)
com.itextpdf.io.font.otf.OpenTypeFontTableReader.readUShortArray(int,int)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.setStructField(String,String,String,String,String)
com.itextpdf.signatures.PdfSignatureAppearance.setLayer2Font(PdfFont)
com.itextpdf.forms.PdfFormCopyTest.copyFieldsTest10()
com.itextpdf.forms.FormFieldFlatteningTest.formFlatteningTest01()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.setPropertyDouble(String,String,double)
com.itextpdf.io.codec.TIFFDirectory.getField(int)
com.itextpdf.layout.renderer.BlockRenderer.getOccupiedAreaBBox()
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.getBlackGenerationFunction()
com.itextpdf.io.font.woff2.w3c.format.BlocksPrivate001Test.getTestInfo()
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.containsMark(ITextChunkLocation,ITextChunkLocation)
com.itextpdf.pdfa.PdfA3EmbeddedFilesCheckTest.compareResult(String,String)
com.itextpdf.kernel.pdf.PdfPagesTree.removePage(int)
com.itextpdf.io.source.ByteUtils.getIsoBytes(int,ByteBuffer)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff092Test.isFontValid()
com.itextpdf.kernel.pdf.xobject.PdfFormXObject.setTrapRegions(PdfArray)
com.itextpdf.kernel.pdf.ParentTreeTest.test05()
com.itextpdf.layout.renderer.ListItemRenderer.isListSymbolEmpty(IRenderer)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff031Test.getTestInfo()
com.itextpdf.io.font.woff2.w3c.format.TabledataLocaSize003Test.getFontName()
com.itextpdf.kernel.pdf.PdfPages.isWrappedObjectMustBeIndirect()
com.itextpdf.kernel.pdf.FreeReferencesTest.freeReferencesTest04()
com.itextpdf.layout.renderer.BlockRenderer.getIntersectionPoint(Point,Point,Point,Point)
com.itextpdf.layout.renderer.AccessibleAttributesApplier.applyBlockLevelLayoutAttributes(PdfName,AbstractRenderer,PdfDictionary,PdfDocument)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.getArrayItem(String,String,int)
com.itextpdf.kernel.pdf.navigation.PdfExplicitDestination.createFitB(int)
com.itextpdf.layout.OpacityTest.imageElementOpacity01()
com.itextpdf.kernel.Version.getProduct()
com.itextpdf.kernel.utils.PdfResourceCounter.getLength(Map)
com.itextpdf.barcodes.qrcode.MatrixUtil.findMSBSet(int)
com.itextpdf.kernel.pdf.PdfString.encrypt(PdfEncryption)
com.itextpdf.kernel.geom.Subpath.setStartPoint(Point)
com.itextpdf.layout.renderer.AbstractRenderer.calculatePaddingBorderWidth(AbstractRenderer)
com.itextpdf.pdfa.PdfAFontTest.nonSymbolicTtfCharEncodingsPdfA1Test02()
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getTextRenderMode()
com.itextpdf.layout.renderer.AccessibleAttributesApplier.applyTableAttributes(AbstractRenderer)
com.itextpdf.kernel.pdf.layer.PdfOCProperties.registerLayer(PdfLayer)
com.itextpdf.layout.RotationTest.listRotationTest01()
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.processContent(byte,PdfResources)
com.itextpdf.forms.PdfFormFieldTest.acroFieldDictionaryNoFields()
com.itextpdf.io.codec.brotli.dec.EnumTest.checkEnumClass(Class)
com.itextpdf.barcodes.BarcodePDF417.numberCompaction(byte,int,int)
com.itextpdf.io.font.FontCache.getFont(FontCacheKey)
com.itextpdf.layout.TableTest.simpleTableTest14()
com.itextpdf.layout.KeepWithNextTest.keepWithNextTest04()
com.itextpdf.signatures.PdfPKCS7.getSignCertificateChain()
com.itextpdf.forms.fields.PdfFormField.setFieldFlag(int,boolean)
com.itextpdf.io.source.RandomAccessFileOrArray.readUnsignedByte()
com.itextpdf.layout.AutoTaggingTest.tableTest04()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff116Test.isFontValid()
com.itextpdf.pdfa.PdfA1ActionCheckTest.actionCheck05()
com.itextpdf.io.font.TrueTypeFont.close()
com.itextpdf.barcodes.BarcodeDataMatrix.makePadding(byte,int,int)
com.itextpdf.kernel.pdf.PdfReaderTest.zeroUpdateTest()
com.itextpdf.layout.renderer.LineRenderer.calculateTab(Rectangle,float,TabStop,List,IRenderer)
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.setMetaState(MetaState)
com.itextpdf.kernel.color.DeviceGray.makeDarker(DeviceGray)
com.itextpdf.kernel.pdf.annot.PdfFreeTextAnnotation.getDefaultStyleString()
com.itextpdf.kernel.pdf.colorspace.PdfShading.setDomain(float,float,float,float)
com.itextpdf.kernel.xmp.impl.XMPIteratorImpl.getNamespace()
com.itextpdf.kernel.pdf.PdfDocument.addNewPage()
com.itextpdf.layout.renderer.AbstractRenderer.getFirstYLineRecursively()
com.itextpdf.kernel.xmp.impl.XMPMetaParser.createDocumentBuilderFactory()
com.itextpdf.io.font.FontEncoding.createEmptyFontEncoding()
com.itextpdf.layout.OpacityTest.textElementOpacity01()
com.itextpdf.io.font.woff2.w3c.format.TabledataDecompressedLength003Test.getFontName()
com.itextpdf.layout.ElementPropertyContainer.setDestination(String)
com.itextpdf.layout.FloatTest.floatsOnPageSplit07()
com.itextpdf.layout.AreaBreakTest.pageBreakTest2()
com.itextpdf.barcodes.qrcode.CharacterSetECI.getEncodingName()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.ellipse(double,double,double,double)
com.itextpdf.layout.RotationTest.splitTextRotationTest02()
com.itextpdf.barcodes.qrcode.Encoder.getNumDataBytesAndNumECBytesForBlockID(int,int,int,int,int,int)
com.itextpdf.kernel.pdf.PdfStampingTest.stampingTestWithFullCompression01()
com.itextpdf.signatures.SignUtils.parseCrlFromStream(InputStream)
com.itextpdf.kernel.events.IEventDispatcher.hasEventHandler(String)
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6Format2.getLookaheadContextLength()
com.itextpdf.kernel.pdf.action.PdfAction.createJavaScript(String)
com.itextpdf.io.source.WriteNumbersTest.WriteNumber1Test()
com.itextpdf.kernel.font.PdfType0Font.toHex4(char)
com.itextpdf.kernel.utils.CompareTool.compareDictionariesExtended(PdfDictionary,PdfDictionary,ObjectPath,CompareResult,Set)
com.itextpdf.kernel.pdf.annot.PdfTrapNetworkAnnotation.getAnnotStates()
com.itextpdf.kernel.pdf.PdfResources.generate(PdfResources)
com.itextpdf.kernel.xmp.XMPMeta.setArrayItem(String,String,int,String,PropertyOptions)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff049Test.getTestInfo()
com.itextpdf.kernel.pdf.PdfWriter.getCompressionLevel()
com.itextpdf.layout.border.RoundDotsBorder.draw(PdfCanvas,float,float,float,float,float,Side,float,float)
com.itextpdf.io.font.woff2.w3c.format.BlocksExtraneousData003Test.getTestInfo()
com.itextpdf.barcodes.qrcode.Version.getECBlocksForLevel(ErrorCorrectionLevel)
com.itextpdf.kernel.pdf.PdfStream.copyTo(PdfDocument,boolean)
com.itextpdf.signatures.PdfSignatureAppearance.setRenderingMode(RenderingMode)
com.itextpdf.kernel.utils.CompareTool.compareArraysExtended(PdfArray,PdfArray,ObjectPath,CompareResult)
com.itextpdf.forms.PdfAcroForm.getDefaultAppearance()
com.itextpdf.io.codec.TIFFFaxDecoder.decodeNextScanline(byte,int,int)
com.itextpdf.kernel.geom.Rectangle.getLeft()
com.itextpdf.forms.PdfPageFormCopier.copy(PdfPage,PdfPage)
com.itextpdf.io.font.CFFFont.getPosition()
com.itextpdf.layout.font.FontSelectorCache.get(FontSelectorKey,FontSet)
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.sameLine(TextChunk)
com.itextpdf.layout.TableTest.skipLastRowTest()
com.itextpdf.io.font.woff2.w3c.format.HeaderNumTables001Test.getFontName()
com.itextpdf.barcodes.BarcodePDF417.append(int,int)
com.itextpdf.barcodes.BarcodePDF417.getSegmentLength(Segment)
com.itextpdf.kernel.pdf.PdfPages.removeFromParent()
com.itextpdf.kernel.pdf.PdfStructElemTest.compareResult(String,String,String)
com.itextpdf.kernel.geom.Path.getCurrentPoint()
com.itextpdf.kernel.pdf.PdfStream.getInputStream()
com.itextpdf.kernel.xmp.impl.XMPNode.clear()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff131Test.getTestInfo()
com.itextpdf.barcodes.BarcodePDF417.append(String)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.getUndercolorRemovalFunction()
com.itextpdf.layout.renderer.AbstractRenderer.applyDestinationsAndAnnotation(DrawContext)
com.itextpdf.kernel.pdf.canvas.parser.BidiTextExtractionTest.test04()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setOpen(boolean)
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.getSupportedEvents()
com.itextpdf.forms.FormFieldsTaggingTest.formFieldTaggingTest06()
com.itextpdf.kernel.pdf.PdfCanvasTest.copyPagesTest5()
com.itextpdf.kernel.pdf.PdfXObjectTest.createDocumentFromImages1()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.setPropertyCalendar(String,String,Calendar,PropertyOptions)
com.itextpdf.io.image.ImageDataFactory.createPng(byte)
com.itextpdf.kernel.pdf.PdfNumTree.getNumbers()
com.itextpdf.io.font.FontProgram.setTypoDescender(int)
com.itextpdf.kernel.pdf.PdfPage.setXmpMetadata(XMPMeta,SerializeOptions)
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.beginText()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setDownAppearance(PdfDictionary)
com.itextpdf.layout.TableBorderTest.splitCellsTest02()
com.itextpdf.layout.TableTest.tableWithKeepTogetherOnCells()
com.itextpdf.layout.font.FontSet.getFonts(FontSet)
com.itextpdf.kernel.pdf.PdfNumber.makeIndirect(PdfDocument)
com.itextpdf.layout.Style.setMarginLeft(float)
com.itextpdf.pdfa.checker.PdfA2Checker.checkFileSpec(PdfDictionary)
com.itextpdf.kernel.pdf.PdfCatalog.setPageLayout(PdfName)
com.itextpdf.io.source.RandomAccessFileOrArray.readFully(byte)
com.itextpdf.signatures.PdfSignatureAppearance.applyCopyFittingFontSize(Paragraph,Rectangle,IRenderer)
com.itextpdf.kernel.pdf.PdfFontTest.createDocumentWithHelvetica()
com.itextpdf.io.font.cmap.CMapToUnicode.lookup(byte,int,int)
com.itextpdf.signatures.PdfPKCS7.verifyTimestampImprint()
com.itextpdf.io.font.woff2.w3c.format.BlocksExtraneousData007Test.isFontValid()
com.itextpdf.kernel.geom.AffineTransform.setToScale(double,double)
com.itextpdf.kernel.xmp.impl.XMPSerializerRDF.serializeCanonicalRDFProperty(XMPNode,boolean,boolean,int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff057Test.getFontName()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff088Test.getTestInfo()
com.itextpdf.kernel.utils.CompareTool.compareByContent(String,String,String,String,byte,byte)
com.itextpdf.kernel.xmp.XMPDateTime.setMonth(int)
com.itextpdf.kernel.pdf.tagutils.AccessibilityProperties.getLanguage()
com.itextpdf.layout.hyphenation.ByteVector.get(int)
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.setNextNewKidIndex(int)
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingStandard40.computeGlobalEncryptionKey(byte,byte,boolean)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff100Test.isFontValid()
com.itextpdf.kernel.pdf.layer.PdfOCProperties.addASEvent(PdfName,PdfName)
com.itextpdf.forms.PdfAcroForm.setXFAResource(PdfArray)
com.itextpdf.kernel.pdf.action.PdfAction.createSubmitForm(String,Object,int)
com.itextpdf.barcodes.BarcodeDataMatrixTest.barcode02Test()
com.itextpdf.io.source.ArrayRandomAccessSource.get(long,byte,int,int)
com.itextpdf.io.codec.brotli.dec.Decode.decodeDistanceBlockSwitch(State)
com.itextpdf.forms.fields.PdfFormField.setMappingName(String)
com.itextpdf.kernel.pdf.PdfObjectWrapper.markObjectAsIndirect(PdfObject)
com.itextpdf.kernel.pdf.PdfPage.setMediaBox(Rectangle)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getCtm()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff105Test.getTestInfo()
com.itextpdf.layout.renderer.AbstractRenderer.hasProperty(int)
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.fixPrevChildOccupiedArea(int)
com.itextpdf.kernel.PdfException.getMessageParams()
com.itextpdf.signatures.PdfSignatureAppearance.setLocation(String)
com.itextpdf.io.font.FontMetrics.setSubscriptOffset(int)
com.itextpdf.layout.hyphenation.HyphenationTreeCache.constructUserKey(String,String,Map)
com.itextpdf.kernel.pdf.PdfStampingTest.stamping5()
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getStringWidth(String)
com.itextpdf.io.source.MappedChannelRandomAccessSource.get(long,byte,int,int)
com.itextpdf.kernel.pdf.canvas.wmf.MetaFont.isUnderline()
com.itextpdf.kernel.pdf.PdfString.generateContent()
com.itextpdf.pdfa.PdfA1AnnotationCheckTest.annotationCheckTest03()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff085Test.getFontName()
com.itextpdf.barcodes.qrcode.Encoder.chooseMode(String,String)
com.itextpdf.io.image.ImageData.getData()
com.itextpdf.io.image.ImageData.getSerialId()
com.itextpdf.kernel.pdf.TagTreePointerTest.tagStructureRemovingTest01()
com.itextpdf.layout.LargeElementTest.largeEmptyTableTest02()
com.itextpdf.kernel.crypto.securityhandler.SecurityHandler.setHashKeyForNextObject(int,int)
com.itextpdf.kernel.pdf.canvas.parser.clipper.IClipper.execute(ClipType,Paths,PolyFillType,PolyFillType)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Edge.doesE2InsertBeforeE1(Edge,Edge)
com.itextpdf.pdfa.PdfAFlushingTest.addUnusedStreamObjectsTest()
com.itextpdf.kernel.pdf.PdfFontTest.testNotoFont()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Path.reversePolyPtLinks()
com.itextpdf.kernel.pdf.PdfWriterTest.beforeClass()
com.itextpdf.kernel.pdf.PdfDictionary.getAsRectangle(PdfName)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff085Test.isFontValid()
com.itextpdf.forms.fields.PdfFormField.getRichText()
com.itextpdf.kernel.pdf.PdfWriterTest.copyObject7()
com.itextpdf.layout.renderer.ListRenderer.draw(DrawContext)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setBorderStyle(PdfDictionary)
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.getInReplyTo()
com.itextpdf.kernel.pdf.action.PdfAction.createRendition(String,PdfFileSpec,String,PdfAnnotation)
com.itextpdf.layout.element.BlockElement.setRotationAngle(float)
com.itextpdf.kernel.pdf.tagutils.AccessibilityProperties.setExpansion(String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff155Test.getFontName()
com.itextpdf.forms.xfa.Xml2Som.setOrder(List)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff098Test.isFontValid()
com.itextpdf.kernel.utils.CompareTool.pushOffsetToPath(int)
com.itextpdf.io.font.FontProgramFactory.registerFontFamily(String,String,String)
com.itextpdf.kernel.pdf.PdfObject.isName()
com.itextpdf.layout.element.ListItem.getDefaultProperty(int)
com.itextpdf.test.WrappedSamplesRunner.getStringField(Class,String)
com.itextpdf.barcodes.BarcodePDF417.outCodeword17(int)
com.itextpdf.io.codec.brotli.dec.Decode.readHuffmanCodeLengths(int,int,int,BitReader)
com.itextpdf.io.font.FontCache.isPredefinedCidFont(String)
com.itextpdf.kernel.events.EventDispatcher.dispatchEvent(Event,boolean)
com.itextpdf.kernel.pdf.canvas.parser.clipper.PolyNode.getPolygon()
com.itextpdf.layout.property.PropertyTest.propertyUniquenessTest()
com.itextpdf.signatures.PrivateKeySignature.getEncryptionAlgorithm()
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getAscentLine()
com.itextpdf.layout.LargeElementTest.largeTableWithHeaderFooterTest01A()
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.setRightToLeftRunDirection(boolean)
com.itextpdf.forms.PdfFormCopyTest.copyFieldsTest01()
com.itextpdf.kernel.pdf.PdfReader.readXrefSection()
com.itextpdf.kernel.pdf.PdfEncryption.readAndSetCryptoModeForPubSecHandler(PdfDictionary)
com.itextpdf.kernel.pdf.PdfTokenizerTest.numberValueInTheEndTest()
com.itextpdf.io.image.ImageData.setBpc(int)
com.itextpdf.layout.renderer.TextRenderer.scaleXAdvance(float,float,Float)
com.itextpdf.forms.xfa.XfaForm.getXfaObject(PdfDocument)
com.itextpdf.layout.element.Table.hasOnlyPercents(UnitValue)
com.itextpdf.kernel.pdf.PdfName.hashCode()
com.itextpdf.layout.renderer.CollapsedTableBorders.applyBottomTableBorder(Rectangle,Rectangle,boolean)
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.isUseActualText()
com.itextpdf.io.source.IRandomAccessSource.get(long,byte,int,int)
com.itextpdf.barcodes.BarcodePDF417.basicNumberCompaction(int,int)
com.itextpdf.layout.AutoTaggingTest.compareResult(String,String)
com.itextpdf.kernel.pdf.PdfDictionary.newInstance()
com.itextpdf.signatures.TSAClientBouncyCastle.setTSAReqPolicy(String)
com.itextpdf.kernel.pdf.tagutils.BackedAccessibleProperties.setExpansion(String)
com.itextpdf.io.font.otf.OpenTypeFontTableReader.getLanguageRecord(String)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.getStructField(String,String,String,String)
com.itextpdf.kernel.font.DocType1Font.fillFontDescriptor(DocType1Font,PdfDictionary)
com.itextpdf.layout.BlockTest.blockFillAvailableArea01()
com.itextpdf.kernel.utils.PdfMerger.merge(PdfDocument,int,int)
com.itextpdf.io.font.otf.OpenTypeFontTableReader.readLookupListTable(int)
com.itextpdf.kernel.pdf.PdfEncryptionTest.encryptWithCertificateStandard128NoCompression()
com.itextpdf.pdfa.PdfA2CatalogCheckTest.catalogCheck09()
com.itextpdf.io.codec.TIFFDirectory.getNumDirectories(RandomAccessFileOrArray)
com.itextpdf.io.font.woff2.w3c.format.HeaderLength001Test.isFontValid()
com.itextpdf.kernel.pdf.tagging.ParentTreeHandler.registerMcr(PdfMcr,boolean)
com.itextpdf.layout.element.Image.setMarginBottom(float)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.setStructField(String,String,String,String,String,PropertyOptions)
com.itextpdf.kernel.pdf.PdfString.makeIndirect(PdfDocument)
com.itextpdf.kernel.xmp.impl.Utils.removeControlChars(String)
com.itextpdf.kernel.pdf.PdfDocumentTest.testImageCompressLevel()
com.itextpdf.layout.element.Table.ensureHeaderIsInitialized()
com.itextpdf.kernel.pdf.PdfDocument.initTagStructureContext()
com.itextpdf.io.codec.brotli.dec.SynthTest.testComplexHuffmanCodeTwoSymbols()
com.itextpdf.io.source.WindowRandomAccessSource.length()
com.itextpdf.kernel.pdf.PdfCanvasTest.copyPagesTest2()
com.itextpdf.signatures.SignUtils.getHttpResponse(URL)
com.itextpdf.layout.renderer.AbstractRenderer.applyBorderBox(Rectangle,boolean)
com.itextpdf.kernel.utils.PdfMergerTest.mergeDocumentTest02()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff009Test.getFontName()
com.itextpdf.test.WrappedSamplesRunner.getOutPath(String)
com.itextpdf.layout.TableBorderTest.tableWithHeaderFooterTest03()
com.itextpdf.layout.renderer.LineRenderer.adjustLineOnFloatPlaced(Rectangle,int,FloatPropertyValue,Rectangle)
com.itextpdf.kernel.pdf.PdfReader.computeUserPassword()
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingAes128.getEncryptionStream(OutputStream)
com.itextpdf.io.font.FontProgram.setBbox(int)
com.itextpdf.kernel.pdf.PdfAConformanceLevel.getConformance()
com.itextpdf.layout.renderer.TableBorders.getFinishRow()
com.itextpdf.layout.renderer.CollapsedTableBorders.applyLeftAndRightTableBorder(Rectangle,boolean)
com.itextpdf.io.font.FontMetrics.getTypoAscender()
com.itextpdf.kernel.pdf.filespec.PdfFileSpec.createEmbeddedFileSpec(PdfDocument,InputStream,String,String,PdfName,PdfName,boolean)
com.itextpdf.pdfa.PdfA2ActionCheckTest.actionCheck02()
com.itextpdf.kernel.utils.CompareTool.getLinkAnnotations(int,PdfDocument)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff054Test.getFontName()
com.itextpdf.signatures.verify.OcspVerifierTest.invalidRevokedOcspTest01()
com.itextpdf.kernel.xmp.XMPMeta.setPropertyCalendar(String,String,Calendar)
com.itextpdf.layout.ListTest.listSetSymbol()
com.itextpdf.pdfa.PdfA2ActionCheckTest.actionCheck14()
com.itextpdf.kernel.xmp.XMPMeta.setPropertyDate(String,String,XMPDateTime,PropertyOptions)
com.itextpdf.io.image.ImageData.setImageMask(ImageData)
com.itextpdf.io.codec.CCITTG4Encoder.fax4Encode(byte,int)
com.itextpdf.kernel.pdf.PdfPage.copyTo(PdfDocument)
com.itextpdf.io.font.otf.GsubLookupType4.transformOne(GlyphLine)
com.itextpdf.io.font.FontNames.setFontWeight(int)
com.itextpdf.signatures.PdfSigner.getDocument()
com.itextpdf.io.font.otf.lookuptype5.SubTableLookup5Format3.getSubstLookupRecords()
com.itextpdf.io.image.ImageDataFactory.readImageType(byte)
com.itextpdf.io.font.otf.OtfClass.getOtfClass(int)
com.itextpdf.io.font.TrueTypeFontSubset.checkGlyphComposite(int)
com.itextpdf.kernel.pdf.ByteBufferOutputStream.append_i(int)
com.itextpdf.kernel.pdf.PdfDocument.setXmpMetadata(byte)
com.itextpdf.forms.fields.PdfButtonFormField.setImageAsForm(PdfFormXObject)
com.itextpdf.kernel.pdf.EncodingTest.symbolTrueTypeFontSameCharsIdentityTest()
com.itextpdf.kernel.pdf.canvas.draw.DottedLine.getGap()
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.isBlockElement(IRenderer)
com.itextpdf.io.font.woff2.Buffer.readInt()
com.itextpdf.kernel.pdf.canvas.CanvasTag.addProperty(PdfName,PdfObject)
com.itextpdf.kernel.utils.CompareTool.getBaseCmpObject()
com.itextpdf.kernel.utils.CompareTool.flattenNumTree(PdfDictionary,PdfNumber,LinkedList)
com.itextpdf.io.font.woff2.Woff2DecodeTest.runTest(String,String,String,boolean)
com.itextpdf.forms.fields.PdfFormField.isReadOnly()
com.itextpdf.kernel.pdf.canvas.parser.listener.FilteredEventListener.eventOccurred(IEventData,EventType)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff045Test.getTestInfo()
com.itextpdf.kernel.xmp.impl.XMPNormalizer.deleteEmptySchemas(XMPNode)
com.itextpdf.layout.TabsTest.initDocument(String)
com.itextpdf.kernel.pdf.EncryptionProperties.setPublicKeyEncryption(Certificate,int,int)
com.itextpdf.io.font.cmap.CMapObject.isString()
com.itextpdf.pdfa.PdfA1GraphicsTest.egsCheckTest2()
com.itextpdf.kernel.geom.Vector.cross(Matrix)
com.itextpdf.layout.renderer.AbstractRenderer.getProperty(int,T1)
com.itextpdf.layout.renderer.TableWidths.setPercents(float)
com.itextpdf.kernel.pdf.annot.PdfRedactAnnotation.getRedactRolloverAppearance()
com.itextpdf.io.font.FontMetrics.getTypoDescender()
com.itextpdf.io.font.woff2.w3c.format.Valid003Test.isFontValid()
com.itextpdf.layout.hyphenation.Hyphenation.getPostHyphenText(int)
com.itextpdf.forms.fields.PdfButtonFormField.setRadiosInUnison(boolean)
com.itextpdf.layout.margincollapse.MarginsCollapseInfo.getBufferSpaceOnTop()
com.itextpdf.layout.font.FontSelector.parseFontStyle(String,FontCharacteristics)
com.itextpdf.io.source.ByteBuffer.reset()
com.itextpdf.kernel.pdf.PdfStructElemTest.corruptedTagStructureTest02()
com.itextpdf.kernel.geom.AffineTransform.transform(float,int,float,int,int)
com.itextpdf.signatures.SignUtils.getPrivateKeyAlgorithm(PrivateKey)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff113Test.isFontValid()
com.itextpdf.layout.ElementPropertyContainer.setHeight(float)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff089Test.isFontValid()
com.itextpdf.kernel.pdf.annot.PdfCaretAnnotation.getSubtype()
com.itextpdf.signatures.PdfPKCS7.getEncryptionAlgorithm()
com.itextpdf.io.source.RandomAccessFileOrArray.readUTF()
com.itextpdf.io.font.FontMetrics.setSuperscriptOffset(int)
com.itextpdf.kernel.pdf.PdfExtGStateTest.beforeClass()
com.itextpdf.barcodes.Barcode1D.setBarHeight(float)
com.itextpdf.kernel.pdf.canvas.parser.ParserGraphicsState.transformSubpath(Subpath,Matrix)
com.itextpdf.layout.Document.relayout()
com.itextpdf.kernel.crypto.securityhandler.PublicKeyRecipient.getCertificate()
com.itextpdf.forms.PdfPageFormCopier.addChildToExistingParent(PdfDictionary,Set)
com.itextpdf.kernel.utils.IPageRangePart.isPageInRange(int)
com.itextpdf.io.font.woff2.w3c.format.BlocksMetadataPadding002Test.isFontValid()
com.itextpdf.layout.Style.setPaddingBottom(float)
com.itextpdf.kernel.pdf.PdfPrimitiveObject.getInternalContent()
com.itextpdf.io.image.ImageDataFactory.createPng(URL)
com.itextpdf.signatures.PdfPKCS7.getTimeStampDate()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff152Test.getTestInfo()
com.itextpdf.layout.element.Table.addCell(BlockElement)
com.itextpdf.layout.PositioningTest.relativePositioningTable01Test()
com.itextpdf.kernel.pdf.PdfStructElemTest.structTreeCopyingTest07()
com.itextpdf.io.codec.TIFFField.getAsRational(int)
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.setInteriorColor(float)
com.itextpdf.kernel.pdf.canvas.parser.LocationExtractTest.fuzzyContains(Collection,Rectangle)
com.itextpdf.kernel.pdf.PdfIndirectReference.setState(short)
com.itextpdf.kernel.xmp.XMPVersionInfo.isDebug()
com.itextpdf.kernel.pdf.PdfDocument.getFirstPage()
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.setCreationDate(PdfString)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff046Test.getTestInfo()
com.itextpdf.layout.element.AbstractElement.setNextRenderer(IRenderer)
com.itextpdf.io.font.woff2.Woff2DecodeTest.isDebug()
com.itextpdf.layout.renderer.TableWidths.resetPoints(float)
com.itextpdf.io.image.BmpTest.openBmp1()
com.itextpdf.layout.element.Image.getImageScaledWidth()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff128Test.getTestInfo()
com.itextpdf.layout.minmaxwidth.MinMaxWidthUtils.getBorderWidth(IPropertyContainer)
com.itextpdf.kernel.pdf.PdfLiteral.newInstance()
com.itextpdf.forms.fields.PdfFormField.drawButton(PdfCanvas,float,float,float,float,String,PdfFont,float)
com.itextpdf.layout.font.FontProvider.addDirectory(String)
com.itextpdf.barcodes.BarcodePDF417Test.barcode01Test()
com.itextpdf.kernel.font.PdfFontFactory.isRegistered(String)
com.itextpdf.kernel.pdf.PdfReader.setCloseStream(boolean)
com.itextpdf.kernel.pdf.PdfEncryptionTest.encryptWithPasswordAes256NoCompression()
com.itextpdf.kernel.pdf.colorspace.PdfSpecialCs.getNumberOfComponents()
com.itextpdf.io.font.cmap.CMapToUnicode.getCodes()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff074Test.getTestInfo()
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.compare(TextChunk,TextChunk)
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getCanvasTagHierarchy()
com.itextpdf.layout.ElementPropertyContainer.setUnderline()
com.itextpdf.io.codec.brotli.dec.BitReader.reload(BitReader)
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.restoreLayoutBoxAfterFailedLayoutAttempt(Rectangle)
com.itextpdf.forms.xfa.XfaForm.fillXfaForm(InputStream,boolean)
com.itextpdf.kernel.pdf.PdfLayerTest.beforeClass()
com.itextpdf.barcodes.BarcodeQRCode.createFormXObject(Color,float,PdfDocument)
com.itextpdf.io.image.PngImageHelper.getPixel(byte,PngParameters)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Edge.getBot()
com.itextpdf.kernel.pdf.PdfPage.getXmpMetadata()
com.itextpdf.layout.renderer.ImageRenderer.move(float,float)
com.itextpdf.kernel.pdf.annot.PdfTextMarkupAnnotation.createUnderline(Rectangle,float)
com.itextpdf.kernel.xmp.XMPMeta.getPropertyDouble(String,String)
com.itextpdf.pdfa.PdfA3EmbeddedFilesCheckTest.fileSpecCheckTest04()
com.itextpdf.layout.LocationTextExtractionStrategyTest.testRotatedPage2()
com.itextpdf.io.util.StreamUtil.skip(InputStream,long)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.setPropertyBase64(String,String,byte)
com.itextpdf.kernel.xmp.impl.XMPSerializerRDF.declareNamespace(String,String,Set,int)
com.itextpdf.kernel.font.PdfType0Font.getCmap()
com.itextpdf.layout.font.FontProvider.getDefaultEncoding(FontProgram)
com.itextpdf.kernel.pdf.PdfReader.setUnethicalReading(boolean)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getCharSpacing()
com.itextpdf.kernel.pdf.PdfDocumentInfo.getTitle()
com.itextpdf.kernel.pdf.PdfReader.readDictionary(boolean)
com.itextpdf.kernel.pdf.PdfCatalog.getViewerPreferences()
com.itextpdf.kernel.pdf.colorspace.PdfPattern.getResources()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff036Test.getFontName()
com.itextpdf.layout.layout.LayoutArea.hashCode()
com.itextpdf.kernel.utils.PdfResourceCounter.process(PdfObject)
com.itextpdf.layout.FontSelectorTest.beforeClass()
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.getTagStructureTargetVersion()
com.itextpdf.io.image.BmpImageHelper.findMask(int)
com.itextpdf.kernel.pdf.canvas.parser.clipper.PolyNode.setJoinType(JoinType)
com.itextpdf.forms.FormFieldsTaggingTest.formFieldTaggingTest01()
com.itextpdf.kernel.pdf.PdfCanvasTest.colorTest06()
com.itextpdf.kernel.xmp.impl.XMPNodeUtils.detectAltText(XMPNode)
com.itextpdf.layout.renderer.TextRenderer.replaceSpecialWhitespaceGlyphs(GlyphLine,PdfFont)
com.itextpdf.pdfa.checker.PdfA2Checker.checkColorsUsages()
com.itextpdf.io.font.otf.Glyph.isMark()
com.itextpdf.layout.renderer.TableRenderer.getTableWidth()
com.itextpdf.layout.property.TransparentColor.getColor()
com.itextpdf.layout.ElementPropertyContainer.setTextAlignment(TextAlignment)
com.itextpdf.kernel.pdf.PdfReader.fixXref()
com.itextpdf.layout.SimpleTextExtractionStrategyTest.testCoLinnearText()
com.itextpdf.kernel.pdf.PdfStampingTest.stamping6()
com.itextpdf.kernel.xmp.impl.XMPNodeUtils.verifySetOptions(PropertyOptions,Object)
com.itextpdf.io.source.PdfTokenizer.tokenValueEqualsTo(byte)
com.itextpdf.kernel.xmp.impl.ByteBuffer.length()
com.itextpdf.kernel.pdf.PdfObjectTest.indirectsChain1()
com.itextpdf.kernel.geom.AffineTransform.getScaleY()
com.itextpdf.io.font.FontEncoding.normalizeEncoding(String)
com.itextpdf.io.util.HashCode.append(long)
com.itextpdf.io.font.otf.GposLookupType5.readSubTable(int)
com.itextpdf.layout.renderer.ImageRenderer.getNextRenderer()
com.itextpdf.kernel.pdf.filters.LZWDecoder.initializeStringTable()
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.setRectangleDifferences(PdfArray)
com.itextpdf.pdfa.checker.PdfA1Checker.checkFileSpec(PdfDictionary)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff088Test.getFontName()
com.itextpdf.layout.renderer.ListRenderer.getListItemOrListProperty(IRenderer,IRenderer,int)
com.itextpdf.io.codec.brotli.dec.TransformTest.testCapitalize()
com.itextpdf.kernel.geom.Vector.length()
com.itextpdf.kernel.pdf.PdfString.toString()
com.itextpdf.kernel.xmp.XMPMetaFactory.assertImplementation(XMPMeta)
com.itextpdf.layout.RootElement.showTextAligned(String,float,float,TextAlignment,float)
com.itextpdf.io.font.Pfm2afm.outchar(int,int,String)
com.itextpdf.signatures.CertificateVerification.verifyCertificates(Certificate,KeyStore,Calendar)
com.itextpdf.signatures.SignUtils.getCertsFromOcspResponse(BasicOCSPResp)
com.itextpdf.kernel.xmp.impl.XMPNormalizer.process(XMPMetaImpl,ParseOptions)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff009Test.getTestInfo()
com.itextpdf.kernel.pdf.annot.PdfLineAnnotation.setLeaderLine(float)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.copyAELToSEL()
com.itextpdf.layout.element.ListItem.setListSymbol(String)
com.itextpdf.layout.renderer.ILeafElementRenderer.getDescent()
com.itextpdf.signatures.PdfSigner.setSignDate(java,util,Calendar)
com.itextpdf.layout.renderer.TableBorders.getFirstHorizontalBorder()
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.cleanup(PdfCanvas)
com.itextpdf.layout.ElementPropertyContainer.setRelativePosition(float,float,float,float)
com.itextpdf.io.util.IntHashtable.rehash()
com.itextpdf.io.codec.TIFFFaxDecoder.decode1D(byte,byte,int,int)
com.itextpdf.layout.property.UnitValue.hashCode()
com.itextpdf.layout.renderer.CollapsedTableBorders.collapseTableWithFooter(TableBorders,boolean)
com.itextpdf.forms.PdfAcroForm.setDefaultResources(PdfDictionary)
com.itextpdf.kernel.pdf.PdfPagesTest.setup()
com.itextpdf.io.codec.LZWStringTable.FindCharString(short,byte)
com.itextpdf.layout.layout.TextLayoutResult.isSplitForcedByNewline()
com.itextpdf.forms.FormFieldsTaggingTest.beforeClass()
com.itextpdf.kernel.xmp.XMPDateTime.setHour(int)
com.itextpdf.kernel.font.DocType1Font.getFontFile()
com.itextpdf.kernel.pdf.PdfPages.getCount()
com.itextpdf.layout.renderer.FloatingHelper.findLastLeftAndRightBoxes(Rectangle,List)
com.itextpdf.kernel.pdf.tagging.PdfStructElem.getKids()
com.itextpdf.kernel.pdf.PdfDocument.removeEventHandler(String,IEventHandler)
com.itextpdf.io.util.UrlUtil.toNormalizedURI(File)
com.itextpdf.kernel.pdf.tagging.PdfStructElem.setLang(PdfString)
com.itextpdf.kernel.pdf.PdfPrimitivesTest.primitivesBooleanIndirectTest()
com.itextpdf.io.image.Jpeg2000ImageData.getMeth()
com.itextpdf.kernel.PdfException.getMessage()
com.itextpdf.barcodes.qrcode.Encoder.calculateMaskPenalty(ByteMatrix)
com.itextpdf.kernel.xmp.properties.XMPAliasInfo.getPrefix()
com.itextpdf.io.font.otf.ActualTextIterator.nextGlyphLinePart(int)
com.itextpdf.layout.font.FontSetCollection.remove()
com.itextpdf.layout.renderer.LineRenderer.getNextRenderer()
com.itextpdf.kernel.numbering.GreekAlphabetNumbering.toGreekAlphabetNumberUpperCase(int)
com.itextpdf.kernel.pdf.PdfDocument.getXref()
com.itextpdf.signatures.IExternalSignatureContainer.sign(InputStream)
com.itextpdf.layout.font.FontProvider.getFontSelector(List,FontCharacteristics)
com.itextpdf.signatures.PdfSignatureAppDictionary.isWrappedObjectMustBeIndirect()
com.itextpdf.pdfa.PdfA2ActionCheckTest.actionCheck05()
com.itextpdf.kernel.pdf.canvas.parser.FilteredEventListenerTest.test()
com.itextpdf.io.font.otf.Glyph.setAnchorDelta(short)
com.itextpdf.layout.FontSelectorTest.searchNames2()
com.itextpdf.kernel.pdf.PdfAnnotationTest.textMarkupTest01()
com.itextpdf.io.font.cmap.CMapByteCid.encodeSequence(byte,char)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff140Test.getFontName()
com.itextpdf.kernel.pdf.PdfOutline.setColor(Color)
com.itextpdf.pdfa.checker.PdfAChecker.checkFont(PdfFont)
com.itextpdf.kernel.font.PdfType0Font.convertToBytes(Glyph,byte,int)
com.itextpdf.kernel.pdf.PdfCanvasTest.markedContentTest1()
com.itextpdf.io.font.woff2.w3c.format.BlocksPrivate002Test.getTestInfo()
com.itextpdf.barcodes.Barcode39.createAwtImage(java,awt,Color,java,awt,Color)
com.itextpdf.barcodes.BarcodePDF417.size()
com.itextpdf.signatures.sign.PdfSignatureAppearanceTest.textAutoscaleTest06()
com.itextpdf.io.font.OpenTypeParser.readHheaTable()
com.itextpdf.layout.renderer.LineRenderer.getFirstYLineRecursively()
com.itextpdf.layout.element.Table.setRole(PdfName)
com.itextpdf.io.font.FontMetrics.getItalicAngle()
com.itextpdf.kernel.xmp.impl.FixASCIIControlsReader.read(char,int,int)
com.itextpdf.kernel.xmp.impl.Utils.checkUUIDFormat(String)
com.itextpdf.kernel.pdf.EncryptionProperties.isStandardEncryptionUsed()
com.itextpdf.kernel.pdf.PdfString.encodeBytes(byte)
com.itextpdf.kernel.pdf.canvas.wmf.InputMeta.skip(int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff154Test.getTestInfo()
com.itextpdf.layout.element.Cell.getColspan()
com.itextpdf.layout.hyphenation.HyphenationConfig.getHyphenSymbol()
com.itextpdf.kernel.pdf.EncodingTest.symbolDefaultFontTest()
com.itextpdf.signatures.PdfSignature.setLocation(String)
com.itextpdf.kernel.pdf.annot.PdfFixedPrint.setMatrix(PdfArray)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.attachContentStream(PdfStream)
com.itextpdf.kernel.pdf.PdfImageXObjectTest.testjbig2Filters()
com.itextpdf.layout.element.Table.isSkipLastFooter()
com.itextpdf.layout.renderer.TableBorders.getLeftBorderMaxWidth()
com.itextpdf.layout.renderer.AbstractRenderer.isRelativePosition()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff015Test.getFontName()
com.itextpdf.barcodes.Barcode39Test.barcode01Test()
com.itextpdf.pdfa.PdfA1AnnotationCheckTest.annotationCheckTest08()
com.itextpdf.kernel.pdf.PdfPagesTree.getPageNumber(PdfDictionary)
com.itextpdf.kernel.xmp.XMPMeta.deleteQualifier(String,String,String,String)
com.itextpdf.pdfa.PdfA2AnnotationCheckTest.annotationCheckTest08()
com.itextpdf.layout.element.TabStop.getTabPosition()
com.itextpdf.kernel.pdf.ParentTreeTest.test04()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff042Test.getTestInfo()
com.itextpdf.layout.border.DoubleBorder.getType()
com.itextpdf.kernel.pdf.canvas.draw.SolidLine.getLineWidth()
com.itextpdf.kernel.xmp.impl.ParseRDF.rdf_ParseTypeOtherPropertyElement()
com.itextpdf.signatures.sign.LtvSigTest.basicCheckLtvDoc(String,String)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setExtGState(PdfDictionary)
com.itextpdf.layout.layout.LayoutContext.getArea()
com.itextpdf.layout.hyphenation.TernaryTreeIterator.getValue()
com.itextpdf.io.font.FontEncoding.getDifference(int)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getHTP()
com.itextpdf.io.codec.TIFFFaxDecoder.advancePointer()
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.getAutomaticStrokeAdjustmentFlag()
com.itextpdf.layout.renderer.ListItemRenderer.createSplitRenderer(int)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.deleteStructField(String,String,String,String)
com.itextpdf.layout.renderer.LineRenderer.length()
com.itextpdf.layout.ElementPropertyContainer.setFixedPosition(int,float,float,UnitValue)
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getFillColor()
com.itextpdf.io.util.FileUtil.getFileName(String)
com.itextpdf.io.font.cmap.CMapToUnicode.getIdentity()
com.itextpdf.kernel.pdf.canvas.parser.util.InlineImageParsingUtils.parse(PdfCanvasParser,PdfDictionary)
com.itextpdf.io.util.HashCode.append(double)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff121Test.getFontName()
com.itextpdf.io.font.FontProgramFactory.createFont(byte,int,boolean)
com.itextpdf.io.font.FontEncoding.getUnicodeDifference(int)
com.itextpdf.layout.hyphenation.Hyphenator.wordContainsSoftHyphens(String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff127Test.getFontName()
com.itextpdf.io.font.cmap.CMapObject.isLiteral()
com.itextpdf.forms.fields.PdfTextFormField.isRichText()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getLeading()
com.itextpdf.kernel.pdf.PdfCatalog.removeOutlines(PdfPage)
com.itextpdf.forms.fields.PdfTextFormField.setMaxLen(int)
com.itextpdf.layout.FloatTest.floatsOnPageSplit10()
com.itextpdf.layout.LargeElementTest.largeTableWithHeaderFooterTest02()
com.itextpdf.layout.Document.getBottomMargin()
com.itextpdf.layout.TextWritingTest.textRiseTest01()
com.itextpdf.kernel.pdf.PdfNumber.copyContent(PdfObject,PdfDocument)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.getFont()
com.itextpdf.kernel.xmp.impl.xpath.XMPPathParser.skipPathDelimiter(String,PathPosition)
com.itextpdf.pdfa.PdfA1ActionCheckTest.actionCheck04()
com.itextpdf.kernel.pdf.canvas.parser.TextRenderInfoTest.testUnicodeEmptyString()
com.itextpdf.kernel.xmp.impl.XMPNodeUtils.appendLangItem(XMPNode,String,String)
com.itextpdf.layout.element.Paragraph.getDefaultProperty(int)
com.itextpdf.io.codec.brotli.dec.SynthTest.testTransformedDictWordTooLong()
com.itextpdf.barcodes.BarcodeDataMatrix.setCode(byte,int,int)
com.itextpdf.layout.renderer.LineRenderer.toString()
com.itextpdf.io.font.otf.Glyph.getBbox()
com.itextpdf.layout.element.Table.initializeLargeTable(boolean)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setColor(Color)
com.itextpdf.kernel.xmp.XMPMeta.setPropertyInteger(String,String,int,PropertyOptions)
com.itextpdf.pdfa.checker.PdfA1Checker.checkPageObject(PdfDictionary,PdfDictionary)
com.itextpdf.kernel.pdf.PdfStructElemTest.structElemTest03()
com.itextpdf.forms.fields.PdfFormField.splitDAelements(String)
com.itextpdf.kernel.pdf.PdfBorderArray.isWrappedObjectMustBeIndirect()
com.itextpdf.io.codec.TIFFFaxDecoder.readEOL(boolean)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff026Test.getFontName()
com.itextpdf.layout.element.Table.calculateWidths()
com.itextpdf.signatures.PdfSignature.getLocation()
com.itextpdf.kernel.pdf.canvas.wmf.MetaFont.getAngle()
com.itextpdf.layout.TableTest.simpleTableTest10()
com.itextpdf.layout.font.FontInfo.getFontProgram()
com.itextpdf.kernel.utils.CompareTool.setPassword(byte,byte)
com.itextpdf.kernel.log.NoOpCounter.getCounter(Class)
com.itextpdf.layout.AlignmentTest.blockAlignmentTest02()
com.itextpdf.io.font.woff2.w3c.format.BlocksMetadataPadding001Test.isFontValid()
com.itextpdf.kernel.xmp.XMPMetaFactory.getMajor()
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.setDefaultAppearance(PdfString)
com.itextpdf.io.codec.Base64.read(byte,int,int)
com.itextpdf.forms.fields.PdfFormField.setBorderWidth(float)
com.itextpdf.signatures.PdfSigner.signDetached(IExternalDigest,IExternalSignature,Certificate,Collection,IOcspClient,ITSAClient,int,CryptoStandard)
com.itextpdf.signatures.RootStoreVerifier.setRootStore(KeyStore)
com.itextpdf.kernel.pdf.PdfResources.getResourceType()
com.itextpdf.forms.fields.PdfChoiceFormField.setCombo(boolean)
com.itextpdf.io.source.RandomAccessSourceFactory.setUsePlainRandomAccess(boolean)
com.itextpdf.io.font.FontMetrics.getStemV()
com.itextpdf.io.image.ImageData.getDpiY()
com.itextpdf.kernel.pdf.PdfDocument.flushObject(PdfObject,boolean)
com.itextpdf.kernel.pdf.PdfStructElemTest.structTreeCopyingTest08()
com.itextpdf.kernel.pdf.action.PdfTargetDictionary.setAnnotation(int)
com.itextpdf.kernel.xmp.impl.Base64.encode(byte,int)
com.itextpdf.kernel.utils.CompareTool.compareNamesExtended(PdfName,PdfName,ObjectPath,CompareResult)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.bezierArc(double,double,double,double,double,double)
com.itextpdf.barcodes.BarcodeCodabar.placeBarcode(PdfCanvas,Color,Color)
com.itextpdf.io.font.woff2.SimpleWoff2DecodeTest.simpleTTFTest()
com.itextpdf.kernel.pdf.PdfReaderTest.StreamLengthCorrection8()
com.itextpdf.io.font.woff2.w3c.format.TabledataTransformGlyfLoca001Test.isFontValid()
com.itextpdf.kernel.xmp.options.PropertyOptions.getValidOptions()
com.itextpdf.kernel.pdf.PdfStream.getOutputStream()
com.itextpdf.kernel.pdf.tagging.PdfStructTreeRoot.copyTo(PdfDocument,int,Map)
com.itextpdf.layout.ListTest.listWithSetHeightProperties01()
com.itextpdf.kernel.pdf.PdfObject.checkState(short)
com.itextpdf.kernel.pdf.PdfPage.setXmpMetadata(byte)
com.itextpdf.layout.renderer.TabRenderer.getNextRenderer()
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperOffset.nearZero(double)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff032Test.isFontValid()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.createColor(PdfColorSpace,float,PdfPattern)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff068Test.isFontValid()
com.itextpdf.kernel.xmp.impl.xpath.XMPPath.size()
com.itextpdf.layout.renderer.TextRenderer.drawSingleUnderline(Underline,TransparentColor,PdfCanvas,float,float)
com.itextpdf.kernel.pdf.PdfObjectWrapper.makeIndirect(PdfDocument)
com.itextpdf.kernel.pdf.PdfAnnotationTest.soundTestAiff()
com.itextpdf.kernel.pdf.PdfEncryptionTest.encryptWithCertificateAes128NoCompression()
com.itextpdf.kernel.pdf.PdfAnnotationTest.soundTestAif()
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.sameLine(ITextChunkLocation)
com.itextpdf.layout.renderer.CollapsedTableBorders.setBottomBorderCollapseWith(List)
com.itextpdf.forms.fields.PdfFormField.drawRadioField(PdfCanvas,float,float,boolean)
com.itextpdf.io.codec.brotli.dec.SynthTest.testManyTinyMetablocks()
com.itextpdf.kernel.pdf.canvas.CanvasTag.getExpansionText()
com.itextpdf.kernel.pdf.PdfEncryption.generateNewDocumentId()
com.itextpdf.layout.renderer.ListItemRenderer.draw(DrawContext)
com.itextpdf.layout.ImageTest.imageInParagraphBorderTest()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff079Test.isFontValid()
com.itextpdf.io.font.FontMetrics.setDescender(int)
com.itextpdf.test.WrappedSamplesRunner.runMain()
com.itextpdf.layout.SimpleTextExtractionStrategyTest.createPdfWithArrayText(String,String,int)
com.itextpdf.kernel.pdf.PdfIndirectReference.getIndex()
com.itextpdf.forms.fields.PdfFormField.createEmptyField(PdfDocument)
com.itextpdf.barcodes.BarcodePDF417.add(char,int,int)
com.itextpdf.forms.fields.PdfFormField.isPassword()
com.itextpdf.layout.renderer.AbstractRenderer.getPaddings()
com.itextpdf.io.font.cmap.CMapCidByte.lookup(int)
com.itextpdf.kernel.utils.PdfSplitter.splitBySize(long)
com.itextpdf.kernel.pdf.xobject.PdfFormXObject.setTrapStyles(PdfString)
com.itextpdf.kernel.pdf.TagTreePointerTest.tagStructureFlushingTest02()
com.itextpdf.io.image.ImageData.canImageBeInline()
com.itextpdf.kernel.xmp.options.Options.equals(Object)
com.itextpdf.layout.element.Div.add(AreaBreak)
com.itextpdf.kernel.pdf.PdfCanvasTest.createSimpleCanvasWithText()
com.itextpdf.kernel.crypto.ARCFOUREncryption.encryptARCFOUR(byte,int,int)
com.itextpdf.kernel.pdf.PdfVersion.toString()
com.itextpdf.signatures.LtvVerifier.initLtvVerifier(PdfDocument)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.moveTo(double,double)
com.itextpdf.io.font.otf.GsubLookupType2.hasSubstitution(int)
com.itextpdf.barcodes.qrcode.GF256Poly.multiplyByMonomial(int,int)
com.itextpdf.kernel.pdf.PdfDictionaryValues.size()
com.itextpdf.layout.IPropertyContainer.deleteOwnProperty(int)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setSoftMask(PdfObject)
com.itextpdf.layout.element.BlockElement.getPaddingTop()
com.itextpdf.kernel.xmp.impl.ParseRDF.getRDFTermKind(Node)
com.itextpdf.layout.hyphenation.Hyphenator.getHyphenationTree(String,String)
com.itextpdf.kernel.xmp.impl.XMPDateTimeImpl.hasDate()
com.itextpdf.layout.font.FontSelectorStrategy.endOfText()
com.itextpdf.kernel.pdf.colorspace.PdfPattern.flush()
com.itextpdf.io.font.woff2.Woff2MemoryOut.write(byte,int,int)
com.itextpdf.io.font.cmap.CMapContentParser.toHex4(int)
com.itextpdf.layout.renderer.ListItemRenderer.getNextRenderer()
com.itextpdf.layout.renderer.ParagraphRenderer.createSplitRenderer()
com.itextpdf.kernel.pdf.XMPMetadataTest.createEmptyDocumentWithXmp()
com.itextpdf.kernel.pdf.action.PdfWin.isWrappedObjectMustBeIndirect()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Point.arePointsClose(Point,Point,double)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff084Test.getTestInfo()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff145Test.getTestInfo()
com.itextpdf.barcodes.BarcodeCodabarTest.barcode01Test()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff138Test.getFontName()
com.itextpdf.test.WrappedSamplesRunner.generateTestsList(RunnerSearchConfig)
com.itextpdf.layout.font.FontInfo.getDescriptor()
com.itextpdf.io.font.FontProgram.fixSpaceIssue()
com.itextpdf.signatures.sign.SigningTest.signingIntoExistingFieldTest01()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff110Test.getFontName()
com.itextpdf.layout.renderer.ParagraphRenderer.getMinMaxWidth(float)
com.itextpdf.io.font.otf.OtfReadCommon.readGposAnchor(OpenTypeFontTableReader,int)
com.itextpdf.io.font.otf.Glyph.getUnicodeString()
com.itextpdf.layout.KeepTogetherTest.keepTogetherDivTest02()
com.itextpdf.signatures.CertificateUtil.getExtensionValue(X509Certificate,String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff129Test.getTestInfo()
com.itextpdf.barcodes.qrcode.Version.buildVersions()
com.itextpdf.kernel.xmp.options.IteratorOptions.getValidOptions()
com.itextpdf.kernel.pdf.PdfStampingTest.stamping8()
com.itextpdf.barcodes.qrcode.BitMatrix.clear()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff153Test.getTestInfo()
com.itextpdf.forms.fields.PdfFormField.createChoice(PdfDocument,int)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getUnderColorRemovalFunction()
com.itextpdf.io.source.PdfTokenizer.isWhitespace(int)
com.itextpdf.io.font.FontCache.getCompatibleCidFont(String)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.updateOutPtIdxs(OutRec)
com.itextpdf.io.font.otf.OtfReadCommon.readCoverages(RandomAccessFileOrArray,int,List)
com.itextpdf.io.codec.Base64.encodeBytes(byte)
com.itextpdf.layout.renderer.AbstractRenderer.addAllProperties(Map)
com.itextpdf.io.util.IntHashtable.getKey()
com.itextpdf.io.image.ImageDataFactory.createGifFrames(byte,int)
com.itextpdf.forms.fields.PdfFormField.getFieldFlags()
com.itextpdf.layout.element.Image.setMarginTop(float)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getAutomaticStrokeAdjustment()
com.itextpdf.layout.RotationTest.staticTextRotationTest01()
com.itextpdf.kernel.events.EventDispatcher.removeEventHandler(String,IEventHandler)
com.itextpdf.io.source.WriteNumbersTest.WriteNumber2Test()
com.itextpdf.barcodes.Barcode1D.getX()
com.itextpdf.io.font.otf.lookuptype5.SubTableLookup5Format2.getSetOfRulesForStartGlyph(int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff062Test.getTestInfo()
com.itextpdf.layout.element.Cell.updateCellIndexes(int,int,int)
com.itextpdf.io.codec.TIFFLZWDecoder.composeString(byte,byte)
com.itextpdf.io.font.woff2.SimpleWoff2DecodeTest.setUp()
com.itextpdf.kernel.pdf.PdfDictionary.isEmpty()
com.itextpdf.kernel.pdf.canvas.parser.listener.FilteredEventListener.attachEventListener(T,IEventFilter)
com.itextpdf.forms.fields.PdfFormField.createChoice(PdfDocument,Rectangle,String,String,PdfFont,int,PdfArray,int)
com.itextpdf.signatures.sign.PdfSignatureAppearanceTest.textAutoscaleTest01()
com.itextpdf.kernel.font.PdfFontFactory.createFont(FontProgram)
com.itextpdf.kernel.pdf.canvas.parser.listener.TextMarginFinder.getSupportedEvents()
com.itextpdf.io.image.ImageData.isDeflated()
com.itextpdf.kernel.pdf.PdfArray.toFloatArray()
com.itextpdf.io.source.ByteBuffer.appendHex(byte)
com.itextpdf.io.source.OutputStream.getHighPrecision()
com.itextpdf.layout.IPropertyContainer.getOwnProperty(int)
com.itextpdf.layout.renderer.IRenderer.getModelElement()
com.itextpdf.layout.renderer.TableRenderer.correctLayoutedCellsOccupiedAreas(LayoutResult,int,int,Float,Rectangle,List,boolean,boolean,boolean)
com.itextpdf.layout.BlockTest.marginsBordersPaddingOverflow02()
com.itextpdf.io.font.cmap.AbstractCMap.byteArrayToInt(byte)
com.itextpdf.kernel.geom.PageSize.rotate()
com.itextpdf.io.image.ImageData.getProfile()
com.itextpdf.forms.xfa.Xml2Som.splitParts(String)
com.itextpdf.io.font.woff2.w3c.format.BlocksPrivate002Test.getFontName()
com.itextpdf.barcodes.qrcode.CharacterSetECI.initialize()
com.itextpdf.kernel.geom.Matrix.getDeterminant()
com.itextpdf.kernel.utils.CompareTool.compareNames(PdfName,PdfName)
com.itextpdf.kernel.pdf.annot.PdfTextAnnotation.setStateModel(PdfString)
com.itextpdf.io.font.FontCache.getCid2Byte(String)
com.itextpdf.layout.BlockTest.borderRadiusTest05()
com.itextpdf.pdfa.PdfA1EmbeddedFilesCheckTest.fileSpecCheckTest03()
com.itextpdf.kernel.xmp.impl.XMPIteratorImpl.skipSubtree()
com.itextpdf.layout.border.DoubleBorder.drawCellBorder(PdfCanvas,float,float,float,float)
com.itextpdf.barcodes.BarcodeQRCode.createFormXObject(Color,PdfDocument)
com.itextpdf.kernel.pdf.PdfDictionary.entrySet()
com.itextpdf.kernel.pdf.PdfResourcesTest.resourcesTest1()
com.itextpdf.barcodes.qrcode.ByteMatrix.clear(byte)
com.itextpdf.io.font.Type1Parser.isBuiltInFont()
com.itextpdf.io.image.Jbig2ImageData.getNumberOfPages(byte)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.isPointInPolygon(LongPoint,Path,OutPt)
com.itextpdf.kernel.xmp.impl.Utils.isControlChar(char)
com.itextpdf.forms.PdfFormCopyTest.copyPagesWithInheritedResources()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff151Test.getTestInfo()
com.itextpdf.kernel.xmp.impl.XMPUtilsImpl.appendSubtree(XMPMetaImpl,XMPNode,XMPNode,boolean,boolean)
com.itextpdf.io.source.GetBufferedRandomAccessSource.get(long)
com.itextpdf.io.codec.brotli.dec.Huffman.buildHuffmanTable(int,int,int,int,int)
com.itextpdf.forms.fields.PdfFormField.createChoice(PdfDocument,Rectangle,String,String,PdfFont,float,PdfArray,int)
com.itextpdf.io.font.CidFont.getKerning(Glyph,Glyph)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff057Test.isFontValid()
com.itextpdf.signatures.PdfSignatureAppearance.setReasonCaption(String)
com.itextpdf.layout.border.RidgeBorder.setOuterHalfColor(PdfCanvas,Side)
com.itextpdf.kernel.pdf.PdfOutlineTest.beforeClass()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.addLocalMaxPoly(Edge,Edge,LongPoint)
com.itextpdf.barcodes.qrcode.Encoder.appendBytes(String,Mode,BitVector,String)
com.itextpdf.signatures.LtvVerification.addVerification(String,Collection,Collection,Collection)
com.itextpdf.signatures.PdfSigner.addDocMDP(PdfSignature)
com.itextpdf.signatures.PdfSignatureAppearance.setPageNumber(int)
com.itextpdf.io.font.woff2.w3c.format.TabledataDecompressedLength004Test.getTestInfo()
com.itextpdf.io.font.FontNames.isShadow()
com.itextpdf.kernel.pdf.PdfWriterTest.useObjectForMultipleTimes1()
com.itextpdf.io.image.TiffImageData.getPage()
com.itextpdf.io.util.FileUtil.listFilesInDirectoryByFilter(String,FileFilter)
com.itextpdf.io.util.FileUtil.createDirectories(String)
com.itextpdf.kernel.pdf.WriterProperties.setPublicKeyEncryption(Certificate,int,int)
com.itextpdf.kernel.pdf.PdfPagesTree.loadPage(int)
com.itextpdf.kernel.pdf.PdfXrefTableTest.beforeClass()
com.itextpdf.kernel.geom.AffineTransform.transform(Point,Point)
com.itextpdf.kernel.pdf.PdfPrimitivesTest.primitivesIntNumberIndirectTest()
com.itextpdf.layout.layout.LayoutArea.equals(Object)
com.itextpdf.kernel.pdf.PdfPage.getNextMcid()
com.itextpdf.io.font.otf.OpenTypeFontTableReader.readClassDefinition(int)
com.itextpdf.kernel.pdf.PdfWriter.setCompressionLevel(int)
com.itextpdf.kernel.pdf.PdfStructElemTest.structElemTest04()
com.itextpdf.layout.font.FontInfo.putFontNamesToCache(FontCacheKey,FontProgramDescriptor)
com.itextpdf.kernel.pdf.canvas.CanvasTag.getProperty(PdfName)
com.itextpdf.layout.renderer.TextRenderer.setUseReversed(boolean)
com.itextpdf.layout.Style.setVerticalAlignment(VerticalAlignment)
com.itextpdf.signatures.CertificateVerifier.verify(X509Certificate,X509Certificate,Date)
com.itextpdf.kernel.pdf.PdfCanvasTest.graphicsStateTest1()
com.itextpdf.kernel.pdf.PdfWriter.markObjectToFlush(PdfObject)
com.itextpdf.io.font.otf.GlyphLine.setGlyphs(List)
com.itextpdf.pdfa.checker.PdfA1Checker.getMaxStringLength()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.setRenderingIntent(PdfName)
com.itextpdf.io.font.cmap.CMapParser.parseCid(String,AbstractCMap,ICMapLocation,int)
com.itextpdf.layout.ListTest.listOverflowTest01()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff028Test.getTestInfo()
com.itextpdf.layout.ElementPropertyContainer.getProperty(int)
com.itextpdf.kernel.pdf.action.PdfTargetDictionary.setPage(String)
com.itextpdf.io.image.JpegImageHelper.processParameters(InputStream,String,ImageData)
com.itextpdf.layout.border.RoundDotsBorder.getType()
com.itextpdf.io.font.woff2.w3c.format.TabledataHmtxTransform001Test.getFontName()
com.itextpdf.kernel.pdf.PdfPagesTree.addPage(PdfPage)
com.itextpdf.io.font.woff2.Woff2MemoryOut.size()
com.itextpdf.kernel.pdf.PdfFontTest.testType1FontUpdateContent()
com.itextpdf.forms.xfa.Xml2SomDatasets.insertNode(Node,String)
com.itextpdf.layout.TableBorderTest.tableWithHeaderFooterTest12()
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.getModelConnectedToStruct(PdfStructElem)
com.itextpdf.layout.AutoTaggingTest.createTable(boolean)
com.itextpdf.forms.xfa.XfaForm.fillXfaForm(File)
com.itextpdf.layout.AutoTaggingTest.divTest01()
com.itextpdf.io.source.ByteUtils.getIsoBytes(double,ByteBuffer,boolean)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.sort()
com.itextpdf.kernel.pdf.PdfNumber.copyTo(PdfDocument,boolean)
com.itextpdf.io.codec.Jbig2SegmentReader.compareTo(Jbig2Segment)
com.itextpdf.io.codec.brotli.dec.DecodeTest.testFox()
com.itextpdf.layout.renderer.BlockRenderer.beginRotationIfApplied(PdfCanvas)
com.itextpdf.io.font.cmap.CMapContentParser.nextValidToken()
com.itextpdf.layout.layout.LayoutArea.getBBox()
com.itextpdf.barcodes.qrcode.BitMatrix.flip(int,int)
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6Format3.getContextLength()
com.itextpdf.kernel.pdf.PdfArray.toIntArray()
com.itextpdf.io.codec.Jbig2SegmentReader.getData(boolean)
com.itextpdf.layout.TableTest.autoLayoutTest03()
com.itextpdf.kernel.xmp.impl.XMPSchemaRegistryImpl.resolveAlias(String,String)
com.itextpdf.barcodes.Barcode39Test.barcode03Test()
com.itextpdf.barcodes.qrcode.QRCode.setNumTotalBytes(int)
com.itextpdf.kernel.font.IDocFontProgram.getSubtype()
com.itextpdf.kernel.pdf.PdfStream.getOffset()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationChecksum001Test.getFontName()
com.itextpdf.layout.Document.setRenderer(DocumentRenderer)
com.itextpdf.kernel.pdf.tagutils.TagReference.getProperties()
com.itextpdf.kernel.pdf.PdfOutline.addOutline(String)
com.itextpdf.layout.element.BlockElement.getMarginRight()
com.itextpdf.layout.PdfTextExtractorEncodingsTest.getTTFont(String,boolean)
com.itextpdf.layout.TableTest.tableNothingResultTest()
com.itextpdf.kernel.pdf.PdfDate.decode(String)
com.itextpdf.layout.Document.setTopMargin(float)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff041Test.isFontValid()
com.itextpdf.kernel.pdf.PdfDictionary.makeIndirect(PdfDocument,PdfIndirectReference)
com.itextpdf.kernel.pdf.tagging.ParentTreeHandler.structParentIndexIntoKey(int)
com.itextpdf.kernel.geom.Rectangle.increaseHeight(float)
com.itextpdf.kernel.pdf.PdfIndirectReference.getWriter()
com.itextpdf.kernel.pdf.PdfStream.getBytes()
com.itextpdf.kernel.xmp.impl.CountOutputStream.write(byte)
com.itextpdf.kernel.pdf.PdfViewerPreferences.setPrintScaling(PdfViewerPreferencesConstants)
com.itextpdf.kernel.pdf.PdfFontTest.testNewType1FontBasedExistingFont()
com.itextpdf.kernel.pdf.PdfOutputStream.checkEncryption(PdfStream)
com.itextpdf.layout.RootElement.getFontProvider()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setLineDash(float,float,float)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff081Test.getTestInfo()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff008Test.getTestInfo()
com.itextpdf.io.util.TextUtil.charToString(char)
com.itextpdf.kernel.pdf.PdfObjectStream.releaseContent()
com.itextpdf.layout.hyphenation.TernaryTreeIterator.rewind()
com.itextpdf.forms.FormFieldAppendTest.formFillingAppend_form_filled_Test()
com.itextpdf.io.font.woff2.w3c.format.Valid007Test.getTestInfo()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff137Test.isFontValid()
com.itextpdf.barcodes.BarcodePDF417.getBitColumns()
com.itextpdf.kernel.pdf.PdfPage.flushMustBeIndirectObject(PdfObject)
com.itextpdf.kernel.pdf.PdfDictionaryEntrySet.iterator()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationChecksum002Test.getFontName()
com.itextpdf.io.font.cmap.CMapUniCid.exportToUnicode()
com.itextpdf.layout.renderer.FloatingHelper.adjustLayoutBoxAccordingToFloats(List,Rectangle,Float,float,MarginsCollapseHandler)
com.itextpdf.kernel.pdf.PdfObject.makeIndirect(PdfDocument,PdfIndirectReference)
com.itextpdf.kernel.pdf.tagging.PdfStructElem.addKidObjectToStructElemList(PdfObject,List)
com.itextpdf.kernel.pdf.PdfDocument.setInitialDocumentId(PdfString)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff073Test.getTestInfo()
com.itextpdf.kernel.pdf.canvas.parser.listener.RegexBasedLocationExtractionStrategy.getResultantLocations()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff093Test.isFontValid()
com.itextpdf.kernel.xmp.properties.XMPPropertyInfo.getNamespace()
com.itextpdf.kernel.pdf.PdfArray.toRectangle()
com.itextpdf.kernel.pdf.tagutils.DummyAccessibleElement.getRole()
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.getCurrentTextColor()
com.itextpdf.forms.fields.PdfFormField.regenerateField()
com.itextpdf.kernel.pdf.PdfStream.setData(byte)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.GetLastOutPt(Edge)
com.itextpdf.kernel.pdf.PdfDocumentInfo.getProducer()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff094Test.getTestInfo()
com.itextpdf.kernel.pdf.PdfAnnotationTest.caretTest()
com.itextpdf.layout.renderer.AreaBreakRenderer.getProperty(int)
com.itextpdf.kernel.utils.CompareTool.compareNumbers(PdfNumber,PdfNumber)
com.itextpdf.kernel.utils.PdfSplitter.extractPageRange(PageRange)
com.itextpdf.layout.renderer.AbstractRenderer.getBorders()
com.itextpdf.kernel.pdf.PdfObject.copyTo(PdfDocument,boolean)
com.itextpdf.io.image.GifImageHelper.readContents(GifParameters,int)
com.itextpdf.io.font.otf.GposLookupType4.transformOne(GlyphLine)
com.itextpdf.kernel.xmp.options.Options.getOptions()
com.itextpdf.layout.element.AbstractElement.setAction(PdfAction)
com.itextpdf.io.font.woff2.Buffer.skip(int)
com.itextpdf.layout.renderer.AreaBreakRenderer.getOccupiedArea()
com.itextpdf.signatures.sign.PadesSigTest.padesDsaSigTest01()
com.itextpdf.io.image.TiffTest.openTiff2()
com.itextpdf.barcodes.qrcode.Version.toString()
com.itextpdf.layout.hyphenation.TernaryTree.insertBalanced(String,char,int,int)
com.itextpdf.kernel.xmp.options.PropertyOptions.isQualifier()
com.itextpdf.barcodes.Barcode1D.setCodeType(int)
com.itextpdf.kernel.pdf.PdfVersion.createPdfVersion(int,int)
com.itextpdf.kernel.pdf.PdfBoolean.copyContent(PdfObject,PdfDocument)
com.itextpdf.kernel.geom.LineSegment.containsPoint(Vector)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.getPageStream(PdfPage)
com.itextpdf.io.image.BmpImageHelper.readInt(InputStream)
com.itextpdf.kernel.utils.PdfSplitter.getPdfDocument()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff143Test.getFontName()
com.itextpdf.kernel.xmp.impl.XMPSerializerRDF.serializeCompactRDFSimpleProp(XMPNode)
com.itextpdf.kernel.pdf.PdfCanvasTest.inlineImagesTest02()
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.getIconName()
com.itextpdf.kernel.pdf.PdfPagesTest.randomNumberPagesTest()
com.itextpdf.kernel.pdf.PdfStampingTest.stamping10()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff136Test.getTestInfo()
com.itextpdf.kernel.pdf.annot.PdfWatermarkAnnotation.getFixedPrint()
com.itextpdf.kernel.pdf.tagutils.BackedAccessibleProperties.addAttributes(PdfDictionary)
com.itextpdf.io.source.RandomAccessSourceFactory.setForceRead(boolean)
com.itextpdf.kernel.pdf.annot.PdfLineAnnotation.setLeaderLineOffset(float)
com.itextpdf.signatures.SignatureUtil.signatureCoversWholeDocument(String)
com.itextpdf.kernel.pdf.canvas.parser.HighlightItemsTest.highlightHeaderFooter()
com.itextpdf.kernel.xmp.impl.Base64.decode(byte)
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingStandard40.getKeyLength(PdfDictionary)
com.itextpdf.io.image.GifImageHelper.processImage(GifImageData)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getFillOpacity()
com.itextpdf.layout.SimpleTextExtractionStrategyTest.testCoLinnearTextEndingWithSpaceCharacter()
com.itextpdf.kernel.pdf.filters.CCITTFaxDecodeFilter.decode(byte,PdfName,PdfObject,PdfDictionary)
com.itextpdf.kernel.pdf.PdfPage.setRotation(int)
com.itextpdf.kernel.pdf.PdfFontTest.helveticaNames()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff095Test.getFontName()
com.itextpdf.io.font.cmap.AbstractCMap.addRange(String,String,CMapObject)
com.itextpdf.kernel.xmp.impl.xpath.XMPPathSegment.setKind(int)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.moveTextWithLeading(float,float)
com.itextpdf.kernel.pdf.PdfCanvasTest.createSimpleCanvasWithFullCompression()
com.itextpdf.kernel.pdf.PdfCanvasTest.canvasInitializationStampingExistingStream()
com.itextpdf.io.font.woff2.JavaUnsignedUtil.compareAsUnsigned(int,int)
com.itextpdf.kernel.xmp.impl.XMPNode.addQualifier(XMPNode)
com.itextpdf.kernel.numbering.GreekAlphabetNumbering.toGreekAlphabetNumberLowerCase(int)
com.itextpdf.layout.renderer.RotationUtils.storeFloatProperty(int)
com.itextpdf.kernel.pdf.PdfFontTest.createDocumentWithType1WithToUnicodeBasedExistingFont()
com.itextpdf.signatures.testutils.client.TestTsaClient.getMessageDigest()
com.itextpdf.io.font.cmap.CMapToUnicode.hasByteMappings()
com.itextpdf.kernel.geom.Subpath.addSegment(IShape)
com.itextpdf.layout.border.InsetBorder.setOuterHalfColor(PdfCanvas,Side)
com.itextpdf.forms.fields.PdfFormField.drawCheckBox(PdfCanvas,float,float,int,boolean)
com.itextpdf.kernel.xmp.impl.XMPIteratorImpl.reportNode()
com.itextpdf.io.codec.TiffWriter.writeFile(OutputStream)
com.itextpdf.signatures.PdfSigner.getWidgetRectangle(PdfWidgetAnnotation)
com.itextpdf.io.font.otf.OpenTypeFontTableReader.readCoverageFormat(int)
com.itextpdf.layout.margincollapse.MarginsCollapseInfo.setSelfCollapsing(boolean)
com.itextpdf.io.image.ImageDataFactory.createGifFrames(byte)
com.itextpdf.signatures.CRLVerifier.verify(X509CRL,X509Certificate,X509Certificate,Date)
com.itextpdf.layout.AreaBreakTest.lastPageAreaBreakTest02()
com.itextpdf.kernel.pdf.canvas.wmf.MetaPen.getColor()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff023Test.getTestInfo()
com.itextpdf.signatures.OCSPVerifier.getOcspResponse(X509Certificate,X509Certificate)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.fixupIntersectionOrder()
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getStrokeColor()
com.itextpdf.barcodes.Barcode1D.createFormXObject(PdfDocument)
com.itextpdf.kernel.pdf.PdfPagesTree.getPageNumber(PdfPage)
com.itextpdf.kernel.pdf.collection.PdfCollectionField.setVisibility(boolean)
com.itextpdf.io.source.ByteBufferRandomAccessSource.get(long,byte,int,int)
com.itextpdf.layout.OpacityTest.tableElementOpacity01()
com.itextpdf.kernel.xmp.XMPDateTime.setSecond(int)
com.itextpdf.layout.BlockTest.borderRadiusTest02()
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.createPointerForStructElem(PdfStructElem)
com.itextpdf.io.font.woff2.VariableLength.readBase128(Buffer)
com.itextpdf.layout.renderer.TableRenderer.drawBorder(DrawContext)
com.itextpdf.kernel.xmp.impl.XMPIteratorImpl.setBaseNS(String)
com.itextpdf.kernel.pdf.xobject.PdfImageXObject.identifyImageFileExtension()
com.itextpdf.kernel.pdf.PdfObject.isNumber()
com.itextpdf.layout.TableTest.tableWithSetHeightProperties02()
com.itextpdf.barcodes.qrcode.GF256Poly.getCoefficient(int)
com.itextpdf.kernel.utils.PdfSplitterTest.beforeClass()
com.itextpdf.barcodes.dmcode.ReedSolomon.generateECC(byte,int,int,int)
com.itextpdf.kernel.pdf.colorspace.PdfPattern.getXStep()
com.itextpdf.kernel.pdf.annot.Pdf3DAnnotation.setActivationDictionary(PdfDictionary)
com.itextpdf.kernel.pdf.PdfPage.getAnnots(boolean)
com.itextpdf.kernel.pdf.PdfDocument.getCounter()
com.itextpdf.io.source.RAFRandomAccessSource.length()
com.itextpdf.io.font.cmap.AbstractCMap.intToByteArray(int,byte)
com.itextpdf.layout.renderer.TableRenderer.addChild(IRenderer)
com.itextpdf.kernel.log.DefaultCounter.getCounter(Class)
com.itextpdf.kernel.pdf.function.PdfFunction.makeType0(PdfArray,PdfArray,PdfArray,PdfNumber,PdfNumber,PdfArray,PdfArray,byte)
com.itextpdf.layout.Document.close()
com.itextpdf.signatures.PdfSignatureBuildProperties.setSignatureCreator(String)
com.itextpdf.io.source.PdfTokenizer.isCloseStream()
com.itextpdf.kernel.pdf.PdfNumber.copyTo(PdfDocument)
com.itextpdf.kernel.utils.CompareTool.init(String,String)
com.itextpdf.kernel.font.PdfType0Font.decodeIntoGlyphLine(PdfString)
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.overrideModelBottomMargin(IRenderer,float)
com.itextpdf.layout.FontSelectorTest.latinAndNotdefGroup()
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.setRole(PdfName)
com.itextpdf.io.font.woff2.w3c.format.Valid004Test.isFontValid()
com.itextpdf.layout.RotationTest.ImageInRotatedBlockTest02()
com.itextpdf.kernel.pdf.annot.PdfWidgetAnnotation.releaseFormFieldFromWidgetAnnotation()
com.itextpdf.kernel.pdf.PdfDocument.setCloseReader(boolean)
com.itextpdf.signatures.DigestAlgorithms.getMessageDigest(String,String)
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.createMarginsInfoForBlockChild(int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff036Test.isFontValid()
com.itextpdf.kernel.pdf.PdfReader.isEncrypted()
com.itextpdf.kernel.pdf.layer.PdfVisibilityExpression.addOperand(PdfLayer)
com.itextpdf.layout.minmaxwidth.MinMaxWidth.setChildrenMinWidth(float)
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.setOffsetWx(int)
com.itextpdf.kernel.pdf.annot.PdfRedactAnnotation.setOverlayText(PdfString)
com.itextpdf.kernel.pdf.annot.PdfLinkAnnotation.getUriActionObject()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff140Test.isFontValid()
com.itextpdf.layout.element.BlockElement.setPaddingBottom(float)
com.itextpdf.barcodes.BarcodeQRCode.placeBarcode(PdfCanvas,Color)
com.itextpdf.kernel.pdf.PdfReader.isCloseStream()
com.itextpdf.kernel.pdf.tagutils.AccessibilityProperties.getAlternateDescription()
com.itextpdf.io.util.ArrayUtil.fillWithValue(T,T)
com.itextpdf.forms.xfa.XfaForm.extractXFANodes(Document)
com.itextpdf.kernel.crypto.securityhandler.PubKeySecurityHandler.initKeyAndFillDictionary(PdfDictionary,Certificate,int,boolean,boolean)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.setPropertyInteger(String,String,int)
com.itextpdf.kernel.pdf.PdfDocument.addPage(int,PdfPage)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff036Test.getTestInfo()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationLocaFormat002Test.getTestInfo()
com.itextpdf.pdfa.PdfA2AnnotationCheckTest.annotationCheckTest09()
com.itextpdf.kernel.pdf.PdfDocumentInfo.addModDate()
com.itextpdf.layout.renderer.AbstractRenderer.applyAction(PdfDocument)
com.itextpdf.io.image.GifImageData.getUrl()
com.itextpdf.kernel.pdf.PdfDocument.hasEventHandler(String)
com.itextpdf.io.font.woff2.w3c.format.TabledataLocaSize002Test.getFontName()
com.itextpdf.layout.property.Background.getExtraBottom()
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.prepareBoxForLayoutAttempt(Rectangle,int,boolean)
com.itextpdf.forms.xfa.XfaForm.initXfaForm(InputStream)
com.itextpdf.io.codec.TIFFDirectory.getFieldAsLong(int,int)
com.itextpdf.layout.ImageTest.imageTest14_HorizontalAlignment_LEFT()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.getBorderStyle()
com.itextpdf.kernel.pdf.PdfPagesTree.clearPageRefs()
com.itextpdf.io.util.HashCode.append(boolean)
com.itextpdf.kernel.pdf.action.PdfAction.createGoToR(PdfFileSpec,PdfDestination)
com.itextpdf.layout.element.BlockElement.getPaddingRight()
com.itextpdf.kernel.pdf.PdfReaderTest.pagesTest11()
com.itextpdf.kernel.pdf.canvas.parser.util.PdfCanvasParser.setTokeniser(PdfTokenizer)
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperBridge.convertToFloatPoints(List)
com.itextpdf.kernel.pdf.PdfDocument.getReader()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff052Test.getTestInfo()
com.itextpdf.layout.TableTest.simpleTableTest02()
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.invokeOperator(PdfLiteral,List)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Edge.isMaxima(double)
com.itextpdf.barcodes.qrcode.BitArray.get(int)
com.itextpdf.forms.xfa.Xml2Som.printStack()
com.itextpdf.kernel.pdf.ByteBufferOutputStream.append(long)
com.itextpdf.io.font.FontCache.getByte2CidCmap(String)
com.itextpdf.signatures.CertificateInfo.nextToken()
com.itextpdf.kernel.xmp.options.SerializeOptions.getOmitPacketWrapper()
com.itextpdf.layout.border.Border.equals(Object)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.getAlphaSourceFlag()
com.itextpdf.layout.renderer.TableWidths.extractWidths()
com.itextpdf.kernel.pdf.PdfBoolean.copyTo(PdfDocument)
com.itextpdf.layout.renderer.TableWidths.hasFixedLayout()
com.itextpdf.layout.renderer.AbstractWidthHandler.updateMinMaxWidth(MinMaxWidth)
com.itextpdf.kernel.events.IEventDispatcher.removeEventHandler(String,IEventHandler)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.doSimplePolygons()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff018Test.isFontValid()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff148Test.getTestInfo()
com.itextpdf.layout.renderer.MinWidthTest.paragraphTest()
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setAlphaSourceFlag(boolean)
com.itextpdf.io.codec.brotli.dec.State.close(State)
com.itextpdf.kernel.pdf.canvas.wmf.WmfImageHelper.createPdfForm(PdfDocument)
com.itextpdf.kernel.pdf.PdfCanvasTest.gifImageTest05()
com.itextpdf.kernel.pdf.PdfFontTest.NotoSansCJKjpTest03()
com.itextpdf.layout.renderer.AbstractRenderer.alignChildHorizontally(IRenderer,float)
com.itextpdf.kernel.pdf.tagutils.AccessibilityProperties.getExpansion()
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.writeObject(ObjectOutputStream)
com.itextpdf.kernel.pdf.annot.PdfPolyGeomAnnotation.setMeasure(PdfDictionary)
com.itextpdf.kernel.pdf.navigation.PdfExplicitDestination.createFitBH(int,float)
com.itextpdf.layout.ImageTest.flushOnDrawCheckCircularReferencesTest()
com.itextpdf.kernel.xmp.impl.XMPUtilsImpl.itemValuesMatch(XMPNode,XMPNode)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.makeAnnotation(PdfObject,PdfAnnotation)
com.itextpdf.kernel.xmp.impl.XMPDateTimeImpl.toString()
com.itextpdf.kernel.pdf.PdfDictionaryTest.testEntrySetRemove2()
com.itextpdf.barcodes.qrcode.QRCodeWriter.renderResult(QRCode,int,int)
com.itextpdf.kernel.pdf.PdfPage.flushAppearanceStreams(PdfDictionary)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.getPropertyDouble(String,String)
com.itextpdf.kernel.pdf.annot.PdfLinkAnnotation.setAction(PdfDictionary)
com.itextpdf.io.font.woff2.w3c.format.TabledataDecompressedLength001Test.getTestInfo()
com.itextpdf.forms.fields.PdfFormField.setRichText(PdfObject)
com.itextpdf.layout.element.List.setPostSymbolText(String)
com.itextpdf.layout.PdfTextExtractorEncodingsTest.testEncodedFont()
com.itextpdf.kernel.pdf.PdfStructElemTest.structElemTest02()
com.itextpdf.io.image.GifImageData.setLogicalHeight(float)
com.itextpdf.forms.fields.PdfButtonFormField.setPushButton(boolean)
com.itextpdf.io.image.GifImageHelper.readGraphicControlExt(GifParameters)
com.itextpdf.layout.FloatTest.floatParagraphTest02()
com.itextpdf.layout.element.BlockElement.setMinWidth(float)
com.itextpdf.layout.renderer.AbstractRenderer.applyRelativePositioningTranslation(boolean)
com.itextpdf.kernel.pdf.canvas.parser.clipper.IClipper.execute(ClipType,PolyTree)
com.itextpdf.kernel.pdf.annot.PdfFreeTextAnnotation.getLineEndingStyle()
com.itextpdf.io.source.RandomAccessFileOrArray.length()
com.itextpdf.layout.renderer.AreaBreakRenderer.getDefaultProperty(int)
com.itextpdf.kernel.utils.CompareTool.compareStringsExtended(PdfString,PdfString,ObjectPath,CompareResult)
com.itextpdf.signatures.LtvVerifier.setVerifyRootCertificate(boolean)
com.itextpdf.kernel.pdf.PdfBoolean.equals(Object)
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6Format3.getSubstLookupRecords()
com.itextpdf.signatures.OCSPVerifier.verifyResponse(BasicOCSPResp,X509Certificate)
com.itextpdf.layout.KeepWithNextTest.keepWithNextTest10()
com.itextpdf.kernel.pdf.PdfEncryptor.isAssemblyAllowed(int)
com.itextpdf.kernel.xmp.XMPMeta.getObjectName()
com.itextpdf.signatures.CertificateInfo.getField(String)
com.itextpdf.layout.font.FontProvider.getDefaultEmbeddingFlag()
com.itextpdf.test.WrappedSamplesRunner.runSamples()
com.itextpdf.kernel.xmp.XMPMeta.setPropertyBoolean(String,String,boolean)
com.itextpdf.pdfa.PdfA2AcroFormCheckTest.acroFormCheck01()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff149Test.isFontValid()
com.itextpdf.kernel.utils.PdfSplitter.splitByPageCount(int,IDocumentReadyListener)
com.itextpdf.io.font.CFFFontSubset.CreateNonCIDPrivate(int,OffsetItem)
com.itextpdf.barcodes.BarcodeDataMatrix.getBarcodeSize(float,float)
com.itextpdf.kernel.font.PdfFont.containsGlyph(int)
com.itextpdf.kernel.pdf.canvas.draw.DottedLine.setGap(float)
com.itextpdf.io.font.otf.GlyphLine.filter(IGlyphLineFilter)
com.itextpdf.kernel.geom.AffineTransform.scale(double,double)
com.itextpdf.io.codec.brotli.dec.BitReader.copyBytes(BitReader,byte,int,int)
com.itextpdf.kernel.pdf.PdfAnnotationTest.beforeClass()
com.itextpdf.kernel.pdf.PdfDocument.hashCode()
com.itextpdf.kernel.pdf.PdfEncryptionTest.encryptWithPasswordAes256()
com.itextpdf.barcodes.BarcodePDF417.getErrorLevel()
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperBase.rangeTest(LongPoint,boolean)
com.itextpdf.layout.font.FontSelector.bestMatch()
com.itextpdf.kernel.pdf.PdfWriter.markArrayContentToFlush(PdfArray)
com.itextpdf.layout.renderer.RootRenderer.flush()
com.itextpdf.signatures.PdfPKCS7.getSignDate()
com.itextpdf.kernel.xmp.options.PropertyOptions.isArrayOrdered()
com.itextpdf.forms.fields.PdfFormField.drawPushButtonAppearance(float,float,String,PdfFont,int)
com.itextpdf.kernel.utils.PageRange.addSinglePage(int)
com.itextpdf.barcodes.qrcode.Encoder.appendAlphanumericBytes(String,BitVector)
com.itextpdf.signatures.LtvVerifier.getCRLsFromDSS()
com.itextpdf.kernel.pdf.PdfAnnotationTest.addAndGetLinkAnnotations()
com.itextpdf.layout.CollapsingMarginsTest.collapsingMarginsTest01()
com.itextpdf.kernel.xmp.impl.XMPNode.getName()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.clone()
com.itextpdf.barcodes.BarcodePDF417.calculateErrorCorrection(int)
com.itextpdf.io.font.FontProgramFactory.createFont(String,boolean)
com.itextpdf.kernel.pdf.canvas.wmf.MetaBrush.getStyle()
com.itextpdf.kernel.pdf.colorspace.PdfCieBasedCs.getInitialPdfArray()
com.itextpdf.io.source.OutputStream.writeObject(java,io,ObjectOutputStream)
com.itextpdf.signatures.PdfSigner.getSignatureAppearance()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff122Test.getFontName()
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getCharSpacing()
com.itextpdf.io.codec.CCITTG4Encoder.Fax4PostEncode()
com.itextpdf.kernel.pdf.action.PdfAction.createLaunch(PdfFileSpec,boolean)
com.itextpdf.io.util.SystemUtil.printProcessOutput(Process)
com.itextpdf.kernel.xmp.XMPMeta.doesStructFieldExist(String,String,String,String)
com.itextpdf.kernel.pdf.PdfPrimitiveObject.setIndirectReference(PdfIndirectReference)
com.itextpdf.io.source.PdfTokenizer.backOnePosition(int)
com.itextpdf.io.font.woff2.w3c.format.TabledataBrotli001Test.isFontValid()
com.itextpdf.layout.RootElement.hasProperty(int)
com.itextpdf.layout.renderer.BlockRenderer.replaceSplitRendererKidFloats(Map,IRenderer)
com.itextpdf.kernel.pdf.PdfResources.getProperties(PdfName)
com.itextpdf.layout.element.Cell.getRowspan()
com.itextpdf.kernel.pdf.action.PdfAction.createGoToR(String,String,boolean)
com.itextpdf.barcodes.qrcode.Mode.getBits()
com.itextpdf.kernel.xmp.impl.ParameterAsserts.assertSchemaNS(String)
com.itextpdf.layout.minmaxwidth.RotationMinMaxWidth.cos(double)
com.itextpdf.kernel.pdf.PdfDocument.tryInitTagStructure(PdfDictionary)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.getContentStream()
com.itextpdf.kernel.pdf.XMPMetadataTest.beforeClass()
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.getCurrentBrush()
com.itextpdf.layout.renderer.AbstractRenderer.beginElementOpacityApplying(DrawContext)
com.itextpdf.pdfa.PdfA1GraphicsTest.beforeClass()
com.itextpdf.forms.PdfFormFieldTest.unicodeFormFieldTest()
com.itextpdf.kernel.utils.CompareTool.compareDictionariesExtended(PdfDictionary,PdfDictionary,ObjectPath,CompareResult)
com.itextpdf.kernel.pdf.PdfReader.readDecryptObj()
com.itextpdf.kernel.utils.CompareTool.toXmlNode(Document)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.getProperty(String,String)
com.itextpdf.kernel.xmp.impl.XMPSerializerRDF.serializeCanonicalRDFSchema(XMPNode,int)
com.itextpdf.layout.LinkTest.linkTest03()
com.itextpdf.signatures.PdfSigner.getSignatureEvent()
com.itextpdf.kernel.pdf.canvas.parser.util.InlineImageParsingUtils.parseDictionary(PdfCanvasParser)
com.itextpdf.kernel.pdf.canvas.parser.HighlightItemsTest.highlightNotDefTest()
com.itextpdf.kernel.geom.Point.distanceSq(double,double,double,double)
com.itextpdf.io.util.TextUtil.convertToUtf32(char,char)
com.itextpdf.kernel.geom.MatrixTest.testSubtract()
com.itextpdf.kernel.pdf.PdfEncryptor.isModifyAnnotationsAllowed(int)
com.itextpdf.kernel.pdf.ByteBufferOutputStream.append(double)
com.itextpdf.kernel.xmp.options.PropertyOptions.setStruct(boolean)
com.itextpdf.kernel.pdf.PdfDocument.getPdfVersion()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff024Test.getTestInfo()
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessorTest.contentStreamProcessorTest()
com.itextpdf.kernel.geom.Rectangle.setBbox(float,float,float,float)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Edge.getCurrent()
com.itextpdf.kernel.pdf.colorspace.PdfPattern.setMatrix(PdfArray)
com.itextpdf.layout.ElementPropertyContainer.hasProperty(int)
com.itextpdf.io.source.OutputStream.writeFloat(float,boolean)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.getOpen()
com.itextpdf.layout.renderer.FloatingHelper.adjustFloatedTableLayoutBox(TableRenderer,Rectangle,float,List,FloatPropertyValue)
com.itextpdf.layout.element.LineSeparator.getRole()
com.itextpdf.layout.element.Paragraph.getAccessibilityProperties()
com.itextpdf.io.font.CFFFontSubset.CalcHints(int,int,int,int,int)
com.itextpdf.kernel.xmp.XMPMeta.setStructField(String,String,String,String,String,PropertyOptions)
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperBridge.convertToLongPoints(List)
com.itextpdf.forms.fields.PdfFormField.setAppearance(PdfName,String,PdfStream)
com.itextpdf.io.image.TiffImageHelper.processTiffImageColor(TIFFDirectory,RandomAccessFileOrArray,TiffParameters)
com.itextpdf.kernel.pdf.PdfObject.flush(boolean)
com.itextpdf.io.font.woff2.w3c.format.TabledataTransformGlyfLoca002Test.isFontValid()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff132Test.getTestInfo()
com.itextpdf.io.font.woff2.w3c.format.TabledataDecompressedLength002Test.getTestInfo()
com.itextpdf.io.image.RawImageHelper.updateRawImageParameters(RawImageData,int,int,int,int,byte,int)
com.itextpdf.layout.font.FontSelectorStrategy.getPdfFont(FontInfo)
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.dumpState()
com.itextpdf.kernel.pdf.colorspace.PdfCieBasedCs.getInitialPdfArray(InputStream,float)
com.itextpdf.forms.xfa.XfaForm.setXfaFieldValue(String,String)
com.itextpdf.io.font.FontNames.getSubfamily()
com.itextpdf.kernel.pdf.PdfResources.isModified()
com.itextpdf.io.font.woff2.Woff2Dec.withSign(int,int)
com.itextpdf.kernel.pdf.PdfStampingTest.stamping2()
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingStandard128.setSpecificHandlerDicEntries(PdfDictionary,boolean,boolean)
com.itextpdf.kernel.utils.CompareTool.runGhostScriptImageGeneration(String)
com.itextpdf.io.codec.TIFFFaxDecoder.decodeBlackCodeWord()
com.itextpdf.kernel.pdf.layer.PdfLayer.getTitle()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getHalftone()
com.itextpdf.io.codec.Jbig2SegmentReader.getPageHeight(int)
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.compareTo(TextChunk)
com.itextpdf.forms.fields.PdfButtonFormField.setRadio(boolean)
com.itextpdf.kernel.utils.PdfSplitter.setPreserveTagged(boolean)
com.itextpdf.signatures.PdfSignatureBuildProperties.getPdfSignatureAppProperty()
com.itextpdf.io.font.otf.GlyphLine.toString()
com.itextpdf.kernel.pdf.annot.PdfFileAttachmentAnnotation.getSubtype()
com.itextpdf.layout.element.Paragraph.addTabStops(java,util)
com.itextpdf.io.image.TiffImageData.isDirect()
com.itextpdf.layout.DefaultLayoutTest.beforeClass()
com.itextpdf.kernel.pdf.PdfReaderTest.fixPdfTest05()
com.itextpdf.kernel.pdf.annot.PdfWatermarkAnnotation.getSubtype()
com.itextpdf.io.font.woff2.VariableLength.read255UShort(Buffer)
com.itextpdf.kernel.pdf.canvas.parser.data.PathRenderInfo.getLineJoinStyle()
com.itextpdf.kernel.pdf.canvas.parser.ParserGraphicsState.transformSegment(IShape,Matrix)
com.itextpdf.io.font.TrueTypeFont.readGsubTable()
com.itextpdf.kernel.log.DefaultCounter.onDocumentRead(long)
com.itextpdf.pdfa.checker.PdfA1Checker.checkSymbolicTrueTypeFont(PdfTrueTypeFont)
com.itextpdf.pdfa.PdfA2CatalogCheckTest.catalogCheck05()
com.itextpdf.pdfa.PdfA2GraphicsCheckTest.colorCheckTest4()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff081Test.getFontName()
com.itextpdf.kernel.pdf.PdfReaderTest.invalidIndirect()
com.itextpdf.layout.font.FontProvider.getStrategy(String,List,FontCharacteristics,FontSet)
com.itextpdf.kernel.xmp.impl.Utils.splitNameAndValue(String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff146Test.isFontValid()
com.itextpdf.kernel.xmp.XMPMeta.setPropertyBase64(String,String,byte,PropertyOptions)
com.itextpdf.kernel.pdf.PdfVersion.toPdfName()
com.itextpdf.io.codec.CCITTG4Encoder.putBits(int,int)
com.itextpdf.layout.element.Paragraph.removeTabStop(float)
com.itextpdf.kernel.utils.CompareTool.compareByContent(String,String,String,String,Map)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff138Test.isFontValid()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff091Test.getFontName()
com.itextpdf.pdfa.PdfA1ActionCheckTest.actionCheck02()
com.itextpdf.layout.AutoTaggingTest.listTest03()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setDate(PdfString)
com.itextpdf.barcodes.Barcode39Test.beforeClass()
com.itextpdf.layout.Canvas.relayout()
com.itextpdf.layout.renderer.DocumentRenderer.getNextRenderer()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff120Test.getTestInfo()
com.itextpdf.kernel.pdf.colorspace.PdfShading.setDomain(float,float)
com.itextpdf.layout.element.LineSeparator.getAccessibilityProperties()
com.itextpdf.io.font.FontProgramTest.exceptionMessageTest()
com.itextpdf.test.LogListenerHelper.getTestAnnotation(Description,Class)
com.itextpdf.test.ITextTest.restoreCryptographyRestrictions()
com.itextpdf.kernel.pdf.PdfStringTest.testPdfDocumentInfoStringEncoding01()
com.itextpdf.layout.property.UnitValue.createPercentArray(float)
com.itextpdf.layout.renderer.AbstractRenderer.getOwnProperties()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff042Test.isFontValid()
com.itextpdf.kernel.pdf.annot.PdfLinkAnnotation.removeAction()
com.itextpdf.kernel.font.DocTrueTypeFont.getFontFileName()
com.itextpdf.io.font.FontProgramFactory.isRegisteredFont(String)
com.itextpdf.layout.TableBorderTest.tableWithHeaderFooterTest16()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff094Test.isFontValid()
com.itextpdf.kernel.pdf.canvas.parser.clipper.IClipper.addPaths(Paths,PolyType,boolean)
com.itextpdf.kernel.font.PdfSimpleFont.isForceWidthsOutput()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.beginLayer(IPdfOCG)
com.itextpdf.forms.fields.PdfFormField.setFont(PdfFont)
com.itextpdf.kernel.pdf.ParentTreeTest.checkParentTree(String,String)
com.itextpdf.kernel.font.PdfType3Font.flush()
com.itextpdf.pdfa.checker.PdfA2Checker.checkInlineImage(PdfStream,PdfDictionary)
com.itextpdf.kernel.pdf.PdfDocument.tryFlushTagStructure()
com.itextpdf.io.source.OutputStream.write(byte,int,int)
com.itextpdf.layout.hyphenation.HyphenationTree.searchPatterns(char,int,byte)
com.itextpdf.kernel.geom.AffineTransform.rotate(double,double,double)
com.itextpdf.layout.ElementPropertyContainer.getOwnProperty(int)
com.itextpdf.io.source.GroupedRandomAccessSource.close()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.getBorder()
com.itextpdf.pdfa.PdfAFontTest.fontCheckPdfA1_01()
com.itextpdf.signatures.SignUtils.tryToGetNextCertificate()
com.itextpdf.io.font.FontNames.allowEmbedding()
com.itextpdf.layout.hyphenation.Hyphenator.clearHyphenationTreeCache()
com.itextpdf.forms.PdfAcroForm.getField(String)
com.itextpdf.kernel.pdf.PdfArray.addAll(PdfArray)
com.itextpdf.layout.AutoTaggingTest.imageTest01()
com.itextpdf.forms.PdfFormFieldTest.addFieldWithKidsTest()
com.itextpdf.kernel.pdf.PdfObject.isLiteral()
com.itextpdf.layout.renderer.TextRenderer.getWordBoundsForHyphenation(GlyphLine,int,int,int)
com.itextpdf.kernel.xmp.impl.XMPNode.compareTo(Object)
com.itextpdf.layout.element.Link.makeNewRenderer()
com.itextpdf.layout.FloatTest.floatsOnPageSplit05()
com.itextpdf.kernel.geom.Vector.subtract(Vector)
com.itextpdf.pdfa.checker.PdfA2Checker.checkDefaultCS(PdfDictionary,Boolean,PdfName,int)
com.itextpdf.io.image.GifImageHelper.skip(GifParameters)
com.itextpdf.kernel.xmp.options.ParseOptions.setFixControlChars(boolean)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Edge.isEvenOddFillType(PolyFillType,PolyFillType)
com.itextpdf.layout.font.FontSet.addDirectory(String)
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.getRole()
com.itextpdf.io.font.FontProgram.checkFilePath(String)
com.itextpdf.kernel.pdf.layer.PdfLayerMembership.getIndirectReference()
com.itextpdf.kernel.pdf.canvas.draw.ILineDrawer.getColor()
com.itextpdf.kernel.xmp.impl.ByteBuffer.append(byte,int,int)
com.itextpdf.kernel.pdf.PdfAnnotationTest.fileAttachmentAppendModeTest()
com.itextpdf.kernel.pdf.tagutils.IAccessibleElement.getRole()
com.itextpdf.layout.DefaultLayoutTest.emptyParagraphsTest01()
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.setLineJoinPolygon(PdfCanvas)
com.itextpdf.kernel.pdf.filters.FlateDecodeFilter.flateDecode(byte,boolean)
com.itextpdf.io.font.otf.GsubLookupType1.readSubTable(int)
com.itextpdf.kernel.pdf.PdfFontTest.autoDetect3()
com.itextpdf.signatures.PdfSigner.setFieldName(String)
com.itextpdf.barcodes.BarcodeCodabar.getBarcodeSize()
com.itextpdf.kernel.pdf.PdfDeveloperExtension.getPrefix()
com.itextpdf.kernel.pdf.PdfViewerPreferences.setPrintPageRange(int)
com.itextpdf.layout.renderer.RootRenderer.close()
com.itextpdf.io.font.FontProgram.setBold(boolean)
com.itextpdf.layout.renderer.TextRenderer.lineLength()
com.itextpdf.barcodes.qrcode.GF256Poly.getDegree()
com.itextpdf.io.codec.TIFFFaxDecompressor.decodeWhiteCodeWord()
com.itextpdf.kernel.color.WebColors.getRGBColor(String)
com.itextpdf.kernel.numbering.ArmenianNumbering.toArmenian(int)
com.itextpdf.layout.TableTest.tableSplitTest04()
com.itextpdf.forms.xfa.XfaForm.setXfaForm(XfaForm,PdfDocument)
com.itextpdf.io.source.PdfTokenizer.close()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff111Test.getTestInfo()
com.itextpdf.barcodes.qrcode.MatrixUtil.embedHorizontalSeparationPattern(int,int,ByteMatrix)
com.itextpdf.barcodes.qrcode.ByteArray.set(byte,int,int)
com.itextpdf.barcodes.qrcode.Version.getTotalECCodewords()
com.itextpdf.kernel.pdf.PdfViewerPreferences.setDirection(PdfViewerPreferencesConstants)
com.itextpdf.kernel.pdf.layer.PdfLayer.setCreatorInfo(String,String)
com.itextpdf.kernel.pdf.tagging.IPdfStructElem.getKids()
com.itextpdf.pdfa.PdfA2AnnotationCheckTest.annotationCheckTest14()
com.itextpdf.kernel.pdf.PdfOutlineTest.removePageWithOutlinesTest()
com.itextpdf.io.font.FontCache.getUni2CidCmap(String)
com.itextpdf.signatures.sign.SigningTest.signingTaggedDocument()
com.itextpdf.kernel.pdf.PdfPagesTest.verifyPagesOrder(String,int)
com.itextpdf.layout.renderer.AbstractRenderer.clipBackgroundArea(DrawContext,Rectangle)
com.itextpdf.kernel.pdf.PdfObjectWrapper.setPdfObject(T)
com.itextpdf.kernel.pdf.collection.PdfCollectionField.setOrder(int)
com.itextpdf.forms.fields.PdfChoiceFormField.setEdit(boolean)
com.itextpdf.io.font.otf.OtfReadCommon.readBaseArray(OpenTypeFontTableReader,int,int)
com.itextpdf.layout.LineSeparatorTest.lineSeparatorWidthPercentageTest01()
com.itextpdf.kernel.pdf.canvas.parser.util.PdfCanvasParser.nextValidToken()
com.itextpdf.kernel.pdf.colorspace.PdfShading.setBitsPerComponent(int)
com.itextpdf.forms.fields.PdfFormField.makeFormField(PdfObject,PdfDocument)
com.itextpdf.layout.margincollapse.MarginsCollapseInfo.isIgnoreOwnMarginTop()
com.itextpdf.kernel.pdf.tagging.PdfStructElem.removeKidObject(PdfObject)
com.itextpdf.kernel.pdf.PdfAnnotationTest.addTextAnnotation01()
com.itextpdf.kernel.pdf.PdfDocument.getXmpMetadata()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.beginText()
com.itextpdf.barcodes.BarcodeQRCode.placeBarcode(PdfCanvas,Color,float)
com.itextpdf.kernel.xmp.XMPDateTimeFactory.convertToUTCTime(XMPDateTime)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getStrokeOpacity()
com.itextpdf.io.font.CFFFont.getString(char)
com.itextpdf.io.font.OpenTypeParser.readUnicodeString(int)
com.itextpdf.layout.font.FontCharacteristics.setMonospaceFlag(boolean)
com.itextpdf.kernel.pdf.PdfDocument.checkAndAddPage(PdfPage)
com.itextpdf.io.font.otf.MarkTable.isMark(int)
com.itextpdf.layout.ImageTest.imageTest11()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff048Test.getTestInfo()
com.itextpdf.io.font.Type1Parser.getPostscriptBinary()
com.itextpdf.pdfa.PdfA1GraphicsTest.colorCheckTest3()
com.itextpdf.kernel.pdf.PdfOutlineTest.setupAddOutlineInNotOutlineMode()
com.itextpdf.kernel.pdf.canvas.parser.clipper.IClipper.execute(ClipType,PolyTree,PolyFillType,PolyFillType)
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.addNotYetAppliedTopMargin(Rectangle)
com.itextpdf.io.source.OutputStream.getCurrentPos()
com.itextpdf.kernel.xmp.impl.XMPUtilsImpl.removeProperties(XMPMeta,String,String,boolean,boolean)
com.itextpdf.layout.RotationTest.cellRotationTest01()
com.itextpdf.forms.PdfAcroForm.addFieldAppearanceToPage(PdfFormField,PdfPage)
com.itextpdf.kernel.pdf.PdfDocument.getOutlines(boolean)
com.itextpdf.io.codec.PngWriter.writeHeader(int,int,int,int)
com.itextpdf.kernel.crypto.securityhandler.PubSecHandlerUsingAes256.initKey(byte,int)
com.itextpdf.layout.renderer.AbstractRenderer.setBorders(Border,int)
com.itextpdf.kernel.pdf.PdfWriter.getCopyObjectKey(PdfObject)
com.itextpdf.layout.renderer.TableRenderer.getNextRenderer()
com.itextpdf.pdfa.PdfA1GraphicsTest.transparencyCheckTest1()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff092Test.getFontName()
com.itextpdf.pdfa.PdfA2AnnotationCheckTest.annotationCheckTest13()
com.itextpdf.kernel.pdf.colorspace.PdfShading.setExtend(boolean,boolean)
com.itextpdf.kernel.pdf.PdfReaderTest.beforeClass()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff002Test.getFontName()
com.itextpdf.io.image.ImageData.setHeight(float)
com.itextpdf.barcodes.qrcode.Encoder.encode(String,ErrorCorrectionLevel,QRCode)
com.itextpdf.io.image.ImageData.setColorTransform(int)
com.itextpdf.kernel.pdf.PdfEncryption.isEmbeddedFilesOnly()
com.itextpdf.kernel.pdf.action.PdfRendition.isWrappedObjectMustBeIndirect()
com.itextpdf.kernel.numbering.GreekAlphabetNumbering.getSymbolFontChar(char)
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperBase.insertLocalMinima(LocalMinima)
com.itextpdf.signatures.SignUtils.hasUnsupportedCriticalExtension(X509Certificate)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.reset()
com.itextpdf.kernel.pdf.canvas.parser.listener.IEventListener.getSupportedEvents()
com.itextpdf.layout.ElementPropertyContainer.getStrokeColor()
com.itextpdf.io.font.Type1Font.getKerning(Glyph,Glyph)
com.itextpdf.signatures.PdfSignatureAppearance.setCertificate(Certificate)
com.itextpdf.layout.font.FontCharacteristics.setFontWeight(short)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Point.slopesEqual(LongPoint,LongPoint,LongPoint,boolean)
com.itextpdf.forms.fields.PdfFormField.setJustification(int)
com.itextpdf.kernel.pdf.tagging.PdfMcrDictionary.getPageObject()
com.itextpdf.layout.border.RidgeBorder.getType()
com.itextpdf.layout.element.Table.getLastRowBottomBorder()
com.itextpdf.layout.renderer.TableRenderer.createOverflowRenderer(Table,RowRange)
com.itextpdf.layout.RotationTest.divRotationTest01()
com.itextpdf.kernel.pdf.filters.FilterHandlers.getDefaultFilterHandlers()
com.itextpdf.layout.font.FontCharacteristics.setFontWeight(String)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setLineCapStryle(int)
com.itextpdf.kernel.pdf.PdfDocument.equals(Object)
com.itextpdf.layout.renderer.TypographyUtils.callMethod(String,String,Class,Object)
com.itextpdf.kernel.pdf.action.PdfTargetDictionary.setTarget(PdfTargetDictionary)
com.itextpdf.pdfa.PdfA2EmbeddedFilesCheckTest.fileSpecCheckTest03()
com.itextpdf.layout.TableBorderTest.noHorizontalBorderTest()
com.itextpdf.layout.ElementPropertyContainer.setWordSpacing(float)
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getSingleSpaceWidth()
com.itextpdf.layout.border.Border.draw(PdfCanvas,float,float,float,float,Side,float,float)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.showText(String)
com.itextpdf.kernel.pdf.PdfTokenizerTest.testTwoNumbers()
com.itextpdf.layout.element.List.getPreSymbolText()
com.itextpdf.kernel.pdf.navigation.PdfExplicitDestination.createXYZ(PdfPage,float,float,float)
com.itextpdf.kernel.pdf.PdfDocument.isCloseWriter()
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setBlackGenerationFunction(PdfObject)
com.itextpdf.io.font.CMapEncoding.toInteger(byte)
com.itextpdf.kernel.font.PdfType0Font.compare(int,int)
com.itextpdf.kernel.pdf.PdfOutputStream.updateCompressionFilter(PdfStream)
com.itextpdf.kernel.pdf.canvas.wmf.InputMeta.readInt()
com.itextpdf.forms.fields.PdfFormField.drawBorder(PdfCanvas,PdfFormXObject,float,float)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.roundRectangle(double,double,double,double,double)
com.itextpdf.io.image.PngImageHelper.paethPredictor(int,int,int)
com.itextpdf.io.source.ThreadSafeRandomAccessSource.get(long)
com.itextpdf.barcodes.qrcode.BitVector.at(int)
com.itextpdf.pdfa.PdfA1AnnotationCheckTest.annotationCheckTest06()
com.itextpdf.io.codec.TIFFField.getAsChars()
com.itextpdf.forms.PdfFormFieldTest.beforeClass()
com.itextpdf.kernel.pdf.PdfDocument.checkIsoConformance(Object,IsoKey,PdfResources)
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.getKidsRoles()
com.itextpdf.layout.AreaBreakTest.getNextRenderer()
com.itextpdf.io.font.otf.OpenTypeFontTableReader.readSubstLookupRecords(int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff043Test.isFontValid()
com.itextpdf.layout.renderer.AbstractRenderer.retrieveMaxHeight()
com.itextpdf.forms.fields.PdfFormField.createRadioButton(PdfDocument,Rectangle,PdfButtonFormField,String,PdfAConformanceLevel)
com.itextpdf.io.font.FontRegisterProvider.registerFont(String,String)
com.itextpdf.signatures.PdfPKCS7.setSignName(String)
com.itextpdf.signatures.SignatureUtil.getTotalRevisions()
com.itextpdf.kernel.pdf.PdfPagesTest.addFlushedPageTest()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.joinHorz(Path,OutPt,Path,OutPt,Path,OutPt,Path,OutPt,LongPoint,boolean)
com.itextpdf.layout.element.Cell.makeNewRenderer()
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperBridge.addPath(IClipper,com,itextpdf,kernel,geom,Path,IClipper,PolyType)
com.itextpdf.kernel.pdf.canvas.draw.DottedLine.setLineWidth(float)
com.itextpdf.layout.property.BackgroundImage.isRepeatY()
com.itextpdf.layout.AutoTaggingTest.tableWithCaption01()
com.itextpdf.kernel.pdf.annot.PdfInkAnnotation.getSubtype()
com.itextpdf.kernel.pdf.xobject.PdfImageXObject.getHeight()
com.itextpdf.kernel.pdf.annot.PdfAnnotationAppearance.getStates()
com.itextpdf.kernel.pdf.TagTreePointerTest.tagTreePointerTest06()
com.itextpdf.layout.renderer.TableRenderer.getLastYLineRecursively()
com.itextpdf.pdfa.checker.PdfAChecker.setCheckerOutputIntent(PdfDictionary)
com.itextpdf.layout.element.ILargeElement.setDocument(Document)
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.getOpacity()
com.itextpdf.layout.DestinationTest.beforeClass()
com.itextpdf.barcodes.Barcode1D.setGuardBars(boolean)
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.splitString(PdfString)
com.itextpdf.layout.BackgroundColorTest.shouldAddBackgroundColorAttributeToAccessiblityWhenBackgroundColorIsSet()
com.itextpdf.kernel.crypto.OutputStreamAesEncryption.write(byte,int,int)
com.itextpdf.io.source.RandomAccessFileOrArray.createSourceView()
com.itextpdf.kernel.pdf.PdfString.copyTo(PdfDocument)
com.itextpdf.layout.renderer.ImageRenderer.layout(LayoutContext)
com.itextpdf.kernel.pdf.PdfPages.getKids()
com.itextpdf.layout.element.List.getDefaultProperty(int)
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.applyTextAdjust(float)
com.itextpdf.layout.renderer.TableBorders.setFinishRow(int)
com.itextpdf.kernel.numbering.EnglishAlphabetNumbering.toLatinAlphabetNumberUpperCase(int)
com.itextpdf.io.image.GifImageHelper.decodeImageData(GifParameters)
com.itextpdf.forms.xfa.XfaForm.fillXfaForm(Node)
com.itextpdf.layout.renderer.TableBorders.getTableBoundingBorders()
com.itextpdf.kernel.pdf.PdfArray.directIterator()
com.itextpdf.kernel.pdf.filters.ASCIIHexDecodeFilter.decode(byte,PdfName,PdfObject,PdfDictionary)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff027Test.isFontValid()
com.itextpdf.kernel.pdf.PdfDictionaryValues.contains(Object)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.addXObject(PdfXObject,Rectangle)
com.itextpdf.kernel.xmp.impl.ISO8601Converter.parse(String,XMPDateTime)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setFillColor(Color)
com.itextpdf.kernel.pdf.PdfAnnotationTest.screenTestEmbeddedWavFile02()
com.itextpdf.test.ITextTest.deleteDirectoryContents(String,boolean)
com.itextpdf.pdfa.PdfADocument.checkIsoConformance(Object,IsoKey)
com.itextpdf.io.codec.brotli.dec.Utils.fillWithZeroes(byte,int,int)
com.itextpdf.layout.RotationTest.rotationInfiniteLoopTest01()
com.itextpdf.layout.layout.LayoutResult.getStatus()
com.itextpdf.kernel.utils.PageRange.getAllPagesInRange(int)
com.itextpdf.io.font.FontCacheKey.hashCode()
com.itextpdf.layout.renderer.ParagraphRenderer.split()
com.itextpdf.kernel.pdf.canvas.parser.TextRenderInfoTest.testType3FontWidth()
com.itextpdf.kernel.xmp.options.Options.assertConsistency(int)
com.itextpdf.kernel.pdf.PdfDocumentInfo.getAuthor()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff072Test.getFontName()
com.itextpdf.kernel.pdf.colorspace.PdfShading.setBitsPerFlag(int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff119Test.getFontName()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff075Test.getTestInfo()
com.itextpdf.signatures.PdfSignature.getSubFilter()
com.itextpdf.io.font.woff2.w3c.format.TabledataDecompressedLength002Test.isFontValid()
com.itextpdf.kernel.pdf.PdfDictionaryTest.testValuesContains()
com.itextpdf.kernel.geom.Rectangle.setX(float)
com.itextpdf.kernel.pdf.annot.PdfPolyGeomAnnotation.getSubtype()
com.itextpdf.layout.RotationTest.innerRotationTest01()
com.itextpdf.kernel.pdf.ByteBufferOutputStream.append(byte,int,int)
com.itextpdf.kernel.pdf.tagutils.AccessibilityProperties.getActualText()
com.itextpdf.layout.renderer.AreaBreakRenderer.setParent(IRenderer)
com.itextpdf.layout.element.AbstractElement.hasProperty(int)
com.itextpdf.layout.renderer.AbstractRenderer.setMinMaxWidthBasedOnFixedWidth(MinMaxWidth)
com.itextpdf.layout.TableTest.bigRowspanTest07()
com.itextpdf.io.font.TrueTypeFont.getSubset(Set,boolean)
com.itextpdf.io.source.PdfTokenizer.isDelimiterWhitespace(int)
com.itextpdf.kernel.geom.AffineTransform.inverseTransform(Point,Point)
com.itextpdf.kernel.pdf.PdfDocument.getDefaultPageSize()
com.itextpdf.kernel.xmp.options.AliasOptions.setArrayAlternate(boolean)
com.itextpdf.layout.layout.LayoutArea.toString()
com.itextpdf.kernel.pdf.PdfOutlineTest.outlinesTest()
com.itextpdf.kernel.pdf.filespec.PdfFileSpec.setFileIdentifier(PdfArray)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff055Test.getTestInfo()
com.itextpdf.barcodes.qrcode.Encoder.appendModeInfo(Mode,BitVector)
com.itextpdf.signatures.VerificationOK.toString()
com.itextpdf.kernel.crypto.securityhandler.PubSecHandlerUsingStandard128.setPubSecSpecificHandlerDicEntries(PdfDictionary,boolean,boolean)
com.itextpdf.kernel.pdf.PdfViewerPreferences.setCenterWindow(boolean)
com.itextpdf.layout.renderer.TableWidths.retrieveTableWidth(UnitValue,float)
com.itextpdf.io.font.cmap.AbstractCMap.setSupplement(int)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.showText(PdfArray)
com.itextpdf.kernel.geom.Path.rectangle(float,float,float,float)
com.itextpdf.kernel.pdf.PdfReaderTest.pagesTest10()
com.itextpdf.kernel.pdf.PdfFontTest.testTrueTypeFont1BasedExistingFont()
com.itextpdf.io.font.otf.OtfReadCommon.readCoverageFormat(RandomAccessFileOrArray,int)
com.itextpdf.io.codec.Base64.decode(String,int)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.insertLocalMinimaIntoAEL(long)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.setPropertyDate(String,String,XMPDateTime,PropertyOptions)
com.itextpdf.layout.TableTest.simpleTableTest03()
com.itextpdf.io.image.ImageDataFactory.createGifFrames(URL)
com.itextpdf.layout.renderer.TextRenderer.layout(LayoutContext)
com.itextpdf.kernel.pdf.canvas.wmf.MetaPen.getPenWidth()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.setLocalizedText(String,String,String,String,String,PropertyOptions)
com.itextpdf.kernel.pdf.PdfCanvasTest.markedContentTest2()
com.itextpdf.layout.renderer.CollapsedTableBorders.collapseAllBordersAndEmptyRows()
com.itextpdf.layout.renderer.DrawContext.getCanvas()
com.itextpdf.kernel.xmp.options.AliasOptions.isArray()
com.itextpdf.signatures.sign.SigningTest.signEncryptedDoc01()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff040Test.getFontName()
com.itextpdf.kernel.xmp.impl.ByteBuffer.getEncoding()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Point.getZ()
com.itextpdf.kernel.pdf.PdfObject.setState(short)
com.itextpdf.kernel.xmp.impl.XMPMetaParser.parseXmlFromBytebuffer(ByteBuffer,ParseOptions)
com.itextpdf.kernel.pdf.tagging.IPdfStructElem.getRole()
com.itextpdf.io.font.cmap.CMapObject.isHexString()
com.itextpdf.io.codec.CCITTG4Encoder.putcode(int)
com.itextpdf.signatures.verify.CrlVerifierTest.invalidRevokedCrl01()
com.itextpdf.layout.minmaxwidth.MinMaxWidthUtils.getPaddingWidth(IPropertyContainer)
com.itextpdf.kernel.pdf.canvas.parser.IContentOperator.invoke(PdfCanvasProcessor,PdfLiteral,List)
com.itextpdf.kernel.font.PdfFont.appendAnyGlyph(String,int,List)
com.itextpdf.layout.layout.MinMaxWidthLayoutResult.getNotNullMinMaxWidth(float)
com.itextpdf.kernel.pdf.PdfObjectWrapper.ensureUnderlyingObjectHasIndirectReference()
com.itextpdf.layout.layout.MinMaxWidthLayoutResult.getMinMaxWidth()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff125Test.getTestInfo()
com.itextpdf.kernel.pdf.canvas.parser.listener.ILocationExtractionStrategy.getResultantLocations()
com.itextpdf.io.source.FileChannelRandomAccessSource.get(long)
com.itextpdf.layout.element.Table.addFooterCell(Image)
com.itextpdf.layout.LineSeparatorTest.lineSeparatorBackgroundTest01()
com.itextpdf.io.font.woff2.w3c.format.HeaderLength002Test.isFontValid()
com.itextpdf.kernel.font.PdfFont.isWrappedObjectMustBeIndirect()
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.distParallelStart()
com.itextpdf.kernel.font.PdfTrueTypeFont.containsGlyph(int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff086Test.getTestInfo()
com.itextpdf.pdfa.PdfAFontTest.nonSymbolicTtfCharEncodingsPdfA1Test01()
com.itextpdf.barcodes.BarcodeQRCode.getBitMatrix()
com.itextpdf.layout.renderer.AccessibleAttributesApplier.removeSameAttributesTypeIfPresent(AccessibilityProperties,PdfName)
com.itextpdf.kernel.xmp.XMPDateTime.hasTime()
com.itextpdf.kernel.geom.Matrix.toString()
com.itextpdf.layout.TableTest.tableSplitTest03()
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.displayPdfString(PdfString)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff071Test.isFontValid()
com.itextpdf.io.font.OpenTypeParser.getCmapTable()
com.itextpdf.pdfa.checker.PdfA1Checker.checkFormXObject(PdfStream)
com.itextpdf.test.WrappedSamplesRunner.checkIfTestAndCreateParams(String,RunnerSearchConfig)
com.itextpdf.io.font.woff2.w3c.format.TabledataTransformLength001Test.getFontName()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff099Test.getFontName()
com.itextpdf.pdfa.PdfA2EmbeddedFilesCheckTest.beforeClass()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.execute(ClipType,Paths,PolyFillType)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Edge.findNextLocMin()
com.itextpdf.layout.element.Image.getMarginLeft()
com.itextpdf.io.image.GifImageHelper.readFrame(GifParameters)
com.itextpdf.layout.ElementPropertyContainer.hasOwnProperty(int)
com.itextpdf.kernel.pdf.PdfReaderTest.StreamLengthCorrection5()
com.itextpdf.kernel.utils.PdfSplitterTest.splitDocumentTest01()
com.itextpdf.kernel.pdf.PdfDictionary.directValues()
com.itextpdf.kernel.pdf.tagging.PdfStructElem.put(PdfName,PdfObject)
com.itextpdf.layout.hyphenation.HyphenationTree.isMultiPartWord(char,int)
com.itextpdf.layout.element.Image.setMaxHeight(float)
com.itextpdf.layout.KeepTogetherTest.keepTogetherMinHeightTest()
com.itextpdf.kernel.pdf.PdfTokenizerTest.encodingTest()
com.itextpdf.io.codec.brotli.dec.EnumTest.testWordTransformType()
com.itextpdf.pdfa.checker.PdfA1Checker.checkPdfNumber(PdfNumber)
com.itextpdf.kernel.pdf.canvas.parser.HighlightItemsTest.highlightCharactersPage229()
com.itextpdf.kernel.pdf.PdfReaderTest.correctSimpleDoc1()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff074Test.getFontName()
com.itextpdf.io.image.JpegTest.openJpeg4()
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setRenderingIntent(PdfName)
com.itextpdf.signatures.PdfSignatureAppearance.getImageScale()
com.itextpdf.kernel.pdf.annot.PdfTrapNetworkAnnotation.setVersion(PdfArray)
com.itextpdf.kernel.pdf.tagging.PdfStructTreeRoot.getParentTreeNextKey()
com.itextpdf.kernel.pdf.PdfStructElemTest.structElemTest06()
com.itextpdf.kernel.pdf.PdfDate.generateStringByCalendar(Calendar)
com.itextpdf.layout.font.FontSet.size()
com.itextpdf.barcodes.qrcode.GF256.exp(int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff154Test.getFontName()
com.itextpdf.io.font.woff2.Woff2Dec.computeBbox(int,Woff2Common,Point,byte)
com.itextpdf.kernel.pdf.PdfStructElemTest.structTreeCopyingTest02()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getWordSpacing()
com.itextpdf.kernel.font.PdfFont.checkTrueTypeFontDictionary(PdfDictionary)
com.itextpdf.layout.StylesTest.stylesTest03()
com.itextpdf.kernel.pdf.xobject.PdfXObject.getWidth()
com.itextpdf.layout.layout.LayoutContext.setClippedHeight(boolean)
com.itextpdf.kernel.xmp.impl.XMPSchemaRegistryImpl.getNamespaceURI(String)
com.itextpdf.kernel.Version.getKey()
com.itextpdf.signatures.PdfPKCS7.getOcsp()
com.itextpdf.kernel.pdf.PdfDictionary.get(PdfName,boolean)
com.itextpdf.kernel.xmp.impl.XMPIteratorImpl.hasNext()
com.itextpdf.io.util.FileUtil.createPrintWriter(OutputStream,String)
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.displayXObject(PdfName)
com.itextpdf.kernel.geom.Point.distance(Point)
com.itextpdf.io.font.woff2.w3c.format.Valid008Test.getFontName()
com.itextpdf.forms.PdfAcroForm.flattenFields()
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingStandard40.initKeyAndReadDictionary(PdfDictionary,byte,byte,boolean)
com.itextpdf.layout.TableBorderTest.splitCellsTest03()
com.itextpdf.barcodes.BarcodeDataMatrix.draw(byte,int,DmParams)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff102Test.isFontValid()
com.itextpdf.io.image.BmpImageHelper.indexedModel(byte,int,int,BmpParameters)
com.itextpdf.io.font.FontProgram.hasKernPairs()
com.itextpdf.io.source.PagedChannelRandomAccessSource.sourceReleased(IRandomAccessSource)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff112Test.getFontName()
com.itextpdf.io.font.woff2.Buffer.getLength()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setFlags(int)
com.itextpdf.io.codec.brotli.dec.Decode.writeRingBuffer(State)
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.getRegisteredOperatorStrings()
com.itextpdf.forms.xfa.XfaForm.getDatasetsNode()
com.itextpdf.io.font.otf.GsubLookupType6.readSubTableFormat1(int)
com.itextpdf.barcodes.qrcode.FormatInformation.numBitsDiffering(int,int)
com.itextpdf.layout.renderer.LinkRenderer.getNextRenderer()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Edge.getDelta()
com.itextpdf.io.source.FileChannelRandomAccessSource.writeObject(ObjectOutputStream)
com.itextpdf.kernel.pdf.tagutils.BackedAccessibleProperties.getAttributesList()
com.itextpdf.layout.TableBorderTest.simpleBorderTest04()
com.itextpdf.io.font.woff2.w3c.format.BlocksMetadataPadding001Test.getFontName()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff020Test.getFontName()
com.itextpdf.signatures.testutils.Pkcs12FileHelper.readFirstKey(String,char,char)
com.itextpdf.signatures.SignaturePermissions.isAnnotationsAllowed()
com.itextpdf.kernel.font.DocFontEncoding.fillDifferences(DocFontEncoding,PdfArray,CMapToUnicode)
com.itextpdf.kernel.pdf.canvas.parser.listener.TextMarginFinder.eventOccurred(IEventData,EventType)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff007Test.getFontName()
com.itextpdf.kernel.log.Counter.getCounter(Class)
com.itextpdf.kernel.xmp.options.AliasOptions.setArrayOrdered(boolean)
com.itextpdf.io.source.RandomAccessFileOrArray.readString(int,String)
com.itextpdf.layout.renderer.AbstractRenderer.getPropertyAsFloat(IRenderer,int)
com.itextpdf.signatures.PdfSignatureAppearance.createBlankN0()
com.itextpdf.signatures.sign.SigningTest.signingDocumentAppendModeIndirectPageAnnots()
com.itextpdf.kernel.pdf.PdfNull.makeIndirect(PdfDocument,PdfIndirectReference)
com.itextpdf.layout.ListTest.divInListItemTest01()
com.itextpdf.kernel.pdf.annot.PdfTextAnnotation.getState()
com.itextpdf.layout.hyphenation.PatternParser.normalizeException(ArrayList)
com.itextpdf.kernel.pdf.PdfOutline.getParent()
com.itextpdf.io.font.CFFFontSubset.countEntireIndexRange(int)
com.itextpdf.pdfa.PdfAFlushingTest.compareResult(String,String)
com.itextpdf.kernel.pdf.PdfWriter.close()
com.itextpdf.io.source.WriteStringsTest.writeNameTest()
com.itextpdf.io.util.FilterUtil.flateDecode(byte,boolean)
com.itextpdf.layout.renderer.CanvasRenderer.addChild(IRenderer)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.getStrokeOverprintFlag()
com.itextpdf.pdfa.PdfA1GraphicsTest.colorCheckTest4()
com.itextpdf.kernel.pdf.filters.LZWDecoder.getNextCode()
com.itextpdf.kernel.pdf.TagTreePointerTest.tagTreePointerTest05()
com.itextpdf.layout.renderer.TextRenderer.calculateLineWidth()
com.itextpdf.kernel.pdf.PdfAnnotationTest.addLinkAnnotation01()
com.itextpdf.io.font.FontMetrics.isFixedPitch()
com.itextpdf.layout.hyphenation.TernaryTreeIterator.nextElement()
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingStandard128.computeOwnerKey(byte,byte)
com.itextpdf.layout.layout.LineLayoutResult.isSplitForcedByNewline()
com.itextpdf.io.source.PdfTokenizer.checkObjectStart(PdfTokenizer)
com.itextpdf.io.font.FontProgramDescriptor.isItalic()
com.itextpdf.kernel.font.PdfFont.getAscent(int,float)
com.itextpdf.barcodes.qrcode.Version.getTotalCodewords()
com.itextpdf.kernel.pdf.PdfDocument.setModifiedDocumentId(PdfString)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff002Test.isFontValid()
com.itextpdf.io.font.CFFFontSubset.BuildNewIndexAndCopyAllGSubrs(int,byte)
com.itextpdf.signatures.ITSAClient.getTimeStampToken(byte)
com.itextpdf.forms.PdfAcroForm.getAcroForm(PdfDocument,boolean)
com.itextpdf.kernel.pdf.navigation.PdfExplicitDestination.createFitV(PdfPage,float)
com.itextpdf.kernel.pdf.PdfDestinationTest.destCopyingTest02()
com.itextpdf.test.LogListener.checkLogMessages(Description)
com.itextpdf.forms.fields.PdfFormField.getTypeFromParent(PdfDictionary)
com.itextpdf.layout.margincollapse.MarginsCollapseInfo.setBufferSpaceOnBottom(float)
com.itextpdf.kernel.xmp.XMPVersionInfo.getMinor()
com.itextpdf.layout.element.Table.getRowGroups()
com.itextpdf.kernel.pdf.PdfDictionaryTest.testEntrySetRemove()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff038Test.getTestInfo()
com.itextpdf.layout.ListTest.nestedListTest01()
com.itextpdf.layout.renderer.MaxMaxWidthHandler.updateMaxChildWidth(float)
com.itextpdf.kernel.pdf.tagging.ParentTreeHandler.keyIntoStructParentIndex(int)
com.itextpdf.kernel.pdf.PdfDictionaryEntrySet.hashCode()
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.getMiterLimit()
com.itextpdf.layout.AutoTaggingTest.wordBreaksLineEndingsTest03()
com.itextpdf.io.font.OpenTypeParser.initializeSfntTables()
com.itextpdf.io.font.woff2.w3c.format.BlocksMetadataPadding004Test.isFontValid()
com.itextpdf.kernel.pdf.PdfReaderTest.openSimpleDocWithFullCompression()
com.itextpdf.kernel.pdf.PdfDictionary.clear()
com.itextpdf.kernel.pdf.PdfFontTest.testNewType3FontBasedExistingFont()
com.itextpdf.kernel.font.PdfFontFactory.createFont()
com.itextpdf.io.codec.TIFFDirectory.getNumEntries()
com.itextpdf.io.font.otf.OpenTypeFontTableReader.getFeatureRecords()
com.itextpdf.kernel.pdf.canvas.parser.BidiTextExtractionTest.test03()
com.itextpdf.layout.renderer.TabRenderer.draw(DrawContext)
com.itextpdf.layout.renderer.TableBorders.getLastHorizontalBorder()
com.itextpdf.layout.AreaBreakTest.initElementAreas(LayoutArea)
com.itextpdf.layout.renderer.AbstractRenderer.noAbsolutePositionInfo(IRenderer)
com.itextpdf.kernel.xmp.impl.xpath.XMPPathParser.parseStructSegment(PathPosition)
com.itextpdf.kernel.utils.CompareTool.findBytesDifference(byte,byte,StringBuilder)
com.itextpdf.kernel.pdf.PdfEncryptor.getPermissionsVerbose(int)
com.itextpdf.kernel.xmp.impl.XMPNormalizer.fixGPSTimeStamp(XMPNode)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Path.cleanPolygon()
com.itextpdf.io.codec.PngWriter.crc(byte,int,int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff039Test.isFontValid()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff126Test.getTestInfo()
com.itextpdf.kernel.xmp.impl.ParameterAsserts.assertPrefix(String)
com.itextpdf.layout.FontFamilySplitterTest.fontFamilySplitter()
com.itextpdf.kernel.xmp.impl.Utils.isInternalProperty(String,String)
com.itextpdf.kernel.pdf.filespec.PdfFileSpec.put(PdfName,PdfObject)
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.setIconName(PdfName)
com.itextpdf.forms.xfa.Xml2SomDatasets.processDatasetsInternal(Node)
com.itextpdf.kernel.pdf.PdfArray.subList(int,int)
com.itextpdf.kernel.utils.CompareTool.getLocalPath()
com.itextpdf.kernel.pdf.SmartModePdfObjectsSerializer.saveSerializedObject(SerializedObjectContent,PdfIndirectReference)
com.itextpdf.layout.BorderTest.createDocument()
com.itextpdf.kernel.pdf.PdfDocument.getNumberOfPdfObjects()
com.itextpdf.layout.renderer.FloatingHelper.calculateLineShiftUnderFloats(List,Rectangle)
com.itextpdf.layout.Document.setRightMargin(float)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setFillColorGray(float)
com.itextpdf.kernel.pdf.canvas.parser.listener.DefaultPdfTextLocation.setRectangle(Rectangle)
com.itextpdf.io.font.otf.OtfReadCommon.readAnchorArray(OpenTypeFontTableReader,int,int,int)
com.itextpdf.layout.renderer.AbstractRenderer.getChildRenderers()
com.itextpdf.io.font.OpenTypeParser.getSubset(Set,boolean)
com.itextpdf.kernel.pdf.PdfDocument.isTagged()
com.itextpdf.io.font.FontMetrics.setXHeight(int)
com.itextpdf.io.codec.LZWStringTable.ClearTable(int)
com.itextpdf.io.font.Pfm2afm.convert(RandomAccessFileOrArray,OutputStream)
com.itextpdf.layout.KeepTogetherTest.keepTogetherDivTest01()
com.itextpdf.io.image.ImageDataFactory.createJpeg(URL)
com.itextpdf.kernel.pdf.tagutils.BackedAccessibleProperties.clearAttributes()
com.itextpdf.kernel.xmp.impl.XMPNodeUtils.followXPathStep(XMPNode,XMPPathSegment,boolean)
com.itextpdf.kernel.pdf.PdfReaderTest.freeReferencesTest02()
com.itextpdf.kernel.pdf.SmartModePdfObjectsSerializer.isKeyRefersBack(PdfDictionary,PdfName)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff066Test.isFontValid()
com.itextpdf.layout.renderer.DrawContext.setTaggingEnabled(boolean)
com.itextpdf.barcodes.qrcode.BitVector.xor(BitVector)
com.itextpdf.layout.renderer.IRenderer.layout(LayoutContext)
com.itextpdf.kernel.xmp.impl.xpath.XMPPathSegment.setAliasForm(int)
com.itextpdf.pdfa.checker.PdfA1Checker.checkLogicalStructure(PdfDictionary)
com.itextpdf.io.font.otf.Glyph.getUnicodeChars()
com.itextpdf.kernel.pdf.PdfIndirectReference.getRefersTo()
com.itextpdf.pdfa.PdfA2GraphicsCheckTest.colorCheckTest5()
com.itextpdf.pdfa.PdfA2CatalogCheckTest.catalogCheck10()
com.itextpdf.signatures.KeyStoreUtil.loadCacertsKeyStore(String)
com.itextpdf.forms.PdfFormCopyTest.copyFieldsTest04()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.eoFillStroke()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.setFillColor(Color)
com.itextpdf.io.source.PdfTokenizer.checkTrailer(ByteBuffer)
com.itextpdf.io.font.otf.OpenTypeScript.getLanguageRecord(String,String)
com.itextpdf.layout.AreaBreakTest.pageBreakTest03()
com.itextpdf.kernel.pdf.PdfOutputStream.write(PdfDictionary)
com.itextpdf.io.font.FontCache.readFontProperties(String)
com.itextpdf.io.font.WoffConverter.isWoffFont(byte)
com.itextpdf.kernel.xmp.impl.XMPIteratorImpl.createPropertyInfo(XMPNode,String,String)
com.itextpdf.layout.TableTest.bigRowspanTest02()
com.itextpdf.io.image.Jpeg2000ImageData.setColorProfile(byte)
com.itextpdf.layout.Style.setPadding(float)
com.itextpdf.kernel.pdf.PdfReaderTest.fixPdfTest04()
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.getFillOpacity()
com.itextpdf.kernel.pdf.PdfIndirectReference.compareTo(PdfIndirectReference)
com.itextpdf.pdfa.PdfA2GraphicsCheckTest.beforeClass()
com.itextpdf.layout.element.Table.setFixedLayout()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.getTitle()
com.itextpdf.layout.hyphenation.ByteVector.length()
com.itextpdf.kernel.pdf.PdfXrefTable.createNewIndirectReference(PdfDocument)
com.itextpdf.barcodes.BarcodePostnet.placeBarcode(PdfCanvas,Color,Color)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.eoClip()
com.itextpdf.layout.TableTest.beforeClass()
com.itextpdf.layout.renderer.AbstractRenderer.applyAbsolutePosition(Rectangle)
com.itextpdf.kernel.pdf.PdfResources.setDefaultColorSpace(PdfName,PdfColorSpace)
com.itextpdf.layout.element.Text.getText()
com.itextpdf.io.font.cmap.CMapCidByte.addChar(String,CMapObject)
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.prepareMcrForMovingToNewParent(PdfMcr,PdfStructElem)
com.itextpdf.barcodes.Barcode128.placeBarcode(PdfCanvas,Color,Color)
com.itextpdf.io.codec.brotli.dec.DictionaryTest.testGetData()
com.itextpdf.io.codec.brotli.dec.SynthTest.testOneCommand()
com.itextpdf.kernel.pdf.PdfEncryptionTest.checkEncryptedWithPasswordDocumentAppending(String,byte)
com.itextpdf.kernel.log.SystemOutCounter.onDocumentRead(long)
com.itextpdf.layout.element.Image.setMaxWidth(float)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.setCharSpacing(float)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff032Test.getFontName()
com.itextpdf.kernel.pdf.colorspace.PdfShading.getExtend()
com.itextpdf.kernel.xmp.options.SerializeOptions.getEncoding()
com.itextpdf.layout.font.FontCharacteristicsUtils.calculateFontWeight(short)
com.itextpdf.kernel.geom.AffineTransform.createInverse()
com.itextpdf.kernel.pdf.layer.PdfOCProperties.fillDictionary()
com.itextpdf.barcodes.BarcodeEANSUPP.placeBarcode(PdfCanvas,Color,Color)
com.itextpdf.io.codec.brotli.dec.SynthTest.testCopyLengthTooLong()
com.itextpdf.kernel.pdf.PdfArrayTest.testRemove2()
com.itextpdf.layout.element.Table.makeNewRenderer()
com.itextpdf.kernel.pdf.navigation.PdfExplicitDestination.isWrappedObjectMustBeIndirect()
com.itextpdf.pdfa.PdfA2GraphicsCheckTest.imageCheckTest3()
com.itextpdf.io.image.BmpImageHelper.getPalette(int,BmpParameters)
com.itextpdf.io.source.PdfTokenizer.checkFdfHeader()
com.itextpdf.kernel.xmp.impl.XMPSchemaRegistryImpl.findAlias(String)
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getUnscaledBaseline()
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.getPopup()
com.itextpdf.forms.PdfAcroForm.getPdfDocument()
com.itextpdf.kernel.pdf.PdfDate.getW3CDate(String)
com.itextpdf.test.LogListenerHelper.failWrongMessageCount(int,int,String,Description)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Point.compare(T,T)
com.itextpdf.io.image.BmpImageHelper.process(BmpParameters,InputStream)
com.itextpdf.kernel.pdf.PdfDocumentInfo.setTitle(String)
com.itextpdf.io.image.RawImageData.getTypeCcitt()
com.itextpdf.kernel.xmp.XMPMeta.setPropertyLong(String,String,long)
com.itextpdf.layout.renderer.CellRenderer.createSplitRenderer(int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff118Test.getTestInfo()
com.itextpdf.kernel.utils.CompareTool.getDifferences()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.deleteProperty(String,String)
com.itextpdf.kernel.pdf.canvas.parser.listener.GlyphEventListener.eventOccurred(IEventData,EventType)
com.itextpdf.signatures.PdfPKCS7.getLocation()
com.itextpdf.layout.RootElement.getDefaultProperty(int)
com.itextpdf.kernel.pdf.PdfObjectWrapper.ensureObjectIsAddedToDocument(PdfObject)
com.itextpdf.kernel.pdf.PdfAnnotationTest.soundTestSnd()
com.itextpdf.io.codec.brotli.dec.DecodeTest.decompress(byte,boolean)
com.itextpdf.forms.PdfAcroForm.getXFAResource()
com.itextpdf.kernel.pdf.PdfEncryption.getCryptoMode()
com.itextpdf.kernel.xmp.options.PropertyOptions.setArray(boolean)
com.itextpdf.kernel.pdf.layer.PdfLayerMembership.setVisibilityExpression(PdfVisibilityExpression)
com.itextpdf.io.font.Type1Font.getPdfFontFlags()
com.itextpdf.kernel.utils.CompareTool.disableCachedPagesComparison()
com.itextpdf.kernel.pdf.PdfOutputStream.write(PdfStream)
com.itextpdf.io.font.FontProgramFactory.createType1Font(String,String,boolean)
com.itextpdf.kernel.xmp.options.PropertyOptions.setHasQualifiers(boolean)
com.itextpdf.layout.renderer.ImageRenderer.applyPaddings(Rectangle,float,boolean)
com.itextpdf.kernel.color.WebColors.getRGBAColor(String)
com.itextpdf.layout.AreaBreakTest.areaBreakInsideDiv01Test()
com.itextpdf.signatures.IExternalSignature.getEncryptionAlgorithm()
com.itextpdf.io.font.CMapEncoding.getSupplement()
com.itextpdf.kernel.font.PdfFont.splitString(String,float,float)
com.itextpdf.kernel.pdf.PdfString.toUnicodeString()
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingStandard40.computeUserKey()
com.itextpdf.io.font.FontEncoding.convertToBytes(String)
com.itextpdf.layout.renderer.AbstractRenderer.alignChildHorizontally(IRenderer,Rectangle)
com.itextpdf.io.font.woff2.w3c.format.HeaderFlavor002Test.getFontName()
com.itextpdf.kernel.crypto.securityhandler.StandardSecurityHandler.generateOwnerPasswordIfNullOrEmpty(byte)
com.itextpdf.kernel.pdf.PdfPagesTest.randomObjectPagesTest()
com.itextpdf.io.source.RandomAccessFileOrArray.readShort()
com.itextpdf.kernel.pdf.PdfWriterTest.copyObject4()
com.itextpdf.barcodes.qrcode.ByteArray.reserve(int)
com.itextpdf.layout.TableBorderTest.tableWithHeaderFooterTest15()
com.itextpdf.kernel.xmp.impl.XMPNode.isLanguageNode()
com.itextpdf.kernel.geom.AffineTransform.getShearInstance(double,double)
com.itextpdf.forms.fields.PdfFormField.createPushButton(PdfDocument,Rectangle,String,String,PdfFont,float)
com.itextpdf.layout.ImageTest.imageTest06()
com.itextpdf.layout.renderer.AbstractRenderer.applyMargins(Rectangle,float,boolean)
com.itextpdf.io.image.GifImageData.getLogicalHeight()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.InsertMaxima(long)
com.itextpdf.signatures.CertificateVerification.verifyTimestampCertificates(TimeStampToken,KeyStore,String)
com.itextpdf.kernel.xmp.impl.XMPNode.hasChildren()
com.itextpdf.layout.OpacityTest.textOpacityTest01()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff125Test.isFontValid()
com.itextpdf.kernel.utils.CompareToolTest.compareToolErrorReportTest02()
com.itextpdf.kernel.xmp.XMPDateTime.setNanoSecond(int)
com.itextpdf.io.font.FontCache.parseCmap(String,T)
com.itextpdf.kernel.pdf.canvas.parser.data.ClippingPathInfo.getClippingPath()
com.itextpdf.kernel.pdf.tagging.ParentTreeHandler.createParentTreeEntryForPage(PdfPage)
com.itextpdf.kernel.utils.CompareTool.pushDictItemToPath(PdfName)
com.itextpdf.barcodes.BarcodePDF417Test.beforeClass()
com.itextpdf.forms.fields.PdfFormField.getValue()
com.itextpdf.kernel.events.IEventHandler.handleEvent(Event)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff061Test.isFontValid()
com.itextpdf.io.font.otf.GlyphSubstitutionTableReader.readLookupTable(int,int,int)
com.itextpdf.io.font.woff2.Buffer.readByte()
com.itextpdf.layout.renderer.AbstractRenderer.applyGeneratedAccessibleAttributes(TagTreePointer,PdfDictionary)
com.itextpdf.kernel.pdf.PdfXrefTableTest.testCreateAndUpdateXMP()
com.itextpdf.kernel.pdf.PdfIndirectReference.getRefersTo(boolean)
com.itextpdf.kernel.pdf.PdfDictionaryTest.testValuesIndirectContains()
com.itextpdf.kernel.pdf.PdfNumber.makeIndirect(PdfDocument,PdfIndirectReference)
com.itextpdf.barcodes.BarcodePDF417.getCodeRows()
com.itextpdf.kernel.pdf.function.PdfFunction.makeType4(PdfArray,PdfArray,byte)
com.itextpdf.layout.property.Transform.getAffineTransform(Transform,float,float)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff124Test.getFontName()
com.itextpdf.layout.renderer.LineRenderer.getMinMaxWidth(float)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setName(PdfString)
com.itextpdf.layout.renderer.MaxSumWidthHandler.updateMaxChildWidth(float)
com.itextpdf.layout.hyphenation.PatternParser.createParser()
com.itextpdf.io.codec.TIFFFaxDecompressor.decodeNextScanline()
com.itextpdf.io.font.FontMetrics.getAdvanceWidthMax()
com.itextpdf.kernel.xmp.impl.XMPSchemaRegistryImpl.getPropName()
com.itextpdf.kernel.pdf.annot.PdfFixedPrint.setMatrix(float)
com.itextpdf.kernel.pdf.PdfObject.isNull()
com.itextpdf.kernel.pdf.layer.PdfLayer.isOnPanel()
com.itextpdf.kernel.geom.LineSegment.getStartPoint()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff098Test.getTestInfo()
com.itextpdf.kernel.pdf.PdfResources.addColorSpace(PdfObject)
com.itextpdf.kernel.geom.Matrix.add(Matrix)
com.itextpdf.kernel.pdf.PdfDate.setLength(int,int)
com.itextpdf.signatures.LtvVerification.createDss()
com.itextpdf.io.font.FontRegisterProvider.registerStandardFontFamilies()
com.itextpdf.kernel.font.PdfFont.flush()
com.itextpdf.io.font.woff2.w3c.format.BlocksExtraneousData004Test.getTestInfo()
com.itextpdf.kernel.pdf.layer.PdfOCProperties.addOCGRadioGroup(List)
com.itextpdf.layout.ElementPropertyContainer.setHorizontalAlignment(HorizontalAlignment)
com.itextpdf.io.source.DeflaterOutputStream.close()
com.itextpdf.kernel.pdf.function.PdfFunction.checkCompatibilityWithColorSpace(PdfColorSpace)
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.paintPath(int,int)
com.itextpdf.io.image.ImageData.setInverted(boolean)
com.itextpdf.layout.hyphenation.ByteVector.capacity()
com.itextpdf.kernel.pdf.colorspace.PdfPattern.getMatrix()
com.itextpdf.kernel.pdf.annot.PdfPopupAnnotation.getParentObject()
com.itextpdf.io.codec.brotli.dec.WordTransformType.getOmitFirst(int)
com.itextpdf.forms.FormFieldsTaggingTest.formFieldTaggingTest04()
com.itextpdf.kernel.pdf.annot.PdfAnnotationAppearance.setStateObject(PdfName,PdfStream)
com.itextpdf.kernel.pdf.PdfEncryptionTest.copyEncryptedDocument()
com.itextpdf.kernel.pdf.PdfResources.buildResources(PdfDictionary)
com.itextpdf.io.font.woff2.w3c.format.BlocksExtraneousData005Test.getFontName()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff142Test.getFontName()
com.itextpdf.layout.property.Leading.getType()
com.itextpdf.kernel.pdf.PdfObject.isModified()
com.itextpdf.layout.renderer.TypographyUtils.getTypographyClass(String)
com.itextpdf.signatures.verify.OcspVerifierTest.before()
com.itextpdf.kernel.xmp.XMPSchemaRegistry.getNamespaces()
com.itextpdf.signatures.PrivateKeySignature.getHashAlgorithm()
com.itextpdf.layout.LocationTextExtractionStrategyTest.createPdfWithSupescript(String,String)
com.itextpdf.io.font.woff2.w3c.format.Valid003Test.getTestInfo()
com.itextpdf.io.font.woff2.SimpleWoff2DecodeTest.bigTTCTest()
com.itextpdf.layout.TableBorderTest.bordersWithSpansTest01()
com.itextpdf.layout.AreaBreakTest.areaBreakInsideDiv03Test()
com.itextpdf.barcodes.BarcodeEAN.getBarsEAN13(String)
com.itextpdf.barcodes.qrcode.BitArray.getBitArray()
com.itextpdf.kernel.pdf.PdfFontTest.otfByStreamNames()
com.itextpdf.kernel.geom.AffineTransform.getShearY()
com.itextpdf.layout.renderer.FloatingHelper.adjustFloatedBlockLayoutBox(AbstractRenderer,Rectangle,Float,List,FloatPropertyValue)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.poly2ContainsPoly1(Path,OutPt,Path,OutPt)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff024Test.isFontValid()
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.deleteMetaObject(int)
com.itextpdf.kernel.xmp.options.ParseOptions.getOmitNormalization()
com.itextpdf.io.source.OutputStream.getOutputStream()
com.itextpdf.kernel.pdf.ByteBufferOutputStream.toByteArray()
com.itextpdf.kernel.pdf.PdfResources.getColorSpace(PdfName)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff069Test.isFontValid()
com.itextpdf.kernel.pdf.PdfDocumentInfo.getSubject()
com.itextpdf.kernel.pdf.action.PdfTargetDictionary.setPage(int)
com.itextpdf.kernel.pdf.PdfStream.writeObject(ObjectOutputStream)
com.itextpdf.layout.element.Text.getTextRise()
com.itextpdf.signatures.PdfSignatureAppearance.getAppearance()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getLineJoinStyle()
com.itextpdf.layout.ListTest.nestedListTest02()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff035Test.isFontValid()
com.itextpdf.kernel.pdf.annot.PdfTrapNetworkAnnotation.getSubtype()
com.itextpdf.pdfa.checker.PdfA2Checker.checkOutputIntents(PdfDictionary)
com.itextpdf.barcodes.qrcode.ByteArray.isEmpty()
com.itextpdf.kernel.pdf.PdfObjectWrapper.makeIndirect(PdfDocument,PdfIndirectReference)
com.itextpdf.kernel.pdf.navigation.PdfStringDestination.getDestinationPage(Map)
com.itextpdf.barcodes.qrcode.ErrorCorrectionLevel.forBits(int)
com.itextpdf.layout.minmaxwidth.MinMaxWidth.getAdditionalWidth()
com.itextpdf.layout.property.BackgroundImage.getImage()
com.itextpdf.kernel.xmp.options.PropertyOptions.setArrayOrdered(boolean)
com.itextpdf.kernel.xmp.options.ParseOptions.setAcceptLatin1(boolean)
com.itextpdf.signatures.PdfPKCS7.setSignaturePolicy(SignaturePolicyIdentifier)
com.itextpdf.io.source.ByteArrayOutputStream.assignBytes(byte)
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6Format1.getSetOfRulesForStartGlyph(int)
com.itextpdf.layout.property.TransparentColor.applyFillTransparency(PdfCanvas)
com.itextpdf.layout.RootElement.showTextAligned(String,float,float,TextAlignment)
com.itextpdf.layout.PositioningTest.showTextAlignedTest02()
com.itextpdf.signatures.CertificateUtil.getCRL(X509Certificate)
com.itextpdf.kernel.pdf.collection.PdfCollectionSort.setSortOrder(boolean)
com.itextpdf.kernel.pdf.PdfDictionaryEntrySet.remove(Object)
com.itextpdf.layout.CollapsingMarginsTest.beforeClass()
com.itextpdf.kernel.pdf.colorspace.PdfPattern.getYStep()
com.itextpdf.kernel.pdf.PdfFontTest.beforeClass()
com.itextpdf.kernel.pdf.collection.PdfCollectionItem.addItem(String,String)
com.itextpdf.kernel.pdf.tagutils.TagReference.getProperty(PdfName)
com.itextpdf.barcodes.qrcode.QRCodeWriter.encode(String,int,int,Map)
com.itextpdf.kernel.pdf.PdfNull.generateContent()
com.itextpdf.io.util.DateTimeUtil.addDaysToCalendar(Calendar,int)
com.itextpdf.kernel.xmp.options.ParseOptions.getFixControlChars()
com.itextpdf.kernel.pdf.PdfStringTest.testUnicodeString()
com.itextpdf.kernel.pdf.canvas.parser.util.PdfCanvasParser.parse(List)
com.itextpdf.kernel.xmp.impl.XMPDateTimeImpl.getHour()
com.itextpdf.io.util.IntHashtable.remove(int)
com.itextpdf.io.codec.brotli.dec.Decode.readSymbol(int,int,BitReader)
com.itextpdf.kernel.pdf.PdfReaderTest.fixPdfTest10()
com.itextpdf.io.source.ByteUtils.getIsoBytes(String)
com.itextpdf.kernel.pdf.PdfAnnotationTest.screenTestEmbeddedWavFile03()
com.itextpdf.io.font.woff2.w3c.format.HeaderSignature001Test.getTestInfo()
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.getLineWidth()
com.itextpdf.forms.fields.PdfFormField.degreeToRadians(double)
com.itextpdf.layout.renderer.LineRenderer.createSplitRenderer()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff109Test.getTestInfo()
com.itextpdf.layout.renderer.IRenderer.getProperty(int,T1)
com.itextpdf.layout.renderer.LineRenderer.containsImage()
com.itextpdf.io.source.ByteBuffer.size()
com.itextpdf.io.font.CFFFont.getNames()
com.itextpdf.io.font.AdobeGlyphList.getNameToUnicodeLength()
com.itextpdf.barcodes.qrcode.Version.decodeVersionInformation(int)
com.itextpdf.layout.renderer.MinWidthTest.colspanTableTest()
com.itextpdf.kernel.pdf.PdfDocument.checkIsoConformance(Object,IsoKey)
com.itextpdf.kernel.xmp.options.SerializeOptions.getUseCanonicalFormat()
com.itextpdf.kernel.pdf.xobject.PdfFormXObject.getSeparationColorNames()
com.itextpdf.layout.renderer.DocumentRenderer.moveToNextPage()
com.itextpdf.kernel.pdf.filters.DoNothingFilter.decode(byte,PdfName,PdfObject,PdfDictionary)
com.itextpdf.io.util.IdelOutputStream.write(int)
com.itextpdf.barcodes.qrcode.GF256.log(int)
com.itextpdf.kernel.pdf.layer.PdfLayer.getIntents()
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.getResultantText()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff016Test.getTestInfo()
com.itextpdf.signatures.CrlClientOffline.getEncoded(X509Certificate,String)
com.itextpdf.kernel.pdf.annot.PdfLineAnnotation.setLeaderLineExtension(float)
com.itextpdf.layout.SimpleTextExtractionStrategyTest.testExtractXObjectText()
com.itextpdf.kernel.xmp.impl.XMPSerializerHelper.serializeToString(XMPMetaImpl,SerializeOptions)
com.itextpdf.io.font.CMapEncoding.getCmapName()
com.itextpdf.layout.renderer.CellRenderer.createOverflowRenderer(int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff126Test.isFontValid()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getSoftMask()
com.itextpdf.pdfa.PdfA2ActionCheckTest.actionCheck08()
com.itextpdf.kernel.pdf.PdfAnnotationTest.redactionTest()
com.itextpdf.kernel.pdf.canvas.parser.clipper.PolyNode.getJoinType()
com.itextpdf.signatures.sign.LtvWithTwoSignatures.before()
com.itextpdf.barcodes.qrcode.ErrorCorrectionLevel.getName()
com.itextpdf.io.color.IccProfile.getNumComponents()
com.itextpdf.layout.border.Border.setWidth(float)
com.itextpdf.io.font.otf.GsubLookupType6.readSubTableFormat2(int)
com.itextpdf.kernel.pdf.PdfOutlineTest.createDocWithOutlines()
com.itextpdf.signatures.PdfSignature.getPdfSignatureBuildProperties()
com.itextpdf.test.RunnerSearchConfig.isToMarkTestsWithoutAnnotationAsIgnored()
com.itextpdf.layout.margincollapse.MarginsCollapseInfo.setOwnCollapseAfter(MarginsCollapse)
com.itextpdf.layout.element.BlockElement.setPaddingLeft(float)
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.addNewKid(PdfMcr)
com.itextpdf.barcodes.BarcodePDF417.setCodeColumns(int)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.showText(GlyphLine,Iterator)
com.itextpdf.kernel.xmp.XMPMetaFactory.serializeToBuffer(XMPMeta,SerializeOptions)
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.getAutoTaggingPointer()
com.itextpdf.io.font.woff2.Woff2Out.size()
com.itextpdf.layout.PreLayoutTest.getNextRenderer()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.deleteFromSEL(Edge)
com.itextpdf.kernel.font.PdfFont.checkFontDictionary(PdfDictionary,PdfName)
com.itextpdf.kernel.pdf.PdfReader.readStream(PdfStream,boolean)
com.itextpdf.kernel.pdf.navigation.PdfExplicitDestination.replaceNamedDestination(Map)
com.itextpdf.io.codec.brotli.dec.Huffman.replicateValue(int,int,int,int,int)
com.itextpdf.kernel.pdf.PdfWriterTest.useObjectForMultipleTimes4()
com.itextpdf.kernel.geom.Rectangle.linesIntersect(double,double,double,double,double,double,double,double)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff045Test.isFontValid()
com.itextpdf.io.image.Jpeg2000ImageData.getEnumCs()
com.itextpdf.kernel.pdf.PdfEncryptor.getContent(RecipientInformation,PrivateKey,String)
com.itextpdf.barcodes.BarcodeQRCode.getCode()
com.itextpdf.kernel.xmp.impl.XMPNodeUtils.lookupLanguageItem(XMPNode,String)
com.itextpdf.io.font.FontProgram.getCharBBox(int)
com.itextpdf.layout.renderer.TableWidths.getRowspan()
com.itextpdf.pdfa.checker.PdfA1Checker.checkColorsUsages()
com.itextpdf.kernel.pdf.tagutils.AccessibilityProperties.addNewAttributesToAttributesArray(List,PdfNumber,PdfArray)
com.itextpdf.signatures.PdfSignatureAppearance.getContact()
com.itextpdf.layout.element.AbstractElement.setPageNumber(int)
com.itextpdf.kernel.font.PdfFontFactory.createFont(String,String)
com.itextpdf.kernel.numbering.GeorgianNumbering.toGeorgian(int)
com.itextpdf.kernel.pdf.PdfDocument.getNextStructParentIndex()
com.itextpdf.kernel.geom.AffineTransform.setToTranslation(double,double)
com.itextpdf.layout.margincollapse.MarginsCollapseInfo.setClearanceApplied(boolean)
com.itextpdf.layout.renderer.CollapsedTableBorders.drawVerticalBorder(int,float,float,PdfCanvas,List)
com.itextpdf.layout.layout.LayoutContext.getFloatRendererAreas()
com.itextpdf.kernel.pdf.annot.Pdf3DAnnotation.setViewBox(Rectangle)
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6Format1.getLookaheadContextLength()
com.itextpdf.kernel.pdf.PdfEncryptionTest.encryptWithCertificateStandard40NoCompression()
com.itextpdf.barcodes.BarcodePDF417.setDefaultParameters()
com.itextpdf.layout.font.FontSelector.getComparator(List,FontCharacteristics)
com.itextpdf.kernel.pdf.canvas.parser.clipper.IClipper.zFill(Point,LongPoint,Point,LongPoint,Point,LongPoint,Point,LongPoint,Point,LongPoint)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setLeading(float)
com.itextpdf.layout.hyphenation.HyphenationTree.addClass(String)
com.itextpdf.io.image.ImageData.getOriginalType()
com.itextpdf.io.codec.brotli.dec.DecodeTest.testFoxFox()
com.itextpdf.io.font.FontNames.setSubfamily(String)
com.itextpdf.signatures.SignUtils.generateOcspRequestWithNonce(CertificateID)
com.itextpdf.layout.FloatTest.floatsOnPageSplit09()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.getQualifier(String,String,String,String)
com.itextpdf.io.image.ImageDataFactory.createJbig2(URL,int)
com.itextpdf.layout.element.BlockElement.getPaddingLeft()
com.itextpdf.forms.fields.PdfFormField.calculateTranslationHeightAfterFieldRot(Rectangle,double,double)
com.itextpdf.layout.RootElement.add(IBlockElement)
com.itextpdf.layout.TableTest.simpleTableTest07()
com.itextpdf.layout.renderer.CollapsedTableBorders.removeRows(int,int)
com.itextpdf.layout.renderer.AbstractRenderer.isStaticLayout()
com.itextpdf.io.codec.TIFFDirectory.readUnsignedShort(RandomAccessFileOrArray)
com.itextpdf.layout.element.Image.setAutoScale(boolean)
com.itextpdf.signatures.testutils.builder.TestCrlBuilder.addCrlEntry(X509Certificate,Date,int)
com.itextpdf.kernel.xmp.options.AliasOptions.isArrayAlternate()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff076Test.getFontName()
com.itextpdf.io.image.Jpeg2000ImageData.canImageBeInline()
com.itextpdf.io.font.FontProgramTest.boldTest()
com.itextpdf.kernel.events.EventDispatcher.writeObject(ObjectOutputStream)
com.itextpdf.kernel.pdf.PdfWriter.flushObject(PdfObject,boolean)
com.itextpdf.kernel.xmp.impl.XMPNormalizer.repairAltText(XMPNode)
com.itextpdf.kernel.pdf.canvas.parser.data.PathRenderInfo.getCtm()
com.itextpdf.layout.renderer.AbstractRenderer.drawBorder(DrawContext)
com.itextpdf.barcodes.qrcode.GF256Poly.isZero()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.fixupOutPolygon(OutRec)
com.itextpdf.layout.border.InsetBorder.setInnerHalfColor(PdfCanvas,Side)
com.itextpdf.io.font.FontProgramDescriptorFactory.fetchTTCDescriptor(String)
com.itextpdf.kernel.utils.CompareTool.accept(File)
com.itextpdf.io.font.otf.GsubLookupType5.readSubTableFormat2(int)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Edge.slopesEqual(Edge,Edge,boolean)
com.itextpdf.test.RunnerSearchConfig.addPackageToRunnerSearchPath(String)
com.itextpdf.io.font.FontProgramFactory.createFont(String,int,boolean)
com.itextpdf.kernel.pdf.PdfPages.addPage(int,PdfPage)
com.itextpdf.pdfa.checker.PdfAChecker.checkOutlines(PdfDictionary)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff025Test.isFontValid()
com.itextpdf.kernel.pdf.ByteBufferOutputStream.size()
com.itextpdf.io.font.woff2.w3c.format.HeaderNumTables001Test.isFontValid()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.addImage(PdfImageXObject,float,float,float,boolean)
com.itextpdf.layout.hyphenation.Hyphenator.registerAdditionalHyphenationFileDirectory(String)
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.getCurrentPoint()
com.itextpdf.kernel.xmp.impl.XMPSerializerRDF.serializeAsRDF()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.put(PdfName,PdfObject)
com.itextpdf.io.font.otf.GlyphLine.copy(int,int)
com.itextpdf.io.font.otf.Glyph.setUnicode(int)
com.itextpdf.kernel.xmp.impl.XMPMetaParser.parseInputSource(InputSource)
com.itextpdf.io.font.CFFFont.getCID(String)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.getLocalizedText(String,String,String,String)
com.itextpdf.io.codec.TiffWriter.getTag()
com.itextpdf.kernel.pdf.PdfXrefTable.freeReference(PdfIndirectReference)
com.itextpdf.kernel.pdf.PdfStampingTest.stampingAppend4()
com.itextpdf.kernel.pdf.action.PdfTargetDictionary.createChildTarget(String)
com.itextpdf.pdfa.checker.PdfA1Checker.checkRenderingIntent(PdfName)
com.itextpdf.kernel.xmp.impl.QName.getPrefix()
com.itextpdf.kernel.xmp.impl.XMPUtilsImpl.checkQuotes(String,char)
com.itextpdf.io.font.FontProgram.getGlyph(int)
com.itextpdf.io.image.ImageDataFactory.createJpeg2000(URL)
com.itextpdf.io.codec.brotli.dec.BrotliInputStream.read()
com.itextpdf.io.font.otf.GsubLookupType4.readSubTable(int)
com.itextpdf.forms.fields.PdfFormField.setValue(String,boolean)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Paths.addPolyNode(PolyNode,PolyNode,NodeType)
com.itextpdf.kernel.xmp.impl.XMPNode.sort()
com.itextpdf.pdfa.PdfAFlushingTest.beforeClass()
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.getBorderEffect()
com.itextpdf.layout.font.FontSet.addFont(FontProgram,String,String)
com.itextpdf.layout.RootElement.deleteOwnProperty(int)
com.itextpdf.io.font.woff2.Woff2Dec.tripletDecode(byte,int,int,int,int,Woff2Common,Point)
com.itextpdf.kernel.font.Type3Glyph.getLlx()
com.itextpdf.layout.margincollapse.MarginsCollapseInfo.setBufferSpaceOnTop(float)
com.itextpdf.kernel.font.PdfFont.appendGlyphs(String,int,int,List)
com.itextpdf.barcodes.qrcode.BitMatrix.toString()
com.itextpdf.io.font.otf.lookuptype5.SubTableLookup5Format1.getSetOfRulesForStartGlyph(int)
com.itextpdf.kernel.pdf.tagging.PdfStructTreeRoot.flush()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff002Test.getTestInfo()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.setFont(PdfFont)
com.itextpdf.io.font.otf.OpenTableLookup.previousGlyph(OpenTypeFontTableReader,int)
com.itextpdf.io.image.BmpImageHelper.readUnsignedInt(InputStream)
com.itextpdf.io.image.PngImageHelper.processPng(InputStream,PngParameters)
com.itextpdf.layout.LocationTextExtractionStrategyTest.createPdfWithNegativeCharSpacing(String,float,String)
com.itextpdf.io.codec.brotli.dec.Decode.copyUncompressedData(State)
com.itextpdf.barcodes.qrcode.MatrixUtil.embedTypeInfo(ErrorCorrectionLevel,int,ByteMatrix)
com.itextpdf.barcodes.BarcodeEAN.calculateEANParity(String)
com.itextpdf.kernel.pdf.layer.PdfLayer.setZoom(float,float)
com.itextpdf.forms.xfa.Xml2Som.setInverseSearch(Map)
com.itextpdf.io.font.cmap.AbstractCMap.setName(String)
com.itextpdf.io.image.JpegImageHelper.getShort(InputStream)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff001Test.getFontName()
com.itextpdf.layout.renderer.IRenderer.move(float,float)
com.itextpdf.layout.renderer.MinWidthTest.divWithPercentImage()
com.itextpdf.layout.element.Div.getRole()
com.itextpdf.layout.renderer.AbstractRenderer.shrinkOccupiedAreaForAbsolutePosition()
com.itextpdf.io.font.FontProgramDescriptorFactory.fetchType1FontDescriptor(String,byte)
com.itextpdf.kernel.pdf.PdfObjectTest.pdfIndirectReferenceFlags()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff053Test.getTestInfo()
com.itextpdf.io.font.CFFFontSubset.BuildGSubrsUsed(int)
com.itextpdf.pdfa.checker.PdfA2Checker.checkImage(PdfStream,PdfDictionary)
com.itextpdf.signatures.verify.LtvVerifierTest.before()
com.itextpdf.kernel.pdf.layer.PdfLayer.createTitle(String,PdfDocument)
com.itextpdf.kernel.utils.CompareTool.getCmpReaderProperties()
com.itextpdf.barcodes.qrcode.ByteMatrix.get(int,int)
com.itextpdf.kernel.pdf.colorspace.PdfPattern.setShading(PdfDictionary)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.newlineShowText(float,float,String)
com.itextpdf.io.font.Pfm2afm.readString(int)
com.itextpdf.test.LogListenerHelper.failWrongTotalCount(int,int,Description)
com.itextpdf.layout.property.UnitValue.createPointArray(float)
com.itextpdf.kernel.xmp.options.IteratorOptions.setJustLeafnodes(boolean)
com.itextpdf.barcodes.qrcode.BitArray.set(int)
com.itextpdf.barcodes.qrcode.BitMatrix.set(int,int)
com.itextpdf.layout.PdfTextExtractorEncodingsTest.checkPdf(byte)
com.itextpdf.io.codec.CCITTG4Encoder.fax4Encode(byte,int,int)
com.itextpdf.kernel.pdf.PdfLiteral.setPosition(long)
com.itextpdf.kernel.pdf.PdfCanvasTest.colorTest08()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.updateFromExtGState(PdfExtGState,PdfDocument)
com.itextpdf.layout.renderer.ListItemRenderer.addSymbolRenderer(IRenderer,float)
com.itextpdf.kernel.xmp.impl.XMPNode.setHasAliases(boolean)
com.itextpdf.layout.AutoTaggingTest.linkInsideTable()
com.itextpdf.kernel.pdf.PdfNumber.longValue()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setContents(String)
com.itextpdf.forms.xfa.Xml2Som.inverseSearchAdd(String)
com.itextpdf.kernel.pdf.PdfAnnotationTest.soundTestWav()
com.itextpdf.kernel.pdf.PdfPagesTree.findPageParent(int)
com.itextpdf.forms.PdfSigFieldLockDictionary.getLockPermission(LockPermissions)
com.itextpdf.signatures.CertificateVerification.verifyCertificate(X509Certificate,Collection,Calendar)
com.itextpdf.signatures.TSAClientBouncyCastle.getTSAResponse(byte)
com.itextpdf.kernel.pdf.PdfDictionaryTest.testEntrySetRemoveAll()
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.reset()
com.itextpdf.io.font.FontMetrics.setSuperscriptSize(int)
com.itextpdf.kernel.xmp.impl.XMPUtilsImpl.separateFindCreateArray(String,String,PropertyOptions,XMPMetaImpl)
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6Format2.isGlyphMatchesInput(int,int)
com.itextpdf.kernel.xmp.XMPMeta.setPropertyInteger(String,String,int)
com.itextpdf.kernel.pdf.PdfDestinationTest.destCopyingTest03()
com.itextpdf.kernel.pdf.PdfPage.isIgnorePageRotationForContent()
com.itextpdf.barcodes.BarcodePostnetTest.barcode01Test()
com.itextpdf.io.image.PngImageHelper.processImage(ImageData)
com.itextpdf.kernel.pdf.PdfReaderTest.fixPdfTest17()
com.itextpdf.layout.FloatTest.clearanceApplyingPageSplit()
com.itextpdf.io.image.ImageDataFactory.create(byte)
com.itextpdf.layout.font.FontProvider.getStrategy(String,List)
com.itextpdf.layout.renderer.LineRenderer.applyOtf()
com.itextpdf.layout.element.Text.getRole()
com.itextpdf.kernel.pdf.PdfCanvasTest.create10PagesDocument()
com.itextpdf.kernel.pdf.PdfString.setDecryption(int,int,PdfEncryption)
com.itextpdf.barcodes.qrcode.QRCode.getMatrixWidth()
com.itextpdf.barcodes.BarcodePDF417.paintCode()
com.itextpdf.io.font.AdobeGlyphList.getUnicodeToNameLength()
com.itextpdf.barcodes.qrcode.QRCode.setMaskPattern(int)
com.itextpdf.layout.renderer.CellRenderer.applyBorderBox(Rectangle,Border,boolean)
com.itextpdf.io.font.FontMetrics.getUnitsPerEm()
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.applyClearance(float)
com.itextpdf.forms.fields.PdfFormField.obfuscatePassword(String)
com.itextpdf.layout.renderer.DrawContext.getDocument()
com.itextpdf.io.font.Type1Font.getCharacterSet()
com.itextpdf.kernel.pdf.PdfPage.getPageSizeWithRotation()
com.itextpdf.layout.renderer.AbstractRenderer.addChild(IRenderer)
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.addTag(int,PdfName)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff030Test.isFontValid()
com.itextpdf.kernel.xmp.impl.XMPNodeUtils.findNode(XMPNode,XMPPath,boolean,PropertyOptions)
com.itextpdf.kernel.xmp.impl.XMPNode.setHasValueChild(boolean)
com.itextpdf.io.font.woff2.w3c.format.BlocksMetadataAbsent002Test.getFontName()
com.itextpdf.kernel.xmp.impl.ByteBuffer.byteAt(int)
com.itextpdf.signatures.SignUtils.checkIfIssuersMatch(CertificateID,X509Certificate)
com.itextpdf.kernel.pdf.xobject.PdfFormXObject.getHeight()
com.itextpdf.kernel.xmp.impl.ISO8601Converter.parse(String)
com.itextpdf.forms.fields.PdfFormField.setFontSize(float)
com.itextpdf.layout.ElementPropertyContainer.setFontColor(Color)
com.itextpdf.io.font.cmap.CMapToUnicode.createReverseMapping()
com.itextpdf.kernel.pdf.PdfNull.getType()
com.itextpdf.kernel.pdf.annot.PdfPopupAnnotation.getSubtype()
com.itextpdf.kernel.pdf.TagTreePointerTest.tagStructureRemovingTest03()
com.itextpdf.kernel.font.PdfFont.isEmbedded()
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6Format1.isGlyphMatchesLookahead(int,int)
com.itextpdf.io.font.FontCacheKey.create(String)
com.itextpdf.kernel.font.Type3FontProgram.getType3Glyph(int)
com.itextpdf.io.image.RawImageHelper.updateCcittImageParameters(RawImageData,int,int,boolean,int,int,byte)
com.itextpdf.layout.TableBorderTest.tableWithHeaderFooterTest06A()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff071Test.getTestInfo()
com.itextpdf.io.font.FontProgramDescriptor.getFontWeight()
com.itextpdf.pdfa.checker.PdfA1Checker.checkPageSize(PdfDictionary)
com.itextpdf.io.color.IccProfile.getIccDeviceClass(byte)
com.itextpdf.kernel.xmp.options.PropertyOptions.setSchemaNode(boolean)
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6Format3.isGlyphMatchesInput(int,int)
com.itextpdf.io.image.Jbig2ImageData.getPage()
com.itextpdf.io.font.FontRegisterProvider.isRegisteredFont(String)
com.itextpdf.layout.ElementPropertyContainer.setFontSize(float)
com.itextpdf.layout.AlignmentTest.justifyAlignmentForcedNewlinesTest01()
com.itextpdf.kernel.pdf.annot.PdfFixedPrint.getMatrix()
com.itextpdf.layout.renderer.TextRenderer.resolveFonts(List)
com.itextpdf.kernel.crypto.securityhandler.StandardSecurityHandler.equalsArray(byte,byte,int)
com.itextpdf.kernel.xmp.impl.XMPNode.getOptions()
com.itextpdf.barcodes.qrcode.CharacterSetECI.addCharacterSet(int,String,Map)
com.itextpdf.layout.renderer.TextRenderer.applyOtf()
com.itextpdf.layout.renderer.LineRenderer.getNumberOfSpaces()
com.itextpdf.kernel.pdf.PdfOutputIntent.setInfo(String)
com.itextpdf.signatures.PdfSignatureAppearance.setImageScale(float)
com.itextpdf.layout.OpacityTest.listItemElementOpacity01()
com.itextpdf.io.util.NumberUtil.asFloat(Object)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.processIntersections(long)
com.itextpdf.kernel.pdf.PdfFontTest.testNewTrueTypeFont1BasedExistingFont()
com.itextpdf.pdfa.checker.PdfA1Checker.checkPdfString(PdfString)
com.itextpdf.io.font.FontProgram.setFontFamily(String)
com.itextpdf.io.font.FontMetrics.setUnderlineThickness(int)
com.itextpdf.io.util.UrlUtil.getFinalURL(URL)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff052Test.getFontName()
com.itextpdf.io.source.PagedChannelRandomAccessSource.enqueue(E)
com.itextpdf.forms.PdfFormCopyTest.copyFieldsTest05()
com.itextpdf.kernel.pdf.ByteBufferOutputStream.appendHex(byte)
com.itextpdf.kernel.xmp.XMPMeta.getPacketHeader()
com.itextpdf.io.image.BmpImageHelper.readLong(InputStream)
com.itextpdf.layout.KeepWithNextTest.beforeClass()
com.itextpdf.io.source.ByteBuffer.isEmpty()
com.itextpdf.kernel.pdf.xobject.PdfImageXObject.copyTo(PdfDocument)
com.itextpdf.kernel.utils.CompareTool.compareDocumentInfo(String,String,byte,byte)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff130Test.getFontName()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.updateWindingCount(Edge)
com.itextpdf.signatures.CertificateInfo.getFieldArray(String)
com.itextpdf.io.font.cmap.CMapCidByte.getReversMap()
com.itextpdf.forms.fields.PdfFormField.processOptions(String)
com.itextpdf.kernel.pdf.xobject.PdfImageXObject.createDictionaryFromMap(PdfStream,Map)
com.itextpdf.io.font.woff2.w3c.format.HeaderSignature001Test.isFontValid()
com.itextpdf.layout.hyphenation.HyphenationTree.splitOnNonCharacters(char)
com.itextpdf.kernel.pdf.PdfFontTest.SourceHanSansHWTest()
com.itextpdf.kernel.events.IEventDispatcher.removeAllHandlers()
com.itextpdf.pdfa.PdfA2GraphicsCheckTest.compareResult(String,String)
com.itextpdf.io.codec.brotli.dec.SynthTest.testCompressedUncompressedShortCompressedSmallWindow()
com.itextpdf.forms.fields.PdfFormField.createPushButton(PdfDocument,Rectangle,String,String)
com.itextpdf.layout.hyphenation.HyphenationTree.addPattern(String,String)
com.itextpdf.pdfa.PdfA2GraphicsCheckTest.colorCheckTest1()
com.itextpdf.kernel.utils.PdfSplitter.documentReady(PdfDocument,PageRange)
com.itextpdf.kernel.pdf.PdfReader.writeObject(java,io,ObjectOutputStream)
com.itextpdf.kernel.pdf.annot.PdfRedactAnnotation.getSubtype()
com.itextpdf.forms.PdfFormCopyTest.copyFieldsTest11()
com.itextpdf.kernel.pdf.ParentTreeTest.test02()
com.itextpdf.layout.renderer.RotationUtils.restoreProperty(int)
com.itextpdf.kernel.xmp.impl.XMPNode.isAlias()
com.itextpdf.layout.minmaxwidth.MinMaxWidth.getMaxWidth()
com.itextpdf.kernel.pdf.layer.PdfLayer.fetchOCProperties()
com.itextpdf.layout.BlockTest.beforeClass()
com.itextpdf.kernel.pdf.PdfReaderTest.primitivesRead()
com.itextpdf.barcodes.BarcodePDF417.getOutBits()
com.itextpdf.io.font.TrueTypeCollection.initFontSize()
com.itextpdf.layout.renderer.BlockRenderer.draw(DrawContext)
com.itextpdf.io.font.CFFFont.getEntireIndexRange(int)
com.itextpdf.kernel.xmp.options.SerializeOptions.setOmitXmpMetaElement(boolean)
com.itextpdf.kernel.pdf.PdfReaderTest.pagesTest08()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.simplifyPolygon(Path,PolyFillType)
com.itextpdf.io.codec.CCITTG4Encoder.finddiff(byte,int,int,int,int)
com.itextpdf.kernel.crypto.IDecryptor.update(byte,int,int)
com.itextpdf.io.image.BmpTest.openBmp2()
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setBlackGenerationFunction2(PdfObject)
com.itextpdf.io.util.UrlUtil.toNormalizedURI(String)
com.itextpdf.barcodes.BarcodeEANTest.barcode03Test()
com.itextpdf.io.source.RandomAccessFileOrArray.readBoolean()
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.ignoreModelTopMargin(IRenderer)
com.itextpdf.kernel.pdf.canvas.parser.FilteredEventListenerTest.multipleFiltersForOneRegionTest()
com.itextpdf.layout.ListTest.listNumberingTest01()
com.itextpdf.barcodes.qrcode.ErrorCorrectionLevel.ordinal()
com.itextpdf.io.codec.Base64.encodeObject(java,io,Serializable,int)
com.itextpdf.layout.ElementPropertyContainer.setCharacterSpacing(float)
com.itextpdf.pdfa.PdfA2GraphicsCheckTest.transparencyCheckTest3()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.flush()
com.itextpdf.barcodes.qrcode.QRCode.setVersion(int)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.getFillOverprintFlag()
com.itextpdf.forms.PdfAcroForm.isGenerateAppearance()
com.itextpdf.io.codec.CCITTG4Encoder.compress(byte,int,int)
com.itextpdf.layout.margincollapse.MarginsCollapseInfo.isIgnoreOwnMarginBottom()
com.itextpdf.io.image.PngImageHelper.processPixels(byte,int,int,int,int,PngParameters)
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperOffset.addPath(Path,JoinType,EndType)
com.itextpdf.layout.minmaxwidth.RotationMinMaxWidth.getRotatedWidth(double)
com.itextpdf.kernel.pdf.SmartModePdfObjectsSerializer.serDic(PdfDictionary,ByteBufferOutputStream,int,Map)
com.itextpdf.io.font.TrueTypeFontSubset.writeFontShort(int)
com.itextpdf.barcodes.qrcode.QRCode.toString()
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperBase.addPath(Path,PolyType,boolean)
com.itextpdf.barcodes.BarcodeDataMatrix.getEncodation(byte,int,int,byte,int,int,int,boolean)
com.itextpdf.barcodes.BarcodePDF417.getAspectRatio()
com.itextpdf.kernel.pdf.PdfAnnotationTest.waterMarkTest()
com.itextpdf.barcodes.Barcode39.getBarcodeSize()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Path.setPoints(Path,OutPt)
com.itextpdf.kernel.xmp.impl.XMPSchemaRegistryImpl.getNamespace()
com.itextpdf.layout.Canvas.flush()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Path.area()
com.itextpdf.kernel.pdf.PdfImageXObjectTest.testFlateDecodeFilters()
com.itextpdf.kernel.pdf.PdfXrefTable.shortToBytes(int)
com.itextpdf.kernel.xmp.impl.XMPNode.findQualifierByName(String)
com.itextpdf.layout.LineSeparatorTest.rotatedLineSeparatorTest01()
com.itextpdf.layout.font.FontProvider.addFont(String,String)
com.itextpdf.layout.border.DoubleBorder.draw(PdfCanvas,float,float,float,float,float,float)
com.itextpdf.kernel.xmp.impl.XMPMetaParser.parse(Object,ParseOptions)
com.itextpdf.barcodes.BarcodeDataMatrixTest.barcode05Test()
com.itextpdf.kernel.xmp.XMPMeta.setQualifier(String,String,String,String,String,PropertyOptions)
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.startMarginsCollapse(Rectangle)
com.itextpdf.forms.fields.PdfTextFormField.setSpellCheck(boolean)
com.itextpdf.io.codec.TiffWriter.addField(FieldBase)
com.itextpdf.kernel.pdf.PdfEncryption.isWrappedObjectMustBeIndirect()
com.itextpdf.kernel.pdf.canvas.draw.SolidLine.draw(PdfCanvas,Rectangle)
com.itextpdf.kernel.pdf.PdfAnnotationTest.soundTestWav01()
com.itextpdf.kernel.pdf.PdfStampingTest.stampingAppend1()
com.itextpdf.kernel.pdf.PdfStampingTest.stampingStreamsCompression02()
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.normalizeDocumentRootTag()
com.itextpdf.io.font.woff2.TableTags.tag(char,char,char,char)
com.itextpdf.kernel.pdf.PdfIndirectReference.getDocument()
com.itextpdf.kernel.font.PdfFontFactory.createFont(String,String,boolean)
com.itextpdf.kernel.utils.CompareTool.compareBooleans(PdfBoolean,PdfBoolean)
com.itextpdf.io.codec.TIFFDirectory.isValidEndianTag(int)
com.itextpdf.kernel.pdf.PdfReader.hasHybridXref()
com.itextpdf.layout.AreaBreakTest.pageBreakTest1()
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getBaseline()
com.itextpdf.kernel.pdf.PdfReaderTest.indirectsChain2()
com.itextpdf.kernel.color.DeviceGray.makeLighter(DeviceGray)
com.itextpdf.layout.TableTest.simpleTableTest20()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff104Test.getTestInfo()
com.itextpdf.test.WrappedSamplesRunner.addError(String)
com.itextpdf.kernel.geom.AffineTransform.getMatrix(double)
com.itextpdf.kernel.font.PdfSimpleFont.convertToBytes(GlyphLine)
com.itextpdf.io.image.ImageData.setUrl(URL)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.insertArrayItem(String,String,int,String)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.fixupOutPolyline(OutRec)
com.itextpdf.kernel.pdf.xobject.PdfFormXObject.getWidth()
com.itextpdf.io.codec.Base64.write(byte,int,int)
com.itextpdf.layout.hyphenation.CharVector.alloc(int)
com.itextpdf.kernel.pdf.canvas.parser.util.PdfCanvasParser.getTokeniser()
com.itextpdf.barcodes.qrcode.Version.getNumBlocks()
com.itextpdf.kernel.pdf.collection.PdfCollection.getView()
com.itextpdf.barcodes.BarcodePDF417.textCompaction(int,int)
com.itextpdf.kernel.pdf.PdfOutlineTest.setupRemovePageWithOutlinesTest()
com.itextpdf.io.codec.Base64.encodeFromFile(String)
com.itextpdf.layout.renderer.FloatingHelper.adjustResultOccupiedAreaForFloatAndClear(IRenderer,List,Rectangle,float,boolean)
com.itextpdf.io.font.otf.lookuptype5.SubTableLookup5Format2.getContextLength()
com.itextpdf.layout.minmaxwidth.MinMaxWidth.getChildrenMaxWidth()
com.itextpdf.io.util.ResourceUtil.getResourceStream(String)
com.itextpdf.kernel.pdf.canvas.draw.DottedLine.getLineWidth()
com.itextpdf.layout.renderer.TextRenderer.getFirstYLineRecursively()
com.itextpdf.io.font.CidFontProperties.isCidFont(String,String)
com.itextpdf.layout.TabsTest.addTabbedTextToParagraph(Paragraph,String,float,TabAlignment,ILineDrawer,Character)
com.itextpdf.io.codec.brotli.dec.IntReader.convert(IntReader,int)
com.itextpdf.io.codec.PngWriter.make_crc_table()
com.itextpdf.kernel.pdf.canvas.parser.clipper.PolyTree.Clear()
com.itextpdf.io.codec.TIFFField.getAsDouble(int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff077Test.getTestInfo()
com.itextpdf.layout.renderer.ImageRenderer.getDescent()
com.itextpdf.signatures.PdfSignatureAppearance.getLayer0()
com.itextpdf.forms.xfa.XfaForm.getXfaObject(PdfAcroForm)
com.itextpdf.test.LogListener.contains(String)
com.itextpdf.layout.ListTest.beforeClass()
com.itextpdf.layout.hyphenation.HyphenationTree.readObject(ObjectInputStream)
com.itextpdf.pdfa.PdfA1AcroFormCheckTest.acroFormCheck01()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setStrokeColorRgb(float,float,float)
com.itextpdf.io.source.OutputStream.close()
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6Format3.getBacktrackContextLength()
com.itextpdf.kernel.pdf.PdfDictionary.values()
com.itextpdf.layout.Document.getRightMargin()
com.itextpdf.kernel.utils.PdfSplitter.extractPageRanges(List)
com.itextpdf.layout.renderer.AbstractRenderer.updateHeight(Float)
com.itextpdf.io.font.otf.GsubLookupType5.readSubTable(int)
com.itextpdf.kernel.pdf.PdfDocument.getAllOutlinesToCopy(PdfOutline,Set)
com.itextpdf.kernel.pdf.PdfDictionary.copyContent(PdfObject,PdfDocument)
com.itextpdf.io.font.FontNames.getFamilyName()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.getColorObject()
com.itextpdf.kernel.utils.TaggedPdfReaderTool.inspectKid(IPdfStructElem)
com.itextpdf.io.codec.brotli.dec.SynthTest.testInvalidTooFarDist()
com.itextpdf.kernel.geom.Rectangle.moveDown(float)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setRolloverAppearance(PdfAnnotationAppearance)
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessorTest.getSupportedEvents()
com.itextpdf.signatures.SignatureUtil.updateByteRange(PdfPKCS7,PdfSignature)
com.itextpdf.io.font.woff2.w3c.format.BlocksExtraneousData002Test.getFontName()
com.itextpdf.layout.ElementPropertyContainer.setLineThrough()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff051Test.getFontName()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff105Test.isFontValid()
com.itextpdf.kernel.pdf.PdfArray.getAsString(int)
com.itextpdf.kernel.pdf.annot.PdfPolyGeomAnnotation.createPolyLine(Rectangle,float)
com.itextpdf.kernel.pdf.PdfPage.getLastContentStream()
com.itextpdf.kernel.pdf.tagging.PdfStructElem.addKid(int,PdfStructElem)
com.itextpdf.kernel.color.DeviceCmyk.makeDarker(DeviceCmyk)
com.itextpdf.kernel.geom.Point.setLocation(Point)
com.itextpdf.kernel.pdf.PdfPrimitivesTest.makeIndirectDirectOnlyPdfBoolean()
com.itextpdf.layout.element.Cell.add(String)
com.itextpdf.io.util.StreamUtil.readFully(InputStream,byte,int,int)
com.itextpdf.layout.element.Table.getCell(int,int)
com.itextpdf.layout.TableBorderTest.bordersWithSpansTest02()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Point.getDeltaX(LongPoint,LongPoint)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff102Test.getFontName()
com.itextpdf.io.util.HashCode.combine(int,double)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff147Test.isFontValid()
com.itextpdf.io.image.PngImageHelper.getColorspace(PngParameters)
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.moveToParent()
com.itextpdf.kernel.xmp.impl.XMPNodeUtils.findIndexedItem(XMPNode,String,boolean)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.addForm(PdfFormXObject,float,float)
com.itextpdf.kernel.pdf.PdfDocumentTest.addUnusedStreamObjectsTest()
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.addTag(PdfName)
com.itextpdf.kernel.pdf.PdfName.compareTo(PdfName)
com.itextpdf.kernel.pdf.xobject.PdfFormXObject.getTrapRegions()
com.itextpdf.kernel.pdf.ByteBufferOutputStream.write(byte,int,int)
com.itextpdf.forms.PdfAcroForm.getSignatureFlags()
com.itextpdf.layout.renderer.AbstractRenderer.applyPaddings(Rectangle,boolean)
com.itextpdf.io.font.otf.OpenTypeFontTableReader.getLookups(FeatureRecord)
com.itextpdf.layout.renderer.RootRenderer.addAllWaitingNextPageRenderers()
com.itextpdf.layout.element.Cell.clone(boolean)
com.itextpdf.layout.element.Table.getAccessibilityProperties()
com.itextpdf.io.codec.brotli.dec.SynthTest.testSimplePrefix()
com.itextpdf.signatures.PdfSigner.getCertificationLevel()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff130Test.isFontValid()
com.itextpdf.kernel.xmp.XMPMetaFactory.getMessage()
com.itextpdf.kernel.pdf.PdfOutputStream.write(PdfIndirectReference)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Path.fixHoleLinkage()
com.itextpdf.io.source.ByteBuffer.startsWith(byte)
com.itextpdf.layout.renderer.ListRenderer.getMinMaxWidth(float)
com.itextpdf.layout.renderer.AbstractRenderer.drawPositionedChildren(DrawContext)
com.itextpdf.kernel.font.PdfFontFactory.createFont(byte,String,boolean)
com.itextpdf.kernel.pdf.ByteBufferOutputStream.append(float)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.intersectPoint(Edge,Edge,LongPoint)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.appendArrayItem(String,String,PropertyOptions,String,PropertyOptions)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.put(PdfName,PdfObject)
com.itextpdf.barcodes.Barcode1D.getN()
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.saveConnectionBetweenStructAndModel(IAccessibleElement,PdfStructElem)
com.itextpdf.kernel.xmp.impl.XMPNode.assertChildNotExisting(String)
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.getProperties()
com.itextpdf.kernel.pdf.annot.PdfWidgetAnnotation.setHighlightMode(PdfName)
com.itextpdf.io.codec.TIFFDirectory.readLong(RandomAccessFileOrArray)
com.itextpdf.layout.FontSelectorTest.cyrillicAndLatinGroup()
com.itextpdf.kernel.pdf.PdfPagesTest.verifyIntegrity(PdfPagesTree)
com.itextpdf.kernel.xmp.XMPDateTime.hasDate()
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.moveToKid(int,PdfName)
com.itextpdf.kernel.xmp.XMPUtils.convertToDate(String)
com.itextpdf.kernel.pdf.PdfDocument.copyPagesTo(int,int,PdfDocument,IPdfPageExtraCopier)
com.itextpdf.kernel.pdf.PdfDocument.getWriter()
com.itextpdf.layout.RotationTest.staticTextRotationTest03()
com.itextpdf.kernel.pdf.PdfWriterTest.directInIndirectChain()
com.itextpdf.kernel.xmp.impl.XMPNormalizer.normalizeDCArrays(XMPNode)
com.itextpdf.layout.renderer.AbstractRenderer.retrieveHeight()
com.itextpdf.layout.renderer.TableRenderer.applyBorderBox(Rectangle,Border,boolean)
com.itextpdf.layout.XMPWriterTest.createPdfTest()
com.itextpdf.signatures.SignatureUtil.extractRevision(String)
com.itextpdf.layout.font.FontSet.addFont(FontProgram,String)
com.itextpdf.layout.font.FontSetCollection.hasNext()
com.itextpdf.io.codec.brotli.dec.Decode.decodeMetaBlockLength(BitReader,State)
com.itextpdf.io.font.cmap.CMapObject.isToken()
com.itextpdf.kernel.utils.CompareTool.getOffset()
com.itextpdf.kernel.events.IEventDispatcher.dispatchEvent(Event)
com.itextpdf.kernel.utils.PdfSplitter.xrefLength(int)
com.itextpdf.layout.renderer.AbstractRenderer.setParent(IRenderer)
com.itextpdf.kernel.pdf.PdfArray.addAll(Collection)
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.getColorants(List)
com.itextpdf.kernel.pdf.canvas.parser.data.ImageRenderInfo.getImage()
com.itextpdf.signatures.SignUtils.getFirstElement(Iterable)
com.itextpdf.io.font.FontRegisterProvider.clearRegisteredFontFamilies()
com.itextpdf.kernel.pdf.layer.PdfLayer.setLocked(boolean)
com.itextpdf.forms.fields.PdfFormField.setFontAndSize(PdfFont,int)
com.itextpdf.io.font.PdfEncodings.addExtraEncoding(String,IExtraEncoding)
com.itextpdf.kernel.pdf.PdfIndirectReference.getReader()
com.itextpdf.kernel.crypto.securityhandler.EncryptionUtils.calculateDERForRecipientParams(byte)
com.itextpdf.kernel.geom.AffineTransform.inverseTransform(double,int,double,int,int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff123Test.isFontValid()
com.itextpdf.io.font.otf.OpenTypeGdefTableReader.isSkip(int,int)
com.itextpdf.kernel.pdf.PdfLiteral.generateContent()
com.itextpdf.kernel.pdf.canvas.parser.data.PathRenderInfo.getRule()
com.itextpdf.kernel.pdf.tagging.StructureTreeCopier.copyObjectKid(PdfObject,PdfDictionary,Set,PdfDocument,Map,boolean)
com.itextpdf.io.font.otf.OtfReadCommon.readMarkArray(OpenTypeFontTableReader,int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff065Test.getTestInfo()
com.itextpdf.barcodes.qrcode.Encoder.getAlphanumericCode(int)
com.itextpdf.io.font.FontProgramDescriptorFactory.fetchTrueTypeFontDescriptor(byte)
com.itextpdf.layout.hyphenation.Hyphenator.getHyphenationTree2(String,String,Map)
com.itextpdf.kernel.pdf.canvas.CanvasTag.hasMcid()
com.itextpdf.kernel.xmp.options.SerializeOptions.setIndent(String)
com.itextpdf.kernel.crypto.securityhandler.PubKeySecurityHandler.initKeyAndReadDictionary(PdfDictionary,Key,Certificate,String,IExternalDecryptionProcess,boolean)
com.itextpdf.pdfa.checker.PdfA1Checker.checkColorSpace(PdfColorSpace,PdfDictionary,boolean,Boolean)
com.itextpdf.test.LogListener.printStackTraceIfAny(ILoggingEvent)
com.itextpdf.io.source.GroupedRandomAccessSource.get(long,byte,int,int)
com.itextpdf.kernel.pdf.PdfPagesTest.reversePagesTest()
com.itextpdf.kernel.xmp.impl.Base64.decode(String)
com.itextpdf.pdfa.PdfA2CatalogCheckTest.catalogCheck08()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getBlendMode()
com.itextpdf.kernel.xmp.XMPMeta.doesQualifierExist(String,String,String,String)
com.itextpdf.kernel.pdf.PdfEncryptionTest.checkEncryptedWithCertificateDocumentAppending(String,Certificate)
com.itextpdf.kernel.pdf.PdfEncryptionTest.getPublicCertificate(String)
com.itextpdf.barcodes.BarcodeInter25.createAwtImage(java,awt,Color,java,awt,Color)
com.itextpdf.kernel.font.PdfSimpleFont.appendGlyphs(String,int,int,List)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff064Test.getFontName()
com.itextpdf.io.font.CidFont.initializeCidFontNameAndStyle(String)
com.itextpdf.kernel.pdf.PdfArray.getAsArray(int)
com.itextpdf.signatures.PdfPKCS7.update(byte,int,int)
com.itextpdf.barcodes.BarcodeQRCode.setCode(String)
com.itextpdf.layout.TextWritingTest.leadingTest01()
com.itextpdf.signatures.PdfSignature.setSignatureCreator(String)
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.getCreationDate()
com.itextpdf.pdfa.PdfA1EmbeddedFilesCheckTest.fileSpecCheckTest01()
com.itextpdf.kernel.pdf.PdfDashPattern.getDash()
com.itextpdf.kernel.pdf.PdfCatalog.flush()
com.itextpdf.kernel.pdf.PdfPagesTest.simplePagesTest()
com.itextpdf.layout.TableBorderTest.tableWithHeaderFooterTest02()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.setFontSize(float)
com.itextpdf.kernel.pdf.PdfCatalog.setPageMode(PdfName)
com.itextpdf.layout.hyphenation.PatternParser.warning(SAXParseException)
com.itextpdf.kernel.pdf.action.PdfAction.createHide(PdfAnnotation,boolean)
com.itextpdf.io.util.StreamUtil.copyBytes(IRandomAccessSource,long,long,java,io,OutputStream)
com.itextpdf.kernel.pdf.canvas.parser.BidiTextExtractionTest.test01()
com.itextpdf.kernel.xmp.impl.XMPNormalizer.initDCArrays()
com.itextpdf.kernel.pdf.PdfDictionaryEntrySet.equals(Object)
com.itextpdf.io.font.PdfEncodings.charToByte(String,String)
com.itextpdf.signatures.PdfSignature.setContact(String)
com.itextpdf.pdfa.PdfA2ActionCheckTest.actionCheck01()
com.itextpdf.kernel.pdf.PdfPage.getParentValue(PdfPages,PdfName)
com.itextpdf.kernel.xmp.XMPPathFactory.composeArrayItemPath(String,int)
com.itextpdf.layout.TableBorderTest.incompleteTableTest04()
com.itextpdf.kernel.font.PdfType1Font.flush()
com.itextpdf.kernel.pdf.layer.PdfLayer.setExport(boolean)
com.itextpdf.kernel.xmp.impl.XMPUtilsImpl.appendProperties(XMPMeta,XMPMeta,boolean,boolean,boolean)
com.itextpdf.kernel.font.Type3FontProgram.getPdfFontFlags()
com.itextpdf.barcodes.qrcode.BitArray.setBulk(int,int)
com.itextpdf.kernel.xmp.impl.ParseRDF.rdf_NodeElementList(XMPMetaImpl,XMPNode,Node)
com.itextpdf.kernel.pdf.PdfObject.isIndirect()
com.itextpdf.layout.LineSeparatorTest.rotatedLineSeparatorTest02()
com.itextpdf.io.font.woff2.w3c.format.TabledataDecompressedLength003Test.getTestInfo()
com.itextpdf.layout.DefaultLayoutTest.addParagraphOnShortPage2()
com.itextpdf.kernel.xmp.impl.ParameterAsserts.assertImplementation(XMPMeta)
com.itextpdf.layout.renderer.AbstractRenderer.retrieveMinHeight()
com.itextpdf.barcodes.Barcode1D.setCode(String)
com.itextpdf.layout.TableTest.addNewPage(PageSize)
com.itextpdf.kernel.pdf.annot.PdfTextMarkupAnnotation.createSquiggly(Rectangle,float)
com.itextpdf.forms.fields.PdfFormField.drawRadioAppearance(float,float,String)
com.itextpdf.layout.element.Image.setAutoScaleWidth(boolean)
com.itextpdf.pdfa.checker.PdfAChecker.isAlreadyChecked(PdfDictionary)
com.itextpdf.kernel.pdf.PdfDocument.flushCopiedObjects(PdfDocument)
com.itextpdf.kernel.xmp.impl.XMPNode.removeChild(int)
com.itextpdf.kernel.pdf.tagging.PdfStructTreeRoot.addKidObject(int,PdfDictionary)
com.itextpdf.pdfa.PdfADocument.initTagStructureContext()
com.itextpdf.pdfa.PdfAFontTest.fontCheckPdfA1_04()
com.itextpdf.signatures.SignUtils.getExtensionValueByOid(X509Certificate,String)
com.itextpdf.test.LogListener.after()
com.itextpdf.pdfa.PdfA2ActionCheckTest.actionCheck15()
com.itextpdf.io.image.GifImageData.getFrames()
com.itextpdf.io.codec.Base64.resumeEncoding()
com.itextpdf.kernel.pdf.annot.PdfWidgetAnnotation.setParent(PdfObject)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff058Test.getTestInfo()
com.itextpdf.io.font.otf.OtfReadCommon.readRangeRecord(RandomAccessFileOrArray,List)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.processEdgesAtTopOfScanbeam(long)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.getPropertyInteger(String,String)
com.itextpdf.kernel.pdf.PdfOutline.getTitle()
com.itextpdf.layout.margincollapse.MarginsCollapseInfo.getCollapseBefore()
com.itextpdf.io.codec.brotli.dec.TransformTest.testAllTransforms()
com.itextpdf.io.font.otf.GsubLookupType2.readSubTable(int)
com.itextpdf.layout.renderer.TableBorders.getWidestHorizontalBorder(int)
com.itextpdf.io.codec.brotli.dec.BitReader.fillBitWindow(BitReader)
com.itextpdf.forms.fields.PdfFormField.setBorderColor(Color)
com.itextpdf.pdfa.PdfA1GraphicsTest.egsCheckTest3()
com.itextpdf.kernel.pdf.StampingProperties.useAppendMode()
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.getReplyType()
com.itextpdf.kernel.pdf.PdfCanvasTest.copyPagesTest1()
com.itextpdf.layout.margincollapse.MarginsCollapse.joinMargin(float)
com.itextpdf.kernel.pdf.PdfWriter.readObject(java,io,ObjectInputStream)
com.itextpdf.kernel.pdf.PdfPage.getPageSize()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff070Test.getTestInfo()
com.itextpdf.layout.renderer.CollapsedTableBorders.getCollapsedList(List,List)
com.itextpdf.layout.SimpleTextExtractionStrategyTest.testRotatedText()
com.itextpdf.layout.font.FontInfo.create(FontInfo,String)
com.itextpdf.kernel.utils.CompareTool.compareStreams(PdfStream,PdfStream)
com.itextpdf.kernel.pdf.PdfResources.addImage(PdfImageXObject)
com.itextpdf.layout.renderer.CellRenderer.drawBorder(DrawContext)
com.itextpdf.io.codec.Jbig2SegmentReader.addSegment(Jbig2Segment)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationChecksum001Test.getTestInfo()
com.itextpdf.layout.LargeElementTest.largeTableTest02()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Path.reverse()
com.itextpdf.io.color.IccProfile.getInstance(InputStream)
com.itextpdf.barcodes.qrcode.Encoder.appendECI(CharacterSetECI,BitVector)
com.itextpdf.layout.element.Paragraph.setFixedLeading(float)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.setQualifier(String,String,String,String,String)
com.itextpdf.signatures.sign.SigningTest.signEncryptedDoc02()
com.itextpdf.layout.Style.getMarginRight()
com.itextpdf.kernel.pdf.PdfPrimitiveObject.compareContent(PdfPrimitiveObject)
com.itextpdf.barcodes.Barcode1D.getFont()
com.itextpdf.layout.hyphenation.HyphenationTree.getNonLetterBreaks(char)
com.itextpdf.kernel.xmp.impl.XMPNode.cleanupChildren()
com.itextpdf.layout.renderer.TableWidths.compareTo(CellInfo)
com.itextpdf.kernel.pdf.PdfAConformanceLevel.getConformanceLevel(XMPMeta)
com.itextpdf.io.font.woff2.w3c.format.BlocksExtraneousData007Test.getTestInfo()
com.itextpdf.kernel.pdf.PdfImageXObjectTest.testFile(String,int,String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff083Test.isFontValid()
com.itextpdf.kernel.geom.Subpath.isSinglePointOpen()
com.itextpdf.kernel.pdf.PdfAnnotationTest.inkTest()
com.itextpdf.kernel.geom.AffineTransform.shear(double,double)
com.itextpdf.layout.renderer.TextRenderer.noPrint(Glyph)
com.itextpdf.barcodes.BarcodeQRCode.getBarcodeSize(float)
com.itextpdf.layout.BlockTest.blockWithSetHeightProperties01()
com.itextpdf.layout.RotationTest.cellRotationTest03()
com.itextpdf.layout.AutoTaggingTest.imageAndTextNoRole01()
com.itextpdf.pdfa.PdfA2AcroFormCheckTest.acroFormCheck04()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.concatMatrix(AffineTransform)
com.itextpdf.kernel.pdf.IPdfPageExtraCopier.copy(PdfPage,PdfPage)
com.itextpdf.layout.minmaxwidth.RotationMinMaxWidth.getWidthDerivativeZeroPoint()
com.itextpdf.kernel.pdf.PdfCanvasTest.beforeClass()
com.itextpdf.io.util.DateTimeUtil.getCurrentTimeCalendar()
com.itextpdf.signatures.PdfSigner.getNewSigFieldName()
com.itextpdf.layout.property.UnitValue.isPercentValue()
com.itextpdf.kernel.xmp.impl.XMPNode.cloneSubtree(XMPNode)
com.itextpdf.kernel.pdf.tagutils.AccessibilityProperties.getAttributesList()
com.itextpdf.io.font.FontProgramDescriptorFactory.fetchCidFontDescriptor(String)
com.itextpdf.layout.ElementPropertyContainer.getDefaultProperty(int)
com.itextpdf.layout.element.List.getRole()
com.itextpdf.layout.border.GrooveBorder.getType()
com.itextpdf.pdfa.PdfAFlushingTest.flushingTest03()
com.itextpdf.kernel.pdf.PdfFontTest.testWoffFont()
com.itextpdf.layout.ElementPropertyContainer.setBorderBottom(Border)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff087Test.getFontName()
com.itextpdf.forms.fields.PdfFormField.setBackgroundColor(Color)
com.itextpdf.io.util.GenericArray.set(int,T)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff131Test.getFontName()
com.itextpdf.layout.TableTest.fixedPositionTest01()
com.itextpdf.io.source.RandomAccessSourceFactory.createRanged(IRandomAccessSource,long)
com.itextpdf.layout.CollapsingMarginsTest.collapsingMarginsTest04()
com.itextpdf.io.source.RandomAccessFileOrArray.readFloat()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff091Test.getTestInfo()
com.itextpdf.layout.font.FontCharacteristics.setFontWeight(FontWeight)
com.itextpdf.kernel.crypto.ARCFOUREncryption.encryptARCFOUR(byte,byte)
com.itextpdf.kernel.xmp.impl.XMPSerializerRDF.appendNodeValue(String,boolean)
com.itextpdf.io.font.FontProgramDescriptorFactory.fetchDescriptorFromFontProgram(FontProgram)
com.itextpdf.kernel.pdf.annot.PdfCaretAnnotation.getSymbol()
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.sortWithMarks(List)
com.itextpdf.kernel.Version.addLicensedPostfix(String)
com.itextpdf.layout.renderer.RootRenderer.processWaitingKeepWithNextElement(IRenderer)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff072Test.getTestInfo()
com.itextpdf.kernel.pdf.ParentTreeTest.test06()
com.itextpdf.kernel.crypto.ARCFOUREncryption.prepareARCFOURKey(byte,int,int)
com.itextpdf.signatures.verify.CrlVerifierTest.verifyTest(TestCrlBuilder)
com.itextpdf.io.image.ImageDataFactory.readImageType(URL)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setTransferFunction2(PdfObject)
com.itextpdf.barcodes.BarcodeDataMatrixTest.barcode04Test()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.setPropertyCalendar(String,String,Calendar)
com.itextpdf.io.image.ImageData.getImageMask()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getTransferFunction()
com.itextpdf.kernel.pdf.PdfDocument.getPageNumber(PdfDictionary)
com.itextpdf.io.image.ImageData.getXYRatio()
com.itextpdf.pdfa.PdfA1AcroFormCheckTest.acroFormCheck02()
com.itextpdf.pdfa.checker.PdfA2Checker.checkAnnotation(PdfDictionary)
com.itextpdf.signatures.CRLVerifier.isSignatureValid(X509CRL,X509Certificate)
com.itextpdf.io.font.woff2.Woff2Dec.storeOffsetTable(byte,int,int,int)
com.itextpdf.io.codec.brotli.dec.BitReader.readMoreInput(BitReader)
com.itextpdf.io.font.FontCache.getRegistryNames()
com.itextpdf.layout.renderer.TextRenderer.charAt(int)
com.itextpdf.layout.element.Table.getColumnWidth(int)
com.itextpdf.kernel.pdf.PdfEncryptionTest.checkDecryptedWithCertificateContent(String,Certificate,String)
com.itextpdf.kernel.pdf.PdfFontTest.createDocumentWithTrueTypeAsType0()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff114Test.getTestInfo()
com.itextpdf.io.font.woff2.Woff2Dec.pad4(Woff2Out)
com.itextpdf.kernel.pdf.collection.PdfCollectionField.getValue(String)
com.itextpdf.io.image.ImageDataFactory.createBmp(URL,boolean,int)
com.itextpdf.kernel.geom.Path.rectangle(Rectangle)
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.eventOccurred(IEventData,EventType)
com.itextpdf.kernel.xmp.XMPMetaFactory.reset()
com.itextpdf.kernel.pdf.PdfReaderTest.StreamLengthCorrection6()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.getPropertyLong(String,String)
com.itextpdf.barcodes.dmcode.ReedSolomon.reedSolomonBlock(byte,int,byte,int,int)
com.itextpdf.io.source.RandomAccessFileOrArray.readDouble()
com.itextpdf.layout.renderer.TableWidths.getCol()
com.itextpdf.kernel.xmp.impl.XMPSerializerRDF.addPadding(int)
com.itextpdf.io.font.FontProgramDescriptor.isMonospace()
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setFlatnessTolerance(float)
com.itextpdf.kernel.pdf.xobject.PdfImageXObject.createArray(PdfStream,Object)
com.itextpdf.kernel.pdf.PdfCatalog.isWrappedObjectMustBeIndirect()
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6Format2.getContextLength()
com.itextpdf.layout.renderer.TextRenderer.saveWordBreakIfNotYetSaved(Glyph)
com.itextpdf.kernel.pdf.annot.PdfRedactAnnotation.getOverlayText()
com.itextpdf.layout.element.List.getPostSymbolText()
com.itextpdf.kernel.font.PdfType1Font.containsGlyph(int)
com.itextpdf.kernel.pdf.PdfReader.getLastXref()
com.itextpdf.signatures.PdfPKCS7.buildUnauthenticatedAttributes(byte)
com.itextpdf.io.util.ArrayUtil.hashCode(byte)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff139Test.isFontValid()
com.itextpdf.kernel.pdf.annot.PdfFileAttachmentAnnotation.getFileSpecObject()
com.itextpdf.kernel.pdf.PdfDocument.addFileAttachment(String,String,String,PdfName,PdfName)
com.itextpdf.kernel.pdf.PdfStampingTest.stamping7()
com.itextpdf.io.font.otf.GsubLookupType5.readSubTableFormat3(int)
com.itextpdf.barcodes.Barcode128.getRawText(String,boolean,Barcode128CodeSet)
com.itextpdf.kernel.font.PdfFontFactory.register(String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff023Test.isFontValid()
com.itextpdf.io.image.ImageDataFactory.createJbig2(byte,int)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.dumpObject()
com.itextpdf.kernel.geom.AffineTransform.setToRotation(double)
com.itextpdf.io.codec.TIFFDirectory.getIFDOffset()
com.itextpdf.kernel.pdf.PdfOutputStream.write(PdfName)
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.setForbidUnknownRoles(boolean)
com.itextpdf.kernel.pdf.PdfXrefTable.intToBytes(int)
com.itextpdf.kernel.utils.TaggedPdfReaderTool.inspectAttributes(PdfStructElem)
com.itextpdf.kernel.xmp.impl.XMPSerializerRDF.write(int)
com.itextpdf.kernel.pdf.PdfXrefTable.createNextIndirectReference(PdfDocument)
com.itextpdf.io.font.otf.Glyph.hasValidUnicode()
com.itextpdf.layout.hyphenation.TernaryTreeIterator.up()
com.itextpdf.kernel.geom.LineSegment.getBoundingRectangle()
com.itextpdf.io.codec.Jbig2SegmentReader.getPageWidth(int)
com.itextpdf.kernel.pdf.canvas.parser.util.InlineImageParsingUtils.parseSamples(PdfDictionary,PdfDictionary,PdfCanvasParser)
com.itextpdf.kernel.xmp.options.ParseOptions.defineOptionName(int)
com.itextpdf.kernel.utils.PageRangeTest.addSequence()
com.itextpdf.layout.renderer.DrawContext.isTaggingEnabled()
com.itextpdf.kernel.pdf.PdfDictionary.copyTo(PdfDocument,boolean)
com.itextpdf.kernel.geom.AffineTransform.getScaleX()
com.itextpdf.kernel.pdf.layer.PdfLayer.getParent()
com.itextpdf.kernel.xmp.XMPSchemaRegistry.findAlias(String)
com.itextpdf.kernel.xmp.impl.XMPNode.getChildren()
com.itextpdf.kernel.pdf.filespec.PdfStringFS.isWrappedObjectMustBeIndirect()
com.itextpdf.layout.hyphenation.ByteVector.getArray()
com.itextpdf.io.font.otf.Glyph.codePoint(char)
com.itextpdf.pdfa.PdfAFontTest.cidFontCheckTest3()
com.itextpdf.kernel.utils.CompareTool.compareByCatalog(PdfDocument,PdfDocument)
com.itextpdf.layout.renderer.AbstractRenderer.applyBorderBox(Rectangle,Border,boolean)
com.itextpdf.layout.element.Text.setHorizontalScaling(float)
com.itextpdf.kernel.pdf.PdfDocumentInfo.flush()
com.itextpdf.pdfa.checker.PdfA2Checker.getAllowedNamedActions()
com.itextpdf.layout.font.FontSetCollection.remove(Object)
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.removeStructToModelConnection(PdfStructElem)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Edge.isEvenOddAltFillType(PolyFillType,PolyFillType)
com.itextpdf.kernel.pdf.canvas.parser.TextRenderInfoTest.assertVectorsEqual(String,Vector,Vector)
com.itextpdf.io.util.ArrayUtil.shortenArray(byte,int)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Paths.openPathsFromPolyTree(PolyTree)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff050Test.getFontName()
com.itextpdf.kernel.pdf.PdfDeveloperExtension.getBaseVersion()
com.itextpdf.io.font.woff2.w3c.format.BlocksMetadataPadding003Test.isFontValid()
com.itextpdf.kernel.pdf.navigation.PdfExplicitDestination.add(float)
com.itextpdf.io.util.NumberUtil.asInteger(Object)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Point.getUnitNormal(LongPoint,LongPoint)
com.itextpdf.barcodes.qrcode.Version.getVersionNumber()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff010Test.isFontValid()
com.itextpdf.signatures.LtvVerifier.setVerifier(CertificateVerifier)
com.itextpdf.io.util.TextUtil.isWhitespaceOrNonPrintable(int)
com.itextpdf.layout.ElementPropertyContainer.setFontScript(Character,UnicodeScript)
com.itextpdf.kernel.geom.Path.curveTo(float,float,float,float,float,float)
com.itextpdf.io.font.FontProgram.setTypoAscender(int)
com.itextpdf.kernel.pdf.canvas.parser.listener.IEventListener.eventOccurred(IEventData,EventType)
com.itextpdf.kernel.pdf.action.PdfAction.createSetOcgState(List)
com.itextpdf.io.font.woff2.JavaUnsignedUtil.asU8(byte)
com.itextpdf.kernel.xmp.impl.ByteBuffer.ensureCapacity(int)
com.itextpdf.kernel.xmp.impl.XMPIteratorImpl.getLanguage()
com.itextpdf.io.font.otf.lookuptype5.SubTableLookup5Format2.isGlyphMatchesInput(int,int)
com.itextpdf.io.util.IntHashtable.clone()
com.itextpdf.kernel.pdf.PdfCopyTest.copySignedDocuments()
com.itextpdf.signatures.sign.PdfSignatureAppearanceTest.textAutoscaleTest05()
com.itextpdf.layout.renderer.TextRenderer.drawBackground(DrawContext)
com.itextpdf.kernel.xmp.XMPMeta.iterator()
com.itextpdf.layout.element.Cell.getCol()
com.itextpdf.kernel.pdf.PdfResources.getResourceObject(PdfName,PdfName)
com.itextpdf.io.font.woff2.Woff2Dec.storePoints(int,Woff2Common,Point,int,int,byte,int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff033Test.getFontName()
com.itextpdf.barcodes.BarcodePDF417.createAwtImage(java,awt,Color,java,awt,Color)
com.itextpdf.kernel.font.PdfFontFactory.createFont(FontProgram,String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff116Test.getTestInfo()
com.itextpdf.io.source.RandomAccessFileOrArray.createView()
com.itextpdf.kernel.log.SystemOutCounter.getCounter(Class)
com.itextpdf.signatures.testutils.client.TestTsaClient.getTokenSizeEstimate()
com.itextpdf.kernel.pdf.canvas.wmf.InputMeta.getLength()
com.itextpdf.kernel.geom.AffineTransform.setTransform(float,float,float,float,float,float)
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.setReplyType(PdfName)
com.itextpdf.io.image.GifImageHelper.readShort(GifParameters)
com.itextpdf.kernel.pdf.PdfStampingTest.stampingAppend5()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff139Test.getTestInfo()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff117Test.getTestInfo()
com.itextpdf.pdfa.PdfA2ActionCheckTest.actionCheck04()
com.itextpdf.kernel.pdf.tagging.PdfStructTreeRoot.findObjRefByStructParentIndex(PdfDictionary,int)
com.itextpdf.layout.renderer.BlockRenderer.getOverflowPartHeight(OverflowPropertyValue,Rectangle)
com.itextpdf.forms.fields.PdfFormField.drawTextAppearance(Rectangle,PdfFont,float,String,PdfFormXObject)
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.rendererIsFloated(IRenderer)
com.itextpdf.kernel.pdf.PdfArray.getAsName(int)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.setFlatnessTolerance(float)
com.itextpdf.layout.TableTest.splitTableOnShortPage()
com.itextpdf.kernel.pdf.PdfReaderTest.fixPdfTest06()
com.itextpdf.layout.renderer.AbstractRenderer.drawBackground(DrawContext)
com.itextpdf.kernel.xmp.impl.Latin1Converter.convert(ByteBuffer)
com.itextpdf.io.font.woff2.w3c.format.TabledataLocaSize002Test.getTestInfo()
com.itextpdf.io.util.ArrayUtil.toArray(Collection)
com.itextpdf.kernel.pdf.PdfDocument.listIndirectReferences()
com.itextpdf.layout.font.FontCharacteristics.getFontWeight()
com.itextpdf.kernel.pdf.function.PdfFunction.makeType2(PdfArray,PdfArray,PdfArray,PdfArray,PdfNumber)
com.itextpdf.layout.TableBorderTest.incompleteTableTest03()
com.itextpdf.barcodes.qrcode.GF256.inverse(int)
com.itextpdf.layout.renderer.RotationUtils.retrieveRotatedLayoutWidth(float,AbstractRenderer)
com.itextpdf.layout.property.UnitValue.isPointValue()
com.itextpdf.kernel.pdf.layer.IPdfOCG.getIndirectReference()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.minkowskiDiff(Path,Path)
com.itextpdf.io.codec.Base64.usage(String)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.updateFromExtGState(PdfDictionary)
com.itextpdf.io.font.otf.OtfClass.hasClass(int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff114Test.isFontValid()
com.itextpdf.io.font.woff2.w3c.format.TabledataDecompressedLength004Test.isFontValid()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.createOutRec()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff011Test.getTestInfo()
com.itextpdf.kernel.pdf.PdfDocumentTest.addOutlinesWithNamedDestinations01()
com.itextpdf.layout.ListTest.listEmptyItemTest01()
com.itextpdf.kernel.pdf.PdfCanvasTest.wmfImageTest03()
com.itextpdf.signatures.PdfPKCS7.getEncodedPKCS7()
com.itextpdf.signatures.PdfPKCS7.getFilterSubtype()
com.itextpdf.io.font.FontMetrics.getXHeight()
com.itextpdf.signatures.SignUtils.getMessageDigest(String,IExternalDigest)
com.itextpdf.forms.xfa.XFAFormTest.createXFAFormTest()
com.itextpdf.kernel.pdf.PdfXrefTableTest.testCreateAndUpdateTwiceXMP()
com.itextpdf.forms.fields.PdfFormField.drawPdfA2CheckAppearance(float,float,String,int)
com.itextpdf.signatures.ICrlClient.getEncoded(X509Certificate,String)
com.itextpdf.kernel.geom.Rectangle.getBottom()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff039Test.getTestInfo()
com.itextpdf.layout.element.Image.setMargins(float,float,float,float)
com.itextpdf.layout.renderer.ListRenderer.createOverflowRenderer(int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff112Test.isFontValid()
com.itextpdf.signatures.ITSAClient.getMessageDigest()
com.itextpdf.kernel.xmp.options.PropertyOptions.setArrayAlternate(boolean)
com.itextpdf.kernel.pdf.SerializedObjectContent.equals(Object)
com.itextpdf.io.font.woff2.w3c.format.TabledataLocaSize003Test.isFontValid()
com.itextpdf.io.font.FontMetrics.getUnderlineThickness()
com.itextpdf.kernel.pdf.canvas.parser.data.PathRenderInfo.getOperation()
com.itextpdf.layout.element.AreaBreak.makeNewRenderer()
com.itextpdf.kernel.pdf.layer.PdfOCProperties.readLayersFromDictionary()
com.itextpdf.kernel.font.PdfFont.toString()
com.itextpdf.io.source.RandomAccessFileOrArray.readCharLE()
com.itextpdf.kernel.pdf.annot.PdfCircleAnnotation.getSubtype()
com.itextpdf.layout.element.BlockElement.setPaddings(float,float,float,float)
com.itextpdf.io.font.woff2.w3c.format.BlocksExtraneousData001Test.getFontName()
com.itextpdf.barcodes.qrcode.FormatInformation.getErrorCorrectionLevel()
com.itextpdf.kernel.pdf.PdfLiteral.getBytesCount()
com.itextpdf.kernel.pdf.tagutils.DummyAccessibleElement.setRole(PdfName)
com.itextpdf.barcodes.BarcodeEAN.placeBarcode(PdfCanvas,Color,Color)
com.itextpdf.layout.renderer.CollapsedTableBorders.getCellVerticalAddition(float)
com.itextpdf.kernel.utils.CompareTool.isMessageLimitReached()
com.itextpdf.forms.fields.PdfButtonFormField.setImage(String)
com.itextpdf.kernel.pdf.annot.PdfLineAnnotation.setCaptionOffset(PdfArray)
com.itextpdf.io.codec.TIFFLZWDecoder.initializeStringTable()
com.itextpdf.layout.LargeElementTest.largeTableTest01()
com.itextpdf.layout.PreLayoutTest.preLayoutTest02()
com.itextpdf.kernel.pdf.PdfOutlineTest.updateOutlineTitle()
com.itextpdf.io.source.RandomAccessSourceFactory.createBestSource(FileChannel)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.addForm(PdfFormXObject,float,float,float,float,float,float)
com.itextpdf.kernel.utils.CompareTool.setGenerateCompareByContentXmlReport(boolean)
com.itextpdf.pdfa.checker.PdfAChecker.checkAnnotations(PdfDictionary)
com.itextpdf.kernel.pdf.colorspace.PdfSpecialCs.getSeparationCsArray(PdfName,PdfObject,PdfObject)
com.itextpdf.layout.TableTest.simpleTableTest11()
com.itextpdf.layout.renderer.TypographyUtils.getBidiLevels(BaseDirection,int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff019Test.getFontName()
com.itextpdf.kernel.xmp.options.SerializeOptions.setNewline(String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff013Test.isFontValid()
com.itextpdf.io.codec.TIFFDirectory.readFloat(RandomAccessFileOrArray)
com.itextpdf.kernel.pdf.canvas.parser.util.InlineImageParsingUtils.imageColorSpaceIsKnown(PdfDictionary,PdfDictionary)
com.itextpdf.io.codec.TIFFDirectory.readUnsignedShort(RandomAccessFileOrArray,boolean)
com.itextpdf.kernel.pdf.PdfObject.setIndirectReference(PdfIndirectReference)
com.itextpdf.signatures.PdfSigner.getFieldLockDict()
com.itextpdf.io.font.FontIdentification.getTtfVersion()
com.itextpdf.kernel.pdf.PdfReaderTest.incorrectXrefSizeInTrailer()
com.itextpdf.layout.border.DashedBorder.draw(PdfCanvas,float,float,float,float,float,Side,float,float)
com.itextpdf.layout.TableBorderTest.splitCellsTest01()
com.itextpdf.io.font.FontCacheKey.calcHashCode()
com.itextpdf.forms.fields.PdfFormField.calculateTranslationWidthAfterFieldRot(Rectangle,double,double)
com.itextpdf.layout.border.Border3D.drawCellBorder(PdfCanvas,float,float,float,float)
com.itextpdf.kernel.utils.CompareTool.compareDictionaries(PdfDictionary,PdfDictionary)
com.itextpdf.io.font.TrueTypeFontSubset.readLoca()
com.itextpdf.io.font.otf.GlyphLine.toUnicodeString(int,int)
com.itextpdf.forms.fields.PdfChoiceFormField.isCommitOnSelChange()
com.itextpdf.forms.fields.PdfFormField.setDefaultValue(PdfObject)
com.itextpdf.kernel.pdf.tagging.PdfStructTreeRoot.addKid(PdfStructElem)
com.itextpdf.kernel.pdf.PdfEncryptionTest.openEncryptedDocWithWrongPrivateKey()
com.itextpdf.kernel.pdf.colorspace.PdfShading.getDecode()
com.itextpdf.io.source.ByteArrayOutputStream.assignBytes(byte,int)
com.itextpdf.kernel.xmp.impl.XMPDateTimeImpl.setMinute(int)
com.itextpdf.kernel.pdf.PdfDocument.isCloseReader()
com.itextpdf.io.font.FontProgram.getFontMetrics()
com.itextpdf.kernel.pdf.annot.PdfStampAnnotation.getSubtype()
com.itextpdf.layout.ImageTest.imageTest16()
com.itextpdf.layout.border.Border.getIntersectionPoint(Point,Point,Point,Point)
com.itextpdf.layout.AutoTaggingTest.tableTest06()
com.itextpdf.kernel.font.PdfFontFactory.createRegisteredFont(String,String)
com.itextpdf.io.font.woff2.w3c.format.Valid003Test.getFontName()
com.itextpdf.kernel.pdf.layer.PdfOCProperties.isWrappedObjectMustBeIndirect()
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getCharCode(String)
com.itextpdf.layout.font.FontSelectorCache.update(FontSetSelectors,FontSet)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff057Test.getTestInfo()
com.itextpdf.layout.SimpleTextExtractionStrategyTest.createPdfWithXObject(String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff103Test.getTestInfo()
com.itextpdf.io.font.FontCache.getCompatibleCmaps(String)
com.itextpdf.layout.OpacityTest.underlineOpacityTest01()
com.itextpdf.kernel.pdf.annot.PdfLineAnnotation.getMeasure()
com.itextpdf.layout.property.Property.isPropertyInherited(int)
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingAes256.initKeyAndReadDictionary(PdfDictionary,byte)
com.itextpdf.kernel.font.PdfType0Font.getToUnicode(Object)
com.itextpdf.kernel.color.Color.equals(Object)
com.itextpdf.kernel.pdf.PdfVersion.fromPdfName(PdfName)
com.itextpdf.kernel.pdf.EncodingTest.customFullEncodingTimesRomanTest()
com.itextpdf.pdfa.PdfA2CanvasCheckTest.canvasCheckTest1()
com.itextpdf.io.codec.brotli.dec.DecodeTest.testX64()
com.itextpdf.kernel.pdf.PdfResources.getResourceNames()
com.itextpdf.kernel.pdf.PdfViewerPreferences.setDuplex(PdfViewerPreferencesConstants)
com.itextpdf.kernel.pdf.PdfString.decrypt(PdfEncryption)
com.itextpdf.kernel.pdf.annot.PdfPolyGeomAnnotation.createPolygon(Rectangle,float)
com.itextpdf.kernel.pdf.annot.PdfFixedPrint.getHorizontalTranslation()
com.itextpdf.layout.element.AreaBreak.getPageSize()
com.itextpdf.kernel.pdf.PdfPrimitivesTest.generatePdfArrayWithStrings(PdfDocument,boolean)
com.itextpdf.io.font.woff2.Woff2Dec.storeTableEntry(byte,int,int)
com.itextpdf.io.font.woff2.w3c.format.Valid002Test.getTestInfo()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getStrokeColor()
com.itextpdf.kernel.pdf.PdfCanvasTest.colorTest01()
com.itextpdf.kernel.pdf.PdfCatalog.addNamedDestination(String,PdfObject)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff038Test.getFontName()
com.itextpdf.kernel.pdf.colorspace.PdfShading.setVerticesPerRow(int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff055Test.isFontValid()
com.itextpdf.kernel.pdf.colorspace.PdfSpecialCs.getUnderlyingColorSpace()
com.itextpdf.kernel.pdf.annot.PdfPolyGeomAnnotation.setVertices(float)
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6Format1.getSubstLookupRecords()
com.itextpdf.kernel.pdf.annot.PdfTrapNetworkAnnotation.setLastModified(PdfDate)
com.itextpdf.kernel.xmp.XMPPathFactory.assertQualName(String)
com.itextpdf.io.codec.TIFFField.getAsSRational(int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff118Test.getFontName()
com.itextpdf.kernel.pdf.canvas.wmf.MetaDo.writeDWord(OutputStream,int)
com.itextpdf.layout.ElementPropertyContainer.setFontColor(Color,float)
com.itextpdf.kernel.pdf.PdfStampingTest.stamping14()
com.itextpdf.io.font.FontNames.setMacStyle(int)
com.itextpdf.layout.renderer.AbstractRenderer.applyLinkAnnotation(PdfDocument)
com.itextpdf.layout.BlockTest.overflowTest05()
com.itextpdf.io.image.BmpImageHelper.readUnsignedByte(InputStream)
com.itextpdf.io.font.otf.GposLookupType2.readFormat(int)
com.itextpdf.io.codec.CCITTG4Encoder.finddiff2(byte,int,int,int,int)
com.itextpdf.kernel.xmp.options.IteratorOptions.isOmitQualifiers()
com.itextpdf.kernel.xmp.XMPException.getErrorCode()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.updateFromExtGState(PdfExtGState)
com.itextpdf.io.font.woff2.w3c.format.BlocksExtraneousData002Test.isFontValid()
com.itextpdf.io.font.FontMetrics.getStrikeoutPosition()
com.itextpdf.kernel.pdf.PdfCatalog.hasOutlines()
com.itextpdf.kernel.pdf.canvas.parser.util.InlineImageParsingUtils.computeBytesPerRow(PdfDictionary,PdfDictionary)
com.itextpdf.forms.PdfSigFieldLockDictionary.setDocumentPermissions(LockPermissions)
com.itextpdf.layout.border.RoundDotsBorder.draw(PdfCanvas,float,float,float,float,float,float)
com.itextpdf.io.image.BmpImageHelper.decodeRLE(boolean,byte,BmpParameters)
com.itextpdf.kernel.pdf.navigation.PdfExplicitDestination.createFitBV(PdfPage,float)
com.itextpdf.forms.fields.PdfFormField.setParent(PdfFormField)
com.itextpdf.io.image.Jpeg2000ImageHelper.jp2_read_boxhdr(Jpeg2000Box,InputStream)
com.itextpdf.kernel.geom.LineSegment.transformBy(Matrix)
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingAes256.setHashKeyForNextObject(int,int)
com.itextpdf.kernel.pdf.PdfDictionaryTest.testValuesRetainAll()
com.itextpdf.signatures.DigestAlgorithms.digest(InputStream,MessageDigest)
com.itextpdf.kernel.pdf.PdfReader.getCryptoMode()
com.itextpdf.kernel.pdf.canvas.parser.listener.ITextChunkLocationStrategy.createLocation(TextRenderInfo,LineSegment)
com.itextpdf.kernel.pdf.collection.PdfCollectionItem.addItem(String,PdfNumber)
com.itextpdf.forms.fields.PdfFormField.getOptions()
com.itextpdf.kernel.xmp.impl.CountOutputStream.getBytesWritten()
com.itextpdf.kernel.utils.PdfSplitter.createPdfDocument(PageRange)
com.itextpdf.kernel.utils.CompareTool.hashCode()
com.itextpdf.kernel.pdf.xobject.PdfTransparencyGroup.setColorSpace(PdfName)
com.itextpdf.kernel.pdf.PdfDictionaryTest.testValuesRemove2()
com.itextpdf.io.font.FontNames.setFamilyName(String)
com.itextpdf.pdfa.PdfA2AnnotationCheckTest.compareResult(String,String)
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperOffset.addPaths(Paths,JoinType,EndType)
com.itextpdf.forms.xfa.Xml2Som.unescapeSom(String)
com.itextpdf.kernel.pdf.PdfActionTest.beforeClass()
com.itextpdf.kernel.pdf.canvas.wmf.MetaDo.writeWord(OutputStream,int)
com.itextpdf.layout.property.Transform.getFloats()
com.itextpdf.kernel.pdf.xobject.PdfFormXObject.getProcessColorModel()
com.itextpdf.io.codec.LZWStringTable.dump(PrintStream)
com.itextpdf.io.font.OpenTypeParser.readKerning(int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff006Test.getTestInfo()
com.itextpdf.kernel.pdf.layer.PdfLayer.getIndirectReference()
com.itextpdf.kernel.pdf.PdfDocument.initializeOutlines()
com.itextpdf.kernel.utils.CompareTool.compareStreams(InputStream,InputStream)
com.itextpdf.io.font.FontCache.getFont(String)
com.itextpdf.barcodes.BarcodePDF417.numberCompaction(int,int)
com.itextpdf.kernel.xmp.XMPSchemaRegistry.registerNamespace(String,String)
com.itextpdf.kernel.pdf.PdfDictionary.copyTo(PdfDocument)
com.itextpdf.io.codec.TIFFFaxDecompressor.decodeRaw(byte,byte,int,int)
com.itextpdf.io.font.FontMetrics.setAscender(int)
com.itextpdf.layout.RotationTest.staticTextRotationTest02()
com.itextpdf.barcodes.BarcodePDF417.outStopPattern()
com.itextpdf.signatures.SignaturePolicyInfo.getPolicyHash()
com.itextpdf.io.codec.TIFFFaxDecoder.getNextChangingElement(int,boolean,int)
com.itextpdf.layout.AlignmentTest.justifyAlignmentTest04()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getDashPattern()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.setPropertyLong(String,String,long,PropertyOptions)
com.itextpdf.kernel.pdf.PdfPagesTest.getPageByDictionary()
com.itextpdf.kernel.xmp.impl.XMPSchemaRegistryImpl.toString()
com.itextpdf.io.source.GroupedRandomAccessSource.getSourceEntryForOffset(long)
com.itextpdf.layout.KeepTogetherTest.keepTogetherListTest01()
com.itextpdf.barcodes.BarcodePDF417.setYHeight(float)
com.itextpdf.kernel.crypto.securityhandler.SecurityHandler.safeInitMessageDigest()
com.itextpdf.layout.minmaxwidth.RotationMinMaxWidth.getValidOriginalWidths(double)
com.itextpdf.io.codec.brotli.dec.DecodeTest.testUkkonooa()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.getPropertyCalendar(String,String)
com.itextpdf.layout.renderer.TableBorders.getNumberOfColumns()
com.itextpdf.layout.renderer.TableBorders.getRightBorderMaxWidth()
com.itextpdf.layout.renderer.CollapsedTableBorders.skipFooter(Border)
com.itextpdf.test.LogListener.finished(Description)
com.itextpdf.barcodes.qrcode.GF256.addOrSubtract(int,int)
com.itextpdf.layout.BlockTest.marginsBordersPaddingOverflow01()
com.itextpdf.kernel.log.Counter.onDocumentRead(long)
com.itextpdf.layout.renderer.LineRenderer.getLastYLineRecursively()
com.itextpdf.kernel.xmp.options.IteratorOptions.setJustChildren(boolean)
com.itextpdf.barcodes.BarcodePDF417.getTextTypeAndValue(int,int)
com.itextpdf.kernel.pdf.filters.DoNothingFilter.getLastFilterName()
com.itextpdf.io.font.otf.OpenTableLookup.readSubTables()
com.itextpdf.io.source.PagedChannelRandomAccessSource.close()
com.itextpdf.layout.property.Leading.equals(Object)
com.itextpdf.kernel.utils.PdfMergerTest.mergeDocumentTest04()
com.itextpdf.layout.margincollapse.MarginsCollapseInfo.getBufferSpaceOnBottom()
com.itextpdf.kernel.crypto.securityhandler.PubSecHandlerUsingStandard40.getDigestAlgorithm()
com.itextpdf.io.font.CFFFontSubset.CreateCharset(OffsetItem,int)
com.itextpdf.io.font.woff2.w3c.format.TabledataHmtxTransform003Test.getFontName()
com.itextpdf.layout.AreaBreakTest.areaBreakInsideDiv04Test()
com.itextpdf.io.font.CMapEncoding.getRegistry()
com.itextpdf.layout.TableTest.nestedTableLostContent()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff063Test.getFontName()
com.itextpdf.io.font.otf.GposLookupType6.transformOne(GlyphLine)
com.itextpdf.kernel.color.Color.convertRgbToCmyk(DeviceRgb)
com.itextpdf.signatures.PdfPKCS7.getCRLs()
com.itextpdf.kernel.pdf.PdfReaderTest.correctSimpleDoc2()
com.itextpdf.kernel.pdf.canvas.wmf.MetaBrush.getColor()
com.itextpdf.barcodes.BarcodePDF417.basicNumberCompaction(byte,int,int)
com.itextpdf.kernel.pdf.PdfAnnotationTest.printerMarkText()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff129Test.isFontValid()
com.itextpdf.pdfa.PdfA2GraphicsCheckTest.imageCheckTest1()
com.itextpdf.io.font.otf.Glyph.getYPlacement()
com.itextpdf.kernel.font.PdfType0Font.getCidFontType2(TrueTypeFont,PdfDictionary,String,int)
com.itextpdf.kernel.font.PdfFontFactory.createTtcFont(byte,int,String,boolean,boolean)
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.setCurrentBackgroundColor(Color)
com.itextpdf.layout.renderer.TextRenderer.getNumberOfSpaces()
com.itextpdf.layout.ImageTest.imageInTableTest02()
com.itextpdf.kernel.pdf.canvas.parser.HighlightItemsTest.highlightReferencePage832Test()
com.itextpdf.kernel.pdf.PdfDocumentTest.freeReferencesInObjectStream()
com.itextpdf.io.codec.CCITTG4Encoder.find0span(byte,int,int,int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff051Test.getTestInfo()
com.itextpdf.layout.hyphenation.PatternParser.getLocationString(SAXParseException)
com.itextpdf.layout.minmaxwidth.RotationMinMaxWidth.getRotatedHeight(double)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setMiterLimit(float)
com.itextpdf.io.font.FontCacheKey.equals(Object)
com.itextpdf.kernel.pdf.colorspace.PdfSpecialCs.getBaseCs()
com.itextpdf.io.font.woff2.w3c.format.TabledataExtraneousData001Test.isFontValid()
com.itextpdf.kernel.pdf.annot.Pdf3DAnnotation.isInteractive()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff149Test.getTestInfo()
com.itextpdf.layout.LargeElementTest.largeTableWithHeaderFooterTest04()
com.itextpdf.kernel.pdf.PdfPage.setCropBox(Rectangle)
com.itextpdf.kernel.pdf.PdfPage.flushResourcesContentStreams(PdfDictionary)
com.itextpdf.kernel.pdf.canvas.parser.data.PathRenderInfo.releaseGraphicsState()
com.itextpdf.kernel.xmp.XMPUtils.appendProperties(XMPMeta,XMPMeta,boolean,boolean,boolean)
com.itextpdf.kernel.pdf.filters.LZWDecoder.writeString(byte)
com.itextpdf.signatures.PdfPKCS7.verify()
com.itextpdf.io.font.OpenTypeParser.readMaxGlyphId()
com.itextpdf.kernel.xmp.XMPUtils.appendProperties(XMPMeta,XMPMeta,boolean,boolean)
com.itextpdf.kernel.pdf.PdfResources.isReadOnly()
com.itextpdf.io.font.woff2.w3c.format.TabledataTransformGlyfLoca002Test.getFontName()
com.itextpdf.kernel.pdf.PdfObject.isFlushed()
com.itextpdf.kernel.crypto.OutputStreamEncryption.flush()
com.itextpdf.signatures.SignUtils.remove()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.showTextInt(String)
com.itextpdf.kernel.xmp.impl.CountOutputStream.write(byte,int,int)
com.itextpdf.signatures.OCSPVerifier.isSignatureValid(BasicOCSPResp,Certificate)
com.itextpdf.kernel.pdf.PdfCatalog.getNameTree(PdfName)
com.itextpdf.io.font.CFFFontSubset.BuildIndexHeader(int,int,int)
com.itextpdf.pdfa.checker.PdfAChecker.getPdfAOutputIntent(PdfArray)
com.itextpdf.kernel.xmp.options.SerializeOptions.setUseCompactFormat(boolean)
com.itextpdf.kernel.pdf.canvas.PdfPatternCanvas.checkNoColor()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff006Test.getFontName()
com.itextpdf.layout.renderer.LineRenderer.getLastChildRenderer()
com.itextpdf.kernel.geom.AffineTransform.transform(float,int,double,int,int)
com.itextpdf.io.codec.TiffWriter.setOffset(int)
com.itextpdf.layout.font.FontSet.isEmpty()
com.itextpdf.kernel.pdf.PdfNameLoader.loadNames()
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.getXObjectStream(PdfName)
com.itextpdf.kernel.geom.Path.curveFromTo(float,float,float,float)
com.itextpdf.io.codec.TiffWriter.getIfdSize()
com.itextpdf.io.util.HashCode.combine(int,float)
com.itextpdf.io.font.CFFFontSubset.readFDSelect(int)
com.itextpdf.io.image.AwtImageDataFactory.create(java,awt,Image,java,awt,Color)
com.itextpdf.layout.hyphenation.HyphenationTree.getValues(int)
com.itextpdf.pdfa.checker.PdfA1Checker.checkImage(PdfStream,PdfDictionary)
com.itextpdf.io.source.OutputStream.writeBytes(byte,int,int)
com.itextpdf.layout.NonBreakableSpaceTest.consecutiveSpacesTest()
com.itextpdf.layout.renderer.LineSeparatorRenderer.drawChildren(DrawContext)
com.itextpdf.kernel.pdf.PdfResources.addResource(PdfObjectWrapper,ResourceNameGenerator)
com.itextpdf.barcodes.Barcode128.removeFNC1(String)
com.itextpdf.io.image.ImageData.isSoftMask()
com.itextpdf.kernel.utils.CompareTool.compare(File,File)
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.getStructConnectedToModel(IAccessibleElement)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.getDate()
com.itextpdf.layout.element.Image.scale(float,float)
com.itextpdf.layout.property.Transform.getUnitValues()
com.itextpdf.kernel.pdf.PdfReaderTest.correctSimpleDoc4()
com.itextpdf.kernel.pdf.PdfViewerPreferences.setHideToolbar(boolean)
com.itextpdf.kernel.pdf.canvas.parser.clipper.IClipper.execute(ClipType,Paths)
com.itextpdf.kernel.xmp.options.PropertyOptions.isURI()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff044Test.isFontValid()
com.itextpdf.layout.ImageTest.imageTest03()
com.itextpdf.layout.renderer.LineRenderer.resolveChildrenFonts()
com.itextpdf.io.font.woff2.w3c.format.DirectoryTableOrder001Test.getTestInfo()
com.itextpdf.io.font.cmap.CMapToUnicode.createCharsFromSingleBytes(byte)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.getDownAppearanceObject()
com.itextpdf.io.font.FontMetrics.getUnderlinePosition()
com.itextpdf.forms.fields.PdfChoiceFormField.setCommitOnSelChange(boolean)
com.itextpdf.kernel.pdf.annot.PdfPrinterMarkAnnotation.getSubtype()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getTextRise()
com.itextpdf.io.util.DateTimeUtil.getUtcMillisFromEpoch(Calendar)
com.itextpdf.signatures.SignUtils.getMessageDigest(String,String)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.getGraphicsState()
com.itextpdf.io.font.otf.OpenTableLookup.getLookupFlag()
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setSmoothnessTolerance(float)
com.itextpdf.io.image.TiffImageHelper.applyPredictor(byte,int,int,int,int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff103Test.getFontName()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setRolloverAppearance(PdfDictionary)
com.itextpdf.kernel.font.PdfFontFactory.createFont(FontProgram,String,boolean)
com.itextpdf.barcodes.qrcode.QRCode.setMode(Mode)
com.itextpdf.layout.AutoTaggingTest.tableTest05()
com.itextpdf.kernel.pdf.xobject.PdfTransparencyGroup.setIsolated(boolean)
com.itextpdf.kernel.utils.CompareTool.pop()
com.itextpdf.kernel.pdf.tagging.PdfStructTreeRoot.getDocument()
com.itextpdf.io.codec.Base64.close()
com.itextpdf.layout.element.TabStop.getTabLeader()
com.itextpdf.io.source.RandomAccessSourceFactory.createByReadingToMemory(String)
com.itextpdf.kernel.pdf.PdfEncryptionTest.encryptWithCertificate(String,int,int)
com.itextpdf.layout.renderer.TableBorders.getWidestVerticalBorder(int)
com.itextpdf.signatures.OcspClientBouncyCastle.getBasicOCSPResp(X509Certificate,X509Certificate,String)
com.itextpdf.layout.font.FontCharacteristics.isBold()
com.itextpdf.io.font.cmap.CMapContentParser.readDictionary()
com.itextpdf.layout.element.TabStop.setTabLeader(ILineDrawer)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.getAction()
com.itextpdf.io.font.FontNames.setFontWidth(int)
com.itextpdf.layout.ElementPropertyContainer.setBorder(Border)
com.itextpdf.io.source.MappedChannelRandomAccessSource.get(long)
com.itextpdf.kernel.pdf.TagTreePointerTest.tagStructureFlushingTest04()
com.itextpdf.io.font.CFFFontSubset.Reconstruct(int)
com.itextpdf.forms.fields.PdfFormField.createText(PdfDocument,Rectangle,String,String,PdfFont,int)
com.itextpdf.io.font.TrueTypeFont.isCff()
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.getConnectedElement(boolean)
com.itextpdf.layout.Style.setRotationAngle(double)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.popScanbeam()
com.itextpdf.kernel.utils.CompareTool.compareLinkAnnotations(String,String)
com.itextpdf.kernel.pdf.filters.ASCII85DecodeFilter.decode(byte,PdfName,PdfObject,PdfDictionary)
com.itextpdf.signatures.CertificateInfo.getFields()
com.itextpdf.kernel.pdf.PdfReaderTest.freeReferencesTest()
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.isElementConnectedToTag(IAccessibleElement)
com.itextpdf.kernel.pdf.tagging.PdfMcr.getRole()
com.itextpdf.layout.hyphenation.TernaryTree.trimToSize()
com.itextpdf.io.image.TiffTest.openTiff3()
com.itextpdf.kernel.font.PdfType0Font.decode(PdfString)
com.itextpdf.kernel.pdf.PdfCanvasTest.copyPagesTest6()
com.itextpdf.kernel.pdf.navigation.PdfNamedDestination.replaceNamedDestination(Map)
com.itextpdf.io.font.woff2.w3c.format.BlocksExtraneousData004Test.isFontValid()
com.itextpdf.layout.RotationTest.listRotationTest02()
com.itextpdf.kernel.utils.CompareTool.pushArrayItemToPath(int)
com.itextpdf.io.font.FontProgramFactory.createRegisteredFont(String,int,boolean)
com.itextpdf.layout.ElementPropertyContainer.setBorderLeft(Border)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.ensureStreamDataIsReadyToBeProcessed(PdfStream)
com.itextpdf.layout.element.Div.add(Image)
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.removeElementConnectionToTag(IAccessibleElement)
com.itextpdf.signatures.sign.SigningTest.before()
com.itextpdf.kernel.pdf.PdfString.copyContent(PdfObject,PdfDocument)
com.itextpdf.kernel.xmp.impl.XMPNode.addChild(int,XMPNode)
com.itextpdf.kernel.pdf.PdfStampingTest.stamping13()
com.itextpdf.kernel.utils.CompareTool.compareArrays(PdfArray,PdfArray)
com.itextpdf.kernel.pdf.PdfViewerPreferences.setHideWindowUI(boolean)
com.itextpdf.layout.DefaultLayoutTest.multipleAdditionsOfSameModelElementTest()
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperBridge.addContour(com,itextpdf,kernel,geom,Path,List,Boolean)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff124Test.isFontValid()
com.itextpdf.layout.KeepTogetherTest.beforeClass()
com.itextpdf.layout.Style.setMarginTop(float)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.resetStrokeColorGray()
com.itextpdf.barcodes.BarcodePDF417.maxPossibleErrorLevel(int)
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.setOpacity(PdfNumber)
com.itextpdf.kernel.font.PdfType0Font.getCompatibleUniMap(String)
com.itextpdf.io.source.ByteBufferRandomAccessSource.writeObject(ObjectOutputStream)
com.itextpdf.kernel.pdf.PdfCanvasTest.awtImagesTest01()
com.itextpdf.kernel.xmp.impl.XMPNode.assertQualifierNotExisting(String)
com.itextpdf.kernel.pdf.tagging.PdfStructTreeRoot.getParentTreeHandler()
com.itextpdf.kernel.pdf.PdfOutlineTest.addOutlinesWithNamedDestinations02()
com.itextpdf.io.util.FileUtil.fileExists(String)
com.itextpdf.kernel.pdf.PdfResourcesTest.resourcesTest2()
com.itextpdf.layout.renderer.AbstractRenderer.getPropertyAsFloat(int)
com.itextpdf.kernel.pdf.PdfOutline.setDestination(PdfDestination)
com.itextpdf.io.font.TrueTypeFontSubset.writeFontInt(int)
com.itextpdf.kernel.xmp.XMPMetaFactory.serialize(XMPMeta,OutputStream,SerializeOptions)
com.itextpdf.kernel.pdf.PdfOutline.getAllChildren()
com.itextpdf.io.codec.brotli.dec.Huffman.getNextKey(int,int)
com.itextpdf.kernel.pdf.PdfResources.addForm(PdfFormXObject)
com.itextpdf.forms.fields.PdfSignatureFormField.getSigFieldLockDictionary()
com.itextpdf.kernel.xmp.impl.XMPDateTimeImpl.getMonth()
com.itextpdf.layout.element.BlockElement.getMarginLeft()
com.itextpdf.layout.renderer.AbstractRenderer.clipBorderArea(DrawContext,Rectangle)
com.itextpdf.kernel.pdf.annot.PdfPopupAnnotation.getParent()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff075Test.getFontName()
com.itextpdf.kernel.pdf.action.PdfAction.createThread(PdfFileSpec,PdfObject,PdfObject)
com.itextpdf.io.codec.brotli.dec.Huffman.nextTableBitSize(int,int,int)
com.itextpdf.kernel.utils.CompareTool.compareXmls(String,String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff066Test.getTestInfo()
com.itextpdf.layout.layout.LayoutResult.getCauseOfNothing()
com.itextpdf.io.source.ByteBuffer.prepend(byte)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff032Test.getTestInfo()
com.itextpdf.io.codec.brotli.dec.Dictionary.setData(ByteBuffer)
com.itextpdf.kernel.pdf.PdfPrimitivesTest.primitivesNameTest()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Edge.topX(Edge,long)
com.itextpdf.io.image.ImageData.setDpi(int,int)
com.itextpdf.io.font.woff2.w3c.format.DirectoryTableOrder002Test.isFontValid()
com.itextpdf.pdfa.PdfADocument.flushFonts()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.stroke()
com.itextpdf.io.source.WindowRandomAccessSource.get(long,byte,int,int)
com.itextpdf.forms.fields.PdfFormField.getParent()
com.itextpdf.kernel.xmp.properties.XMPAliasInfo.getPropName()
com.itextpdf.kernel.pdf.PdfPagesTest.insertFlushedPageTest()
com.itextpdf.forms.PdfAcroForm.setNeedAppearances(boolean)
com.itextpdf.kernel.xmp.impl.XMPSchemaRegistryImpl.findAliases(String)
com.itextpdf.kernel.pdf.PdfDictionaryEntrySet.next()
com.itextpdf.kernel.pdf.PdfOutlineTest.addOutlinesToDocumentTest()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.addLocalMinPoly(Edge,Edge,LongPoint)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff056Test.getTestInfo()
com.itextpdf.barcodes.Barcode39.placeBarcode(PdfCanvas,Color,Color)
com.itextpdf.signatures.LtvVerifier.verifyChain(Certificate)
com.itextpdf.kernel.xmp.XMPMeta.setPropertyLong(String,String,long,PropertyOptions)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff102Test.getTestInfo()
com.itextpdf.barcodes.BarcodePDF417.getYHeight()
com.itextpdf.pdfa.PdfA2ActionCheckTest.actionCheck07()
com.itextpdf.forms.fields.PdfFormField.createRadioButton(PdfDocument,Rectangle,PdfButtonFormField,String)
com.itextpdf.io.source.RandomAccessFileOrArray.readShortLE()
com.itextpdf.io.codec.brotli.dec.SynthTest.testClClTreeDeficiency()
com.itextpdf.layout.TableTest.tableWithSetHeightProperties01()
com.itextpdf.layout.font.ComplexFontSelectorStrategy.nextSignificantIndex()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getTextRenderingMode()
com.itextpdf.kernel.pdf.xobject.PdfFormXObject.setGroup(PdfTransparencyGroup)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Edge.swapSides(Edge,Edge)
com.itextpdf.kernel.pdf.PdfWriter.writeObject(java,io,ObjectOutputStream)
com.itextpdf.io.font.woff2.Woff2Dec.writeHeaders(byte,int,RebuildMetadata,WOFF2Header,Woff2Out)
com.itextpdf.io.font.FontProgramDescriptor.isBold()
com.itextpdf.kernel.xmp.impl.XMPSchemaRegistryImpl.getAliasForm()
com.itextpdf.kernel.pdf.PdfFontTest.createDocumentWithCourierBold()
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.getRidOfCollapseArtifactsAtopOccupiedArea()
com.itextpdf.layout.BlockTest.borderRadiusTest03()
com.itextpdf.kernel.utils.PageRangeTest.addSingleAndSequence()
com.itextpdf.layout.ElementPropertyContainer.setUnderline(Color,float,float,float,float,float,int)
com.itextpdf.layout.SimpleTextExtractionStrategyTest.testLeadingSpace()
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.setCurrentTextColor(Color)
com.itextpdf.io.source.PdfTokenizer.getGenNr()
com.itextpdf.io.image.TiffImageHelper.processTiffImage(RandomAccessFileOrArray,TiffParameters)
com.itextpdf.layout.element.ListItem.setListSymbol(Image)
com.itextpdf.kernel.pdf.canvas.parser.data.ClippingPathInfo.getCtm()
com.itextpdf.forms.fields.PdfTextFormField.isComb()
com.itextpdf.signatures.PdfSigner.signExternalContainer(IExternalSignatureContainer,int)
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.setOffsetWy(int)
com.itextpdf.layout.RotationTest.marginsRotatedTest02()
com.itextpdf.layout.renderer.ParagraphRenderer.createOverflowRenderer(IRenderer)
com.itextpdf.layout.TableBorderTest.splitRowspanKeepTogetherTest()
com.itextpdf.kernel.xmp.impl.ParameterAsserts.assertStructName(String)
com.itextpdf.kernel.font.DocFontEncoding.fillDifferences(DocFontEncoding,CMapToUnicode)
com.itextpdf.io.font.CFFFontSubset.ReconstructFDArray(int,OffsetItem)
com.itextpdf.kernel.xmp.impl.xpath.XMPPathSegment.setName(String)
com.itextpdf.kernel.pdf.layer.PdfOCProperties.getOCGOrder(PdfArray,PdfLayer)
com.itextpdf.kernel.font.PdfFontFactory.createRegisteredFont(String,String,boolean,int,boolean)
com.itextpdf.layout.TableTest.bigRowspanTest05()
com.itextpdf.test.RunnerSearchConfig.getSearchPackages()
com.itextpdf.kernel.pdf.filters.LZWDecodeFilter.decode(byte,PdfName,PdfObject,PdfDictionary)
com.itextpdf.kernel.font.PdfType0Font.containsUnicodeGlyph(String,int)
com.itextpdf.signatures.SignatureUtil.verifySignature(String)
com.itextpdf.kernel.xmp.XMPDateTimeFactory.createFromCalendar(Calendar)
com.itextpdf.kernel.font.Type3Glyph.getWx()
com.itextpdf.kernel.pdf.PdfReaderTest.fixPdfTest09()
com.itextpdf.io.font.CFFFontSubset.BuildNewLGSubrs(int)
com.itextpdf.layout.layout.LayoutContext.toString()
com.itextpdf.kernel.pdf.PdfEncryption.padByteArrayTo16(byte)
com.itextpdf.io.font.Type1Font.isBuiltInFont()
com.itextpdf.kernel.pdf.PdfReaderTest.fixPdfTest08()
com.itextpdf.io.font.woff2.Woff2Dec.reconstructFont(byte,int,int,RebuildMetadata,WOFF2Header,int,Woff2Out)
com.itextpdf.barcodes.qrcode.QRCode.setECLevel(ErrorCorrectionLevel)
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.convertHeightFromTextSpaceToUserSpace(float)
com.itextpdf.kernel.pdf.action.PdfAction.createSound(PdfStream,float,boolean,boolean,boolean)
com.itextpdf.layout.font.FontSelectorCache.put(FontSelectorKey,FontSelector)
com.itextpdf.kernel.pdf.PdfReader.readXref()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff054Test.getTestInfo()
com.itextpdf.io.font.FontProgramFactory.createType1Font(String,String,byte,byte,boolean)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff120Test.isFontValid()
com.itextpdf.layout.ElementPropertyContainer.setStrokeWidth(float)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff117Test.getFontName()
com.itextpdf.kernel.xmp.options.SerializeOptions.getOmitVersionAttribute()
com.itextpdf.layout.TableTest.simpleTableTest05()
com.itextpdf.layout.ElementPropertyContainer.setBorderRight(Border)
com.itextpdf.forms.FormFieldsTaggingTest.compareOutput(String,String)
com.itextpdf.layout.renderer.ImageWidthTest.imageWidthTest01()
com.itextpdf.layout.TableTest.extendLastRowTest01()
com.itextpdf.kernel.utils.CompareTool.compareDocumentsEncryption(PdfDocument,PdfDocument,CompareResult)
com.itextpdf.kernel.pdf.SmartModePdfObjectsSerializer.serArray(PdfArray,ByteBufferOutputStream,int,Map)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.insertEdgeIntoAEL(Edge,Edge)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.moveText(double,double)
com.itextpdf.kernel.font.PdfSimpleFont.flushFontData(String,PdfName)
com.itextpdf.kernel.pdf.PdfOutputStream.write(PdfArray)
com.itextpdf.kernel.pdf.PdfPages.removePage(int)
com.itextpdf.io.image.ImageDataFactory.createTiff(byte,boolean,int,boolean)
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.setPopup(PdfPopupAnnotation)
com.itextpdf.kernel.pdf.collection.PdfCollection.getSort()
com.itextpdf.kernel.pdf.PdfDocument.ensureTreeRootAddedToNames(PdfObject,PdfName)
com.itextpdf.kernel.pdf.PdfArrayTest.testValuesIndirectContains()
com.itextpdf.kernel.numbering.EnglishAlphabetNumbering.toLatinAlphabetNumberLowerCase(int)
com.itextpdf.layout.renderer.BlockRenderer.layout(LayoutContext)
com.itextpdf.io.source.GroupedRandomAccessSource.sourceReleased(IRandomAccessSource)
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.orientationMagnitude()
com.itextpdf.io.source.RandomAccessFileOrArray.skip(long)
com.itextpdf.kernel.pdf.PdfPage.isWrappedObjectMustBeIndirect()
com.itextpdf.io.codec.brotli.dec.SynthTest.testBaseDictWordTooLong()
com.itextpdf.pdfa.PdfADocument.checkShowTextIsoConformance(Object,PdfResources)
com.itextpdf.kernel.pdf.ParentTreeTest.test01()
com.itextpdf.io.font.otf.OpenTypeFontTableReader.readUShortArray(int)
com.itextpdf.kernel.pdf.layer.PdfOCProperties.getLayers()
com.itextpdf.pdfa.PdfA2AnnotationCheckTest.annotationCheckTest03()
com.itextpdf.kernel.utils.CompareTool.equals(Object)
com.itextpdf.io.codec.Base64.encodeFileToFile(String,String)
com.itextpdf.signatures.LtvVerification.buildOCSPResponse(byte)
com.itextpdf.kernel.pdf.ByteBufferOutputStream.fillCache(int)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.setPropertyInteger(String,String,int,PropertyOptions)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff079Test.getTestInfo()
com.itextpdf.layout.renderer.BlockRenderer.applyMaxHeight(Rectangle,Float,MarginsCollapseHandler,boolean,boolean,OverflowPropertyValue)
com.itextpdf.layout.ElementPropertyContainer.setStrokeColor(Color)
com.itextpdf.kernel.pdf.xobject.PdfImageXObject.flush()
com.itextpdf.kernel.geom.AffineTransform.setToShear(double,double)
com.itextpdf.kernel.xmp.impl.XMPNormalizer.tweakOldXMP(XMPNode)
com.itextpdf.kernel.pdf.colorspace.PdfCieBasedCs.flush()
com.itextpdf.io.font.FontCacheKey.create(String,int)
com.itextpdf.kernel.pdf.PdfNull.toString()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff078Test.getTestInfo()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.getPage()
com.itextpdf.layout.BorderTest.borderBoxTest()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.getFlags()
com.itextpdf.kernel.pdf.ReaderProperties.clearEncryptionParams()
com.itextpdf.kernel.xmp.impl.QName.getLocalName()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.addInlineImage(PdfImageXObject,float,float,float,float,float,float)
com.itextpdf.io.font.OpenTypeParser.readFormat0()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff008Test.getFontName()
com.itextpdf.layout.element.BlockElement.setPaddingTop(float)
com.itextpdf.layout.renderer.AbstractRenderer.isKeepTogether()
com.itextpdf.kernel.pdf.PdfEncryption.encryptByteArray(byte)
com.itextpdf.kernel.pdf.PdfReaderTest.objectTypeEqualTo(PdfObject,PdfName)
com.itextpdf.barcodes.BarcodeDataMatrix.getWs()
com.itextpdf.layout.Style.setRotationAngle(float)
com.itextpdf.signatures.sign.LtvWithTwoSignatures.AddLtvInfo(String,String,String,TestOcspClient,TestCrlClient)
com.itextpdf.kernel.pdf.layer.PdfOCProperties.readOrderFromDictionary(PdfLayer,PdfArray,Map)
com.itextpdf.kernel.pdf.PdfPage.setPageRotationInverseMatrixWritten()
com.itextpdf.layout.ImageTest.imageTest09()
com.itextpdf.layout.renderer.LineRenderer.trimLast()
com.itextpdf.signatures.TSAClientBouncyCastle.getMessageDigest()
com.itextpdf.kernel.pdf.PdfPagesTest.getPageSizeWithInheritedMediaBox()
com.itextpdf.layout.renderer.AreaBreakRenderer.deleteOwnProperty(int)
com.itextpdf.kernel.pdf.action.PdfAction.getArrayFromStringList(String)
com.itextpdf.layout.font.FontProvider.addFont(byte,String)
com.itextpdf.kernel.pdf.PdfStreamTest.before()
com.itextpdf.kernel.font.PdfFont.containsGlyph(char)
com.itextpdf.kernel.utils.CompareTool.clone()
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.processFixedHeightAdjustment(float)
com.itextpdf.layout.border.DashedBorder.drawCellBorder(PdfCanvas,float,float,float,float)
com.itextpdf.io.font.FontMetrics.getDescender()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff096Test.getTestInfo()
com.itextpdf.layout.property.Background.getColor()
com.itextpdf.kernel.xmp.impl.XMPUtilsImpl.checkSeparator(String)
com.itextpdf.layout.KeepWithNextTest.keepWithNextTest11()
com.itextpdf.forms.fields.PdfFormField.addKid(PdfFormField)
com.itextpdf.pdfa.PdfA1ActionCheckTest.actionCheck01()
com.itextpdf.kernel.pdf.PdfString.copyTo(PdfDocument,boolean)
com.itextpdf.signatures.PdfPKCS7.getSigningCertificate()
com.itextpdf.barcodes.qrcode.MatrixUtil.embedVerticalSeparationPattern(int,int,ByteMatrix)
com.itextpdf.io.codec.TIFFDirectory.getTags()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff116Test.getFontName()
com.itextpdf.kernel.pdf.tagutils.AccessibilityProperties.setActualText(String)
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperBase.popLocalMinima()
com.itextpdf.kernel.pdf.PdfFontTest.createDocumentWithType3Font()
com.itextpdf.kernel.pdf.PdfPage.getTabOrder()
com.itextpdf.layout.TabsTest.tabsInParagraphTest01()
com.itextpdf.io.codec.LZWCompressor.compress(byte,int,int)
com.itextpdf.kernel.pdf.PdfViewerPreferences.setNumCopies(int)
com.itextpdf.kernel.font.Type3FontProgram.isColorized()
com.itextpdf.layout.layout.LayoutArea.clone()
com.itextpdf.pdfa.checker.PdfA1Checker.checkNonSymbolicTrueTypeFont(PdfTrueTypeFont)
com.itextpdf.layout.element.Table.flush()
com.itextpdf.kernel.pdf.PdfCatalog.put(PdfName,PdfObject)
com.itextpdf.forms.xfa.XfaForm.getXfaFieldValue(String)
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.getIntent()
com.itextpdf.io.image.ImageDataFactory.create(String,boolean)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.curveTo(double,double,double,double)
com.itextpdf.io.font.otf.OpenTypeScript.readScriptRecord(TagAndLocation)
com.itextpdf.kernel.pdf.PdfResources.addImage(PdfStream)
com.itextpdf.layout.AutoTaggingTest.wordBreaksLineEndingsTest01()
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.isWrappedObjectMustBeIndirect()
com.itextpdf.signatures.SignUtils.dateToString(Calendar)
com.itextpdf.kernel.xmp.impl.ParseRDF.addQualifierNode(XMPNode,String,String)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Point.equals(Object)
com.itextpdf.kernel.pdf.filters.LZWDecoder.addStringToTable(byte)
com.itextpdf.kernel.pdf.PdfStream.copyTo(PdfDocument)
com.itextpdf.kernel.pdf.annot.PdfTextMarkupAnnotation.createHighLight(Rectangle,float)
com.itextpdf.layout.renderer.AbstractRenderer.applyAbsolutePositionIfNeeded(LayoutContext)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setAppearanceState(PdfName)
com.itextpdf.kernel.pdf.canvas.wmf.MetaPen.getStyle()
com.itextpdf.layout.Document.add(IBlockElement)
com.itextpdf.kernel.xmp.impl.XMPSerializerRDF.serializeCompactRDFGeneralQualifier(int,XMPNode)
com.itextpdf.kernel.utils.PageRangeTest.addCustomAndConstructor()
com.itextpdf.layout.minmaxwidth.MinMaxWidthUtils.getEps()
com.itextpdf.io.font.otf.OpenTableLookup.transformLine(GlyphLine)
com.itextpdf.signatures.sign.PadesSigTest.before()
com.itextpdf.io.codec.TIFFField.getAsInt(int)
com.itextpdf.kernel.numbering.EnglishAlphabetNumbering.toLatinAlphabetNumber(int,boolean)
com.itextpdf.layout.TableTest.skipFooterTest01()
com.itextpdf.kernel.pdf.PdfOutline.addOutline(String,int)
com.itextpdf.kernel.xmp.options.Options.containsAllOptions(int)
com.itextpdf.forms.PdfSigFieldLockDictionary.isWrappedObjectMustBeIndirect()
com.itextpdf.kernel.utils.CompareToolTest.setUp()
com.itextpdf.kernel.pdf.layer.PdfLayer.setOnPanel(boolean)
com.itextpdf.kernel.xmp.XMPVersionInfo.getMessage()
com.itextpdf.kernel.pdf.canvas.draw.SolidLine.getColor()
com.itextpdf.layout.element.Table.addHeaderCell(Image)
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingStandard40.computeUserPassword(byte,PdfDictionary)
com.itextpdf.barcodes.BarcodeDataMatrix.placeBarcode(PdfCanvas,Color)
com.itextpdf.io.codec.CCITTG4Encoder.pixel(byte,int,int)
com.itextpdf.kernel.xmp.impl.xpath.XMPPath.toString()
com.itextpdf.layout.font.FontCharacteristics.setItalicFlag(boolean)
com.itextpdf.io.image.BmpImageHelper.read24Bit(byte,BmpParameters)
com.itextpdf.kernel.crypto.AesDecryptor.finish()
com.itextpdf.layout.element.BlockElement.setMarginLeft(float)
com.itextpdf.forms.fields.PdfChoiceFormField.setListSelected(String)
com.itextpdf.layout.RotationTest.fixedWidthRotationTest02()
com.itextpdf.kernel.pdf.tagging.PdfObjRef.getReferencedObject()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.minkowski(Path,Path,boolean,boolean)
com.itextpdf.layout.renderer.CollapsedTableBorders.getHorizontalBorder(int)
com.itextpdf.io.font.cmap.CMapObject.getType()
com.itextpdf.layout.hyphenation.CharVector.capacity()
com.itextpdf.kernel.pdf.PdfPage.getRotation()
com.itextpdf.io.source.PdfTokenizer.readString(int)
com.itextpdf.io.image.Jpeg2000ImageData.getApprox()
com.itextpdf.layout.BlockTest.overflowTest04()
com.itextpdf.io.font.FontProgramFactory.readFontBytesFromPath(String)
com.itextpdf.kernel.pdf.PdfDocumentTest.checkAndResolveCircularReferences()
com.itextpdf.kernel.pdf.action.PdfAction.createMovie(PdfAnnotation,String,PdfName)
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6.checkIfLookaheadContextMatch(GlyphLine,ContextualSubstRule,int)
com.itextpdf.kernel.utils.CompareTool.toString()
com.itextpdf.io.font.CFFFontSubset.CalcSubrOffsetSize(int,int)
com.itextpdf.kernel.pdf.PdfFontTest.autoDetect1()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff060Test.getFontName()
com.itextpdf.io.source.ByteBuffer.get(int)
com.itextpdf.layout.LinkTest.linkTest02()
com.itextpdf.layout.ListTest.listItemTest02()
com.itextpdf.io.font.CMapEncoding.getCidCode(int)
com.itextpdf.kernel.pdf.PdfReaderTest.appendModeWith10PagesWithCompression()
com.itextpdf.io.source.OutputStream.readObject(java,io,ObjectInputStream)
com.itextpdf.kernel.xmp.XMPDateTime.setYear(int)
com.itextpdf.io.source.RandomAccessSourceFactory.setExclusivelyLockFile(boolean)
com.itextpdf.layout.ElementPropertyContainer.setFixedPosition(float,float,UnitValue)
com.itextpdf.signatures.PdfPKCS7.setReason(String)
com.itextpdf.layout.element.Cell.getRenderer()
com.itextpdf.io.font.woff2.Round.round4(long)
com.itextpdf.forms.fields.PdfFormField.getFontAndSize(PdfDictionary)
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperOffset.fixOrientations()
com.itextpdf.layout.renderer.FloatingHelper.isClearanceApplied(List,ClearPropertyValue)
com.itextpdf.layout.PreLayoutTest.initElementAreas(LayoutArea)
com.itextpdf.layout.element.Image.setMinWidth(float)
com.itextpdf.kernel.pdf.PdfPage.addAnnotation(int,PdfAnnotation,boolean)
com.itextpdf.io.font.Type1Parser.isAfmFile(RandomAccessFileOrArray)
com.itextpdf.io.font.woff2.w3c.format.TabledataTransformLength001Test.isFontValid()
com.itextpdf.forms.fields.PdfFormField.createText(PdfDocument,Rectangle,String)
com.itextpdf.io.font.CFFFontSubset.CreateKeys(OffsetItem,OffsetItem,OffsetItem,OffsetItem)
com.itextpdf.io.image.ImageData.getDecode()
com.itextpdf.kernel.pdf.FreeReferencesTest.freeReferencesTest07()
com.itextpdf.kernel.events.EventDispatcher.dispatchEvent(Event)
com.itextpdf.io.font.woff2.w3c.format.TabledataHmtxTransform001Test.isFontValid()
com.itextpdf.io.codec.TIFFFaxDecoder.nextLesserThan8Bits(int)
com.itextpdf.kernel.pdf.collection.PdfCollectionSchema.isWrappedObjectMustBeIndirect()
com.itextpdf.signatures.OCSPVerifier.isValidResponse(BasicOCSPResp,X509Certificate)
com.itextpdf.kernel.pdf.canvas.parser.data.PathRenderInfo.getClippingRule()
com.itextpdf.kernel.pdf.PdfOutline.setTitle(String)
com.itextpdf.kernel.geom.AffineTransform.multiply(AffineTransform,AffineTransform)
com.itextpdf.kernel.pdf.PdfArrayTest.testValuesIndirectRemove()
com.itextpdf.kernel.crypto.securityhandler.PubKeySecurityHandler.addRecipient(Certificate,int)
com.itextpdf.kernel.pdf.PdfDictionaryEntrySet.hasNext()
com.itextpdf.layout.element.Table.complete()
com.itextpdf.kernel.geom.Matrix.hashCode()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setNormalAppearance(PdfDictionary)
com.itextpdf.kernel.pdf.PdfObjectStream.getIndexStream()
com.itextpdf.layout.renderer.LineRenderer.decreaseRelativeWidthByChildAdditionalWidth(IRenderer,float)
com.itextpdf.layout.renderer.AreaBreakRenderer.setProperty(int,Object)
com.itextpdf.io.font.woff2.Woff2Common.compareTo(Table)
com.itextpdf.layout.renderer.MinWidthTest.divWithSmallRotatedDiv()
com.itextpdf.kernel.font.PdfType1Font.setSubset(boolean)
com.itextpdf.kernel.pdf.PdfReader.rebuildXref()
com.itextpdf.kernel.pdf.PdfStampingTest.stampingXmp2()
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.restoreState(int,PdfCanvas)
com.itextpdf.barcodes.qrcode.GF256Poly.multiply(int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff077Test.getFontName()
com.itextpdf.io.font.woff2.w3c.format.DirectoryTableOrder001Test.getFontName()
com.itextpdf.io.font.cmap.AbstractCMap.setOrdering(String)
com.itextpdf.pdfa.PdfA2CatalogCheckTest.catalogCheck04()
com.itextpdf.io.font.otf.Glyph.setChars(char)
com.itextpdf.kernel.xmp.XMPMetaFactory.getBuild()
com.itextpdf.kernel.pdf.canvas.parser.clipper.PolyNode.getChilds()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff086Test.getFontName()
com.itextpdf.io.codec.brotli.dec.DecodeTest.checkDecodeResource(String,String)
com.itextpdf.io.source.OutputStream.writeInteger(int)
com.itextpdf.io.font.FontMetrics.setMaxGlyphId(int)
com.itextpdf.layout.renderer.AccessibleAttributesApplier.applyLayoutAttributes(PdfName,AbstractRenderer,PdfDocument)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff137Test.getTestInfo()
com.itextpdf.io.codec.brotli.dec.SynthTest.testInvalidTooLargeContextMap()
com.itextpdf.io.util.IntHashtable.isEmpty()
com.itextpdf.io.source.ByteBufferRandomAccessSource.close()
com.itextpdf.kernel.geom.Matrix.multiply(Matrix)
com.itextpdf.pdfa.PdfA2GraphicsCheckTest.colorCheckTest3()
com.itextpdf.io.codec.Base64.decodeFromFile(String)
com.itextpdf.layout.renderer.TableRenderer.split(int)
com.itextpdf.io.font.woff2.Woff2MemoryOut.write(byte,int,int,int)
com.itextpdf.kernel.xmp.impl.XMPSerializerRDF.writeChars(int,char)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff031Test.getFontName()
com.itextpdf.io.font.otf.Glyph.getUnicode()
com.itextpdf.kernel.pdf.colorspace.PdfPattern.getBBox()
com.itextpdf.layout.element.List.makeNewRenderer()
com.itextpdf.layout.renderer.TableRenderer.getMinMaxWidth(float)
com.itextpdf.kernel.pdf.PdfDocument.createNextIndirectReference()
com.itextpdf.layout.AutoTaggingTest.listTest02()
com.itextpdf.io.source.RASInputStream.read()
com.itextpdf.kernel.pdf.PdfFontTest.createDocumentWithType1FontPfm()
com.itextpdf.barcodes.BarcodePDF417.assemble()
com.itextpdf.kernel.pdf.canvas.parser.data.PathRenderInfo.getFillColor()
com.itextpdf.kernel.color.DeviceRgb.makeDarker(DeviceRgb)
com.itextpdf.kernel.pdf.colorspace.PdfShading.getBitsPerCoordinate()
com.itextpdf.layout.ElementPropertyContainer.setOpacity(Float)
com.itextpdf.layout.renderer.AbstractRenderer.deleteProperty(int)
com.itextpdf.layout.renderer.FloatingHelper.applyClearance(Rectangle,MarginsCollapseHandler,float,boolean)
com.itextpdf.layout.renderer.TableRenderer.setCell(int,int,CellRenderer)
com.itextpdf.barcodes.qrcode.Version.getProvisionalVersionForDimension(int)
com.itextpdf.kernel.pdf.navigation.PdfExplicitDestination.add(PdfName)
com.itextpdf.kernel.xmp.impl.XMPIteratorImpl.setChildrenIterator(Iterator)
com.itextpdf.kernel.pdf.navigation.PdfNamedDestination.getDestinationPage(Map)
com.itextpdf.pdfa.checker.PdfA2Checker.checkSeparationInsideDeviceN(PdfArray,PdfObject,PdfIndirectReference)
com.itextpdf.kernel.xmp.XMPMeta.getQualifier(String,String,String,String)
com.itextpdf.layout.renderer.TypographyUtils.equals(Object)
com.itextpdf.io.codec.brotli.dec.DecodeTest.checkDecodeResourceWithDictionary(String,String,String)
com.itextpdf.forms.xfa.XFAFormTest.createEmptyXFAFormTest01()
com.itextpdf.io.source.RandomAccessSourceFactory.createByReadingToMemory(InputStream)
com.itextpdf.pdfa.PdfA2GraphicsCheckTest.transparencyCheckTest1()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Point.slopesNearCollinear(LongPoint,LongPoint,LongPoint,double)
com.itextpdf.kernel.pdf.EncodingTest.notdefInType0Test()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.appendPolygon(Edge,Edge)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff063Test.isFontValid()
com.itextpdf.kernel.pdf.annot.Pdf3DAnnotation.setInteractive(boolean)
com.itextpdf.layout.border.SolidBorder.getType()
com.itextpdf.io.codec.TIFFFaxDecompressor.nextLesserThan8Bits(int)
com.itextpdf.kernel.xmp.XMPMeta.setPropertyDate(String,String,XMPDateTime)
com.itextpdf.kernel.xmp.impl.XMPNode.iterateQualifier()
com.itextpdf.layout.element.BlockElement.setMarginBottom(float)
com.itextpdf.kernel.pdf.PdfEncryptionTest.encryptWithPasswordAes128NoCompression()
com.itextpdf.layout.TableBorderTest.tableWithHeaderFooterTest07()
com.itextpdf.io.codec.TIFFField.getAsShorts()
com.itextpdf.kernel.geom.Rectangle.toString()
com.itextpdf.io.font.FontMetrics.getLineGap()
com.itextpdf.io.font.woff2.Buffer.getOffset()
com.itextpdf.forms.PdfFormFieldTest.realFontSizeRegenerateAppearanceTest()
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.writeObject(ObjectOutputStream)
com.itextpdf.signatures.SignaturePolicyInfo.getPolicyUri()
com.itextpdf.kernel.pdf.canvas.parser.GlyphTextEventListenerTest.test01()
com.itextpdf.io.util.FileUtil.listFilesInDirectory(String,boolean)
com.itextpdf.kernel.pdf.WriterProperties.isStandardEncryptionUsed()
com.itextpdf.kernel.pdf.FreeReferencesTest.freeReferencesTest08()
com.itextpdf.kernel.pdf.ReaderProperties.setPublicKeySecurityParams(Certificate,Key,String,IExternalDecryptionProcess)
com.itextpdf.layout.renderer.AbstractRenderer.updateMinHeightForAbsolutelyPositionedRenderer(IRenderer,Rectangle,Float,Float)
com.itextpdf.layout.ColumnDocumentRenderer.getNextAreaNumber()
com.itextpdf.kernel.utils.CompareTool.compareByContent(String,String,String,String)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Point.setZ(T)
com.itextpdf.layout.BackgroundColorTest.closeDocumentAndCompareOutputs(Document)
com.itextpdf.io.image.RawImageHelper.updateRawImageParameters(RawImageData,int,int,boolean,int,int,byte,int)
com.itextpdf.kernel.font.PdfFontFactory.createFont(PdfDictionary)
com.itextpdf.layout.element.ListItem.setListSymbol(Text)
com.itextpdf.kernel.pdf.tagutils.AccessibilityProperties.setToStructElem(PdfStructElem)
com.itextpdf.barcodes.BarcodePDF417.outCodeword(int)
com.itextpdf.layout.font.FontProvider.addFont(FontProgram)
com.itextpdf.io.util.ResourceUtil.getResourceStream(String,ClassLoader)
com.itextpdf.forms.xfa.XFAFormTest.createEmptyXFAFormTest02()
com.itextpdf.pdfa.checker.PdfA2Checker.getMaxStringLength()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.countArrayItems(String,String)
com.itextpdf.io.image.GifImageHelper.readBlock(GifParameters)
com.itextpdf.kernel.crypto.AESCipher.doFinal()
com.itextpdf.layout.TableTest.simpleTableTest18()
com.itextpdf.layout.FloatTest.floatsOnPageSplit06()
com.itextpdf.kernel.pdf.PdfObject.equalContent(PdfObject,PdfObject)
com.itextpdf.layout.minmaxwidth.MinMaxWidth.setAdditionalWidth(float)
com.itextpdf.io.font.OpenTypeParser.checkCff()
com.itextpdf.layout.TableTest.simpleTableTest22()
com.itextpdf.layout.minmaxwidth.RotationMinMaxWidth.getMaxWidthHeight()
com.itextpdf.signatures.SignatureUtil.getSignatureNames()
com.itextpdf.io.font.FontMetrics.setStemV(int)
com.itextpdf.kernel.pdf.tagging.IPdfStructElem.getParent()
com.itextpdf.kernel.xmp.impl.xpath.XMPPathSegment.toString()
com.itextpdf.kernel.pdf.PdfPage.getTrimBox()
com.itextpdf.layout.DefaultLayoutTest.emptyParagraphsTest02()
com.itextpdf.kernel.geom.Path.getLastSubpath()
com.itextpdf.layout.element.BlockElement.setMarginRight(float)
com.itextpdf.kernel.pdf.PdfObjectTest.pdtIndirectReferenceLateInitializing1()
com.itextpdf.kernel.font.DocTrueTypeFont.getFontFile()
com.itextpdf.kernel.pdf.PdfCatalog.setOpenAction(PdfAction)
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.moveTagPointerToTag(IAccessibleElement,TagTreePointer)
com.itextpdf.kernel.font.DocType1Font.getMissingWidth()
com.itextpdf.io.image.ImageData.getRotation()
com.itextpdf.kernel.pdf.colorspace.PdfShading.setMatrix(float)
com.itextpdf.barcodes.BarcodeDataMatrixTest.barcode03Test()
com.itextpdf.kernel.pdf.tagging.PdfMcrNumber.getMcid()
com.itextpdf.layout.element.Text.setTextRise(float)
com.itextpdf.layout.border.OutsetBorder.setInnerHalfColor(PdfCanvas,Border,Side)
com.itextpdf.io.font.otf.GsubLookupType5.readSubTableFormat1(int)
com.itextpdf.layout.renderer.DocumentRenderer.getOccupiedArea()
com.itextpdf.layout.KeepWithNextTest.keepWithNextTest08()
com.itextpdf.layout.hyphenation.HyphenationConfig.hyphenate(String)
com.itextpdf.io.source.GroupedRandomAccessSource.get(long)
com.itextpdf.barcodes.BarcodeInter25.getBarsInter25(String)
com.itextpdf.layout.renderer.ListItemRenderer.createOverflowRenderer(int)
com.itextpdf.signatures.PdfPKCS7.setSignaturePolicy(SignaturePolicyInfo)
com.itextpdf.pdfa.PdfADocument.flushObject(PdfObject,boolean)
com.itextpdf.layout.element.BlockElement.setMargins(float,float,float,float)
com.itextpdf.io.codec.brotli.dec.DecodeTest.decompressWithDictionary(byte,byte)
com.itextpdf.kernel.pdf.PdfOutputStream.write(PdfNumber)
com.itextpdf.kernel.utils.CompareTool.findStringDifference(String,String,StringBuilder)
com.itextpdf.kernel.pdf.tagging.ParentTreeHandler.getPageMarkedContentReferences(PdfPage)
com.itextpdf.signatures.PdfSignature.setName(String)
com.itextpdf.layout.element.Table.addHeaderCell(Cell)
com.itextpdf.layout.renderer.TextRenderer.setText(GlyphLine,int,int)
com.itextpdf.kernel.pdf.tagutils.TagReference.addProperty(PdfName,PdfObject)
com.itextpdf.layout.TabsTest.simpleTabStopsTest()
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getUnscaledFontSpaceWidth()
com.itextpdf.kernel.pdf.xobject.PdfFormXObject.put(PdfName,PdfObject)
com.itextpdf.kernel.pdf.PdfObjectWrapper.setModified()
com.itextpdf.signatures.PdfSigner.isPreClosed()
com.itextpdf.barcodes.BarcodeDataMatrix.setEncoding(String)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.setMiterLimit(float)
com.itextpdf.kernel.font.PdfFont.getWidth(String)
com.itextpdf.pdfa.checker.PdfA1Checker.getFormFields(PdfArray)
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.getPointerStructElem(TagTreePointer)
com.itextpdf.forms.PdfFormFieldTest.buttonFieldTest01()
com.itextpdf.kernel.xmp.XMPMeta.clone()
com.itextpdf.kernel.numbering.RomanNumbering.toRomanUpperCase(int)
com.itextpdf.layout.renderer.AbstractRenderer.deleteOwnProperty(int)
com.itextpdf.kernel.xmp.XMPUtils.decodeBase64(String)
com.itextpdf.layout.minmaxwidth.RotationMinMaxWidth.getMax()
com.itextpdf.io.font.FontRegisterProvider.getFont(String,int)
com.itextpdf.kernel.pdf.PdfPagesTree.internalRemovePage(int)
com.itextpdf.kernel.pdf.canvas.parser.clipper.PolyNode.setParent(PolyNode)
com.itextpdf.kernel.geom.Point.distanceSq(Point)
com.itextpdf.barcodes.qrcode.BitVector.size()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Paths.closedPathsFromPolyTree(PolyTree)
com.itextpdf.kernel.pdf.colorspace.PdfShading.getBitsPerComponent()
com.itextpdf.io.font.PdfEncodings.convertToString(byte,String)
com.itextpdf.kernel.pdf.xobject.PdfImageXObject.getBufferedImage()
com.itextpdf.io.image.PngImageHelper.getInt(InputStream)
com.itextpdf.io.font.FontNames.getFontWeight()
com.itextpdf.io.util.FileUtil.getFontsDir()
com.itextpdf.barcodes.qrcode.Encoder.initQRCode(int,ErrorCorrectionLevel,int,Mode,QRCode)
com.itextpdf.kernel.pdf.PdfPage.getStreamBytes(int)
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getCharacterRenderInfos()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff142Test.getTestInfo()
com.itextpdf.kernel.pdf.canvas.parser.ParserGraphicsState.transformPoints(Matrix,Point)
com.itextpdf.kernel.pdf.PdfNameTest.specialCharactersTest()
com.itextpdf.layout.TabsTest.beforeClass()
com.itextpdf.layout.renderer.BlockRenderer.createOverflowRenderer(int)
com.itextpdf.kernel.pdf.canvas.parser.clipper.PolyNode.getNext()
com.itextpdf.io.font.PdfEncodings.charToByte(char,String)
com.itextpdf.forms.xfa.XfaForm.fillXfaForm(Node,boolean)
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.findLastTagWithActualText(List)
com.itextpdf.kernel.xmp.impl.XMPIteratorImpl.setReturnProperty(XMPPropertyInfo)
com.itextpdf.io.source.OutputStream.writeByte(byte)
com.itextpdf.kernel.pdf.PdfName.getValue()
com.itextpdf.kernel.pdf.PdfReaderTest.indirectsChain3()
com.itextpdf.kernel.xmp.XMPMeta.iterator(String,String,IteratorOptions)
com.itextpdf.barcodes.BarcodePDF417Test.barcode02Test()
com.itextpdf.forms.fields.PdfFormField.createCheckBox(PdfDocument,Rectangle,String,String,int,PdfAConformanceLevel)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setTextMatrix(float,float,float,float,float,float)
com.itextpdf.layout.renderer.BlockRenderer.applyVerticalAlignment()
com.itextpdf.pdfa.PdfA2EmbeddedFilesCheckTest.fileSpecCheckTest02()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.fill()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff049Test.getFontName()
com.itextpdf.io.font.OpenTypeParser.getTTCName(String)
com.itextpdf.io.font.woff2.w3c.format.HeaderLength001Test.getFontName()
com.itextpdf.signatures.OcspClientBouncyCastle.getEncoded(X509Certificate,X509Certificate,String)
com.itextpdf.kernel.pdf.FreeReferencesTest.freeReferencesTest01()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.executeInternal()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setDashPattern(PdfArray)
com.itextpdf.io.image.ImageData.setInterpolation(boolean)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff005Test.getFontName()
com.itextpdf.io.image.Jpeg2000ImageHelper.processImage(ImageData)
com.itextpdf.kernel.crypto.securityhandler.PubSecHandlerUsingAes128.setHashKeyForNextObject(int,int)
com.itextpdf.kernel.geom.BezierCurve.getPiecewiseLinearApproximation()
com.itextpdf.forms.xfa.XfaForm.extractNodes()
com.itextpdf.layout.PositioningTest.relativePositioningTest01()
com.itextpdf.layout.renderer.AbstractRenderer.applyPaddings(Rectangle,float,boolean)
com.itextpdf.layout.element.Table.addHeaderCell(String)
com.itextpdf.layout.TableTest.simpleTableTest13()
com.itextpdf.barcodes.dmcode.Placement.module(int,int,int,int)
com.itextpdf.kernel.xmp.XMPDateTimeFactory.setLocalTimeZone(XMPDateTime)
com.itextpdf.kernel.pdf.PdfEncryptionTest.encryptWithCertificateStandard40()
com.itextpdf.pdfa.PdfA1AnnotationCheckTest.annotationCheckTest07()
com.itextpdf.layout.TableBorderTest.wideBorderTest02()
com.itextpdf.barcodes.qrcode.FormatInformation.doDecodeFormatInformation(int,int)
com.itextpdf.kernel.xmp.impl.XMPSerializerRDF.writeIndent(int)
com.itextpdf.layout.renderer.TableBorders.getMaxBottomWidth()
com.itextpdf.kernel.utils.CompareTool.listDiffPagesAsString(List)
com.itextpdf.kernel.pdf.PdfDocument.getFont(PdfDictionary)
com.itextpdf.kernel.utils.PdfSplitter.getNextPdfWriter(PageRange)
com.itextpdf.kernel.pdf.annot.PdfWidgetAnnotation.getHighlightMode()
com.itextpdf.layout.SimpleTextExtractionStrategyTest.testCoLinnearTextWithSpace()
com.itextpdf.layout.TextWritingTest.beforeClass()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.closeTag()
com.itextpdf.layout.TableBorderTest.infiniteLoopTest01()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff143Test.isFontValid()
com.itextpdf.kernel.crypto.securityhandler.PubSecHandlerUsingStandard40.setPubSecSpecificHandlerDicEntries(PdfDictionary,boolean,boolean)
com.itextpdf.io.font.woff2.JavaUnsignedUtil.toU16(int)
com.itextpdf.io.font.otf.GlyphPositioningTableReader.readLookupTable(int,int,int)
com.itextpdf.forms.xfa.XfaForm.fillXfaForm(InputStream)
com.itextpdf.kernel.xmp.impl.XMPNode.removeChild(XMPNode)
com.itextpdf.layout.element.Paragraph.add(ILeafElement)
com.itextpdf.layout.renderer.BlockRenderer.createSplitAndOverflowRenderers(int,int,LayoutResult,Map,List)
com.itextpdf.layout.BorderTest.closeDocumentAndCompareOutputs(Document)
com.itextpdf.kernel.pdf.PdfPage.setIgnorePageRotationForContent(boolean)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.setLineJoinStyle(int)
com.itextpdf.layout.renderer.BlockRenderer.clipPolygon(List,Point,Point)
com.itextpdf.kernel.font.PdfFont.createSubsetPrefix()
com.itextpdf.barcodes.Barcode1D.setBaseline(float)
com.itextpdf.kernel.pdf.PdfPages.decrementCount()
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.getBlendMode()
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.getCurrentBackgroundColor()
com.itextpdf.kernel.pdf.PdfReader.getFileLength()
com.itextpdf.io.image.Jpeg2000ImageData.getPrec()
com.itextpdf.barcodes.qrcode.MatrixUtil.isValidValue(byte)
com.itextpdf.kernel.pdf.PdfFontTest.createWrongPfb()
com.itextpdf.layout.element.AbstractElement.getChildren()
com.itextpdf.kernel.pdf.tagging.StructureTreeCopier.separateKids(PdfDictionary,Set,LastClonedAncestor)
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.moveToKid(PdfName)
com.itextpdf.io.source.PdfTokenizer.getStringValue()
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6Format1.getBacktrackContextLength()
com.itextpdf.layout.hyphenation.PatternParser.parse(String)
com.itextpdf.kernel.utils.CompareTool.getOutObject()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff099Test.isFontValid()
com.itextpdf.layout.LargeElementTest.largeTableWithHeaderFooterTest01E()
com.itextpdf.forms.fields.PdfFormField.optionsArrayToString(PdfArray)
com.itextpdf.kernel.pdf.PdfReaderTest.fixPdfTest12()
com.itextpdf.io.source.OutputStream.writeByte(int)
com.itextpdf.kernel.pdf.PdfFontTest.ttfByStringNames()
com.itextpdf.pdfa.checker.PdfA2Checker.getMaxRealValue()
com.itextpdf.io.font.OpenTypeParser.getAllNameEntries()
com.itextpdf.io.source.RandomAccessFileOrArray.readChar()
com.itextpdf.kernel.pdf.annot.PdfLineAnnotation.setMeasure(PdfDictionary)
com.itextpdf.layout.Document.getTopMargin()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.setPropertyBoolean(String,String,boolean,PropertyOptions)
com.itextpdf.barcodes.qrcode.Encoder.interleaveWithECBytes(BitVector,int,int,int,BitVector)
com.itextpdf.layout.hyphenation.TernaryTree.compact(CharVector,TernaryTree,char)
com.itextpdf.kernel.crypto.securityhandler.PubSecHandlerUsingAes128.getEncryptionStream(OutputStream)
com.itextpdf.io.source.RandomAccessFileOrArray.readByte()
com.itextpdf.io.source.MappedChannelRandomAccessSource.toString()
com.itextpdf.signatures.PdfSignatureAppearance.getSignatureGraphic()
com.itextpdf.layout.renderer.DocumentRenderer.ensureDocumentHasNPages(int,PageSize)
com.itextpdf.layout.renderer.RotationUtils.storeProperty(int)
com.itextpdf.io.source.RandomAccessFileOrArray.readUnsignedIntLE()
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperOffset.doMiter(int,int,double)
com.itextpdf.barcodes.qrcode.Version.getDataCodewords()
com.itextpdf.kernel.pdf.canvas.parser.listener.CharacterRenderInfo.getLocation(TextRenderInfo)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setMiterLimit(float)
com.itextpdf.kernel.pdf.PdfPage.setResources(PdfResources)
com.itextpdf.test.ITextTest.createDestinationFolder(String)
com.itextpdf.kernel.pdf.canvas.draw.DashedLine.getColor()
com.itextpdf.layout.renderer.DocumentRenderer.addNewPage(PageSize)
com.itextpdf.forms.PdfFormFieldTest.unicodeFormFieldTest2()
com.itextpdf.io.font.woff2.Woff2Dec.readTableDirectory(Buffer,Woff2Common,Table,int)
com.itextpdf.layout.element.Image.getXObject()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.normalize(ParseOptions)
com.itextpdf.kernel.pdf.colorspace.PdfShading.setCoords(float,float,float,float)
com.itextpdf.io.source.DeflaterOutputStream.finish()
com.itextpdf.io.font.CFFFontSubset.CalcBias(int,int)
com.itextpdf.layout.property.Leading.hashCode()
com.itextpdf.layout.border.Border3D.getDarkerColor()
com.itextpdf.signatures.sign.PdfSignatureAppearanceTest.testSignatureAppearanceAutoscale(String,Rectangle,PdfSignatureAppearance,RenderingMode)
com.itextpdf.kernel.pdf.PdfObjectTest.getTestPdfDictionary()
com.itextpdf.layout.renderer.AccessibleAttributesApplier.getLayoutAttributes(PdfName,AbstractRenderer,TagTreePointer)
com.itextpdf.forms.fields.PdfFormField.createText(PdfDocument,Rectangle,String,String,PdfFont,int,boolean)
com.itextpdf.kernel.pdf.annot.PdfLineAnnotation.getLine()
com.itextpdf.kernel.pdf.PdfFontTest.createDocumentWithKozmin()
com.itextpdf.io.codec.CCITTG4Encoder.find1span(byte,int,int,int)
com.itextpdf.kernel.xmp.XMPMetaFactory.getMinor()
com.itextpdf.kernel.font.PdfFont.getWidth(int)
com.itextpdf.layout.renderer.ImageRenderer.applyRotationLayout(float)
com.itextpdf.kernel.font.PdfFontFactory.createRegisteredFont(String,String,boolean,boolean)
com.itextpdf.kernel.pdf.PdfEncryptionTest.beforeClass()
com.itextpdf.layout.renderer.CanvasRenderer.updateCurrentArea(LayoutResult)
com.itextpdf.layout.TableTest.bigRowspanTest06()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.appendArrayItem(String,String,String)
com.itextpdf.test.WrappedSamplesRunner.getCmpPdf(String)
com.itextpdf.io.font.woff2.Buffer.read(byte,int,int)
com.itextpdf.io.UtilitiesTest.testShortener()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff065Test.isFontValid()
com.itextpdf.kernel.font.PdfFont.splitString(String,int,float)
com.itextpdf.layout.hyphenation.Hyphenator.hyphenate(String,String,Map,String,int,int)
com.itextpdf.io.font.PdfEncodings.convertToBytes(char,String)
com.itextpdf.layout.FloatTest.floatingImageInParagraph()
com.itextpdf.kernel.pdf.xobject.PdfFormXObject.setBBox(PdfArray)
com.itextpdf.kernel.font.FontUtil.convertCompositeWidthsArray(PdfArray)
com.itextpdf.signatures.PrivateKeySignature.sign(byte)
com.itextpdf.layout.renderer.AbstractRenderer.calculateAbsolutePdfBBox()
com.itextpdf.signatures.sign.PdfSignatureAppearanceTest.init()
com.itextpdf.layout.RotationTest.fixedTextRotationTest02()
com.itextpdf.barcodes.qrcode.BitArray.reverse()
com.itextpdf.pdfa.PdfA1AnnotationCheckTest.beforeClass()
com.itextpdf.kernel.utils.PdfMerger.merge(PdfDocument,List)
com.itextpdf.signatures.SignatureUtil.doesSignatureFieldExist(String)
com.itextpdf.io.codec.TIFFFaxDecompressor.decodeBlackCodeWord()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff007Test.getTestInfo()
com.itextpdf.layout.renderer.TextRenderer.trimLast()
com.itextpdf.layout.element.Image.scaleAbsolute(float,float)
com.itextpdf.kernel.geom.AffineTransform.clone()
com.itextpdf.kernel.pdf.PdfEncryption.decryptByteArray(byte)
com.itextpdf.io.util.FileUtil.getFileOutputStream(File)
com.itextpdf.kernel.color.PatternColor.setPattern(PdfPattern)
com.itextpdf.barcodes.BarcodePDF417.placeBarcode(PdfCanvas,Color)
com.itextpdf.kernel.pdf.PdfPage.getStructParentIndex()
com.itextpdf.kernel.pdf.FreeReferencesTest.freeReferencesTest05()
com.itextpdf.layout.element.Cell.add(Image)
com.itextpdf.signatures.sign.PadesSigTest.padesEpesProfileTest01()
com.itextpdf.layout.font.FontSet.addFont(FontInfo,String)
com.itextpdf.kernel.xmp.options.PropertyOptions.setHasLanguage(boolean)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.joinPoints(Join,OutRec,OutRec)
com.itextpdf.io.source.IRandomAccessSource.close()
com.itextpdf.barcodes.BarcodePDF417.textCompaction(byte,int,int)
com.itextpdf.layout.OpacityTest.cellElementOpacity01()
com.itextpdf.barcodes.BarcodePDF417.setCode(String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff029Test.getTestInfo()
com.itextpdf.kernel.pdf.PdfCatalog.isEqualSameNameDestExist(Map,PdfDocument,String,PdfArray,PdfPage)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff128Test.getFontName()
com.itextpdf.pdfa.PdfA2AnnotationCheckTest.annotationCheckTest12()
com.itextpdf.io.IOException.getMessage()
com.itextpdf.layout.element.AbstractElement.propagateArtifactRoleToChildElements()
com.itextpdf.kernel.utils.CompareTool.compareXmls(byte,byte)
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.isChunkAtWordBoundary(TextChunk,TextChunk)
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.ensureElementPageEqualsKidPage(PdfStructElem,PdfDictionary)
com.itextpdf.kernel.pdf.canvas.parser.listener.GlyphTextEventListener.getResultantText()
com.itextpdf.kernel.font.PdfFontFactory.createFont(String,boolean)
com.itextpdf.pdfa.PdfA2ActionCheckTest.actionCheck10()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff028Test.getFontName()
com.itextpdf.kernel.font.PdfType0Font.createGlyphLine(String)
com.itextpdf.kernel.pdf.xobject.PdfFormXObject.setMarkStyle(PdfString)
com.itextpdf.io.font.woff2.w3c.format.TabledataTransformLength001Test.getTestInfo()
com.itextpdf.kernel.pdf.PdfCanvasTest.wmfImageTest04()
com.itextpdf.kernel.xmp.options.SerializeOptions.getEncodeUTF16LE()
com.itextpdf.kernel.crypto.securityhandler.PublicKeyRecipient.setCms(byte)
com.itextpdf.kernel.pdf.PdfReader.decodeBytes(byte,PdfDictionary,Map)
com.itextpdf.kernel.xmp.impl.xpath.XMPPathParser.parseIndexSegment(PathPosition)
com.itextpdf.layout.property.Background.getExtraLeft()
com.itextpdf.io.image.BmpImageHelper.readUnsignedShort(InputStream)
com.itextpdf.layout.element.Paragraph.setRole(PdfName)
com.itextpdf.barcodes.qrcode.BitVector.appendBit(int)
com.itextpdf.layout.renderer.ImageRenderer.getBorderAreaBBox()
com.itextpdf.barcodes.BarcodeCodabar.createAwtImage(java,awt,Color,java,awt,Color)
com.itextpdf.io.image.ImageDataFactory.create(URL)
com.itextpdf.layout.renderer.TableWidths.addPoints(float)
com.itextpdf.kernel.pdf.tagutils.BackedAccessibleProperties.setToStructElem(PdfStructElem)
com.itextpdf.layout.TableTest.simpleTableTest09()
com.itextpdf.kernel.pdf.PdfCanvasTest.createSimpleCanvas()
com.itextpdf.kernel.xmp.XMPMeta.getPropertyBase64(String,String)
com.itextpdf.layout.renderer.ListItemRenderer.layout(LayoutContext)
com.itextpdf.layout.layout.LayoutResult.setStatus(int)
com.itextpdf.kernel.pdf.canvas.wmf.MetaFont.getEncoding()
com.itextpdf.io.font.woff2.Woff2Common.computeULongSum(byte,int,int)
com.itextpdf.layout.property.Underline.getOpacity()
com.itextpdf.signatures.DigestAlgorithms.digest(InputStream,String,String)
com.itextpdf.io.util.HashCode.hashCode()
com.itextpdf.barcodes.qrcode.Mode.toString()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff090Test.isFontValid()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.setPacketHeader(String)
com.itextpdf.io.source.IRandomAccessSource.get(long)
com.itextpdf.kernel.font.PdfType1Font.containsGlyph(String,int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff053Test.getFontName()
com.itextpdf.kernel.pdf.PdfDictionaryTest.testEntrySet()
com.itextpdf.io.font.woff2.w3c.format.HeaderLength001Test.getTestInfo()
com.itextpdf.layout.element.Table.cellBelongsToAnyRowGroup(Cell,List)
com.itextpdf.kernel.pdf.PdfStampingTest.stampingAppend2()
com.itextpdf.kernel.xmp.impl.XMPMetaParser.parseXml(Object,ParseOptions)
com.itextpdf.io.font.woff2.Woff2Dec.convertWOFF2ToTTF(byte,int,byte,int)
com.itextpdf.io.font.CMapEncoding.getOrdering()
com.itextpdf.pdfa.PdfA2ActionCheckTest.beforeClass()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff078Test.getFontName()
com.itextpdf.kernel.pdf.PdfCanvasTest.copyPagesTest4()
com.itextpdf.layout.IPropertyContainer.getProperty(int)
com.itextpdf.io.image.JpegTest.openJpeg5()
com.itextpdf.kernel.xmp.XMPMetaFactory.isDebug()
com.itextpdf.kernel.pdf.PdfXrefTable.extendXref(int)
com.itextpdf.signatures.verify.CrlVerifierTest.validCrl01()
com.itextpdf.kernel.font.PdfSimpleFont.getFontEncoding()
com.itextpdf.io.codec.TiffWriter.writeField(OutputStream)
com.itextpdf.signatures.testutils.SignTestPortUtil.getMessageDigest(String)
com.itextpdf.kernel.pdf.PdfPage.setPageLabel(PageLabelNumberingStyleConstants,String,int)
com.itextpdf.kernel.font.PdfSimpleFont.getFontProgram()
com.itextpdf.kernel.pdf.canvas.wmf.InputMeta.readWord()
com.itextpdf.barcodes.qrcode.QRCode.setMatrixWidth(int)
com.itextpdf.kernel.xmp.XMPMeta.sort()
com.itextpdf.layout.renderer.TableWidths.getRow()
com.itextpdf.barcodes.BarcodeDataMatrix.getBarcodeSize()
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.hasBottomBorders(IRenderer)
com.itextpdf.kernel.pdf.navigation.PdfExplicitDestination.createFit(PdfPage)
com.itextpdf.io.codec.brotli.dec.State.decodeWindowBits(BitReader)
com.itextpdf.pdfa.PdfA1GraphicsTest.colorCheckTest1()
com.itextpdf.kernel.xmp.XMPMeta.setPropertyDouble(String,String,double)
com.itextpdf.io.font.woff2.w3c.format.Valid002Test.isFontValid()
com.itextpdf.pdfa.PdfA1AcroFormCheckTest.compareResult(String,String)
com.itextpdf.signatures.SignUtils.getTsaResponseForUserRequest(String,byte,String,String)
com.itextpdf.io.font.woff2.w3c.W3CWoff2DecodeTest.getTestClassName()
com.itextpdf.kernel.font.PdfTrueTypeFont.addFontStream(PdfDictionary)
com.itextpdf.kernel.pdf.PdfStructElemTest.structTreeCopyingTest03()
com.itextpdf.pdfa.PdfADocument.getConformanceLevel()
com.itextpdf.io.font.FontProgramFactory.registerFont(String)
com.itextpdf.kernel.xmp.XMPPathFactory.composeQualifierPath(String,String)
com.itextpdf.kernel.pdf.canvas.parser.listener.IPdfTextLocation.getPageNumber()
com.itextpdf.kernel.Version.getInstance()
com.itextpdf.kernel.pdf.tagging.ParentTreeHandler.registerAllMcrs()
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.moveToTag(IAccessibleElement)
com.itextpdf.kernel.utils.PageRangeTest.addSequenceAndSingle()
com.itextpdf.pdfa.PdfA1CanvasCheckTest.canvasCheckTest2()
com.itextpdf.kernel.pdf.PdfViewerPreferences.setNonFullScreenPageMode(PdfViewerPreferencesConstants)
com.itextpdf.kernel.xmp.impl.XMPDateTimeImpl.getSecond()
com.itextpdf.io.font.FontRegisterProvider.registerFontDirectory(String)
com.itextpdf.layout.TextWritingTest.textRenderingModeTest01()
com.itextpdf.io.font.FontMetrics.setWinAscender(int)
com.itextpdf.kernel.font.PdfSimpleFont.getFontDescriptor(String)
com.itextpdf.kernel.color.WebColors.missingHashColorFormat(String)
com.itextpdf.kernel.xmp.options.AliasOptions.isSimple()
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.setText(PdfString)
com.itextpdf.kernel.pdf.PdfDictionary.getAsFloat(PdfName)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.insertScanbeam(long)
com.itextpdf.signatures.IExternalDigest.getMessageDigest(String)
com.itextpdf.layout.TableBorderTest.splitCellsTest04()
com.itextpdf.layout.renderer.ListRenderer.createListSymbolRenderer(int,IRenderer)
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.getGraphicsState()
com.itextpdf.barcodes.qrcode.Mode.forBits(int)
com.itextpdf.io.source.OutputStream.flush()
com.itextpdf.kernel.crypto.securityhandler.PubSecHandlerUsingStandard40.getDecryptor()
com.itextpdf.kernel.color.Color.setColorValue(float)
com.itextpdf.kernel.pdf.canvas.parser.listener.RegexBasedLocationExtractionStrategy.compare(IPdfTextLocation,IPdfTextLocation)
com.itextpdf.kernel.xmp.impl.XMPMetaParser.parseXmlFromInputStream(InputStream,ParseOptions)
com.itextpdf.layout.element.TabStop.setTabAnchor(Character)
com.itextpdf.layout.element.Table.addCell(Cell)
com.itextpdf.kernel.xmp.options.Options.clear()
com.itextpdf.io.codec.brotli.dec.Transform.transformDictionaryWord(byte,int,ByteBuffer,int,int,Transform)
com.itextpdf.layout.renderer.TextRenderer.getYLine()
com.itextpdf.layout.renderer.RotationUtils.isOwnedByRender()
com.itextpdf.signatures.PdfSignatureAppearance.setSignDate(java,util,Calendar)
com.itextpdf.kernel.xmp.impl.ParseRDF.rdf_LiteralPropertyElement(XMPMetaImpl,XMPNode,Node,boolean)
com.itextpdf.kernel.font.DocType1Font.createFontProgram(PdfDictionary,FontEncoding,CMapToUnicode)
com.itextpdf.kernel.xmp.options.PropertyOptions.getHasQualifiers()
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperBase.removeEdge(Edge)
com.itextpdf.barcodes.BarcodeDataMatrix.X12Encodation(byte,int,int,byte,int,int,int,int,int)
com.itextpdf.io.font.FontRegisterProvider.getFont(String,int,boolean)
com.itextpdf.kernel.pdf.FreeReferencesTest.extractXrefTableAsStrings(String)
com.itextpdf.kernel.xmp.impl.XMPSerializerRDF.serializeCompactRDFAttrProps(XMPNode,int)
com.itextpdf.layout.element.List.setItemStartIndex(int)
com.itextpdf.kernel.pdf.PdfPage.setBleedBox(Rectangle)
com.itextpdf.kernel.pdf.colorspace.PdfShading.getFunction()
com.itextpdf.kernel.pdf.layer.PdfLayerMembership.getVisibilityExpression()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff146Test.getFontName()
com.itextpdf.kernel.font.PdfType3Font.getFontDescriptor(String)
com.itextpdf.kernel.pdf.PdfCanvasTest.canvasStampingJustCopiedStreamWithCompression()
com.itextpdf.layout.renderer.AbstractRenderer.beginTranformationIfApplied(PdfCanvas)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.getAppearanceDictionary()
com.itextpdf.kernel.pdf.ByteBufferOutputStream.convertToBytes(int)
com.itextpdf.kernel.pdf.PdfCatalog.addRootOutline(PdfOutline)
com.itextpdf.barcodes.BarcodeDataMatrix.setBit(int,int,int)
com.itextpdf.kernel.pdf.PdfDestinationTest.destCopyingTest05()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.lineTo(double,double)
com.itextpdf.kernel.pdf.PdfPagesTree.getNumberOfPages()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff079Test.getFontName()
com.itextpdf.kernel.geom.Rectangle.applyMargins(float,float,float,float,boolean)
com.itextpdf.kernel.pdf.PdfCopyTest.copyDocumentsWithFormFieldsTest()
com.itextpdf.io.font.OpenTypeParser.getFontNames()
com.itextpdf.io.image.ImageData.isMask()
com.itextpdf.layout.AutoTaggingTest.wordBreaksLineEndingsTest02()
com.itextpdf.layout.renderer.TableRenderer.initializeHeaderAndFooter(boolean)
com.itextpdf.kernel.xmp.impl.XMPDateTimeImpl.compareTo(Object)
com.itextpdf.signatures.sign.SigningTest.signingTaggedDocumentAppendMode()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff101Test.getTestInfo()
com.itextpdf.kernel.pdf.canvas.wmf.MetaState.getCurrentPen()
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingStandard40.getEncryptionStream(OutputStream)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff106Test.getFontName()
com.itextpdf.forms.PdfPageFormCopier.getAllFieldNames(PdfArray,Set)
com.itextpdf.kernel.pdf.colorspace.PdfCieBasedCs.getIccProfileStream(InputStream)
com.itextpdf.kernel.pdf.PdfIndirectReference.equals(Object)
com.itextpdf.kernel.pdf.filespec.PdfFileSpec.createEmbeddedFileSpec(PdfDocument,byte,String,String,PdfName,PdfDictionary,PdfName,boolean)
com.itextpdf.kernel.pdf.tagging.PdfStructTreeRoot.ifKidIsStructElementAddToList(PdfObject,List)
com.itextpdf.layout.ListTest.listItemNullSymbol()
com.itextpdf.kernel.pdf.PdfObject.copyTo(PdfDocument)
com.itextpdf.layout.element.Table.ensureFooterIsInitialized()
com.itextpdf.kernel.crypto.securityhandler.StandardSecurityHandler.getIsoBytes(PdfString)
com.itextpdf.io.font.FontProgram.getFontNames()
com.itextpdf.kernel.pdf.PdfDocument.getStructTreeRoot()
com.itextpdf.kernel.pdf.annot.PdfFixedPrint.setVerticalTranslation(float)
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.getDocument()
com.itextpdf.io.font.CFFFontSubset.StackOpp()
com.itextpdf.barcodes.qrcode.MatrixUtil.clearMatrix(ByteMatrix)
com.itextpdf.kernel.pdf.PdfDocumentInfo.setAuthor(String)
com.itextpdf.layout.renderer.TypographyUtils.callMethod(String,String,Object,Class,Object)
com.itextpdf.layout.element.ILargeElement.flush()
com.itextpdf.forms.xfa.XfaForm.write(PdfDocument)
com.itextpdf.signatures.ISignatureEvent.getSignatureDictionary(PdfSignature)
com.itextpdf.kernel.xmp.properties.XMPPropertyInfo.getPath()
com.itextpdf.io.font.FontRegisterProvider.getRegisteredFonts()
com.itextpdf.kernel.pdf.action.PdfAction.createURI(String,boolean)
com.itextpdf.barcodes.Barcode128.getHumanReadableUCCEAN(String)
com.itextpdf.io.font.FontNames.setFontName(String)
com.itextpdf.io.codec.brotli.dec.SynthTest.testBaseDictWord()
com.itextpdf.pdfa.PdfA2AnnotationCheckTest.createAppearance(PdfADocument,Rectangle)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.setTextRenderingMode(int)
com.itextpdf.barcodes.qrcode.ByteArray.at(int)
com.itextpdf.barcodes.qrcode.GF256.buildMonomial(int,int)
com.itextpdf.layout.hyphenation.TernaryTree.init()
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.getNextNewKidPosition()
com.itextpdf.kernel.utils.CompareTool.getReport()
com.itextpdf.kernel.xmp.options.Options.assertOptionsValid(int)
com.itextpdf.layout.renderer.TextRenderer.calculateAscenderDescender(PdfFont)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getBlackGenerationFunction2()
com.itextpdf.kernel.pdf.PdfCatalog.getNextItem(PdfDictionary,PdfOutline,Map)
com.itextpdf.layout.FloatTest.clearanceApplyingPageSplit08()
com.itextpdf.kernel.pdf.PdfResources.addColorSpace(PdfColorSpace)
com.itextpdf.kernel.xmp.impl.Utils.escapeXML(String,boolean,boolean)
com.itextpdf.io.font.otf.OpenTypeFontTableReader.startReadingTable()
com.itextpdf.layout.hyphenation.Hyphenation.length()
com.itextpdf.kernel.pdf.PdfCatalog.setAdditionalAction(PdfName,PdfAction)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff103Test.isFontValid()
com.itextpdf.signatures.PdfSignatureAppearance.getRenderingMode()
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperBase.addPaths(Paths,PolyType,boolean)
com.itextpdf.layout.ElementPropertyContainer.setSplitCharacters(ISplitCharacters)
com.itextpdf.kernel.pdf.PdfDocument.removePage(int)
com.itextpdf.signatures.LtvVerifier.coversWholeDocument()
com.itextpdf.kernel.xmp.impl.XMPNode.removeQualifiers()
com.itextpdf.kernel.pdf.PdfOutline.getContent()
com.itextpdf.pdfa.checker.PdfAChecker.checkDocument(PdfCatalog)
com.itextpdf.signatures.PdfPKCS7.getVersion()
com.itextpdf.signatures.PdfSignature.getName()
com.itextpdf.layout.font.FontProvider.addFont(FontProgram,String)
com.itextpdf.barcodes.qrcode.Encoder.terminateBits(int,BitVector)
com.itextpdf.io.font.FontMetrics.getAscender()
com.itextpdf.kernel.pdf.PdfDictionary.getAsDictionary(PdfName)
com.itextpdf.kernel.xmp.impl.XMPNode.find(List,String)
com.itextpdf.kernel.pdf.filespec.PdfFileSpec.createEmbeddedFileSpec(PdfDocument,String,String,String,PdfName,PdfName,boolean)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff058Test.getFontName()
com.itextpdf.forms.PdfFormCopyTest.copyFieldsTest03()
com.itextpdf.kernel.xmp.impl.XMPNode.getQualifier()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.beginMarkedContent(PdfName)
com.itextpdf.kernel.pdf.FreeReferencesTest.freeReferencesTest02()
com.itextpdf.io.font.FontRegisterProvider.getRegisteredFontFamilies()
com.itextpdf.io.codec.TIFFFaxDecoder.decodeWhiteCodeWord()
com.itextpdf.kernel.pdf.PdfFontTest.testPdfFontFactoryTtc()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff101Test.isFontValid()
com.itextpdf.kernel.utils.CompareTool.loadPagesFromReader(PdfDocument,List,List)
com.itextpdf.kernel.font.PdfFont.setSubset(boolean)
com.itextpdf.kernel.pdf.PdfReaderTest.garbageCollect()
com.itextpdf.signatures.PdfPKCS7.getEncodedPKCS1()
com.itextpdf.kernel.utils.IPageRangePart.getAllPagesInRange(int)
com.itextpdf.io.font.woff2.w3c.format.Valid001Test.isFontValid()
com.itextpdf.kernel.pdf.xobject.PdfFormXObject.getBBox()
com.itextpdf.io.image.ImageDataFactory.create(int,int,int,int,byte,int)
com.itextpdf.layout.TableTest.bigRowspanTest01()
com.itextpdf.kernel.font.PdfType0Font.containsGlyph(String,int)
com.itextpdf.kernel.pdf.canvas.parser.HighlightItemsTest.clear()
com.itextpdf.signatures.PdfSignatureBuildProperties.isWrappedObjectMustBeIndirect()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff088Test.isFontValid()
com.itextpdf.forms.fields.PdfChoiceFormField.setIndices(PdfArray)
com.itextpdf.io.font.FontProgramFactory.createType1Font(String,String)
com.itextpdf.kernel.pdf.collection.PdfCollectionItem.setPrefix(String,String)
com.itextpdf.kernel.pdf.tagging.PdfStructElem.removeKid(IPdfStructElem)
com.itextpdf.io.source.IRandomAccessSource.length()
com.itextpdf.barcodes.BarcodeDataMatrix.minValueInColumn(int,int)
com.itextpdf.kernel.font.PdfType0Font.flush()
com.itextpdf.layout.hyphenation.PatternParser.endElement(String,String,String)
com.itextpdf.kernel.geom.Rectangle.getWidth()
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6Format2.getSubstLookupRecords()
com.itextpdf.kernel.pdf.PdfEncryptionTest.openEncryptedDocWithoutPassword()
com.itextpdf.layout.element.List.setSymbolIndent(float)
com.itextpdf.kernel.geom.Rectangle.moveUp(float)
com.itextpdf.kernel.xmp.XMPUtils.removeProperties(XMPMeta,String,String,boolean,boolean)
com.itextpdf.io.codec.TIFFField.getTag()
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.getFillOverprint()
com.itextpdf.layout.renderer.AbstractRenderer.hasAbsoluteUnitValue(int)
com.itextpdf.io.util.FilterUtil.inflateData(byte,byte)
com.itextpdf.kernel.xmp.XMPMetaFactory.parse(InputStream,ParseOptions)
com.itextpdf.kernel.xmp.options.AliasOptions.getValidOptions()
com.itextpdf.layout.element.Image.setAutoScaleHeight(boolean)
com.itextpdf.io.font.otf.OpenTableLookup.nextGlyph(OpenTypeFontTableReader,int)
com.itextpdf.kernel.pdf.PdfResources.addExtGState(PdfExtGState)
com.itextpdf.io.font.TrueTypeFont.getPdfFontFlags()
com.itextpdf.kernel.xmp.impl.XMPNode.getUnmodifiableChildren()
com.itextpdf.layout.renderer.RootRenderer.addWaitingNextPageRenderers()
com.itextpdf.layout.TextWritingTest.leadingTest02()
com.itextpdf.kernel.pdf.PdfDictionaryTest.testValuesClear()
com.itextpdf.kernel.xmp.options.PropertyOptions.isArrayAlternate()
com.itextpdf.io.font.TrueTypeFont.readGdefTable()
com.itextpdf.kernel.pdf.PdfCatalog.copyDestination(PdfObject,Map,PdfDocument)
com.itextpdf.kernel.pdf.canvas.wmf.MetaFont.getFontSize(MetaState)
com.itextpdf.forms.fields.PdfTextFormField.setFileSelect(boolean)
com.itextpdf.kernel.pdf.annot.PdfFixedPrint.getVerticalTranslation()
com.itextpdf.kernel.xmp.impl.XMPNodeUtils.findQualifierNode(XMPNode,String,boolean)
com.itextpdf.layout.element.IElement.createRendererSubTree()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.addGhostJoin(Path,OutPt,LongPoint)
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.isElementConnectedToTag(IAccessibleElement)
com.itextpdf.signatures.CrlClientOnline.addUrl(URL)
com.itextpdf.io.font.CFFFontSubset.CreateNonCIDSubrs(int,IndexBaseItem,OffsetItem)
com.itextpdf.kernel.pdf.EncryptionProperties.setStandardEncryption(byte,byte,int,int)
com.itextpdf.kernel.pdf.navigation.PdfExplicitDestination.getDestinationPage(Map)
com.itextpdf.io.font.CFFFontSubset.CopyHeader()
com.itextpdf.kernel.font.PdfSimpleFont.appendAnyGlyph(String,int,List)
com.itextpdf.pdfa.checker.PdfA2Checker.checkExtGState(CanvasGraphicsState)
com.itextpdf.test.WrappedSamplesRunner.getDest()
com.itextpdf.layout.renderer.TabRenderer.layout(LayoutContext)
com.itextpdf.pdfa.PdfA2GraphicsCheckTest.imageCheckTest2()
com.itextpdf.pdfa.PdfA1GraphicsTest.egsCheckTest4()
com.itextpdf.kernel.geom.Vector.get(int)
com.itextpdf.kernel.xmp.XMPUtils.catenateArrayItems(XMPMeta,String,String,String,String,boolean)
com.itextpdf.kernel.pdf.colorspace.PdfShading.setMatrix(PdfArray)
com.itextpdf.kernel.font.PdfFont.isSubset()
com.itextpdf.layout.font.FontInfo.create(byte,String,String)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.EdgesAdjacent(IntersectNode)
com.itextpdf.io.image.Jpeg2000ImageData.getColorProfile()
com.itextpdf.kernel.font.PdfType3Font.getType3Glyph(int)
com.itextpdf.kernel.pdf.PdfPages.getFrom()
com.itextpdf.io.codec.brotli.dec.SynthTest.testCustomHuffmanCode()
com.itextpdf.layout.DefaultLayoutTest.addParagraphOnShortPage1()
com.itextpdf.barcodes.Barcode1D.getSize()
com.itextpdf.kernel.pdf.PdfResources.addProperties(PdfDictionary)
com.itextpdf.kernel.font.PdfFontFactory.createRegisteredFont(String,String,boolean,int)
com.itextpdf.kernel.pdf.PdfAnnotationTest.textMarkupTest04()
com.itextpdf.kernel.xmp.impl.XMPIteratorImpl.remove()
com.itextpdf.kernel.pdf.PdfFontTest.createDocumentWithType1FontAfm()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.resetFillColorRgb()
com.itextpdf.layout.margincollapse.MarginsCollapseInfo.setUsedBufferSpaceOnBottom(float)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff123Test.getTestInfo()
com.itextpdf.layout.border.RidgeBorder.setInnerHalfColor(PdfCanvas,Side)
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.getRectangleDifferences()
com.itextpdf.layout.RootElement.getOwnProperty(int)
com.itextpdf.kernel.pdf.canvas.parser.HighlightItemsTest.highlightIsoTc171()
com.itextpdf.io.image.BmpImageHelper.getImage(BmpParameters)
com.itextpdf.kernel.crypto.securityhandler.PublicKeyRecipient.getCms()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Edge.setBot(LongPoint)
com.itextpdf.kernel.pdf.annot.PdfScreenAnnotation.getSubtype()
com.itextpdf.test.LogListener.addAppenderToPackage()
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.removeElementConnectionToTag(IAccessibleElement)
com.itextpdf.barcodes.Barcode1D.setTextAlignment(int)
com.itextpdf.layout.renderer.AccessibleAttributesApplier.transformTextAlignmentValueToName(TextAlignment)
com.itextpdf.layout.FloatTest.floatsOnPageSplit02()
com.itextpdf.layout.element.AbstractElement.getProperty(int)
com.itextpdf.io.font.FontEncoding.addSymbol(int,int)
com.itextpdf.kernel.pdf.annot.PdfTrapNetworkAnnotation.getVersion()
com.itextpdf.kernel.pdf.PdfDocument.addEventHandler(String,IEventHandler)
com.itextpdf.kernel.pdf.xobject.PdfFormXObject.getResources()
com.itextpdf.forms.fields.PdfFormField.setReadOnly(boolean)
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.getPropertiesDictionary(PdfObject,PdfResources)
com.itextpdf.kernel.xmp.impl.XMPDateTimeImpl.getTimeZone()
com.itextpdf.layout.KeepWithNextTest.keepWithNextTest09()
com.itextpdf.kernel.pdf.canvas.CanvasTag.getRole()
com.itextpdf.kernel.xmp.XMPIterator.skipSiblings()
com.itextpdf.kernel.pdf.PdfWriterTest.copyObject3()
com.itextpdf.io.util.TextUtil.isNonPrintable(int)
com.itextpdf.layout.font.FontProvider.addFont(byte)
com.itextpdf.kernel.pdf.PdfDocument.removeUnusedWidgetsFromFields(PdfPage)
com.itextpdf.kernel.crypto.CryptoUtil.readPrivateKeyFromPKCS12KeyStore(InputStream,String,char)
com.itextpdf.layout.renderer.TextRenderer.baseCharactersCount()
com.itextpdf.io.util.StreamUtil.createEscapedString(byte)
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingStandard128.isValidPassword(byte,byte)
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.setPageForTagging(PdfPage)
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getWidthAndWordSpacing(PdfString)
com.itextpdf.kernel.pdf.PdfStructElemTest.structTreeCopyingTest04()
com.itextpdf.kernel.font.PdfSimpleFont.convertToBytes(Glyph)
com.itextpdf.signatures.sign.PdfSignatureAppearanceTest.assertAppearanceFontSize(String,float)
com.itextpdf.pdfa.PdfA2AnnotationCheckTest.annotationCheckTest04()
com.itextpdf.io.util.StreamUtil.writeEscapedString(OutputStream,byte)
com.itextpdf.io.image.BmpImageHelper.readShort(InputStream)
com.itextpdf.layout.LocationTextExtractionStrategyTest.testExtractXObjectTextWithRotation()
com.itextpdf.kernel.pdf.canvas.parser.TextExtractIllegalDifferencesTest.illegalDifference()
com.itextpdf.barcodes.qrcode.Version.getAlignmentPatternCenters()
com.itextpdf.layout.element.BlockElement.setKeepTogether(boolean)
com.itextpdf.kernel.pdf.PdfReader.readStreamBytesRaw(PdfStream)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.setStrokeColor(Color)
com.itextpdf.kernel.utils.CompareTool.convertInfo(PdfDocumentInfo)
com.itextpdf.layout.font.FontCharacteristics.getFontWeightNumber()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff099Test.getTestInfo()
com.itextpdf.kernel.pdf.PdfCanvasTest.create1000PagesDocumentWithText()
com.itextpdf.layout.element.Table.createRendererSubTree()
com.itextpdf.kernel.pdf.action.PdfActionOcgState.getOcgs()
com.itextpdf.io.font.woff2.w3c.format.DirectoryTableOrder002Test.getTestInfo()
com.itextpdf.io.font.IExtraEncoding.byteToChar(byte,String)
com.itextpdf.kernel.xmp.properties.XMPProperty.getValue()
com.itextpdf.barcodes.qrcode.MatrixUtil.calculateBCHCode(int,int)
com.itextpdf.layout.BorderTest.rotatedBordersTest()
com.itextpdf.kernel.xmp.impl.Latin1Converter.convertToUTF8(byte)
com.itextpdf.kernel.pdf.WriterProperties.useDebugMode()
com.itextpdf.barcodes.Barcode128.getStartSymbol(Barcode128CodeSet)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff017Test.getFontName()
com.itextpdf.kernel.geom.Vector.hashCode()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff087Test.getTestInfo()
com.itextpdf.io.image.ImageDataFactory.createGifFrames(URL,int)
com.itextpdf.kernel.geom.Point.clone()
com.itextpdf.forms.PdfFormFieldTest.formFieldTest02()
com.itextpdf.kernel.xmp.XMPMeta.appendArrayItem(String,String,PropertyOptions,String,PropertyOptions)
com.itextpdf.layout.renderer.TableWidths.getCellBorderIndents(CellInfo)
com.itextpdf.layout.element.Div.setFillAvailableArea(boolean)
com.itextpdf.forms.fields.PdfFormField.drawPushButtonAppearance(float,float,String,PdfFont,float)
com.itextpdf.kernel.pdf.PdfReader.readObject(boolean,boolean)
com.itextpdf.kernel.pdf.PdfPrimitivesTest.generatePdfArrayWithFloatNumbers(PdfDocument,boolean)
com.itextpdf.kernel.pdf.PdfReaderTest.StreamLengthCorrection4()
com.itextpdf.io.codec.brotli.dec.SynthTest.testHelloWorld()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff021Test.isFontValid()
com.itextpdf.test.LogListener.resetLoggingContext()
com.itextpdf.kernel.geom.Rectangle.setHeight(float)
com.itextpdf.layout.AutoTaggingTest.wordBreaksLineEndingsTest05()
com.itextpdf.kernel.pdf.xobject.PdfImageXObject.decodeTiffAndPngBytes(byte)
com.itextpdf.io.source.OutputStream.writeLong(long)
com.itextpdf.io.codec.brotli.dec.Decode.readHuffmanCode(int,int,int,BitReader)
com.itextpdf.layout.renderer.AbstractRenderer.updateMaxHeight(Float)
com.itextpdf.io.image.BmpImageHelper.readRLE4(BmpParameters)
com.itextpdf.kernel.xmp.impl.ParseRDF.rdf_ParseTypeCollectionPropertyElement()
com.itextpdf.barcodes.BarcodeDataMatrixTest.barcode01Test()
com.itextpdf.layout.LocationTextExtractionStrategyTest.createSimplePdf(Rectangle,String)
com.itextpdf.kernel.pdf.FreeReferencesTest.beforeClass()
com.itextpdf.kernel.utils.PdfSplitterTest.splitDocumentBySize()
com.itextpdf.kernel.pdf.tagging.ParentTreeHandler.findMcrByMcid(PdfDictionary,int)
com.itextpdf.forms.PdfPageFormCopier.createParentFieldCopy(PdfDictionary,PdfDocument)
com.itextpdf.signatures.PdfSigner.addFieldMDP(PdfSignature,PdfSigFieldLockDictionary)
com.itextpdf.signatures.SignaturePermissions.isCertification()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff151Test.isFontValid()
com.itextpdf.layout.AutoTaggingTest.flushingTest03()
com.itextpdf.layout.renderer.ImageRenderer.translateImage(float,float,AffineTransform)
com.itextpdf.barcodes.qrcode.Encoder.chooseMode(String)
com.itextpdf.kernel.xmp.XMPMeta.getArrayItem(String,String,int)
com.itextpdf.kernel.pdf.PdfAnnotationTest.trapNetworkText()
com.itextpdf.layout.element.Table.getRenderer()
com.itextpdf.pdfa.checker.PdfA2Checker.checkCatalogValidEntries(PdfDictionary)
com.itextpdf.signatures.sign.PadesSignatureLevelTest.basicCheckDssDict(String)
com.itextpdf.barcodes.qrcode.MatrixUtil.embedPositionAdjustmentPattern(int,int,ByteMatrix)
com.itextpdf.layout.renderer.ListRenderer.makeListSymbolRenderer(int,IRenderer)
com.itextpdf.kernel.xmp.impl.xpath.XMPPathParser.expandXPath(String,String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff049Test.isFontValid()
com.itextpdf.kernel.xmp.XMPMeta.setLocalizedText(String,String,String,String,String)
com.itextpdf.layout.Style.setPaddingLeft(float)
com.itextpdf.barcodes.qrcode.QRCode.setNumDataBytes(int)
com.itextpdf.kernel.font.PdfFontFactory.createTtcFont(String,int,String,boolean,boolean)
com.itextpdf.forms.xfa.XfaForm.getNodeText(Node,String)
com.itextpdf.kernel.pdf.PdfBoolean.makeIndirect(PdfDocument)
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.deleteQualifier(String,String,String,String)
com.itextpdf.kernel.pdf.PdfObject.clone()
com.itextpdf.kernel.numbering.RomanNumbering.convert(int)
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.endMarginsCollapse(Rectangle)
com.itextpdf.layout.element.Table.getStartRow()
com.itextpdf.kernel.pdf.PdfDocument.getPageLabels()
com.itextpdf.layout.font.FontCharacteristicsUtils.calculateFontWeightNumber(FontWeight)
com.itextpdf.kernel.pdf.canvas.parser.listener.ITextExtractionStrategy.getResultantText()
com.itextpdf.io.font.FontCache.getAllFonts()
com.itextpdf.layout.ElementPropertyContainer.setTextRenderingMode(int)
com.itextpdf.layout.FloatTest.clearanceApplyingPageSplit05()
com.itextpdf.layout.element.Image.getMarginRight()
com.itextpdf.kernel.pdf.canvas.parser.listener.DefaultPdfTextLocation.getPageNumber()
com.itextpdf.kernel.geom.Subpath.setStartPoint(float,float)
com.itextpdf.layout.renderer.TextRendererTest.nextRendererTest()
com.itextpdf.forms.xfa.AcroFieldsSearch.getAcroShort2LongName()
com.itextpdf.layout.PositioningTest.showTextAlignedTest03()
com.itextpdf.pdfa.checker.PdfA1Checker.getMaxRealValue()
com.itextpdf.kernel.xmp.options.PropertyOptions.setURI(boolean)
com.itextpdf.io.image.ImageDataFactory.createGifFrame(byte,int)
com.itextpdf.kernel.xmp.impl.XMPDateTimeImpl.getDay()
com.itextpdf.kernel.pdf.PdfEncryptionTest.openDocNoUserPassword()
com.itextpdf.io.font.FontProgram.countOfGlyphs()
com.itextpdf.kernel.pdf.PdfPrimitivesTest.equalStrings()
com.itextpdf.kernel.pdf.canvas.CanvasTag.getActualText()
com.itextpdf.kernel.font.PdfFont.getWidth(String,float)
com.itextpdf.kernel.pdf.PdfReaderTest.fixPdfTest13()
com.itextpdf.io.codec.PngWriter.writeEnd()
com.itextpdf.kernel.pdf.PdfArrayDirectIterator.remove()
com.itextpdf.io.font.woff2.w3c.W3CWoff2DecodeTest.getSourceFolder()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.processHorizontals()
com.itextpdf.kernel.pdf.PdfWriter.write(byte,int,int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff041Test.getTestInfo()
com.itextpdf.kernel.pdf.PdfEncryption.setCryptoMode(int)
com.itextpdf.kernel.pdf.action.PdfAction.flush()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff001Test.getTestInfo()
com.itextpdf.kernel.xmp.impl.XMPNode.removeChildren()
com.itextpdf.layout.renderer.AbstractRenderer.createTransformationInsideOccupiedArea()
com.itextpdf.kernel.pdf.annot.PdfLinkAnnotation.setDestination(PdfObject)
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperBridge.getJoinType(int)
com.itextpdf.kernel.pdf.PdfXrefTable.setCapacity(int)
com.itextpdf.kernel.pdf.tagging.ParentTreeHandler.getNextMcidForPage(PdfPage)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.setDashPattern(PdfArray)
com.itextpdf.layout.renderer.MinWidthTest.toEffectiveTableColumnWidth(float)
com.itextpdf.kernel.pdf.navigation.PdfExplicitDestination.create(int,PdfName,float,float,float,float,float)
com.itextpdf.kernel.events.EventDispatcher.removeAllHandlers()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff091Test.isFontValid()
com.itextpdf.layout.SimpleTextExtractionStrategyTest.createPdfWithRotatedText(String,String,float,boolean,float)
com.itextpdf.kernel.pdf.PdfNumber.hashCode()
com.itextpdf.kernel.pdf.xobject.PdfFormXObject.getMarkStyle()
com.itextpdf.layout.renderer.MinWidthTest.divWithBigRotatedParagraph()
com.itextpdf.layout.border.DashedBorder.draw(PdfCanvas,float,float,float,float,float,float)
com.itextpdf.kernel.pdf.colorspace.PdfCieBasedCs.getNumberOfComponents()
com.itextpdf.forms.fields.PdfFormField.drawMultiLineTextAppearance(Rectangle,PdfFont,float,String,PdfFormXObject)
com.itextpdf.kernel.pdf.annot.PdfPolyGeomAnnotation.getMeasure()
com.itextpdf.kernel.pdf.colorspace.PdfShading.setCoords(float,float,float,float,float,float)
com.itextpdf.kernel.pdf.PdfOutlineTest.addOutlineInNotOutlineMode()
com.itextpdf.layout.renderer.TextRenderer.getDescent()
com.itextpdf.kernel.pdf.canvas.parser.clipper.PolyNode.setOpen(boolean)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.processHorizontal(Edge)
com.itextpdf.kernel.xmp.impl.XMPSerializerRDF.write(String)
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6Format1.isGlyphMatchesInput(int,int)
com.itextpdf.kernel.pdf.canvas.parser.clipper.Edge.toString()
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6Format3.getLookaheadContextLength()
com.itextpdf.kernel.pdf.filters.LZWDecoder.composeString(byte,byte)
com.itextpdf.layout.font.FontCharacteristicsUtils.normalizeFontWeight(short)
com.itextpdf.kernel.pdf.xobject.PdfImageXObject.getImageBytes()
com.itextpdf.layout.layout.LayoutResult.setOverflowRenderer(IRenderer)
com.itextpdf.kernel.geom.Point.toString()
com.itextpdf.kernel.pdf.canvas.parser.clipper.Path.setPt(Point,LongPoint)
com.itextpdf.kernel.pdf.PdfCatalog.getLang(PdfName)
com.itextpdf.io.font.FontProgramFactory.createRegisteredFont(String)
com.itextpdf.io.font.Pfm2afm.readString()
com.itextpdf.io.util.DateTimeUtil.addDaysToDate(Date,int)
com.itextpdf.layout.renderer.TextRendererTest.setTextException()
com.itextpdf.layout.margincollapse.MarginsCollapseInfo.getUsedBufferSpaceOnBottom()
com.itextpdf.kernel.pdf.annot.PdfLineAnnotation.getLeaderLineLength()
com.itextpdf.layout.renderer.TextRenderer.accept(Glyph)
com.itextpdf.kernel.pdf.PdfCopyTest.beforeClass()
com.itextpdf.kernel.pdf.PdfDocument.getPageNumber(PdfPage)
com.itextpdf.layout.hyphenation.PatternParser.parse(InputStream,String)
com.itextpdf.kernel.font.PdfType0Font.appendGlyphs(String,int,int,List)
com.itextpdf.kernel.utils.PageRange.getAllPages()
com.itextpdf.forms.fields.PdfChoiceFormField.getFormType()
com.itextpdf.kernel.pdf.SmartModePdfObjectsSerializer.serializeObject(PdfObject)
com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState.setLineCapStyle(int)
com.itextpdf.kernel.pdf.annot.PdfLineAnnotation.getSubtype()
com.itextpdf.io.codec.brotli.dec.SynthTest.testEmpty()
com.itextpdf.kernel.pdf.canvas.parser.listener.LocationTextExtractionStrategy.getCharSpaceWidth()
com.itextpdf.layout.TabsTest.severalTabsInRowTest()
com.itextpdf.kernel.pdf.action.PdfTargetDictionary.getAnnotation()
com.itextpdf.layout.RootElement.add(Image)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff040Test.isFontValid()
com.itextpdf.kernel.xmp.XmlDomWriter.setCanonical(boolean)
com.itextpdf.signatures.PdfSignatureAppearance.setPageRect(Rectangle)
com.itextpdf.layout.RootElement.getProperty(int)
com.itextpdf.io.font.FontProgramDescriptorFactory.fetchDescriptor(byte)
com.itextpdf.layout.renderer.TextRenderer.getSpecialWhitespaceXAdvance(Glyph,Glyph,boolean)
com.itextpdf.barcodes.BarcodeQRCode.getHints()
com.itextpdf.io.font.FontProgramDescriptor.getFontName()
com.itextpdf.kernel.pdf.PdfFontTest.createDocumentWithHelveticaOblique()
com.itextpdf.signatures.PdfPKCS7.getReason()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff047Test.getFontName()
com.itextpdf.layout.hyphenation.PatternParser.startElement(String,String,String,Attributes)
com.itextpdf.layout.ElementPropertyContainer.setProperty(int,Object)
com.itextpdf.kernel.pdf.PdfTokenizerTest.tokenValueEqualsToTest()
com.itextpdf.kernel.pdf.canvas.parser.clipper.ClipperBase.initEdge(Edge,Edge,Edge,LongPoint)
com.itextpdf.io.util.FileUtil.getBufferedOutputStream(String)
com.itextpdf.kernel.pdf.annot.PdfAnnotation.setAction(PdfAction)
com.itextpdf.io.source.PdfTokenizer.get(long,byte,int,int)
com.itextpdf.kernel.pdf.canvas.parser.PdfCanvasProcessor.invoke(PdfCanvasProcessor,PdfLiteral,List)
com.itextpdf.io.font.OpenTypeParser.readBbox(int)
com.itextpdf.kernel.pdf.canvas.wmf.MetaDo.readAll()
com.itextpdf.kernel.pdf.action.PdfAction.createGoToE(PdfDestination,boolean,PdfTargetDictionary)
com.itextpdf.forms.fields.PdfFormField.isNoExport()
com.itextpdf.layout.hyphenation.Hyphenation.getPreHyphenText(int)
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.processIntersectList()
com.itextpdf.pdfa.PdfA1GraphicsTest.egsCheckTest1()
com.itextpdf.io.font.CFFFontSubset.EmptyStack()
com.itextpdf.kernel.font.PdfSimpleFont.isAppendableGlyph(Glyph)
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.flushStructElementAndItKids(PdfStructElem)
com.itextpdf.kernel.pdf.colorspace.PdfCieBasedCs.isWrappedObjectMustBeIndirect()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff018Test.getFontName()
com.itextpdf.kernel.geom.Subpath.setClosed(boolean)
com.itextpdf.io.codec.Base64.encodeBytes(byte,int,int)
com.itextpdf.io.font.TrueTypeCollection.getFontByTccIndex(int)
com.itextpdf.signatures.PdfPKCS7.getEncodedPKCS7(byte)
com.itextpdf.signatures.CertificateInfo.toString()
com.itextpdf.kernel.geom.Point.distance(double,double,double,double)
com.itextpdf.kernel.pdf.annot.PdfMarkupAnnotation.getText()
com.itextpdf.kernel.xmp.XMPUtils.convertToLong(String)
com.itextpdf.layout.renderer.ParagraphRenderer.createSplitRenderer(IRenderer)
com.itextpdf.io.font.FontRegisterProvider.registerSystemFontDirectories()
com.itextpdf.barcodes.BarcodeCodabar.calculateChecksum(String)
com.itextpdf.kernel.utils.CompareTool.compareDocumentInfo(String,String)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff155Test.isFontValid()
com.itextpdf.io.font.otf.GlyphLine.set(int,Glyph)
com.itextpdf.kernel.pdf.action.PdfAction.createSetOcgState(List,boolean)
com.itextpdf.kernel.pdf.PdfStampingTest.stampingStreamsCompression03()
com.itextpdf.layout.hyphenation.TernaryTree.strcmp(String,char,int)
com.itextpdf.barcodes.qrcode.GF256Poly.getCoefficients()
com.itextpdf.layout.hyphenation.HyphenationTreeCache.cache(String,HyphenationTree)
com.itextpdf.kernel.pdf.canvas.parser.HighlightItemsTest.getSupportedEvents()
com.itextpdf.io.font.woff2.w3c.format.BlocksExtraneousData005Test.isFontValid()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff153Test.getFontName()
com.itextpdf.kernel.geom.AffineTransform.rotate(double)
com.itextpdf.io.font.otf.OpenTypeFontTableReader.getUnitsPerEm()
com.itextpdf.layout.TableTest.simpleTableTest06()
com.itextpdf.kernel.xmp.XMPDateTime.setMinute(int)
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.getHorizontalScaling()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.getHorzDirection(Edge,Direction,long,long)
com.itextpdf.kernel.pdf.tagutils.AccessibilityProperties.setLanguage(String)
com.itextpdf.kernel.pdf.PdfEncryptionTest.openEncryptedDocWithoutCertificate()
com.itextpdf.layout.renderer.LineRenderer.layout(LayoutContext)
com.itextpdf.layout.renderer.TextRenderer.createSplitRenderer()
com.itextpdf.io.image.ImageData.setDecode(float)
com.itextpdf.io.image.BmpImageHelper.readRLE8(BmpParameters)
com.itextpdf.kernel.pdf.PdfOutline.clear()
com.itextpdf.layout.property.Background.getOpacity()
com.itextpdf.kernel.font.PdfFont.decodeIntoGlyphLine(PdfString)
com.itextpdf.layout.renderer.AbstractRenderer.hasOwnProperty(int)
com.itextpdf.forms.xfa.XfaForm.setNodeText(Node,String)
com.itextpdf.forms.fields.PdfFormField.isMultiline()
com.itextpdf.io.font.otf.lookuptype6.SubTableLookup6Format2.isGlyphMatchesLookahead(int,int)
com.itextpdf.kernel.xmp.impl.XMPNode.setOptions(PropertyOptions)
com.itextpdf.kernel.pdf.tagutils.TagTreePointer.addTag(IAccessibleElement)
com.itextpdf.layout.renderer.TableRenderer.setRowRange(Table,RowRange)
com.itextpdf.kernel.pdf.PdfDocumentTest.writingVersionTest01()
com.itextpdf.io.util.TextUtil.isWhitespace(Glyph)
com.itextpdf.kernel.pdf.PdfOutputIntent.setRegistryName(String)
com.itextpdf.kernel.xmp.impl.XMPNodeUtils.findSchemaNode(XMPNode,String,String,boolean)
com.itextpdf.signatures.SignUtils.add180Sec(Date)
com.itextpdf.barcodes.qrcode.BitVector.getArray()
com.itextpdf.kernel.xmp.impl.XMPNode.getHasValueChild()
com.itextpdf.kernel.crypto.StandardDecryptor.finish()
com.itextpdf.kernel.pdf.PdfPage.getBleedBox()
com.itextpdf.kernel.pdf.canvas.draw.DashedLine.setLineWidth(float)
com.itextpdf.io.font.FontProgramFactory.createRegisteredFont(String,int)
com.itextpdf.kernel.pdf.PdfStampingTest.stampingTestWithTaggedStructure()
com.itextpdf.barcodes.BarcodePDF417.byteCompaction6(int)
com.itextpdf.barcodes.Barcode1D.fitWidth(float)
com.itextpdf.kernel.pdf.PdfBoolean.newInstance()
com.itextpdf.layout.RotationTest.drawCross(PdfCanvas,float,float)
com.itextpdf.kernel.crypto.securityhandler.StandardHandlerUsingAes256.initKeyAndFillDictionary(PdfDictionary,byte,byte,int,boolean,boolean)
com.itextpdf.kernel.xmp.XMPMeta.getPropertyInteger(String,String)
com.itextpdf.io.source.RandomAccessFileOrArray.skipBytes(int)
com.itextpdf.kernel.pdf.PdfXrefTable.freeReference(PdfIndirectReference,boolean)
com.itextpdf.signatures.LtvVerification.convertToHex(byte)
com.itextpdf.layout.property.TransparentColor.applyStrokeTransparency(PdfCanvas)
com.itextpdf.signatures.SignatureUtil.compare(Object,Object)
com.itextpdf.kernel.pdf.PdfReaderTest.StreamLengthCorrection3()
com.itextpdf.forms.PdfAcroForm.addField(PdfFormField)
com.itextpdf.io.image.ImageData.getUrl()
com.itextpdf.io.font.woff2.w3c.format.TabledataDecompressedLength004Test.getFontName()
com.itextpdf.kernel.pdf.PdfOutputIntent.getOutputConditionIdentifier()
com.itextpdf.layout.Document.setMargins(float,float,float,float)
com.itextpdf.kernel.geom.LineSegment.getLength()
com.itextpdf.layout.border.Border.getColor()
com.itextpdf.layout.font.FontSelector.compare(FontInfo,FontInfo)
com.itextpdf.io.codec.TIFFFaxDecoder.nextNBits(int)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff144Test.getTestInfo()
com.itextpdf.kernel.font.PdfFontFactory.createFont(String,String,boolean,boolean)
com.itextpdf.kernel.utils.PageRangeTest.addCustomAfter()
com.itextpdf.kernel.pdf.canvas.parser.clipper.DefaultClipper.execute(ClipType,Paths,PolyFillType,PolyFillType)
com.itextpdf.layout.element.BlockElement.isKeepTogether()
com.itextpdf.kernel.pdf.PdfResources.getResource(PdfName)
com.itextpdf.barcodes.BarcodePDF417.breakString()
com.itextpdf.io.source.PdfTokenizer.seek(long)
com.itextpdf.kernel.pdf.PdfPages.correctFrom(int)
com.itextpdf.kernel.font.Type3Glyph.getLly()
com.itextpdf.layout.ImageTest.imageTest13_HorizontalAlignment_RIGHT()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.setLineWidth(float)
com.itextpdf.barcodes.qrcode.FormatInformation.equals(Object)
com.itextpdf.kernel.pdf.XMPMetadataTest.emptyDocumentWithXmpAppendMode01()
com.itextpdf.layout.element.Paragraph.getRole()
com.itextpdf.kernel.pdf.PdfStructElemTest.structTreeCopyingTest10()
com.itextpdf.kernel.pdf.tagutils.TagStructureContext.wrapAllKidsInTag(PdfStructElem,PdfName)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff003Test.getFontName()
com.itextpdf.io.codec.brotli.dec.Decode.inverseMoveToFrontTransform(byte,int)
com.itextpdf.layout.renderer.TableWidths.autoLayout()
com.itextpdf.io.font.FontRegisterProvider.getFontProgram(String,boolean)
com.itextpdf.test.RunnerSearchConfig.getIgnoredPaths()
com.itextpdf.layout.FloatTest.beforeClass()
com.itextpdf.layout.renderer.TableRenderer.isBottomTablePart()
com.itextpdf.io.source.ByteBufferRandomAccessSource.get(long)
com.itextpdf.kernel.crypto.securityhandler.PubSecHandlerUsingAes256.setHashKeyForNextObject(int,int)
com.itextpdf.io.font.otf.OpenTypeFeature.getRecord(int)
com.itextpdf.io.font.CFFFont.getShort()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.addImage(PdfImageXObject,float,float,float,float,float,float)
com.itextpdf.signatures.PdfSigner.setDocument(PdfDocument)
com.itextpdf.layout.FloatTest.floatsOnCanvas()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.endVariableText()
com.itextpdf.kernel.xmp.impl.XMPNode.iterateChildren()
com.itextpdf.barcodes.BarcodeEANTest.barcode02Test()
com.itextpdf.layout.Style.setPaddingRight(float)
com.itextpdf.barcodes.Barcode1D.setN(float)
com.itextpdf.layout.element.ILargeElement.complete()
com.itextpdf.kernel.font.PdfFont.getFontMatrix()
com.itextpdf.test.WrappedSamplesRunner.getMain(Class)
com.itextpdf.kernel.font.PdfFont.getDescent(String,float)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff113Test.getTestInfo()
com.itextpdf.io.font.FontNames.setAllowEmbedding(boolean)
com.itextpdf.barcodes.BarcodePDF417.setErrorLevel(int)
com.itextpdf.layout.element.Table.normalizeColumnWidths(UnitValue)
com.itextpdf.kernel.pdf.tagging.PdfMcr.isWrappedObjectMustBeIndirect()
com.itextpdf.kernel.pdf.canvas.parser.data.TextRenderInfo.preserveGraphicsState()
com.itextpdf.pdfa.PdfADocument.addCustomMetadataExtensions(XMPMeta)
com.itextpdf.layout.border.DottedBorder.draw(PdfCanvas,float,float,float,float,float,Side,float,float)
com.itextpdf.layout.margincollapse.MarginsCollapseHandler.getRendererChild(int)
com.itextpdf.kernel.xmp.XmlDomWriter.normalizeAndPrint(char,boolean)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff061Test.getFontName()
com.itextpdf.kernel.pdf.ByteBufferOutputStream.append(ByteBufferOutputStream)
com.itextpdf.io.font.woff2.w3c.decoder.ValidationOff110Test.getTestInfo()
com.itextpdf.kernel.pdf.WriterProperties.addXmpMetadata()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.endLayer()
com.itextpdf.kernel.pdf.annot.PdfAnnotation.getRectangle()
com.itextpdf.kernel.pdf.layer.PdfOCProperties.flush()
com.itextpdf.io.font.woff2.w3c.decoder.ValidationChecksum002Test.isFontValid()
com.itextpdf.layout.element.AbstractElement.createRendererSubTree()
com.itextpdf.barcodes.qrcode.ByteArray.appendByte(int)
com.itextpdf.io.source.IndependentRandomAccessSource.length()
com.itextpdf.layout.PositioningTest.drawLine(PdfCanvas,float,float,float,float)
com.itextpdf.kernel.pdf.canvas.parser.listener.RegexBasedLocationExtractionStrategy.getSupportedEvents()
com.itextpdf.layout.minmaxwidth.RotationMinMaxWidth.calculateRotatedWidth(Rectangle,double)
com.itextpdf.io.font.woff2.w3c.format.Valid004Test.getTestInfo()
com.itextpdf.layout.FloatTest.floatFixedHeightContentNotFit()
com.itextpdf.layout.TableTest.toLargeElementInTableTest01()
com.itextpdf.kernel.pdf.PdfViewerPreferences.put(PdfName,PdfObject)
com.itextpdf.layout.renderer.AbstractRenderer.isNotFittingLayoutArea(LayoutArea)
com.itextpdf.layout.font.FontProvider.getDefaultCacheFlag()
com.itextpdf.io.font.woff2.w3c.format.HeaderFlavor001Test.getTestInfo()
com.itextpdf.pdfa.PdfA1AnnotationCheckTest.annotationCheckTest09()
com.itextpdf.kernel.pdf.canvas.PdfCanvas.writeLiteral(String)
com.itextpdf.kernel.pdf.annot.Pdf3DAnnotation.getSubtype()
com.itextpdf.kernel.pdf.TagTreePointerTest.tagTreePointerTest02()
com.itextpdf.barcodes.BarcodeQRCodeTest.barcode01Test()
com.itextpdf.kernel.xmp.impl.XMPMetaImpl.setQualifier(String,String,String,String,String,PropertyOptions)
com.itextpdf.kernel.xmp.impl.FixASCIIControlsReader.processChar(char)
com.itextpdf.kernel.numbering.RomanNumbering.toRoman(int,boolean)
com.itextpdf.layout.hyphenation.HyphenationTree.hyphenate(String,int,int)
com.itextpdf.kernel.pdf.tagging.PdfStructTreeRoot.addKid(int,PdfStructElem)
com.itextpdf.kernel.color.WebColors.parsePercentValue(String)
com.itextpdf.signatures.sign.PdfSignatureAppearanceTest.textAutoscaleTest02()
com.itextpdf.kernel.pdf.PdfNumber.toString()
com.itextpdf.barcodes.qrcode.MatrixUtil.embedPositionDetectionPattern(int,int,ByteMatrix)
com.itextpdf.kernel.pdf.PdfReaderTest.fixPdfTest16()
com.itextpdf.kernel.pdf.PdfObject.isString()
com.itextpdf.barcodes.qrcode.Encoder.appendLengthInfo(int,int,Mode,BitVector)
com.itextpdf.forms.FormFieldAppendTest.formFillingAppend_form_empty_Test()
com.itextpdf.kernel.pdf.PdfCanvasTest.create100PagesDocumentWithFullCompression()
com.itextpdf.io.codec.brotli.dec.BitReader.readBits(BitReader,int)
com.itextpdf.barcodes.qrcode.MatrixUtil.makeVersionInfoBits(int,BitVector)
com.itextpdf.layout.element.List.getAccessibilityProperties()
com.itextpdf.io.util.HashCode.combine(int,Object)
com.itextpdf.kernel.utils.CompareTool.isOk()
com.itextpdf.layout.font.FontProvider.getStrategy(String,List,FontCharacteristics)
com.itextpdf.layout.IPropertyContainer.setProperty(int,Object)
com.itextpdf.kernel.xmp.impl.XMPSchemaRegistryImpl.getPrefix()
com.itextpdf.layout.renderer.AbstractRenderer.applyMargins(Rectangle,boolean)
com.itextpdf.kernel.pdf.PdfNumber.newInstance()
com.itextpdf.kernel.pdf.annot.PdfAnnotationAppearance.getStateObject(PdfName)
com.itextpdf.kernel.pdf.canvas.PdfCanvas.endMarkedContent()
com.itextpdf.kernel.pdf.tagging.PdfStructElem.setAlt(PdfString)
com.itextpdf.kernel.pdf.extgstate.PdfExtGState.getSmothnessTolerance()
com.itextpdf.io.source.OutputStream.write(int)
com.itextpdf.kernel.crypto.securityhandler.SecurityHandler.readObject(ObjectInputStream)
