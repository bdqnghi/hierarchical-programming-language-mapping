org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathBadFirstCheckout(String)
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.setPackIndex(PackIndex)
org.eclipse.jgit.internal.storage.dfs.DfsPackParser.getPackDescription()
org.eclipse.jgit.storage.pack.PackStatistics.getBytes()
org.eclipse.jgit.internal.ketch.KetchSystem.defaultExecutor()
org.eclipse.jgit.internal.storage.pack.DeltaWindow.deltaSizeLimit(DeltaWindowEntry)
org.eclipse.jgit.transport.TransportHttp.httpOpen(String,URL)
org.eclipse.jgit.notes.LeafBucket.growIfFull()
org.eclipse.jgit.revwalk.RevObject.getId()
org.eclipse.jgit.revwalk.FIFORevQueue.everbodyHasFlag(int)
org.eclipse.jgit.lfs.server.fs.UploadTest.testCorruptUpload()
org.eclipse.jgit.junit.http.HttpTestCase.toURIish(ServletContextHandler,String)
org.eclipse.jgit.revwalk.MergeBaseGenerator.carryOntoOne(RevCommit,int)
org.eclipse.jgit.util.ChangeIdUtil.indexOfFirstFooterLine(String)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUpperGroupCase0()
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.isOpen()
org.eclipse.jgit.lib.RepositoryCacheConfig.getExpireAfter()
org.eclipse.jgit.gitrepo.RepoCommand.setGroups(String)
org.eclipse.jgit.internal.storage.file.PackFileTest.tearDown()
org.eclipse.jgit.junit.http.AccessEvent.getMethod()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.minUpdateIndex()
org.eclipse.jgit.lib.ObjectReader.release()
org.eclipse.jgit.revwalk.DateRevQueueTest.testInsertOutOfOrder()
org.eclipse.jgit.pgm.RepoTest.resolveRelativeUris()
org.eclipse.jgit.revwalk.filter.CommitTimeRevFilter.between(long,long)
org.eclipse.jgit.pgm.DescribeTest.testHeadNoTag()
org.eclipse.jgit.archive.TgzFormat.equals(Object)
org.eclipse.jgit.lib.Config.getBoolean(String,String,String,boolean)
org.eclipse.jgit.junit.RepositoryTestCase.read(String)
org.eclipse.jgit.api.RebaseCommandTest.testUpToDate()
org.eclipse.jgit.pgm.LsRemote.run()
org.eclipse.jgit.util.HookTest.assumeSupportedPlatform()
org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2()
org.eclipse.jgit.internal.storage.dfs.DfsReader.getObjectSizeImpl(PackList,AnyObjectId)
org.eclipse.jgit.storage.pack.PackConfig.setPreserveOldPacks(boolean)
org.eclipse.jgit.internal.storage.file.RefDirectory.levelsIn(String)
org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_PackedGitWindowSizeAbovePackedGitLimit()
org.eclipse.jgit.util.ChangeIdUtilTest.testMultiLineMessagesWithSignedOffBy()
org.eclipse.jgit.pgm.Push.printRefUpdateResult(ObjectReader,URIish,PushResult,RemoteRefUpdate)
org.eclipse.jgit.revwalk.RevWalk.close()
org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig()
org.eclipse.jgit.util.RefList.size()
org.eclipse.jgit.dircache.DirCache.isOutdated()
org.eclipse.jgit.archive.ZipFormat.hashCode()
org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.initOutDesc(DfsObjDatabase)
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_17()
org.eclipse.jgit.notes.NoteMapMerger.addIfNotNull(FanoutBucket,int,NoteBucket)
org.eclipse.jgit.util.io.Strings.repeat(String,int)
org.eclipse.jgit.dircache.BaseDirCacheEditor.fastAdd(DirCacheEntry)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.cleanupTemporaryFiles()
org.eclipse.jgit.notes.NoteMapMergerTest.createLargeNoteMap(String,String,int,int)
org.eclipse.jgit.pgm.ArchiveTest.assertIsGzip(File)
org.eclipse.jgit.notes.LeafBucketTest.testSet_Replace()
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getRef(DfsStreamKey)
org.eclipse.jgit.util.Base64.encodeBytes(byte,int,int)
org.eclipse.jgit.dircache.DirCache.commit()
org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_SetBinaryMerge_Conflict()
org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_MultipleIdenticalDeletes()
org.eclipse.jgit.lfs.lib.LongObjectId.zeroId()
org.eclipse.jgit.pgm.TextBuiltin.requiresRepository()
org.eclipse.jgit.ignore.internal.Strings.reset(char)
org.eclipse.jgit.transport.TrackingRefUpdate.getLocalName()
org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_SkipNonFooter()
org.eclipse.jgit.transport.http.apache.HttpClientConnection.getContentType()
org.eclipse.jgit.lib.NullProgressMonitor.beginTask(String,int)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testEscapedBracket5()
org.eclipse.jgit.util.RawParseUtils_LineMapTest.testBinary()
org.eclipse.jgit.awtui.CommitGraphPane.authorFor(PlotCommit)
org.eclipse.jgit.attributes.AttributesHandlerTest.testExpandNonMacro4()
org.eclipse.jgit.internal.storage.reftable.ReftableTest.assertSeek(List,Reftable)
org.eclipse.jgit.transport.UploadPack.checkNotAdvertisedWants(RevWalk,List,Set)
org.eclipse.jgit.revwalk.ObjectWalk.getPathBuffer()
org.eclipse.jgit.lib.ObjectIdSubclassMap.isEmpty()
org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.compact(OutputStream)
org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit()
org.eclipse.jgit.gitrepo.RepoCommand.setRecordSubmoduleLabels(boolean)
org.eclipse.jgit.pgm.CommitTest.testCommitAll()
org.eclipse.jgit.revwalk.ObjectWalkTest.testCull()
org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.addAll(List)
org.eclipse.jgit.revwalk.TreeRevFilterTest.treeRevFilter(String)
org.eclipse.jgit.lib.ObjectReader.getCurrent()
org.eclipse.jgit.internal.storage.file.PackWriterTest.assertContent(PackIndex,List)
org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule()
org.eclipse.jgit.api.AddNoteCommand.commitNoteMap(RevWalk,NoteMap,RevCommit,ObjectInserter,String)
org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testCheckout()
org.eclipse.jgit.transport.PreUploadHookChain.onSendPack(UploadPack,Collection,Collection)
org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.emptyRepositoryFormatVersion()
org.eclipse.jgit.revwalk.RevWalkTestCase.commit(int,RevTree,RevCommit)
org.eclipse.jgit.util.FS_Win32.detectSymlinkSupport()
org.eclipse.jgit.transport.PushResult.setRemoteUpdates(Map)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_15()
org.eclipse.jgit.util.Base64Test.testDecodeFail_NonBase64Character()
org.eclipse.jgit.internal.storage.reftable.BlockReader.readValueId()
org.eclipse.jgit.patch.BinaryHunk.getType()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testCntrlGroupCase0()
org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddIfAbsentGrowsWithObjects()
org.eclipse.jgit.archive.Tbz2Format.createArchiveOutputStream(OutputStream)
org.eclipse.jgit.lib.BaseRepositoryBuilder.loadConfig()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testIncompleteRangesInOneGroupCase1()
org.eclipse.jgit.internal.storage.reftable.ReftableReader.seekRef(String)
org.eclipse.jgit.transport.HMACSHA1NonceGeneratorTest.setUp()
org.eclipse.jgit.storage.pack.PackConfig.setThreads(int)
org.eclipse.jgit.internal.storage.dfs.DfsPackParser.seekDatabase(UnresolvedDelta,ObjectTypeAndSize)
org.eclipse.jgit.internal.storage.file.PackIndexWriter.write(List,byte)
org.eclipse.jgit.util.io.AutoLFInputStream.read(byte,int,int)
org.eclipse.jgit.lib.CoreConfig.getPackIndexVersion()
org.eclipse.jgit.pgm.StatusTest.changeUnmergedFileAndCommit(Git)
org.eclipse.jgit.api.CreateBranchCommand.setForce(boolean)
org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_EmptyFile1()
org.eclipse.jgit.revwalk.DateRevQueue.freeEntry(Entry)
org.eclipse.jgit.revwalk.RevWalk.isMergedInto(RevCommit,RevCommit)
org.eclipse.jgit.revwalk.filter.PatternMatchRevFilter.pattern()
org.eclipse.jgit.transport.http.apache.HttpClientConnectionFactory.create(URL)
org.eclipse.jgit.lib.CoreConfig.getCompression()
org.eclipse.jgit.transport.URIish.equals(Object)
org.eclipse.jgit.diff.EditList.toString()
org.eclipse.jgit.internal.storage.file.PackFile.findObjectForOffset(long)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithGarbageAndRereferencingGarbage()
org.eclipse.jgit.internal.storage.reftree.Scanner.curElementHasPeelSuffix(AbstractTreeIterator)
org.eclipse.jgit.diff.DiffEntry.getNewPath()
org.eclipse.jgit.util.BlockList.resetTailBlock()
org.eclipse.jgit.ant.tasks.GitInitTask.execute()
org.eclipse.jgit.lib.RepositoryCache.clear()
org.eclipse.jgit.http.test.DefaultReceivePackFactoryTest.testCreate_AuthUser()
org.eclipse.jgit.internal.storage.reftable.BlockReader.skipString()
org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onPackHeader(long)
org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule()
org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_ReverseGitSortOrder()
org.eclipse.jgit.internal.storage.file.PackFile.findEndOffset(long)
org.eclipse.jgit.lib.RefTest.writeSymref(String,String)
org.eclipse.jgit.util.RefListTest.testBuilder_Remove()
org.eclipse.jgit.internal.ketch.RemoteGitReplica.getRemoteConfig()
org.eclipse.jgit.lib.Repository.getWorkTree()
org.eclipse.jgit.util.io.TimeoutOutputStream.beginWrite()
org.eclipse.jgit.pgm.opt.CmdLineParser.sortRestOfArgumentsHandlerToTheEnd(List)
org.eclipse.jgit.attributes.Attribute.hashCode()
org.eclipse.jgit.http.test.SmartClientSmartServerTest.testInitialClone_WithAuthenticationNoCredentials()
org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateBrokenSymLink()
org.eclipse.jgit.pgm.Diff.ignoreSpaceAtEol(boolean)
org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.configFor(File)
org.eclipse.jgit.attributes.AttributesMatcherTest.testParentDirectoryGitAttributes()
org.eclipse.jgit.internal.storage.dfs.DfsReader.hasImpl(PackList,AnyObjectId)
org.eclipse.jgit.internal.storage.pack.GcCommitSelectionTest.newPeparer(RevCommit,List)
org.eclipse.jgit.lfs.server.fs.LfsServerTest.tearDown()
org.eclipse.jgit.pgm.CommandCatalog.toSortedArray(Collection)
org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.getRefDatabase()
org.eclipse.jgit.lib.ObjectReader.open(Iterable,boolean)
org.eclipse.jgit.transport.HttpConfig.toConfigValue()
org.eclipse.jgit.lib.ObjectLoader.getSize()
org.eclipse.jgit.http.test.HttpClientTests.open(HttpServletRequest,String)
org.eclipse.jgit.lib.DirCacheCheckoutTest.mkmap(String)
org.eclipse.jgit.dircache.DirCacheCheckout.conflict(String,DirCacheEntry,AbstractTreeIterator,AbstractTreeIterator)
org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.testNoMatchingAttributes()
org.eclipse.jgit.internal.storage.file.GC.packRefs()
org.eclipse.jgit.lib.ObjectIdOwnerMap.iterator()
org.eclipse.jgit.pgm.Blame.uniqueAbbrevLen(RevCommit)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.deleteAll()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleStarCase1()
org.eclipse.jgit.lib.RebaseTodoLine.parse(String)
org.eclipse.jgit.api.RebaseCommand.setStrategy(MergeStrategy)
org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testQuote_Empty()
org.eclipse.jgit.internal.storage.reftree.RefTree.cleanupPeeledRef(DirCacheEditor,Ref)
org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_InGitSortOrder()
org.eclipse.jgit.lib.Repository.getRemoteNames()
org.eclipse.jgit.transport.InternalPushConnection.close()
org.eclipse.jgit.diff.MyersDiff.main(String)
org.eclipse.jgit.treewalk.TreeWalk.pathOf(byte,int,int)
org.eclipse.jgit.diff.RenameDetector.exactCopy(DiffEntry,DiffEntry)
org.eclipse.jgit.notes.NoteMapTest.testIteratorFullyFannedOut()
org.eclipse.jgit.treewalk.TreeWalk.isSubtree()
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapWalker.include(RevWalk,RevCommit)
org.eclipse.jgit.internal.storage.reftable.ReftableReader.initLogIndex()
org.eclipse.jgit.api.StashCreateCommand.parseCommit(ObjectReader,ObjectId)
org.eclipse.jgit.transport.RefSpec.expandFromDestination(Ref)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_d()
org.eclipse.jgit.util.StringUtils.join(Collection,String)
org.eclipse.jgit.util.Paths.compareSameName(byte,int,int,byte,int,int,int)
org.eclipse.jgit.treewalk.FileTreeIteratorTest.testFileModeSymLinkIsNotATree()
org.eclipse.jgit.internal.ketch.Proposal.awaitStateChange(State,long,TimeUnit)
org.eclipse.jgit.internal.ketch.LogIndex.unknown(AnyObjectId)
org.eclipse.jgit.transport.UploadPack.setTimeout(int)
org.eclipse.jgit.transport.OpenSshConfigTest.testQuoteParsing()
org.eclipse.jgit.revwalk.RevWalkTestCase.file(String,RevBlob)
org.eclipse.jgit.pgm.CloneTest.testCloneEmpty()
org.eclipse.jgit.gitrepo.RepoCommand.setBranch(String)
org.eclipse.jgit.treewalk.FileTreeIterator.getDirectory()
org.eclipse.jgit.junit.TestRepository.tree(DirCacheEntry)
org.eclipse.jgit.merge.MergeConfig.hashCode()
org.eclipse.jgit.pgm.StatusTest.assertUntrackedAndUnmerged(String,boolean,boolean,String)
org.eclipse.jgit.transport.TransportGitAnon.getRequiredFields()
org.eclipse.jgit.internal.storage.file.PackLock.lock(String)
org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleSmallFileWithNewLine()
org.eclipse.jgit.util.RefMapTest.testIterator_MissingUnresolvedSymbolicRefIsBug()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.getDeltaBase()
org.eclipse.jgit.internal.storage.file.PackWriterTest.shallows(ObjectId)
org.eclipse.jgit.pgm.debug.ShowCacheTree.show(DirCacheTree)
org.eclipse.jgit.util.RefListTest.testAddToEmptyList()
org.eclipse.jgit.revplot.PlotCommitListTest.parents(RevCommit)
org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_And_MY_ALL()
org.eclipse.jgit.merge.Merger.setProgressMonitor(ProgressMonitor)
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows2()
org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_Length12InsertFails()
org.eclipse.jgit.pgm.StatusTest.makeInitialCommit(Git)
org.eclipse.jgit.transport.HttpAuthMethod.newMD5()
org.eclipse.jgit.util.SystemReader.getDateTimeInstance(int,int)
org.eclipse.jgit.http.server.ClientVersionUtilTest.testPushStatusBug()
org.eclipse.jgit.api.StashDropCommand.deleteRef(Ref)
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparerTest.getShallowCommits()
org.eclipse.jgit.transport.OperationResult.getMessages()
org.eclipse.jgit.api.CherryPickResult.getFailingPaths()
org.eclipse.jgit.transport.BaseReceivePack.isCapabilityEnabled(String)
org.eclipse.jgit.patch.Patch.parseGitBinary(FileHeader,int,int)
org.eclipse.jgit.lib.TreeFormatter.fmtOverflowBuffer(byte,int,int,FileMode)
org.eclipse.jgit.transport.HttpAuthMethod.LHEX(byte)
org.eclipse.jgit.http.test.FileResolverTest.testUnreasonableNames()
org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldReturnNullWithoutFetchSpec()
org.eclipse.jgit.fnmatch.CharacterPattern.matches(char)
org.eclipse.jgit.internal.ketch.KetchReplica.shouldPushUnbatchedCommit(LogIndex,boolean)
org.eclipse.jgit.transport.RefAdvertiser.writeOne(CharSequence)
org.eclipse.jgit.lib.RefUpdate.requireCanDoUpdate()
org.eclipse.jgit.transport.BaseReceivePack.setCheckReferencedObjectsAreReachable(boolean)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testSimpleStarCase2()
org.eclipse.jgit.junit.TestRepository.add(String,RevBlob)
org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getOptions()
org.eclipse.jgit.storage.pack.PackStatistics.isShallow()
org.eclipse.jgit.internal.storage.reftree.RefTree.read(ObjectReader,RevTree)
org.eclipse.jgit.pgm.Show.sourcePrefix(String)
org.eclipse.jgit.patch.Patch.matchAny(byte,int,byte)
org.eclipse.jgit.ant.tasks.GitCloneTask.setBare(boolean)
org.eclipse.jgit.lib.DirCacheCheckoutTest.prescanTwoTrees(ObjectId,ObjectId)
org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testTopNotPath()
org.eclipse.jgit.revplot.PlotCommit.getChild(int)
org.eclipse.jgit.http.test.SmartClientSmartServerSslTest.data()
org.eclipse.jgit.lib.RefDatabaseConflictingNamesTest.getRef(String)
org.eclipse.jgit.fnmatch.RestrictedWildCardHead.matches(char)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedComparedWithInitialCommit()
org.eclipse.jgit.merge.MergeMessageFormatterTest.testThreeBranches()
org.eclipse.jgit.pgm.CLIGitCommand.errLines()
org.eclipse.jgit.util.NBTest.prepareOutput(byte)
org.eclipse.jgit.lib.ReflogReader.getReverseEntries(int)
org.eclipse.jgit.transport.PushCertificateParserTest.setUp()
org.eclipse.jgit.treewalk.AbstractTreeIteratorTest.testEnsurePathCapacityGrows()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_b()
org.eclipse.jgit.junit.http.AccessEvent.getStatus()
org.eclipse.jgit.lib.ObjectChecker.setAllowLeadingZeroFileMode(boolean)
org.eclipse.jgit.internal.storage.dfs.DfsReader.getBitmapIndex()
org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward()
org.eclipse.jgit.internal.storage.pack.GcCommitSelectionTest.addCommit(BranchBuilder,String,RevCommit)
org.eclipse.jgit.api.StashApplyCommand.setApplyUntracked(boolean)
org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyRawTo(OutputStream)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testGraphGroupCase3()
org.eclipse.jgit.transport.http.apache.HttpClientConnection.setHostnameVerifier(HostnameVerifier)
org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.renamed(DiffEntry)
org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_UnsetMerge_NoConflict()
org.eclipse.jgit.lib.NullProgressMonitor.update(int)
org.eclipse.jgit.lib.SymbolicRef.toString()
org.eclipse.jgit.attributes.AttributesHandlerTest.testPrefixMatchNot()
org.eclipse.jgit.internal.storage.file.PackIndexV2.initEntry()
org.eclipse.jgit.util.FS.exists()
org.eclipse.jgit.http.server.glue.MetaServlet.serveRegex(String)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_c()
org.eclipse.jgit.treewalk.filter.ByteArraySet.initTable(int)
org.eclipse.jgit.merge.ResolveMergerTest.readBlob(ObjectId,String)
org.eclipse.jgit.util.RawSubStringPattern.neq(byte,byte)
org.eclipse.jgit.util.TemporaryBuffer.copy(InputStream)
org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.removed(String)
org.eclipse.jgit.transport.FetchConnection.fetch(ProgressMonitor,Collection,Set,OutputStream)
org.eclipse.jgit.treewalk.filter.PathFilter.isDone(TreeWalk)
org.eclipse.jgit.api.ResetCommandTest.testMixedReset()
org.eclipse.jgit.transport.TestProtocolTest.tearDown()
org.eclipse.jgit.transport.BaseReceivePack.flush()
org.eclipse.jgit.api.ResetCommandTest.assertSameAsHead(Ref)
org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_38()
org.eclipse.jgit.transport.OpenSshConfigTest.testMultiIdentityFile()
org.eclipse.jgit.api.BranchCommandTest.setUpRepoWithRemote()
org.eclipse.jgit.transport.PushCertificateIdent.parse(String)
org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers()
org.eclipse.jgit.dircache.DirCacheCheckout.getRemoved()
org.eclipse.jgit.pgm.Status.printSectionHeader(String,Object)
org.eclipse.jgit.transport.URIish.getUser()
org.eclipse.jgit.transport.UploadPack.flush()
org.eclipse.jgit.transport.HMACSHA1NonceGeneratorTest.signedByDifferentKeyWithSlop()
org.eclipse.jgit.dircache.DirCacheBasicTest.testWriteEmptyReadEmpty_RealIndex()
org.eclipse.jgit.transport.PushCertificateIdentTest.checkNameEmail(String,String,String)
org.eclipse.jgit.blame.BlameGenerator.split(Candidate,Candidate)
org.eclipse.jgit.api.LogCommandTest.logPathWithSkip()
org.eclipse.jgit.api.FetchCommand.setTagOpt(TagOpt)
org.eclipse.jgit.gitrepo.RepoProject.compareTo(RepoProject)
org.eclipse.jgit.transport.UserAgent.set(String)
org.eclipse.jgit.lib.BranchConfig.getTrackingBranch()
org.eclipse.jgit.transport.OpenSshConfigTest.testSeparatorParsing()
org.eclipse.jgit.api.ApplyCommandTest.testFailureF1()
org.eclipse.jgit.internal.ketch.ProposalRound.insertProposals(Repository,ProposedTimestamp)
org.eclipse.jgit.pgm.CLIGitCommand.exit(int,Exception)
org.eclipse.jgit.lib.IndexDiff.getUntrackedFolders()
org.eclipse.jgit.awtui.CommitGraphPane.paintComponent(Graphics)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testInversedGroupCase0()
org.eclipse.jgit.diff.MyersDiff.diffNonCommon(EditList,HashedSequenceComparator,HashedSequence,HashedSequence,Edit)
org.eclipse.jgit.internal.storage.pack.GcCommitSelectionTest.testBitmapsForExcessiveBranches()
org.eclipse.jgit.transport.TransportSftp.getName()
org.eclipse.jgit.util.RefMapTest.testPut_WithPrefix()
org.eclipse.jgit.pgm.Log.unified(int)
org.eclipse.jgit.revwalk.RevCommit.getFooterLines(String)
org.eclipse.jgit.lib.Repository.toString()
org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onBeginRefDelta(long,AnyObjectId,long)
org.eclipse.jgit.attributes.AttributesHandler.mergeGlobalAttributes(String,boolean,Attributes)
org.eclipse.jgit.treewalk.filter.PathFilterGroup.toString()
org.eclipse.jgit.ignore.internal.Strings.checkPosixCharClass(char)
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSomethingDot()
org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.filter(String)
org.eclipse.jgit.lib.CommitBuilder.setCommitter(PersonIdent)
org.eclipse.jgit.diff.DiffFormatterTest.makeDiffHeader(String,String,ObjectId,ObjectId)
org.eclipse.jgit.http.test.DefaultUploadPackFactoryTest.getRemoteUser()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.deleteLooseRef(String)
org.eclipse.jgit.transport.JschConfigSessionFactory.configureJSch(JSch)
org.eclipse.jgit.merge.MergeMessageFormatterTest.testTwoBranches()
org.eclipse.jgit.transport.RefSpec.isWildcard()
org.eclipse.jgit.diff.DiffFormatter.isDetectRenames()
org.eclipse.jgit.lib.Config.fromText(String)
org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits()
org.eclipse.jgit.internal.storage.file.UnpackedObject.isStandardFormat(byte)
org.eclipse.jgit.revwalk.RevCommit.getAuthorIdent()
org.eclipse.jgit.diff.DiffFormatter.close()
org.eclipse.jgit.revwalk.ObjectWalk.getPathLength()
org.eclipse.jgit.lib.ObjectIdSubclassMap.addIfAbsent(Q)
org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.doUpdate(Result)
org.eclipse.jgit.lib.TagBuilder.toString()
org.eclipse.jgit.ignore.CGitIgnoreTest.testDirectoryMatchSubRecursiveBacktrack3()
org.eclipse.jgit.console.ConsoleCredentialsProvider.get(CredentialItem,StringType)
org.eclipse.jgit.revwalk.RevWalkTestCase.commit(RevCommit)
org.eclipse.jgit.lib.ReflogEntry.getNewId()
org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest.testDequote_NamedEscapes()
org.eclipse.jgit.lib.Constants.typeString(int)
org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateGcRestPackSizeInNewRepo()
org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.write(Collection,long)
org.eclipse.jgit.internal.ketch.RemoteGitReplica.push(Repository,Transport,List)
org.eclipse.jgit.dircache.DirCacheEntry.smudgeRacilyClean()
org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex()
org.eclipse.jgit.util.FileUtilsTest.toOSPathString(String)
org.eclipse.jgit.lib.RepositoryResolveTest.testParseNonGitDescribe()
org.eclipse.jgit.merge.ResolveMergerTest.checkContentMergeConflict(MergeStrategy)
org.eclipse.jgit.merge.ResolveMerger.getMergeResults()
org.eclipse.jgit.ignore.internal.Strings.count(String,char,boolean)
org.eclipse.jgit.internal.fsck.FsckPackParser.onObjectData(Source,byte,int,int)
org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit()
org.eclipse.jgit.lfs.lib.MutableLongObjectId.set(long,int,long)
org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify()
org.eclipse.jgit.internal.ketch.KetchPreReceive.waitForPropose(Proposal,ProgressSpinner)
org.eclipse.jgit.junit.http.AppServer.createConstraintMapping()
org.eclipse.jgit.lfs.SmudgeFilter.create(Repository,InputStream,OutputStream)
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteNotFound()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.writeFileModifiedIgnored()
org.eclipse.jgit.http.test.RefsUnreadableInMemoryRepository.startFailing()
org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails()
org.eclipse.jgit.transport.RemoteConfigTest.readConfig(String)
org.eclipse.jgit.transport.WalkEncryptionTest.publicAddress()
org.eclipse.jgit.transport.BaseReceivePack.getAdvertisedOrDefaultRefs()
org.eclipse.jgit.treewalk.WorkingTreeOptions.getAutoCRLF()
org.eclipse.jgit.transport.RefAdvertiser.append(String)
org.eclipse.jgit.internal.storage.pack.ObjectToPack.setReuseAsIs()
org.eclipse.jgit.util.RunExternalScriptTest.testNullStdout()
org.eclipse.jgit.lib.IndexDiff.getConflictingStageStates()
org.eclipse.jgit.revwalk.RevObjectTest.testHasAnyFlag()
org.eclipse.jgit.util.NBTest.b(int,int)
org.eclipse.jgit.lfs.Lfs.createTmpFile()
org.eclipse.jgit.internal.ketch.ProposalRound.nullToEmpty(String)
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testPrintGroupCase3()
org.eclipse.jgit.submodule.SubmoduleAddTest.addExistentSubmodule()
org.eclipse.jgit.lfs.lib.LongObjectId.readObject(ObjectInputStream)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testSpecialGroupCase10()
org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_NoLF()
org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_UnsetMerge_Conflict()
org.eclipse.jgit.ignore.IgnoreNode.asReader(InputStream)
org.eclipse.jgit.transport.TransportSftp.getRequiredFields()
org.eclipse.jgit.api.CommitCommand.setHookOutputStream(PrintStream)
org.eclipse.jgit.transport.PreUploadHookChain.onBeginNegotiateRound(UploadPack,Collection,int)
org.eclipse.jgit.blame.Region.splitFirst(int,int)
org.eclipse.jgit.treewalk.filter.ByteArraySet.copyIfNotSameSize(byte,int)
org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch()
org.eclipse.jgit.transport.UploadPack.getTimeout()
org.eclipse.jgit.transport.RemoteRefUpdate.setMessage(String)
org.eclipse.jgit.transport.TransportSftp.openAlternate(String)
org.eclipse.jgit.http.test.SmartClientSmartServerTest.testInitialClone_Redirect301Small()
org.eclipse.jgit.internal.storage.pack.DeltaTask.compareTo(WeightedPath)
org.eclipse.jgit.api.StashCreateCommand.apply(DirCacheEntry)
org.eclipse.jgit.internal.storage.pack.PackWriter.preparePack(Iterator)
org.eclipse.jgit.pgm.ArchiveTest.testEmptyTar()
org.eclipse.jgit.junit.RepositoryTestCase.createEntry(String,FileMode)
org.eclipse.jgit.pgm.opt.AbstractTreeIteratorHandler.parseArguments(Parameters)
org.eclipse.jgit.treewalk.AbstractTreeIteratorTest.testCreateEmptyTreeIterator()
org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyTo(ByteBuffer)
org.eclipse.jgit.util.TemporaryBuffer.skip(long)
org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.contains(AnyObjectId)
org.eclipse.jgit.diff.MyersDiff.getSnake(int,int)
org.eclipse.jgit.transport.BaseReceivePack.release()
org.eclipse.jgit.transport.WalkEncryptionTest.reportLongTests()
org.eclipse.jgit.transport.FetchProcess.want(Ref,RefSpec)
org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.writeVarintString(byte)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_a()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoTagHeader2()
org.eclipse.jgit.lib.ConstantsEncodingTest.testEncode_Unicode()
org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoConflictingModifications()
org.eclipse.jgit.internal.ketch.LeaderSnapshot.getReplicas()
org.eclipse.jgit.internal.fsck.FsckPackParser.verifyIndex(PackIndex)
org.eclipse.jgit.transport.UploadPack.getRepository()
org.eclipse.jgit.http.server.AsIsFileFilter.destroy()
org.eclipse.jgit.pgm.TextBuiltin.getResourceBundle()
org.eclipse.jgit.lfs.lib.MutableLongObjectId.fromRaw(byte,int)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.loadAlternates()
org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_OneRename()
org.eclipse.jgit.transport.OpenSshConfigTest.setUp()
org.eclipse.jgit.util.ChangeIdUtilTest.testClean()
org.eclipse.jgit.util.RawCharUtil.trimTrailingWhitespace(byte,int,int)
org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.createRepositoryBinaryConflict(Consumer,Consumer,Consumer)
org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5()
org.eclipse.jgit.util.FSTest.testReadPipeCommandStartFailure()
org.eclipse.jgit.transport.DaemonService.handles(String)
org.eclipse.jgit.dircache.DirCachePathEditTest.testFileOverlapsTree()
org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.openPack(TemporaryBuffer,Heap)
org.eclipse.jgit.transport.SignedPushConfig.getCertNonceSlopLimit()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.writeFileInFolderAllIgnored()
org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest.testFileNameWildcards()
org.eclipse.jgit.util.BlockListTest.testGet()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleGroupCase2()
org.eclipse.jgit.pgm.RevWalkTextBuiltin.enableReverse(boolean)
org.eclipse.jgit.util.io.LimitedInputStream.reset()
org.eclipse.jgit.util.RawParseUtilsTest.testParseEncoding_ISO8859_1_encoding()
org.eclipse.jgit.pgm.debug.WriteReftable.compare(LogEntry,LogEntry)
org.eclipse.jgit.pgm.debug.ShowPackDelta.getDelta(ObjectReader,RevObject)
org.eclipse.jgit.http.server.FileSender.getRange(HttpServletRequest)
org.eclipse.jgit.lib.RepositoryCache.isExpired(Repository)
org.eclipse.jgit.revplot.PlotCommitList.getFreePosition(BitSet)
org.eclipse.jgit.transport.BasePackFetchConnection.setPackLockMessage(String)
org.eclipse.jgit.transport.URIishTest.testSshProtoHostOnly()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testDigitGroupCase0()
org.eclipse.jgit.api.Git.rm()
org.eclipse.jgit.internal.storage.pack.PackWriter.getDeltas()
org.eclipse.jgit.internal.storage.file.RefDirectory.copy(String,int,int)
org.eclipse.jgit.transport.RemoteConfig.getName()
org.eclipse.jgit.diff.RawTextIgnoreWhitespaceChangeTest.testEqualsWithWhitespace()
org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.testUpdateOnBackgroundThreads()
org.eclipse.jgit.lib.ObjectIdTest.testSetByte()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoRangesInOneGroupCase1()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testManySolutionsCase3()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsNotMacHFSGitOtherPlatform()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testMixedGroupCase8()
org.eclipse.jgit.internal.storage.reftable.ReftableReader.readFileFooter()
org.eclipse.jgit.pgm.ArchiveTest.testNoExtensionMeansTar()
org.eclipse.jgit.util.RefListTest.testBuilder_AddAll()
org.eclipse.jgit.lib.ObjectDatabase.exists()
org.eclipse.jgit.notes.NoteMapMergerTest.testEditDeleteConflict()
org.eclipse.jgit.internal.storage.io.BlockSource.from(byte)
org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.unlock()
org.eclipse.jgit.lib.PersonIdent.toExternalString()
org.eclipse.jgit.revwalk.RevWalkShallowTest.createShallowFile(ObjectId)
org.eclipse.jgit.lib.ValidRefNameTest.testWindowsReservedNames()
org.eclipse.jgit.util.RawParseUtils_MatchTest.testMatch_NotEqual()
org.eclipse.jgit.events.WorkingTreeModifiedEvent.getDeleted()
org.eclipse.jgit.http.server.InfoRefsServlet.writeOne(CharSequence)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testWordGroupCase3()
org.eclipse.jgit.internal.storage.reftable.MergedReftable.seekRef(String)
org.eclipse.jgit.lfs.server.fs.DownloadTest.testDownload()
org.eclipse.jgit.internal.storage.file.SimpleDataInput.readInt()
org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit()
org.eclipse.jgit.util.RawParseUtils.committer(byte,int)
org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.tearDown()
org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_AddGitLink()
org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyToByteBuffer()
org.eclipse.jgit.pgm.debug.VerifyReftable.id(ObjectId)
org.eclipse.jgit.transport.Transport.getTagOpt()
org.eclipse.jgit.api.Git.stashCreate()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsGiTTilde1()
org.eclipse.jgit.junit.StrictWorkMonitor.beginTask(String,int)
org.eclipse.jgit.internal.storage.reftable.BlockWriter.writeKey(ReftableOutputStream)
org.eclipse.jgit.pgm.RevWalkTextBuiltin.enableTopoOrder(boolean)
org.eclipse.jgit.notes.NoteParser.parseFanoutCell()
org.eclipse.jgit.api.CherryPickCommandTest.doTestCherryPick(boolean)
org.eclipse.jgit.transport.PostUploadHook.onPostUpload(PackStatistics)
org.eclipse.jgit.transport.TransferConfig.keyNameFor(String)
org.eclipse.jgit.internal.storage.dfs.DfsReader.copyPackAsIs(PackOutputStream,CachedPack)
org.eclipse.jgit.internal.storage.file.WindowCursor.newObjectToPack(AnyObjectId,int)
org.eclipse.jgit.patch.FileHeaderTest.dqHeader(String)
org.eclipse.jgit.revwalk.RevWalk.lookupTree(AnyObjectId)
org.eclipse.jgit.util.io.AutoCRLFInputStreamTest.assertNoCrLfHelper(String,String)
org.eclipse.jgit.patch.HunkHeader.getStartOffset()
org.eclipse.jgit.lfs.lib.MutableLongObjectId.setByte(int,int)
org.eclipse.jgit.util.StringUtils.toBoolean(String)
org.eclipse.jgit.hooks.PrePushHook.setRemoteLocation(String)
org.eclipse.jgit.internal.storage.file.ReflogWriter.refLockFor(String)
org.eclipse.jgit.util.RawParseUtils.decode(Charset,byte,int,int)
org.eclipse.jgit.transport.PushCertificateIdentTest.fuzzyCasesMatchPersonIdent()
org.eclipse.jgit.lib.ObjectChecker.isGitTilde1(byte,int,int)
org.eclipse.jgit.api.ShowNoteCommand.setObjectId(RevObject)
org.eclipse.jgit.internal.storage.file.FileRepository.setGitwebDescription(String)
org.eclipse.jgit.transport.URIishTest.testGetValidGitSchemeWithTwoSlashesHumanishName()
org.eclipse.jgit.lfs.lib.LfsPointerFilter.getPointer()
org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_DqFooSpLfNulBar()
org.eclipse.jgit.diff.EditListTest.testAddTwo()
org.eclipse.jgit.internal.storage.file.PackIndexV1.ensureId()
org.eclipse.jgit.pgm.debug.ShowDirCache.run()
org.eclipse.jgit.internal.storage.file.PackIndex.isTOC(byte)
org.eclipse.jgit.junit.MockSystemReader.setUnix()
org.eclipse.jgit.diff.RenameDetector.getBreakScore()
org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate()
org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit()
org.eclipse.jgit.lib.BaseRepositoryBuilder.self()
org.eclipse.jgit.lib.ValidRefNameTest.testNormalizeTrimmedUnicodeAlreadyValidRefName()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_a()
org.eclipse.jgit.junit.MockSystemReader.clearProperties()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testSpecialGroupCase4()
org.eclipse.jgit.merge.MergeConfig.getFastForwardMode(Config,String)
org.eclipse.jgit.internal.storage.file.WindowCursor.writeObjects(PackOutputStream,List)
org.eclipse.jgit.diff.HistogramDiff.diffRegion(Edit)
org.eclipse.jgit.internal.ketch.Proposal.getPushCertificate()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1.getPackIndex()
org.eclipse.jgit.transport.BaseReceivePack.sendMessage(String)
org.eclipse.jgit.lib.DirCacheCheckoutTest.cleanUpDF()
org.eclipse.jgit.transport.ReceiveCommand.isRefLogIncludingResult()
org.eclipse.jgit.pgm.debug.BenchmarkReftable.byIdHot(ObjectId)
org.eclipse.jgit.nls.TranslationBundleTest.testMissingString()
org.eclipse.jgit.api.CleanCommand.setIgnore(boolean)
org.eclipse.jgit.lib.ObjectCheckerTest.testBug477090()
org.eclipse.jgit.internal.storage.reftable.BlockWriter.key(String,long)
org.eclipse.jgit.pgm.Diff.abbrev(int)
org.eclipse.jgit.transport.SideBandInputStream.progress(String)
org.eclipse.jgit.ignore.internal.Strings.isComplexWildcard(String)
org.eclipse.jgit.diff.DiffFormatterReflowTest.parseTestPatchFile(String)
org.eclipse.jgit.lib.BaseRepositoryBuilder.safeFS()
org.eclipse.jgit.lfs.server.s3.SignerV4.stringToSign(String,String,String,String,String)
org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath()
org.eclipse.jgit.transport.URIishTest.testWindowsFile()
org.eclipse.jgit.transport.WalkEncryptionTest.product(List,List)
org.eclipse.jgit.transport.PushProcessTest.push(ProgressMonitor,Map,OutputStream)
org.eclipse.jgit.lib.ObjectIdTest.test009_toString()
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1()
org.eclipse.jgit.storage.pack.PackConfig.getDeltaSearchWindowSize()
org.eclipse.jgit.api.InitCommand.setDirectory(File)
org.eclipse.jgit.transport.UploadPack.okToGiveUpImp()
org.eclipse.jgit.lib.ObjectCheckerTest.set(ObjectId)
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testFirstExactRef_IgnoresGarbageRef()
org.eclipse.jgit.internal.storage.reftable.MergedReftable.next()
org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndRestoreFromCommit()
org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.assertIteration(FileMode,String,List)
org.eclipse.jgit.dircache.DirCacheIterator.hasId()
org.eclipse.jgit.revwalk.RevObject.add(RevFlag)
org.eclipse.jgit.http.server.GitFilter.register(ServletBinder)
org.eclipse.jgit.internal.storage.dfs.DfsInserter.writePackFooter()
org.eclipse.jgit.transport.HttpConfig.getFollowRedirects()
org.eclipse.jgit.transport.PacketLineOutTest.testWritePacket3()
org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkActuallyModified()
org.eclipse.jgit.util.io.AutoLFOutputStream.buffer(byte,int,int)
org.eclipse.jgit.pgm.Clean.run()
org.eclipse.jgit.util.RunExternalScriptTest.testAllTogetherBinExecute()
org.eclipse.jgit.internal.ketch.RemoteGitReplica.fetch(Transport,ReplicaFetchRequest)
org.eclipse.jgit.util.LongList.size()
org.eclipse.jgit.pgm.CLIGitCommand.createErrorWriter()
org.eclipse.jgit.api.AddCommandTest.testAttributesWithTreeWalkFilter()
org.eclipse.jgit.pgm.debug.VerifyReftable.groupById(List)
org.eclipse.jgit.merge.ResolveMerger.mergeTrees(AbstractTreeIterator,RevTree,RevTree,boolean)
org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.getObject(int)
org.eclipse.jgit.util.NBTest.padb(int,int,int,int,int,int,int,int,int)
org.eclipse.jgit.transport.BaseReceivePack.getLine()
org.eclipse.jgit.ignore.CGitIgnoreTest.toString(TemporaryBuffer)
org.eclipse.jgit.lib.RefUpdate.forceUpdate()
org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_otherparents()
org.eclipse.jgit.http.test.MeasurePackSizeTest.open(HttpServletRequest,String)
org.eclipse.jgit.api.CherryPickCommand.include(Ref)
org.eclipse.jgit.transport.BaseReceivePack.getCapabilities()
org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMerge()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_AnyHeadWithGarbage()
org.eclipse.jgit.lib.ObjectIdRef.getObjectId()
org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyAlreadyExists()
org.eclipse.jgit.ignore.CGitIgnoreTest.testPrefixMatch()
org.eclipse.jgit.api.Git.clean()
org.eclipse.jgit.internal.storage.dfs.DfsInserter.insertBuffer(long)
org.eclipse.jgit.revwalk.FollowFilter.getPath()
org.eclipse.jgit.junit.TestRepository.author(PersonIdent)
org.eclipse.jgit.lib.AnyObjectId.toString()
org.eclipse.jgit.api.NameRevCommandTest.multiplePathsNoMerge()
org.eclipse.jgit.diff.RawTextIgnoreLeadingWhitespaceTest.testEqualsWithoutWhitespace()
org.eclipse.jgit.archive.Tbz2Format.hashCode()
org.eclipse.jgit.transport.PackParser.newInfo(AnyObjectId,UnresolvedDelta,ObjectId)
org.eclipse.jgit.pgm.opt.RevCommitHandler.getDefaultMetaVariable()
org.eclipse.jgit.lib.CommitBuilder.setEncoding(String)
org.eclipse.jgit.transport.PushCertificateIdent.equals(Object)
org.eclipse.jgit.util.io.CountingOutputStream.write(int)
org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(CanonicalTreeParser,CanonicalTreeParser,DirCacheBuildIterator,WorkingTreeIterator)
org.eclipse.jgit.util.ChangeIdUtil.trimRight(String)
org.eclipse.jgit.ignore.IgnoreNodeTest.testRules()
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2()
org.eclipse.jgit.revwalk.RevWalk.lookupBlob(AnyObjectId)
org.eclipse.jgit.lfs.server.LfsProtocolServlet.doPost(HttpServletRequest,HttpServletResponse)
org.eclipse.jgit.merge.ResolveMerger.getRawText(ObjectId,ObjectReader)
org.eclipse.jgit.lib.RebaseTodoLine.toString()
org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testMultiRename()
org.eclipse.jgit.api.Git.remoteRemove()
org.eclipse.jgit.lib.Config.getTimeUnit(String,String,String,long,TimeUnit)
org.eclipse.jgit.revplot.PlotCommitListTest.commit(RevCommit)
org.eclipse.jgit.transport.WalkFetchConnection.alreadyHave(AnyObjectId)
org.eclipse.jgit.transport.SideBandInputStream.needDataPacket()
org.eclipse.jgit.junit.TestRng.nextInt()
org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.getName()
org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage()
org.eclipse.jgit.pgm.DescribeTest.testHelpArgumentAfterUnknown()
org.eclipse.jgit.transport.RefSpecTest.sourceOnlywithWildcard()
org.eclipse.jgit.patch.HunkHeader.extractFileLines(OutputStream)
org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.getRefDatabase()
org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.writeFileModifiedAndCommit()
org.eclipse.jgit.util.io.CountingOutputStream.flush()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test3_FromString()
org.eclipse.jgit.merge.MergeAlgorithmTest.testSameModification()
org.eclipse.jgit.treewalk.filter.IndexDiffFilter.shouldBeRecursive()
org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedNew()
org.eclipse.jgit.util.RefMap.size()
org.eclipse.jgit.revwalk.filter.NotRevFilter.toString()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testEscapedBracket6()
org.eclipse.jgit.dircache.DirCacheBuilder.enterTree(CanonicalTreeParser,ObjectReader)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.getNewPackStatistics()
org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_encoded()
org.eclipse.jgit.api.StashApplyCommandTest.indexDelete()
org.eclipse.jgit.lib.BlobBasedConfig.asTree(ObjectReader,AnyObjectId)
org.eclipse.jgit.notes.NoteMapTest.testReadFlatTwoNotes()
org.eclipse.jgit.transport.Transport.isCheckFetchedObjects()
org.eclipse.jgit.lfs.LfsPointer.parseLfsPointer(InputStream)
org.eclipse.jgit.api.TransportCommand.self()
org.eclipse.jgit.transport.OpenSshConfigTest.testListValueSingle()
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.getObject(int)
org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtStart()
org.eclipse.jgit.attributes.TreeWalkAttributeTest.testNoMatchingAttributes()
org.eclipse.jgit.internal.storage.pack.PackWriter.getDeltaBytes()
org.eclipse.jgit.api.ResetCommandTest.setupRepository()
org.eclipse.jgit.internal.storage.file.SimpleDataInput.readFully(byte)
org.eclipse.jgit.storage.file.FileBasedConfig.hash(byte)
org.eclipse.jgit.lib.TagBuilder.getObjectType()
org.eclipse.jgit.util.FS.normalize(File)
org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_1_f2_f14(Git,int)
org.eclipse.jgit.internal.storage.file.XInputStream.readFully(int)
org.eclipse.jgit.pgm.InitTest.testInitBare()
org.eclipse.jgit.transport.CredentialsProvider.get(URIish,List)
org.eclipse.jgit.lib.BaseRepositoryBuilder.setObjectDirectory(File)
org.eclipse.jgit.transport.JschConfigSessionFactory.createSession(OpenSshConfig,Host,String,String,int,FS)
org.eclipse.jgit.api.ApplyCommandTest.testFailureF2()
org.eclipse.jgit.ignore.internal.NameMatcher.matches(String,int,int,boolean)
org.eclipse.jgit.lib.AnyObjectId.startsWith(AbbreviatedObjectId)
org.eclipse.jgit.lfs.lib.LongObjectIdTest.test001_toString()
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.contains(int)
org.eclipse.jgit.pgm.opt.CmdLineParser.createOptionHandler(OptionDef,Setter)
org.eclipse.jgit.internal.storage.pack.DeltaIndex.keyOf(long)
org.eclipse.jgit.transport.WalkEncryptionTest.loadSysProp(String,String,Properties)
org.eclipse.jgit.pgm.TextBuiltin.setCommandName(String)
org.eclipse.jgit.lib.RefTest.testGetShortRef()
org.eclipse.jgit.transport.PushCertificateParser.addCommand(String)
org.eclipse.jgit.transport.RefSpecTest.testForceMaster()
org.eclipse.jgit.lib.BatchingProgressMonitor.endTask()
org.eclipse.jgit.internal.storage.reftable.BlockWriter.markScanRequired()
org.eclipse.jgit.merge.ResolveMerger.processEntry(CanonicalTreeParser,CanonicalTreeParser,CanonicalTreeParser,DirCacheBuildIterator,WorkingTreeIterator,boolean,Attributes)
org.eclipse.jgit.api.TransportCommand.configure(TransportCommand)
org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_7_f2_14(Git,int)
org.eclipse.jgit.lfs.SmudgeFilter.register()
org.eclipse.jgit.api.LogCommand.not(AnyObjectId)
org.eclipse.jgit.api.MergeCommandTest.testSquashMerge()
org.eclipse.jgit.internal.storage.file.RefDirectory.resolve(Ref,int,String,RefList,RefList)
org.eclipse.jgit.util.FileUtils.isFile(File)
org.eclipse.jgit.internal.storage.file.FileSnapshot.save(File)
org.eclipse.jgit.dircache.DirCacheEditor.add(PathEdit)
org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath()
org.eclipse.jgit.api.PushCommand.getReceivePack()
org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag()
org.eclipse.jgit.http.test.SmartClientSmartServerSslTest.testInitialClone_ViaHttps()
org.eclipse.jgit.patch.HunkHeader.getFileHeader()
org.eclipse.jgit.treewalk.CanonicalTreeParser.createSubtreeIterator(ObjectReader)
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward()
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon1()
org.eclipse.jgit.transport.PushConnection.push(ProgressMonitor,Map)
org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testLongPaths()
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getStreamKey(PackExt)
org.eclipse.jgit.gitrepo.RepoCommand.findRef(String,Repository)
org.eclipse.jgit.http.server.ClientVersionUtilTest.assertEquals(String,int)
org.eclipse.jgit.hooks.PreCommitHook.call()
org.eclipse.jgit.internal.storage.reftree.Scanner.toRef(ObjectReader,int,CanonicalTreeParser)
org.eclipse.jgit.api.InitCommand.setGitDir(File)
org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoSymbolicRefHeadPointingToMaster()
org.eclipse.jgit.internal.storage.file.SimpleDataOutput.writeFloat(float)
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.readFully(long,byte,int,int,DfsReader)
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.write(BlockWriter,Entry)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testDigitGroupCase2()
org.eclipse.jgit.junit.http.SimpleHttpServer.start()
org.eclipse.jgit.awtui.CommitGraphPane.getValueAt(int,int)
org.eclipse.jgit.internal.storage.pack.PackWriter.writeChecksum(PackOutputStream)
org.eclipse.jgit.diff.EditTest.testType_Replace()
org.eclipse.jgit.internal.storage.file.RefDirectory.clearReferences()
org.eclipse.jgit.internal.storage.pack.PackOutputStream.objectHeader(long,int,byte)
org.eclipse.jgit.junit.JGitTestUtil.writeTrashFile(Repository,String,String,String)
org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testNotEquals_SameLength()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.deleteFileAndCommit()
org.eclipse.jgit.util.FileUtils.isStaleFileHandle(IOException)
org.eclipse.jgit.internal.storage.dfs.LargePackedWholeObject.getType()
org.eclipse.jgit.lib.BatchRefUpdate.addPrefixesTo(String,Collection)
org.eclipse.jgit.pgm.MergeBase.commit_0(RevCommit)
org.eclipse.jgit.lib.ObjectReader.getObjectSize(AnyObjectId,int)
org.eclipse.jgit.util.RunExternalScriptTest.testStdErrExecute()
org.eclipse.jgit.util.FS.runProcess(ProcessBuilder,OutputStream,OutputStream,String)
org.eclipse.jgit.pgm.debug.LfsStore.addContext(String)
org.eclipse.jgit.transport.RefSpecTest.testWildcardAfterText2()
org.eclipse.jgit.http.test.SmartClientSmartServerTest.testInitialClone_BrokenServer()
org.eclipse.jgit.lib.ConfigTest.testSetFastForwardMerge()
org.eclipse.jgit.transport.http.apache.HttpClientConnection.verify(String,String,String)
org.eclipse.jgit.pgm.Log.ignoreSpaceChange(boolean)
org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.bytesWrittenInBlock()
org.eclipse.jgit.lfs.internal.AtomicObjectOutputStream.close()
org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length128()
org.eclipse.jgit.treewalk.WorkingTreeIterator.computeHash(InputStream,long)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.setConvertToReftable(boolean)
org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.padBetweenBlocksToNextBlock()
org.eclipse.jgit.api.ApplyCommandTest.testModifyE()
org.eclipse.jgit.api.PathCheckoutCommandTest.testStageNotPossibleWithBranch()
org.eclipse.jgit.http.server.GitSmartHttpTools.isUploadPack(HttpServletRequest)
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.flush()
org.eclipse.jgit.util.ChangeIdUtilTest.testId()
org.eclipse.jgit.http.server.glue.MetaFilter.serveRegex(String)
org.eclipse.jgit.transport.TransferConfig.newObjectChecker(boolean)
org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir()
org.eclipse.jgit.lib.ObjectIdRef.getPeeledObjectId()
org.eclipse.jgit.transport.PackParser.openDatabase(UnresolvedDelta,ObjectTypeAndSize)
org.eclipse.jgit.pgm.opt.RefSpecHandler.parseArguments(Parameters)
org.eclipse.jgit.transport.http.JDKHttpConnection.configure(KeyManager,TrustManager,SecureRandom)
org.eclipse.jgit.revwalk.DelayRevQueue.outputType()
org.eclipse.jgit.api.RebaseCommand.tryFastForward(String,RevCommit,RevCommit)
org.eclipse.jgit.api.PullCommand.setRemoteBranchName(String)
org.eclipse.jgit.lib.ObjectInserter.idFor(int,long,InputStream)
org.eclipse.jgit.dircache.DirCacheIteratorTest.testBackBug396127()
org.eclipse.jgit.transport.TransportGitAnon.getSchemes()
org.eclipse.jgit.lib.SymbolicRefTest.testToString()
org.eclipse.jgit.transport.FetchProcess.fetchObjects(ProgressMonitor)
org.eclipse.jgit.util.IO.readFully(File,int)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testDigitGroupCase3()
org.eclipse.jgit.patch.FileHeaderTest.testParseCopy100()
org.eclipse.jgit.transport.TransportHttp.openResponse()
org.eclipse.jgit.merge.StrategyRecursive.newMerger(ObjectInserter,Config)
org.eclipse.jgit.internal.storage.reftable.BlockReader.readLogEntry()
org.eclipse.jgit.api.MergeResult.getMergedCommits()
org.eclipse.jgit.lfs.server.fs.FileLfsRepository.formatHexChar(char,int,int)
org.eclipse.jgit.api.ListTagCommand.call()
org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue()
org.eclipse.jgit.http.test.DefaultUploadPackFactoryTest.testCreate_Enabled()
org.eclipse.jgit.transport.UploadPack.getAdvertisedOrDefaultRefs()
org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles(MergeStrategy,IndexState,WorktreeState)
org.eclipse.jgit.lib.IndexDiff.getStageMask()
org.eclipse.jgit.util.SystemReader.isOutdated()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames5()
org.eclipse.jgit.transport.OpenSshConfigTest.testEqualsSign()
org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL_And_NONE()
org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1_NoParentRewriting()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_d()
org.eclipse.jgit.dircache.DirCacheBuilder.toEntry(int,CanonicalTreeParser)
org.eclipse.jgit.util.io.TimeoutInputStreamTest.testTimeout_readBuffer_Success1()
org.eclipse.jgit.api.StatusCommandTest.testEmptyStatus()
org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint()
org.eclipse.jgit.internal.storage.reftable.BlockWriter.key(int,ObjectId)
org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_Length130InsertFails()
org.eclipse.jgit.junit.MockSystemReader.getDateTimeInstance(int,int)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.checkCRC(int)
org.eclipse.jgit.internal.storage.file.AlternatesTest.assertCommit(RevCommit)
org.eclipse.jgit.transport.TransportAmazonS3.loadPropertiesFile(File)
org.eclipse.jgit.attributes.FilterCommandRegistry.unregister(String)
org.eclipse.jgit.lib.Ref.getPeeledObjectId()
org.eclipse.jgit.dircache.DirCacheIteratorTest.testEmptyTree_WithTreeWalk()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirs()
org.eclipse.jgit.transport.AmazonS3.putImpl(String,String,byte,TemporaryBuffer,ProgressMonitor,String)
org.eclipse.jgit.attributes.CGitAttributesTest.testStarPathMatchNot()
org.eclipse.jgit.internal.storage.dfs.DfsInserter.getCachedBytes()
org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory()
org.eclipse.jgit.storage.pack.PackStatistics.getTotalBytes()
org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithBareConfigFalse()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.indexPosition(Section)
org.eclipse.jgit.internal.storage.file.PackWriterTest.testContructor()
org.eclipse.jgit.transport.Transport.isRemoveDeletedRefs()
org.eclipse.jgit.transport.AmazonS3.characters(char,int,int)
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsFirstBad()
org.eclipse.jgit.lib.TreeFormatter.append(byte,FileMode,AnyObjectId)
org.eclipse.jgit.util.FS_POSIX.canExecute(File)
org.eclipse.jgit.http.server.glue.MetaServlet.getDelegateFilter()
org.eclipse.jgit.lib.BitmapIndex.removeAllOrNone(PackBitmapIndex)
org.eclipse.jgit.transport.TransferConfig.isAllowReachableSha1InWant()
org.eclipse.jgit.internal.storage.dfs.DfsPacksChangedListener.onPacksChanged(DfsPacksChangedEvent)
org.eclipse.jgit.lib.RefDatabaseConflictingNamesTest.assertConflictingNames(String,String)
org.eclipse.jgit.junit.Assert.assertEquals(String,boolean,boolean)
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon()
org.eclipse.jgit.transport.TransportSftp.readAdvertisedRefs()
org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyFromStringInvalid()
org.eclipse.jgit.revwalk.RevTagParseTest.testParse_ShortLineOnlyEndLF()
org.eclipse.jgit.transport.WalkRemoteObjectDatabase.writeInfoPacks(Collection)
org.eclipse.jgit.patch.EditListTest.parseTestPatchFile(String)
org.eclipse.jgit.internal.ketch.KetchSystem.getTxnCommitted()
org.eclipse.jgit.internal.storage.dfs.PackInputStream.read(byte,int,int)
org.eclipse.jgit.storage.pack.PackConfig.setExecutor(Executor)
org.eclipse.jgit.api.ArchiveCommand.setPaths(String)
org.eclipse.jgit.fnmatch.FileNameMatcher.createHeadsStartValues(String,Character)
org.eclipse.jgit.awtui.CommitGraphPane.configureHeader()
org.eclipse.jgit.internal.storage.file.FileObjectDatabase.newInserter()
org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopy()
org.eclipse.jgit.transport.UploadPack.setTransferConfig(TransferConfig)
org.eclipse.jgit.transport.SshTransport.getSshSessionFactory()
org.eclipse.jgit.transport.CredentialsProviderUserInfo.createURI(Session)
org.eclipse.jgit.transport.BaseReceivePack.setBiDirectionalPipe(boolean)
org.eclipse.jgit.internal.storage.file.PackFileTest.release()
org.eclipse.jgit.lib.BatchRefUpdate.getProposedTimestamps()
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass()
org.eclipse.jgit.util.io.UnionInputStreamTest.testNonBlockingPartialRead()
org.eclipse.jgit.util.io.InterruptTimer.begin(int)
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getBlockSize(PackExt)
org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.openLooseObject(WindowCursor,AnyObjectId)
org.eclipse.jgit.lfs.server.s3.S3Config.getExpirationSeconds()
org.eclipse.jgit.pgm.AmazonS3Client.properties()
org.eclipse.jgit.http.server.glue.UrlPipeline.nextElement()
org.eclipse.jgit.util.FS_Win32.retryFailedLockFileCommit()
org.eclipse.jgit.blame.BlameResult.loadFrom(BlameGenerator)
org.eclipse.jgit.transport.TransportGitSsh.close()
org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.fourTableScan()
org.eclipse.jgit.junit.MockSystemReader.getSimpleDateFormat(String)
org.eclipse.jgit.internal.ketch.Proposal.getState()
org.eclipse.jgit.transport.DefaultSshSessionFactory.configure(OpenSshConfig,Host,Session)
org.eclipse.jgit.api.LogCommandTest.logAllCommits()
org.eclipse.jgit.dircache.DirCacheIterator.createEmptyTreeIterator()
org.eclipse.jgit.internal.ketch.StageBuilder.tmpAuthor(List)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testXDigitGroupCase1()
org.eclipse.jgit.transport.BaseReceivePack.setCheckReceivedObjects(boolean)
org.eclipse.jgit.util.LongMapTest.testRemoveCollision2()
org.eclipse.jgit.internal.storage.file.SimpleDataInput.skipBytes(int)
org.eclipse.jgit.diff.AbstractDiffTestCase.testDegenerate_InsertMiddle()
org.eclipse.jgit.api.SubmoduleAddCommand.setURI(String)
org.eclipse.jgit.api.RevertCommand.calculateOurName(Ref)
org.eclipse.jgit.ant.tasks.GitInitTask.setBare(boolean)
org.eclipse.jgit.diff.DiffFormatter.scan(AnyObjectId,AnyObjectId)
org.eclipse.jgit.transport.PushCertificateIdent.getRaw()
org.eclipse.jgit.pgm.StatusTest.testStatusUntrackedFiles()
org.eclipse.jgit.internal.storage.dfs.DfsPackCompacterTest.compact()
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.execute(BatchRefUpdate,boolean)
org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.countPacks(PackSource)
org.eclipse.jgit.util.RelativeDateFormatterTest.testFormatYears()
org.eclipse.jgit.internal.storage.file.PackIndex.ensureId()
org.eclipse.jgit.internal.storage.dfs.DfsReader.open(AnyObjectId,int)
org.eclipse.jgit.api.Git.pull()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGit()
org.eclipse.jgit.diff.HistogramDiffTest.testEdit_LcsContainsUnique()
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.size()
org.eclipse.jgit.transport.BaseReceivePack.setMaxCommandBytes(long)
org.eclipse.jgit.patch.FileHeader.newHunkHeader(int)
org.eclipse.jgit.util.QuotedString.quote(String)
org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.readLsFiles()
org.eclipse.jgit.transport.BasePackConnection.getPeerUserAgent()
org.eclipse.jgit.internal.storage.file.GcTestCase.commitChain(int)
org.eclipse.jgit.transport.RefAdvertiser.advertiseCapability(String,String)
org.eclipse.jgit.transport.TransportHttp.httpOpen(String,URL,AcceptEncoding)
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyWindows()
org.eclipse.jgit.http.test.GitServletInitTest.testDefaultConstructor_NoBasePath()
org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.setIndexVersion(int)
org.eclipse.jgit.merge.MergeMessageFormatterTest.setUp()
org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef()
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getObjectSize(DfsReader,long)
org.eclipse.jgit.nls.TranslationBundleTest.testGermanTranslation()
org.eclipse.jgit.api.PullCommandTest.testPullConflict()
org.eclipse.jgit.notes.NotesMergeConflictException.noteOn(Note,Note,Note)
org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfSource()
org.eclipse.jgit.pgm.StatusTest.testStatusU()
org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation.getDeltaBase()
org.eclipse.jgit.treewalk.EmptyTreeIterator.idBuffer()
org.eclipse.jgit.util.NBTest.b(int,int,int,int,int,int,int,int)
org.eclipse.jgit.internal.storage.dfs.DfsCachedPack.copyAsIs(PackOutputStream,DfsReader)
org.eclipse.jgit.util.GitDateParserTest.shortWithDotsReverse()
org.eclipse.jgit.junit.MockSystemReader.tick(int)
org.eclipse.jgit.transport.WalkFetchConnection.processTree(RevObject)
org.eclipse.jgit.lib.ObjectCheckerTest.testNullSha1InTreeEntry()
org.eclipse.jgit.util.QuotedStringBourneStyleTest.testDequote_BareABCZ_OnlyBC()
org.eclipse.jgit.lib.AnyObjectId.writeRawInt(OutputStream,int)
org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete()
org.eclipse.jgit.pgm.StatusTest.testStatusUno()
org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(ObjectReader)
org.eclipse.jgit.transport.FetchProcess.updateFETCH_HEAD(FetchResult)
org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors1()
org.eclipse.jgit.transport.PushCertificateStoreTest.newCert(String)
org.eclipse.jgit.dircache.DirCacheEntryTest.testIsValidPath()
org.eclipse.jgit.util.RelativeDateFormatterTest.setUp()
org.eclipse.jgit.util.QuotedStringBourneStyleTest.testDequote_SoleSq()
org.eclipse.jgit.revwalk.ObjectWalk.sort(RevSort)
org.eclipse.jgit.internal.ketch.KetchLeader.getCommitted()
org.eclipse.jgit.transport.PushCertificateParser.fromReader(Reader)
org.eclipse.jgit.transport.PacketLineInTest.testReadString_Len0004()
org.eclipse.jgit.transport.RefLeaseSpec.toString()
org.eclipse.jgit.diff.MyersDiff.calculate(int,int,int,int)
org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFindAttributesWhenMissing()
org.eclipse.jgit.http.test.SmartClientSmartServerTest.testFetch_RefsUnreadableOnUpload()
org.eclipse.jgit.pgm.ArchiveTest.testExtensionMatchIsAnchored()
org.eclipse.jgit.junit.MockSystemReader.setWindows()
org.eclipse.jgit.lib.TagBuilder.getMessage()
org.eclipse.jgit.lib.ObjectIdOwnerMap.size()
org.eclipse.jgit.revplot.PlotCommitListTest.getLanePos()
org.eclipse.jgit.transport.PushOptionsTest.testThinPushWithOptions()
org.eclipse.jgit.internal.ketch.KetchSystem.hasParticipation(Config,String)
org.eclipse.jgit.revwalk.RevWalk.cancel(boolean)
org.eclipse.jgit.transport.PushCertificateParser.enabled()
org.eclipse.jgit.lib.ConfigTest.test007_readUserConfig()
org.eclipse.jgit.util.GitDateParserTest.defaultFmt()
org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_DetectConflict()
org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.shouldFetchSubmodulesWhenSubmoduleConfigurationSetToYes(boolean)
org.eclipse.jgit.transport.http.HttpConnection.setConnectTimeout(int)
org.eclipse.jgit.console.ConsoleCredentialsProvider.get(CredentialItem,YesNoType)
org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getCommits()
org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts2()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeTruncatedInName()
org.eclipse.jgit.transport.TransportHttp.skip(long)
org.eclipse.jgit.util.RelativeDateFormatterTest.testFuture()
org.eclipse.jgit.diff.AbstractDiffTestCase.testDegenerate_InsertEnd()
org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertHeadMiddle()
org.eclipse.jgit.revwalk.RevObject.toString()
org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2()
org.eclipse.jgit.lib.RepositoryCache.clearAll()
org.eclipse.jgit.util.FileUtils.setHidden(File,boolean)
org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch()
org.eclipse.jgit.internal.storage.file.LocalCachedPack.copyAsIs(PackOutputStream,WindowCursor)
org.eclipse.jgit.pgm.BranchTest.testDeleteForce()
org.eclipse.jgit.lib.RefTest.testReadAllIncludingSymrefs()
org.eclipse.jgit.awtui.AWTPlotRenderer.paintTriangleDown(int,int,int)
org.eclipse.jgit.api.ListBranchCommand.setContains(String)
org.eclipse.jgit.diff.DiffFormatterTest.testDiff()
org.eclipse.jgit.util.CPUTimeStopWatch.stop()
org.eclipse.jgit.junit.TestRepository.commit(int,RevTree,RevCommit)
org.eclipse.jgit.util.ChangeIdUtilTest.hookDoesNotModify(String)
org.eclipse.jgit.internal.storage.file.LocalCachedPack.hasObject(ObjectToPack,StoredObjectRepresentation)
org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse2()
org.eclipse.jgit.lib.ObjectIdTest.test006_notIsId()
org.eclipse.jgit.internal.storage.reftable.ReftableReader.getUpdateIndex()
org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testSingleSubPathNegate()
org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.newMerger(Repository)
org.eclipse.jgit.api.GarbageCollectCommand.setProgressMonitor(ProgressMonitor)
org.eclipse.jgit.transport.PushCertificateParserTest.testParseString()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_1()
org.eclipse.jgit.junit.http.HttpTestCase.mirror(String)
org.eclipse.jgit.archive.TarFormat.equals(Object)
org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.reject(ReceiveCommand,ReceiveCommand,Result,List)
org.eclipse.jgit.console.ConsoleCredentialsProvider.supports(CredentialItem)
org.eclipse.jgit.lib.ConfigTest.testIncludeEmptyValue()
org.eclipse.jgit.internal.storage.pack.PackWriter.setObjectCountCallback(ObjectCountCallback)
org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.toResultString(Result)
org.eclipse.jgit.internal.storage.file.PackWriterTest.testShallowFetchShallowAncestorDepth1()
org.eclipse.jgit.lib.RefComparator.compare(Ref,Ref)
org.eclipse.jgit.lib.ObjectIdTest.test011_toString()
org.eclipse.jgit.dircache.DirCacheBuilderTest.onIndexChanged(IndexChangedEvent)
org.eclipse.jgit.api.AddCommandTest.testCommandInjection()
org.eclipse.jgit.revwalk.RevFlagSetTest.testRemove()
org.eclipse.jgit.lfs.lib.LongObjectIdTest.test007_isId()
org.eclipse.jgit.revwalk.filter.MessageRevFilter.text(RevCommit)
org.eclipse.jgit.notes.NoteMap.contains(AnyObjectId)
org.eclipse.jgit.internal.storage.file.WindowCache.load(PackFile,long)
org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_InvalidType()
org.eclipse.jgit.http.server.ServletUtils.etag(byte)
org.eclipse.jgit.attributes.AttributesRule.isDirOnly()
org.eclipse.jgit.api.ApplyResult.addUpdatedFile(File)
org.eclipse.jgit.internal.storage.dfs.BeforeDfsPackIndexLoadedEvent.dispatch(BeforeDfsPackIndexLoadedListener)
org.eclipse.jgit.revwalk.RevTag.getTagName()
org.eclipse.jgit.revwalk.filter.ObjectFilter.include(ObjectWalk,AnyObjectId)
org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_Default()
org.eclipse.jgit.internal.storage.pack.PackWriter.getReusedPacks()
org.eclipse.jgit.diff.RenameDetectorTest.assertCopy(DiffEntry,DiffEntry,int,DiffEntry)
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgCon()
org.eclipse.jgit.lfs.internal.AtomicObjectOutputStream.write(int)
org.eclipse.jgit.transport.ReceiveCommand.setType(Type)
org.eclipse.jgit.util.RawParseUtils.decode(byte)
org.eclipse.jgit.lib.ObjectChecker.isPositiveDigit(byte)
org.eclipse.jgit.pgm.ArchiveTest.testTbz2Extension()
org.eclipse.jgit.attributes.FilterCommandRegistry.isRegistered(String)
org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_ForwardOneAtATime()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.objCount()
org.eclipse.jgit.api.RenameBranchCommand.call()
org.eclipse.jgit.api.ResetCommand.checkoutIndex(ObjectId)
org.eclipse.jgit.transport.BundleWriter.include(String,AnyObjectId)
org.eclipse.jgit.pgm.CheckoutTest.testCheckoutNonExistingBranch()
org.eclipse.jgit.junit.JGitTestUtil.s(byte)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCombinedRangesInOneGroupCase0()
org.eclipse.jgit.gitrepo.RepoCommand.setPath(String)
org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testEmptyTree_AtEOF()
org.eclipse.jgit.treewalk.WorkingTreeIterator.isWorkTree()
org.eclipse.jgit.treewalk.filter.TreeFilter.toString()
org.eclipse.jgit.submodule.SubmoduleStatusTest.apply(DirCacheEntry)
org.eclipse.jgit.revwalk.FIFORevQueueTest.create()
org.eclipse.jgit.merge.RecursiveMergerTest.contentId(String,String)
org.eclipse.jgit.lib.ConfigTest.testTimeUnitDefaultValue()
org.eclipse.jgit.patch.CombinedHunkHeader.extractFileLines(OutputStream)
org.eclipse.jgit.util.io.AutoLFInputStream.isBinary()
org.eclipse.jgit.transport.NetRC.parse()
org.eclipse.jgit.api.AddCommandTest.addEntryToBuilder(String,File,ObjectInserter,DirCacheBuilder,int)
org.eclipse.jgit.api.DiffCommand.setOldTree(AbstractTreeIterator)
org.eclipse.jgit.transport.PushCertificateStore.save()
org.eclipse.jgit.util.io.DisabledOutputStream.write(int)
org.eclipse.jgit.treewalk.filter.TreeFilter.include(TreeWalk)
org.eclipse.jgit.api.ArchiveCommand.setOutputStream(OutputStream)
org.eclipse.jgit.transport.PushCertificate.hashCode()
org.eclipse.jgit.internal.storage.reftree.RefTree.refName(String)
org.eclipse.jgit.http.server.FileSender.initRangeRequest(HttpServletRequest,HttpServletResponse)
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows1()
org.eclipse.jgit.util.io.MessageWriter.write(char,int,int)
org.eclipse.jgit.pgm.AddTest.testAddAlreadyAdded()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeMultiLevelIndex(List)
org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoComplicatedModifications()
org.eclipse.jgit.junit.http.MockServletConfig.getServletName()
org.eclipse.jgit.pgm.opt.CmdLineParser.printToErrorWriter(String)
org.eclipse.jgit.api.InitCommandTest.testInitWithExplicitGitDir()
org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeleteTrickyNames()
org.eclipse.jgit.transport.PushOptionsTest.commands(boolean)
org.eclipse.jgit.http.test.HttpClientTests.smart(String)
org.eclipse.jgit.api.MergeResult.addConflict(String,org,eclipse,jgit,merge)
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getMinUpdateIndex()
org.eclipse.jgit.transport.BasePackFetchConnection.include(RevWalk,RevCommit)
org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_SmallBlocks2()
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.reflogAppendStatusWithMessage()
org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onEndWholeObject(PackedObjectInfo)
org.eclipse.jgit.awtui.CommitGraphPane.setModel(TableModel)
org.eclipse.jgit.revwalk.LIFORevQueue.toString()
org.eclipse.jgit.internal.storage.reftable.ReftableReader.getRefName()
org.eclipse.jgit.internal.storage.dfs.DfsReader.copy(BlockBasedFile,long,byte,int,int)
org.eclipse.jgit.util.HookTest.testFailedCommitMsgHookBlocksCommit()
org.eclipse.jgit.submodule.SubmoduleWalkTest.apply(DirCacheEntry)
org.eclipse.jgit.api.CloneCommandTest.testCloneBareRepositoryDefaultDirectory()
org.eclipse.jgit.transport.PushCertificateIdentTest.parseValid()
org.eclipse.jgit.lib.EmptyProgressMonitor.endTask()
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getDeltaCount()
org.eclipse.jgit.transport.http.apache.HttpClientConnection.setFixedLengthStreamingMode(int)
org.eclipse.jgit.util.RefList.toString()
org.eclipse.jgit.api.StashApplyCommandTest.indexAdd()
org.eclipse.jgit.revwalk.RevCommitList.isPending()
org.eclipse.jgit.fnmatch.FileNameMatcher.append(String)
org.eclipse.jgit.revwalk.AlwaysEmptyRevQueueTest.testEmpty()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getCompressedBitmaps()
org.eclipse.jgit.diff.SimilarityRenameDetector.nameScore(String,String)
org.eclipse.jgit.transport.WalkEncryptionTest.terminate()
org.eclipse.jgit.ignore.internal.Strings.getPathSeparator(Character)
org.eclipse.jgit.pgm.StatusTest.executeTest(String,boolean,boolean)
org.eclipse.jgit.lib.TagBuilder.getTagger()
org.eclipse.jgit.revwalk.RevWalkTestCase.blob(String)
org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.writeBitmap(EWAHCompressedBitmap)
org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_7(Git,int)
org.eclipse.jgit.internal.storage.file.PackWriterTest.writeShallowPack(FileRepository,int,Set,Set,Set)
org.eclipse.jgit.internal.ketch.KetchSystem.delay(long,long,long)
org.eclipse.jgit.transport.BaseReceivePack.sendStatusReport(boolean,Throwable,Reporter)
org.eclipse.jgit.transport.ReceivePack.getLockMessageProcessName()
org.eclipse.jgit.transport.RemoteConfig.removePushURI(URIish)
org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_9(Git)
org.eclipse.jgit.lib.TreeFormatter.append(String,RevTree)
org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption()
org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream()
org.eclipse.jgit.transport.PackParser.addObjectAndTrack(PackedObjectInfo)
org.eclipse.jgit.lib.Config.findSectionEnd(List,String,String)
org.eclipse.jgit.merge.RecursiveMergerTest.validateStates(IndexState,WorktreeState)
org.eclipse.jgit.internal.storage.dfs.ReftableStack.open(DfsReader,List)
org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.doTest()
org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink()
org.eclipse.jgit.attributes.AttributesHandlerTest.attrs(String)
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.symref(String,String)
org.eclipse.jgit.pgm.UploadPack.run()
org.eclipse.jgit.api.CherryPickResult.getStatus()
org.eclipse.jgit.nls.RootLocaleTest.setUp()
org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie()
org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getAction(AnyLongObjectId)
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setEstimatedPackSize(long)
org.eclipse.jgit.util.GitDateParser.parse(String,Calendar,Locale)
org.eclipse.jgit.lib.AnyObjectId.compareTo(int,int)
org.eclipse.jgit.util.sha1.SHA1Test.blob(byte,SHA1)
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.indexRef(Ref,long)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_9()
org.eclipse.jgit.lib.Config.readKeyName(StringReader)
org.eclipse.jgit.api.Status.getIgnoredNotInIndex()
org.eclipse.jgit.diff.DiffConfig.getRenameDetectionType()
org.eclipse.jgit.internal.fsck.FsckPackParser.onEndThinPack()
org.eclipse.jgit.api.Status.getUntracked()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testTwoRangesInOneGroupCase3()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseOverridesPacked()
org.eclipse.jgit.api.CheckoutCommandTest.testSimpleCheckout()
org.eclipse.jgit.api.RebaseCommand.getHead()
org.eclipse.jgit.api.RebaseCommand.cherryPickCommit(RevCommit)
org.eclipse.jgit.api.BlameCommand.reverse(AnyObjectId,AnyObjectId)
org.eclipse.jgit.transport.PackParser.sync()
org.eclipse.jgit.api.CloneCommand.setDirectory(File)
org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex()
org.eclipse.jgit.pgm.AbstractFetchCommand.shortTypeOf(RefUpdate,Result)
org.eclipse.jgit.util.CachedAuthenticator.toPasswordAuthentication()
org.eclipse.jgit.ignore.FastIgnoreRule.toString()
org.eclipse.jgit.api.ResetCommandTest.testHardResetWithConflicts_DoDeleteFileFolderConflicts()
org.eclipse.jgit.lib.internal.WorkQueue.getExecutor()
org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule()
org.eclipse.jgit.internal.storage.pack.PackWriter.addObject(AnyObjectId,int,int)
org.eclipse.jgit.internal.storage.pack.ObjectToPack.getDeltaBaseId()
org.eclipse.jgit.diff.DiffFormatter.isAdd(List)
org.eclipse.jgit.transport.RefFilter.filter(Map)
org.eclipse.jgit.junit.http.HttpTestCase.tearDown()
org.eclipse.jgit.pgm.debug.LfsStore.assertNotRunning()
org.eclipse.jgit.internal.storage.file.PackFile.hasObject(AnyObjectId)
org.eclipse.jgit.lib.RefTest.testReadSymRefToPacked()
org.eclipse.jgit.submodule.SubmoduleStatus.getHeadId()
org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfDestionation()
org.eclipse.jgit.internal.storage.dfs.DfsPackCompacterTest.commit()
org.eclipse.jgit.transport.TransportGitAnon.getName()
org.eclipse.jgit.transport.DaemonService.isOverridable()
org.eclipse.jgit.internal.storage.file.PackIndexV2Test.getFileForPack34be9032()
org.eclipse.jgit.internal.ketch.ReplicaConfig.fromConfig(Config,String)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testInversedGroupCase3()
org.eclipse.jgit.gitrepo.RepoCommand.readFileFromRepo(Repository,String,String)
org.eclipse.jgit.internal.storage.file.PackIndexV1.hasCRC32Support()
org.eclipse.jgit.internal.storage.dfs.DfsReader.writeObjects(PackOutputStream,List)
org.eclipse.jgit.lib.ObjectChecker.isMacHFSGit(byte,int,int,AnyObjectId)
org.eclipse.jgit.api.ApplyCommandTest.testNonASCIIAdd()
org.eclipse.jgit.revwalk.ObjectWalk.growPathBuf(int)
org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase()
org.eclipse.jgit.lib.DefaultTypedConfigGetter.getBoolean(Config,String,String,String,boolean)
org.eclipse.jgit.merge.MergeAlgorithmTest.t(String)
org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount()
org.eclipse.jgit.transport.RefSpec.match(String,String)
org.eclipse.jgit.lib.ObjectDatabase.newCachedDatabase()
org.eclipse.jgit.api.ResetCommandTest.testPathsResetToNonexistingRef()
org.eclipse.jgit.api.Git.submoduleSync()
org.eclipse.jgit.util.FileUtilsTest.testCreateNewFile()
org.eclipse.jgit.revwalk.RevCommitList.lastIndexOf(RevFlag,int)
org.eclipse.jgit.treewalk.EmptyTreeIterator.createSubtreeIterator(ObjectReader)
org.eclipse.jgit.internal.storage.file.RefDirectory.putLooseRef(LooseRef)
org.eclipse.jgit.attributes.AttributesMatcherTest.testNameOnlyMatches()
org.eclipse.jgit.dircache.DirCache.compare(DirCacheEntry,DirCacheEntry)
org.eclipse.jgit.submodule.SubmoduleWalk.getHead()
org.eclipse.jgit.lfs.lib.LfsPointerFilterTest.withRecursive(boolean)
org.eclipse.jgit.internal.storage.file.PackFile.idx()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadBranchConfig()
org.eclipse.jgit.transport.HttpAuthTest.testHttpAuthScanResponse()
org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict()
org.eclipse.jgit.transport.WalkPushConnection.push(ProgressMonitor,Map)
org.eclipse.jgit.transport.RefSpecTest.invalidWhenMoreThanOneWildcardInDestination()
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.remove()
org.eclipse.jgit.lfs.internal.AtomicObjectOutputStream.abort()
org.eclipse.jgit.transport.PostUploadHookChain.onPostUpload(PackStatistics)
org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(ObjectReader,MutableObjectId)
org.eclipse.jgit.junit.http.HttpTestCase.createTestRepository()
org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testNonCommitHead()
org.eclipse.jgit.internal.storage.pack.DeltaEncoder.insert(byte)
org.eclipse.jgit.util.RelativeDateFormatterTest.assertFormat(long,long,String)
org.eclipse.jgit.api.StashCreateCommand.createBuilder()
org.eclipse.jgit.junit.http.AppServer.loadRoleInfo(UserPrincipal)
org.eclipse.jgit.dircache.DirCacheIterator.next(int)
org.eclipse.jgit.internal.ketch.KetchSystem.getMaxWaitForMonotonicClock()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testSpecialGroupCase1()
org.eclipse.jgit.transport.http.HttpConnection.setChunkedStreamingMode(int)
org.eclipse.jgit.util.RawParseUtils.tagMessage(byte,int)
org.eclipse.jgit.diff.AbstractDiffTestCase.testEdit_CommonReplaceCommonDeleteCommon()
org.eclipse.jgit.transport.resolver.ReceivePackFactory.create(C,Repository)
org.eclipse.jgit.transport.OpenSshConfig.getPort()
org.eclipse.jgit.transport.PushResult.getRemoteUpdate(String)
org.eclipse.jgit.internal.storage.reftable.ReftableTest.tag(String,int,int)
org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_SrcFooC()
org.eclipse.jgit.util.RawParseUtils.parseHexInt16(byte,int)
org.eclipse.jgit.diff.DiffFormatter.setReader(ObjectReader,Config)
org.eclipse.jgit.pgm.RevWalkTextBuiltin.createWalk()
org.eclipse.jgit.transport.BundleFetchConnection.setPackLockMessage(String)
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getBitmapIndex(DfsReader)
org.eclipse.jgit.transport.JschSession.exitValue()
org.eclipse.jgit.dircache.DirCacheCheckout.doCheckout()
org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.newPackParser(InputStream)
org.eclipse.jgit.util.io.TimeoutInputStreamTest.testTimeout_readBuffer_Success2()
org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.readStream(ObjectLoader)
org.eclipse.jgit.internal.storage.pack.PackWriter.sortByName()
org.eclipse.jgit.util.NBTest.testDecodeUInt16()
org.eclipse.jgit.transport.BasePackFetchConnection.markReachable(Set,int)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testAlnumGroupCase0()
org.eclipse.jgit.internal.storage.pack.PackWriter.writeBase(PackOutputStream,ObjectToPack)
org.eclipse.jgit.lib.ObjectReader.newReader()
org.eclipse.jgit.junit.http.HttpTestCase.getRequests(URIish,String)
org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT(MergeStrategy)
org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo()
org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_DirPath2()
org.eclipse.jgit.pgm.CleanTest.testCleanRequiresForceConfig()
org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test9_FromString()
org.eclipse.jgit.transport.BaseReceivePack.close()
org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testTreeWithNullSha()
org.eclipse.jgit.api.RemoteRemoveCommand.call()
org.eclipse.jgit.api.Git.cloneRepository()
org.eclipse.jgit.http.server.UploadPackServlet.advertise(HttpServletRequest,PacketLineOutRefAdvertiser)
org.eclipse.jgit.util.NBTest.testDecodeUInt64()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.remove()
org.eclipse.jgit.transport.PushProcessTest.testOneUpdateStatus(RemoteRefUpdate,Ref,Status,Boolean)
org.eclipse.jgit.internal.storage.dfs.DfsReaderIoStats.getReadBlocksCount()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_d()
org.eclipse.jgit.transport.TransportBundleFile.close()
org.eclipse.jgit.storage.pack.PackConfig.getBitmapInactiveBranchAgeInDays()
org.eclipse.jgit.api.AddCommandTest.isCaseSensitive()
org.eclipse.jgit.internal.storage.reftable.BlockWriter.writeValue(ReftableOutputStream)
org.eclipse.jgit.lib.ObjectChecker.idFor(int,byte)
org.eclipse.jgit.lib.Config.readValue(StringReader,boolean,int)
org.eclipse.jgit.util.io.UnionInputStreamTest.testReadByteBlocks()
org.eclipse.jgit.lib.AbbreviatedObjectId.hexUInt32(byte,int,int)
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig()
org.eclipse.jgit.transport.WalkEncryption.instance(Properties)
org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithPort()
org.eclipse.jgit.lib.DefaultTypedConfigGetter.getRefSpecs(Config,String,String,String)
org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getUploadAction(AnyLongObjectId,long)
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testCreateMissingObject()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e()
org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.paddingUsed()
org.eclipse.jgit.internal.storage.reftree.RefTree.checkRef(DirCacheEntry,Command)
org.eclipse.jgit.internal.storage.file.UnpackedObject.inflate(InputStream,Inflater)
org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.unlock()
org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest.testDequote_BareABCZ_OnlyBC()
org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch()
org.eclipse.jgit.util.io.AutoCRLFInputStreamTest.test()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagInvalidTaggerHeader3()
org.eclipse.jgit.transport.HttpConfigTest.testDefault()
org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.getRepositoryDescription()
org.eclipse.jgit.transport.PushCertificateStore.close()
org.eclipse.jgit.api.TransportConfigCallback.configure(Transport)
org.eclipse.jgit.transport.AtomicPushTest.create(Object,Repository)
org.eclipse.jgit.revwalk.RevCommitList.applyFlag(RevFilter,RevFlag,int,int)
org.eclipse.jgit.transport.TrackingRefUpdate.asReceiveCommand()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllLoose()
org.eclipse.jgit.api.EolRepositoryTest.test_ConfigAutoCRLF_false_GlobalEOL_crlf_InfoEOL_lf()
org.eclipse.jgit.transport.PackParser.skip(long)
org.eclipse.jgit.diff.RawText.getLineDelimiter()
org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameSameAssumeValidDifferentContent()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packRefTreeGraph(ProgressMonitor)
org.eclipse.jgit.api.RmCommandTest.testRemoveCached()
org.eclipse.jgit.lib.Repository.getRef(String)
org.eclipse.jgit.api.FetchCommand.setThin(boolean)
org.eclipse.jgit.dircache.DirCacheCheckout.prescanOneTree()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleWildCardCase1()
org.eclipse.jgit.lib.ConstantsEncodingTest.testEncodeASCII_Number13()
org.eclipse.jgit.events.RepositoryEvent.getRepository()
org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation.wasDeltaAttempted()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getBitmap()
org.eclipse.jgit.util.StringUtilsTest.testEqualsIgnoreCase3()
org.eclipse.jgit.util.io.UnionInputStream.add(InputStream)
org.eclipse.jgit.diff.MyersDiff.snake2y(long)
org.eclipse.jgit.transport.BundleWriterTest.testCustomObjectReader()
org.eclipse.jgit.revwalk.RevTagParseTest.testParse_unsupportedEncoding()
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.load(DfsReader,long)
org.eclipse.jgit.patch.BinaryHunk.getFileHeader()
org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile()
org.eclipse.jgit.junit.JGitTestUtil.concat(byte)
org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_9()
org.eclipse.jgit.api.CreateBranchCommand.call()
org.eclipse.jgit.archive.TxzFormat.putEntry(ArchiveOutputStream,String,FileMode,ObjectLoader)
org.eclipse.jgit.internal.storage.file.DeltaBaseCache.hash(long)
org.eclipse.jgit.pgm.debug.RebuildRefTree.rebuild(RefDatabase)
org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedFileSmudged()
org.eclipse.jgit.lib.CLIRepositoryTestCase.read(File)
org.eclipse.jgit.junit.TestRepository.updateServerInfo()
org.eclipse.jgit.internal.storage.dfs.DfsRepository.getConfig()
org.eclipse.jgit.internal.storage.reftable.ReftableReader.allLogs()
org.eclipse.jgit.lib.ObjectLoader.getCachedBytes(int)
org.eclipse.jgit.http.server.FileSender.serve(HttpServletRequest,HttpServletResponse,boolean)
org.eclipse.jgit.api.StashCreateCommand.call()
org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest.testDirModeAndNoRegex()
org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testMultipleInvalidObjects()
org.eclipse.jgit.treewalk.filter.ByteArraySet.hasNext()
org.eclipse.jgit.revwalk.RevObject.appendCoreFlags(StringBuilder)
org.eclipse.jgit.util.FS_Win32_Cygwin.resolve(File,String)
org.eclipse.jgit.api.PushCommand.isDryRun()
org.eclipse.jgit.transport.PackParser.setCheckObjectCollisions(boolean)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testFilePathCase1()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSimpleStarCase3()
org.eclipse.jgit.attributes.CGitAttributesTest.testDirectoryMatch()
org.eclipse.jgit.lib.ObjectIdTest.testGetByte()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderIgnored()
org.eclipse.jgit.internal.storage.file.InflatingBitSet.maybeContains(int)
org.eclipse.jgit.lib.ObjectReader.has(AnyObjectId,int)
org.eclipse.jgit.internal.storage.dfs.DfsReader.close()
org.eclipse.jgit.internal.storage.pack.PackWriter.writeObject(PackOutputStream,ObjectToPack)
org.eclipse.jgit.revwalk.ObjectWalk.getObjectFilter()
org.eclipse.jgit.transport.RemoteConfig.set(Config,String,int,int)
org.eclipse.jgit.archive.internal.ArchiveText.get()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testMixedGroupCase6()
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.newBitmapBuilder()
org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit()
org.eclipse.jgit.junit.http.HttpTestCase.join(URIish,String)
org.eclipse.jgit.diff.EditTest.testNotEquals2()
org.eclipse.jgit.internal.storage.file.RefDirectory.close()
org.eclipse.jgit.http.server.glue.ServletBinder.with(HttpServlet)
org.eclipse.jgit.internal.storage.reftable.BlockReader.verifyIndex()
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyPackThroughCache(PackOutputStream,DfsReader)
org.eclipse.jgit.lib.BlobBasedConfig.read(Repository,AnyObjectId)
org.eclipse.jgit.attributes.CGitAttributesTest.jgitAttributes()
org.eclipse.jgit.util.io.TimeoutOutputStreamTest.now()
org.eclipse.jgit.diff.DiffFormatter.writeRemovedLine(RawText,int)
org.eclipse.jgit.internal.ketch.LagCheck.close()
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.contains(AnyObjectId)
org.eclipse.jgit.internal.storage.file.UnpackedObject.read(byte,int,int)
org.eclipse.jgit.lib.CLIRepositoryTestCase.executeAndPrint(String)
org.eclipse.jgit.dircache.DirCacheEditor.compare(PathEdit,PathEdit)
org.eclipse.jgit.attributes.CGitAttributesTest.testDirectoryMatchSubRecursiveBacktrack2()
org.eclipse.jgit.lib.ConfigTest.testIncludeNoValue()
org.eclipse.jgit.api.ApplyCommandTest.init(String,boolean,boolean)
org.eclipse.jgit.dircache.DirCacheEntry.setLength(int)
org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommit128Parent()
org.eclipse.jgit.transport.http.apache.HttpClientConnection.verify(String,X509Certificate)
org.eclipse.jgit.junit.TestRepositoryTest.blobAsString(AnyObjectId,String)
org.eclipse.jgit.ignore.IgnoreNodeTest.beginWalk()
org.eclipse.jgit.api.TransportCommand.setTimeout(int)
org.eclipse.jgit.internal.ketch.KetchReplica.snapshot()
org.eclipse.jgit.lib.CLIRepositoryTestCase.cmdString(String)
org.eclipse.jgit.storage.pack.PackConfig.setDeltaCompress(boolean)
org.eclipse.jgit.util.FileUtils.createSymLink(File,String)
org.eclipse.jgit.transport.TransportSftp.openFetch()
org.eclipse.jgit.internal.storage.file.PackWriterTest.testShallowIsMinimalDepth1()
org.eclipse.jgit.revwalk.filter.SubStringRevFilter.requiresCommitBody()
org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.myAlternates()
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathSecondCheckout()
org.eclipse.jgit.transport.PacketLineOutTest.testWriteString2()
org.eclipse.jgit.treewalk.TreeWalk.getObjectId(int)
org.eclipse.jgit.blame.BlameGenerator.getSourceCommit()
org.eclipse.jgit.api.AddCommandTest.testAddGitlinkDoesNotChange()
org.eclipse.jgit.http.test.SmartClientSmartServerTest.testPush_NotAuthorized()
org.eclipse.jgit.revwalk.RevWalk.resetRetain(RevFlagSet)
org.eclipse.jgit.dircache.DirCacheIteratorTest.testNoSubtree_WithTreeWalk()
org.eclipse.jgit.internal.storage.file.PackWriterTest.verifyOpenPack(boolean)
org.eclipse.jgit.transport.TransportGitSsh.commandFor(String)
org.eclipse.jgit.attributes.CGitAttributesTest.testPrefixMatchNot()
org.eclipse.jgit.api.ApplyCommandTest.testAddA2()
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.rollbackPack(Collection)
org.eclipse.jgit.merge.MergeMessageFormatter.formatWithConflicts(String,List)
org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndCreateBranchAndRestoreFromCommit()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testIsId()
org.eclipse.jgit.lfs.server.s3.S3Config.getStorageClass()
org.eclipse.jgit.http.test.GitServletResponseTests.checkCommit(AnyObjectId,byte)
org.eclipse.jgit.internal.storage.dfs.DfsInserter.newPackParser(InputStream)
org.eclipse.jgit.api.PushCommand.isAtomic()
org.eclipse.jgit.transport.AmazonS3.get(String,String)
org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testPackFormat_DeltaNotAllowed()
org.eclipse.jgit.api.errors.FilterFailedException.getReturnCode()
org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2()
org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefLockedRefNotPackedNoError()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSomething()
org.eclipse.jgit.util.RunExternalScriptTest.testCopyStdInExecute()
org.eclipse.jgit.revwalk.filter.AndRevFilter.include(RevWalk,RevCommit)
org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test5_FromString()
org.eclipse.jgit.util.RefList.hasNext()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e()
org.eclipse.jgit.dircache.DirCacheIteratorTest.testReset()
org.eclipse.jgit.api.ResetCommand.disableRefLog(boolean)
org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter()
org.eclipse.jgit.treewalk.TreeWalk.isPostChildren()
org.eclipse.jgit.fnmatch.FileNameMatcher.extendStringToMatchByOneCharacter(char)
org.eclipse.jgit.api.AddCommandTest.testAssumeUnchanged()
org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag()
org.eclipse.jgit.internal.storage.file.PackIndexV1.iterator()
org.eclipse.jgit.transport.PackParser.isCheckEofAfterPackFooter()
org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_Large()
org.eclipse.jgit.internal.storage.dfs.DeltaBaseCacheTest.setUp()
org.eclipse.jgit.http.test.HookMessageTest.create(HttpServletRequest,Repository)
org.eclipse.jgit.api.RebaseCommand.initFilesAndRewind()
org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testEquals_Full()
org.eclipse.jgit.diff.DiffFormatter.setRepository(Repository)
org.eclipse.jgit.lib.T0001_PersonIdentTest.test002_NewIdent()
org.eclipse.jgit.lfs.lib.LongObjectIdTest.testEquals()
org.eclipse.jgit.util.FS.userHome()
org.eclipse.jgit.junit.http.MockServletConfig.hasMoreElements()
org.eclipse.jgit.util.ReadLinesTest.testReadLines_endCRLF()
org.eclipse.jgit.internal.storage.reftree.RefTree.refPath(String)
org.eclipse.jgit.transport.Transport.register(TransportProtocol)
org.eclipse.jgit.lib.ObjectLoaderTest.openStream()
org.eclipse.jgit.transport.OpenSshConfigTest.testNegatedPattern()
org.eclipse.jgit.util.FS_POSIX.retryFailedLockFileCommit()
org.eclipse.jgit.pgm.Diff.unified(int)
org.eclipse.jgit.junit.RepositoryTestCase.setUp()
org.eclipse.jgit.notes.NoteMapTest.testGetCachedBytes()
org.eclipse.jgit.transport.RefSpec.getDestination()
org.eclipse.jgit.internal.storage.file.FileRepository.loadUserConfig()
org.eclipse.jgit.lib.CommitBuilder.toString()
org.eclipse.jgit.revwalk.RevCommit.parseCanonical(RevWalk,byte)
org.eclipse.jgit.transport.PackParser.remove()
org.eclipse.jgit.dircache.DirCacheEntry.idBuffer()
org.eclipse.jgit.api.errors.ConcurrentRefUpdateException.getResult()
org.eclipse.jgit.transport.PushCertificateStoreTest.saveTwoCertsOnDifferentRefsInOneUpdate()
org.eclipse.jgit.internal.storage.reftable.BlockReader.truncated()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidTree2()
org.eclipse.jgit.internal.storage.file.WindowCursor.open(AnyObjectId,int)
org.eclipse.jgit.dircache.DirCacheTree.namecmp(byte,int,DirCacheTree)
org.eclipse.jgit.internal.storage.pack.PackWriter.setClientShallowCommits(Set)
org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test5()
org.eclipse.jgit.util.FileUtilsTest.testDeleteFile()
org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree(IgnoreSubmoduleMode)
org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwards_ConfusingPathName()
org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.peeledRef(RevWalk,ReceiveCommand)
org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff()
org.eclipse.jgit.transport.CredentialItem.getValue()
org.eclipse.jgit.lib.BatchRefUpdate.isRefLogIncludingResult()
org.eclipse.jgit.dircache.DirCacheCheckout.checkValidPathSegment(ObjectChecker,CanonicalTreeParser)
org.eclipse.jgit.treewalk.filter.PathSuffixFilter.shouldBeRecursive()
org.eclipse.jgit.internal.storage.dfs.DfsInserter.getCreatedFromInserter()
org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.getConcurrencyLevel()
org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test7_FromString()
org.eclipse.jgit.util.RefMapTest.testMerge_PackedLooseLoose()
org.eclipse.jgit.util.RunExternalScriptTest.testCopyNullStdIn()
org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testEmpty_FromString()
org.eclipse.jgit.merge.RecursiveMerger.mockAuthor(List)
org.eclipse.jgit.transport.HMACSHA1NonceGeneratorTest.missing()
org.eclipse.jgit.internal.fsck.FsckError.setErrorType(ObjectChecker,ErrorType)
org.eclipse.jgit.transport.RemoteConfig.getPushURIs()
org.eclipse.jgit.http.test.SmartClientSmartServerTest.testInitialClone_RedirectMultiple()
org.eclipse.jgit.api.PushCommandTest.testPush()
org.eclipse.jgit.gitrepo.RepoCommandTest.testDefaultRemoteRevision()
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.createTempDirectory(String)
org.eclipse.jgit.pgm.Log.ignoreLeadingSpace(boolean)
org.eclipse.jgit.internal.ketch.KetchSystem.createReplicas(KetchLeader,Repository)
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setDeltaCount(long)
org.eclipse.jgit.ignore.internal.Strings.deleteBackslash(String)
org.eclipse.jgit.transport.BaseReceivePack.setAllowQuiet(boolean)
org.eclipse.jgit.transport.UserAgent.clean(String)
org.eclipse.jgit.lib.RacyGitTests.addToWorkDir(String,String)
org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.exactRef(String)
org.eclipse.jgit.transport.PackParser.onEndDelta()
org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.has(AnyObjectId)
org.eclipse.jgit.transport.OpenSshConfig.setValue(String,String)
org.eclipse.jgit.transport.OpenSshConfig.substitute(List,String,Replacer)
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesOrigHeadOnBare()
org.eclipse.jgit.util.io.ThrowingPrintWriter.print(int)
org.eclipse.jgit.http.server.ReceivePackServlet.doFilter(ServletRequest,ServletResponse,FilterChain)
org.eclipse.jgit.lib.BranchConfig.matchConfigValue(String)
org.eclipse.jgit.internal.storage.pack.ObjectToPack.select(StoredObjectRepresentation)
org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeSet(String,String)
org.eclipse.jgit.pgm.ResetTest.setUp()
org.eclipse.jgit.transport.TestProtocolTest.testPush()
org.eclipse.jgit.treewalk.TreeWalk.setOperationType(OperationType)
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyPackAsIs(PackOutputStream,DfsReader)
org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testAndMultiPathNegate()
org.eclipse.jgit.merge.ResolveMerger.getMergeAlgorithm(Config)
org.eclipse.jgit.pgm.Fetch.fetchingSubmodule(String)
org.eclipse.jgit.lfs.lib.LfsPointerFilter.include(TreeWalk)
org.eclipse.jgit.internal.storage.pack.PackWriter.getDeltaSearchNonEdgeObjects()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testIncompleteRangesInOneGroupCase2()
org.eclipse.jgit.util.io.ThrowingPrintWriter.println(String)
org.eclipse.jgit.lib.TreeFormatter.append(String,RevBlob)
org.eclipse.jgit.lib.FileMode.getObjectType()
org.eclipse.jgit.internal.storage.pack.DeltaIndex.step(int,byte,byte)
org.eclipse.jgit.internal.storage.file.PackFile.read(long,int)
org.eclipse.jgit.dircache.DirCache.formatExtensionName(byte)
org.eclipse.jgit.attributes.TreeWalkAttributeTest.testOverriding2()
org.eclipse.jgit.blame.BlameGenerator.getRenameDetector()
org.eclipse.jgit.internal.storage.pack.ObjectReuseAsIs.copyPackAsIs(PackOutputStream,CachedPack)
org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEdits_MatchAll()
org.eclipse.jgit.storage.pack.PackStatistics.getReusedPacks()
org.eclipse.jgit.treewalk.TreeWalk.exitSubtree()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testRecursiveTreeWalk()
org.eclipse.jgit.http.server.GitFilter.setRepositoryResolver(RepositoryResolver)
org.eclipse.jgit.pgm.RevWalkTextBuiltin.enableBoundary(boolean)
org.eclipse.jgit.ignore.IgnoreNodeTest.testWithSlashDoesNotMatchInSubDirectory()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedNotPeeled_Sorted()
org.eclipse.jgit.internal.storage.pack.PackWriter.isUseCachedPacks()
org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.endWalk()
org.eclipse.jgit.lib.AsyncObjectLoaderQueue.getObjectId()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUpperGroupCase3()
org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testInitialize_NoPostOrder()
org.eclipse.jgit.internal.storage.reftable.ReftableReader.size()
org.eclipse.jgit.nls.GlobalBundleCache.lookupBundle(Locale,Class)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_a()
org.eclipse.jgit.util.TemporaryBufferTest.testLarge_SingleWrite()
org.eclipse.jgit.events.IndexChangedListener.onIndexChanged(IndexChangedEvent)
org.eclipse.jgit.pgm.TextBuiltin.init(Repository,String)
org.eclipse.jgit.pgm.debug.TextHashFunctions.init()
org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions()
org.eclipse.jgit.dircache.DirCacheCheckout.checkout()
org.eclipse.jgit.transport.TransportHttp.smartPush(String,HttpConnection,InputStream)
org.eclipse.jgit.dircache.DirCacheCheckout.getUpdated()
org.eclipse.jgit.revplot.PlotLane.getPosition()
org.eclipse.jgit.api.InitCommandTest.testInitBare_DirAndGitDirMustBeEqual()
org.eclipse.jgit.treewalk.TreeWalk.idEqual(int,int)
org.eclipse.jgit.internal.storage.reftree.RefTree.peeledPath(String)
org.eclipse.jgit.diff.Edit.before(Edit)
org.eclipse.jgit.util.RelativeDateFormatterTest.testFormatYearsMonths()
org.eclipse.jgit.internal.storage.pack.DeltaTask.partitionTasks()
org.eclipse.jgit.notes.NoteMap.getCachedBytes(AnyObjectId,int)
org.eclipse.jgit.internal.storage.reftable.BlockReader.getNewId()
org.eclipse.jgit.lib.IndexDiff.getIndexMode(String)
org.eclipse.jgit.lfs.lib.LfsPointerFilterTest.check()
org.eclipse.jgit.pgm.debug.BenchmarkReftable.seekCold(String)
org.eclipse.jgit.transport.PushCertificateIdent.getTimeZoneOffset()
org.eclipse.jgit.transport.WalkEncryptionTest.reportPublicAddress()
org.eclipse.jgit.revwalk.filter.MaxCountRevFilter.include(RevWalk,RevCommit)
org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder()
org.eclipse.jgit.notes.NoteMapMerger.mergeFanoutBucket(int,FanoutBucket,FanoutBucket,FanoutBucket)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testFilePathCase0()
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.hasObject(DfsReader,AnyObjectId)
org.eclipse.jgit.transport.TransportGitSsh.canHandle(URIish,Repository,String)
org.eclipse.jgit.diff.DiffEntry.breakModify(DiffEntry)
org.eclipse.jgit.transport.BasePackFetchConnection.negotiate(ProgressMonitor)
org.eclipse.jgit.transport.PushProcess.prepareRemoteUpdates()
org.eclipse.jgit.internal.storage.file.SimpleDataInput.readUnsignedInt()
org.eclipse.jgit.attributes.TreeWalkAttributeTest.setUp()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.setChainLength(int)
org.eclipse.jgit.internal.storage.pack.PackWriter.preparePack(ProgressMonitor,Set,Set,Set,Set)
org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent(MergeStrategy)
org.eclipse.jgit.revwalk.DateRevQueue.buildIndex()
org.eclipse.jgit.internal.storage.dfs.DfsText.get()
org.eclipse.jgit.treewalk.AbstractTreeIteratorTest.testGrowPath()
org.eclipse.jgit.api.DescribeCommandTest.touch(File,String)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDir()
org.eclipse.jgit.patch.EditListTest.testTypes()
org.eclipse.jgit.treewalk.filter.ByteArraySet.grow()
org.eclipse.jgit.pgm.Push.nothin(boolean)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase5()
org.eclipse.jgit.treewalk.AbstractTreeIteratorTest.testPathCompare()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidParent2()
org.eclipse.jgit.api.ApplyCommand.isChanged(List,List)
org.eclipse.jgit.api.CherryPickCommand.include(AnyObjectId)
org.eclipse.jgit.util.QuotedStringBourneStyleTest.assertDequote(String,String)
org.eclipse.jgit.lib.AbbreviatedObjectId.isId(String)
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.clone()
org.eclipse.jgit.diff.EditTest.testCreateEmpty()
org.eclipse.jgit.transport.Transport.setOptionUploadPack(String)
org.eclipse.jgit.transport.ReceivedPackStatistics.setNumBytesRead(long)
org.eclipse.jgit.transport.PushConfigTest.pushRecurseSubmoduleNoMatch()
org.eclipse.jgit.pgm.Glog.createWalk()
org.eclipse.jgit.internal.storage.dfs.DfsReader.getDeltaBaseCache()
org.eclipse.jgit.http.test.HttpClientTests.testListRemote_Smart_WithQueryParameters()
org.eclipse.jgit.transport.BaseReceivePackTest.parseCommand()
org.eclipse.jgit.internal.ketch.KetchReplica.getSystem()
org.eclipse.jgit.api.Git.branchList()
org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardDetachedHead()
org.eclipse.jgit.internal.storage.pack.PackWriter.isIgnoreMissingUninteresting()
org.eclipse.jgit.api.NameRevCommand.format()
org.eclipse.jgit.internal.fsck.FsckError.getCorruptObjects()
org.eclipse.jgit.revwalk.filter.AndRevFilter.create(Collection)
org.eclipse.jgit.transport.http.JDKHttpConnection.getHeaderField(String)
org.eclipse.jgit.internal.storage.dfs.DeltaBaseCacheTest.put(int,int)
org.eclipse.jgit.util.RefListTest.testRemoveMiddleOfList()
org.eclipse.jgit.transport.URIishTest.testGetValidWithSlashesDotGitSlashHumanishName()
org.eclipse.jgit.lib.Repository.hasObject(AnyObjectId)
org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_6(Git,int)
org.eclipse.jgit.transport.OpenSshConfigTest.testNoConfig()
org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit()
org.eclipse.jgit.util.BlockList.remove(int)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testXDigitGroupCase2()
org.eclipse.jgit.transport.SideBandProgressMonitor.onEndTask(String,int)
org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkModifiedNotNormalized()
org.eclipse.jgit.storage.pack.PackConfig.getDeltaSearchMemoryLimit()
org.eclipse.jgit.lib.ReflogReader.getLastEntry()
org.eclipse.jgit.pgm.CommandCatalog.load(String)
org.eclipse.jgit.api.RemoveNoteCommand.setObjectId(RevObject)
org.eclipse.jgit.ignore.internal.Strings.lookAhead(String,int)
org.eclipse.jgit.blame.Candidate.remove(RevFlag)
org.eclipse.jgit.events.IndexChangedEvent.getListenerType()
org.eclipse.jgit.util.RawParseUtils.commitMessage(byte,int)
org.eclipse.jgit.transport.TestProtocol.getOptionalFields()
org.eclipse.jgit.internal.storage.file.RefDirectoryRename.doRename()
org.eclipse.jgit.internal.ketch.LagCheck.parseRemoteCommit(String)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase2()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c()
org.eclipse.jgit.lfs.lib.AnyLongObjectId.copy()
org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.shouldFetchSubmodulesWhenFetchConfigurationSetToYes(boolean)
org.eclipse.jgit.transport.WalkFetchConnection.getPackLocks()
org.eclipse.jgit.lib.RepositoryCache.lockFor(Key)
org.eclipse.jgit.util.IO.readFully(InputStream,byte,int)
org.eclipse.jgit.transport.TransportLocal.spawn(String)
org.eclipse.jgit.pgm.LsRemoteTest.setUp()
org.eclipse.jgit.internal.storage.file.BitSet.mask(int)
org.eclipse.jgit.transport.Transport.getTimeout()
org.eclipse.jgit.revwalk.RevTag.guessEncoding()
org.eclipse.jgit.internal.storage.file.PackIndexWriter.writeChecksumFooter()
org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_GarbageAfterSize()
org.eclipse.jgit.pgm.ShowRef.run()
org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testAndMultiPath()
org.eclipse.jgit.http.server.GitFilter.getFile(FilterConfig,String)
org.eclipse.jgit.events.ListenerList.addIndexChangedListener(IndexChangedListener)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.compactsReftables()
org.eclipse.jgit.transport.http.apache.TemporaryBufferEntity.getContent()
org.eclipse.jgit.transport.HttpConfigUriPathTest.testNormalizationEmptyPaths()
org.eclipse.jgit.diff.DiffEntry.isMarked(int)
org.eclipse.jgit.diff.SimilarityIndexTest.testCommonScore_EmptyFiles()
org.eclipse.jgit.api.CommitCommandTest.commitAmendOnInitialShouldFail()
org.eclipse.jgit.blame.BlameResult.computeRange(int,int)
org.eclipse.jgit.blame.BlameGenerator.push(String,RawText)
org.eclipse.jgit.transport.SideBandOutputStreamTest.setUp()
org.eclipse.jgit.patch.HunkHeader.getNewLineCount()
org.eclipse.jgit.transport.BundleFetchConnection.readBundleV2()
org.eclipse.jgit.api.RebaseCommand.checkSteps(List)
org.eclipse.jgit.revwalk.RevFlagSetTest.testContainsAll()
org.eclipse.jgit.transport.TransportProtocol.canHandle(URIish)
org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryRawMode()
org.eclipse.jgit.internal.storage.pack.DeltaWindow.cacheDelta(ObjectToPack,ObjectToPack)
org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkForNormalCase()
org.eclipse.jgit.api.StashApplyCommand.checkoutPath(DirCacheEntry,ObjectReader,CheckoutMetadata)
org.eclipse.jgit.patch.CombinedHunkHeader.extractFileLines(StringBuilder,String,int)
org.eclipse.jgit.util.FS.getLastModifiedTime()
org.eclipse.jgit.revwalk.RevCommitParseTest.create(String)
org.eclipse.jgit.merge.ResolveMerger.mergeTreeWalk(TreeWalk,boolean)
org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor2()
org.eclipse.jgit.internal.ketch.KetchLeader.newProposalRound()
org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget()
org.eclipse.jgit.notes.NoteParser.isHex()
org.eclipse.jgit.merge.ResolveMerger.defaultCommitNames()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedComparedWithInitialCommit()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFfalse()
org.eclipse.jgit.hooks.PrePushHook.getParameters()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testAlnumGroupCase1()
org.eclipse.jgit.api.StashCreateCommandTest.noLocalChanges()
org.eclipse.jgit.util.FSTest.setUp()
org.eclipse.jgit.util.RefListTest.testPutNewEntry()
org.eclipse.jgit.lib.ValidRefNameTest.testNoLeadingOrTrailingDot()
org.eclipse.jgit.api.RenameBranchCommand.setOldName(String)
org.eclipse.jgit.lib.ObjectIdRef.isPeeled()
org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testNoMatchButClose()
org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_OctalAll()
org.eclipse.jgit.blame.BlameGenerator.pop()
org.eclipse.jgit.notes.NoteMapMergerTest.setUp()
org.eclipse.jgit.api.NameRevCommandTest.ref()
org.eclipse.jgit.internal.ketch.KetchReplica.runNextPushRequest()
org.eclipse.jgit.api.Git.gc()
org.eclipse.jgit.util.Holder.get()
org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.assertContains(RevCommit,Collection)
org.eclipse.jgit.pgm.Blame.author(int)
org.eclipse.jgit.lib.RefUpdate.getNewObjectId()
org.eclipse.jgit.transport.TransferConfig.filter(Map)
org.eclipse.jgit.junit.http.AccessEvent.toString()
org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testQuoteAtAndNumber()
org.eclipse.jgit.transport.PackParser.growEntries(int)
org.eclipse.jgit.transport.JschSession.waitFor()
org.eclipse.jgit.dircache.DirCache.replace(DirCacheEntry,int)
org.eclipse.jgit.internal.storage.file.PackFile.doOpen()
org.eclipse.jgit.util.NB.encodeInt24(byte,int,int)
org.eclipse.jgit.util.io.IsolatedOutputStream.flush()
org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyToByte()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writeReftable(DfsPackDescription)
org.eclipse.jgit.transport.TransportSftp.compare(String,String)
org.eclipse.jgit.lib.BitmapIndex.andNot(Bitmap)
org.eclipse.jgit.http.test.ProtocolErrorTest.setUp()
org.eclipse.jgit.api.RebaseCommand.parseSquashFixupSequenceCount(String)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.shortInput(long)
org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.writeIndex(DfsObjDatabase,DfsPackDescription,PackWriter)
org.eclipse.jgit.transport.PushCertificateStoreTest.saveOneCertOnMultipleRefs()
org.eclipse.jgit.merge.ResolveMerger.writeMergedFile(MergeResult)
org.eclipse.jgit.http.test.HttpClientTests.testRepositoryNotFound_Dumb()
org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.testMethodsOkOnMainThread()
org.eclipse.jgit.dircache.DirCache.registerIndexChangedListener(IndexChangedListener)
org.eclipse.jgit.http.server.glue.MetaServlet.serve(String)
org.eclipse.jgit.pgm.debug.DiffAlgorithms.compare(Test,Test)
org.eclipse.jgit.api.RemoteSetUrlCommand.call()
org.eclipse.jgit.revwalk.PendingGenerator.outputType()
org.eclipse.jgit.lib.ValidRefNameTest.testNoLockSuffix()
org.eclipse.jgit.transport.PackParser.getBaseObjectIds()
org.eclipse.jgit.diff.HashedSequencePair.wrap(S)
org.eclipse.jgit.gitrepo.RepoProject.setDefaultRevision(String)
org.eclipse.jgit.transport.TransportHttp.close()
org.eclipse.jgit.internal.storage.file.RefDirectory.recreate(Ref,ObjectIdRef)
org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd()
org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_ShortLineOnlyEndLF()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef1()
org.eclipse.jgit.diff.EditListTest.testEmpty()
org.eclipse.jgit.util.io.CountingOutputStream.write(byte,int,int)
org.eclipse.jgit.diff.SimilarityIndexTest.testCommonScore_TotallyDifferentFiles()
org.eclipse.jgit.internal.ketch.KetchSystem.getExecutor()
org.eclipse.jgit.gitrepo.ManifestParser.inGroups(RepoProject)
org.eclipse.jgit.transport.http.JDKHttpConnection.setConnectTimeout(int)
org.eclipse.jgit.dircache.DirCacheBasicTest.testBuildThenClear()
org.eclipse.jgit.treewalk.TreeWalk.isPathMatch(byte,int)
org.eclipse.jgit.transport.TransportSftp.openPush()
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.ofObjectType(int)
org.eclipse.jgit.api.StashDropCommand.setAll(boolean)
org.eclipse.jgit.junit.JGitTestUtil.writeLink(Repository,String,String)
org.eclipse.jgit.internal.storage.file.GcConcurrentTest.getSinglePack(FileRepository)
org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse1()
org.eclipse.jgit.http.test.SetAdditionalHeadersTest.setUp()
org.eclipse.jgit.revwalk.RevCommit.getType()
org.eclipse.jgit.api.AddNoteCommand.call()
org.eclipse.jgit.transport.Transport.openAll(Repository,String,Operation)
org.eclipse.jgit.transport.SignedPushConfig.getCertNonceSeed()
org.eclipse.jgit.transport.TransportGitSsh.getSession(URIish,CredentialsProvider,FS,int)
org.eclipse.jgit.dircache.DirCacheEntry.setLength(long)
org.eclipse.jgit.api.SubmoduleUpdateCommand.addPath(String)
org.eclipse.jgit.util.io.UnionInputStreamTest.read()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.mask(int,long,long)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateGcPackSizeWithAnExistingGcPack()
org.eclipse.jgit.transport.PushConnectionTest.testWrongOldIdDoesNotReplace()
org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.setUp()
org.eclipse.jgit.internal.storage.reftable.ReftableTest.namespaceHeads()
org.eclipse.jgit.http.test.GitServletResponseTests.setUp()
org.eclipse.jgit.merge.ResolveMergerTest.checkFileReplacedByFolderInOurs(MergeStrategy)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase4()
org.eclipse.jgit.http.server.glue.MetaFilter.register(ServletBinderImpl)
org.eclipse.jgit.http.server.glue.MetaFilter.init(FilterConfig)
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.writeLooseRef(String,AnyObjectId)
org.eclipse.jgit.hooks.PrePushHook.getHookName()
org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testNone()
org.eclipse.jgit.internal.storage.file.LargePackedWholeObject.getCachedBytes()
org.eclipse.jgit.transport.CredentialsProviderUserInfo.getPassword()
org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.digest(TemporaryBuffer,Heap)
org.eclipse.jgit.internal.storage.pack.BaseSearch.addBase(int,byte,int,int)
org.eclipse.jgit.ant.tasks.GitAddTask.addDirset(DirSet)
org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict()
org.eclipse.jgit.revwalk.filter.AndRevFilter.requiresCommitBody()
org.eclipse.jgit.pgm.Show.noPrefix(boolean)
org.eclipse.jgit.http.test.GitServletResponseTests.onPostReceive(ReceivePack,Collection)
org.eclipse.jgit.lib.DirCacheCheckoutTest.assertUpdated(String)
org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_RawUTF8()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testBlankGroupCase2()
org.eclipse.jgit.dircache.DirCacheEditor.insertEdit(DeleteTree)
org.eclipse.jgit.attributes.AttributesHandlerTest.testCustomGlobalMacro3()
org.eclipse.jgit.api.SubmoduleStatusCommand.getStatus(SubmoduleWalk)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.setKeepEmpty(boolean)
org.eclipse.jgit.ignore.CGitVsJGitRandomIgnorePatternTest.startCgitCheckIgnore(String)
org.eclipse.jgit.util.RawParseUtils_HexParseTest.parse16(String)
org.eclipse.jgit.submodule.SubmoduleSyncTest.apply(DirCacheEntry)
org.eclipse.jgit.lib.UserConfig.getAuthorName()
org.eclipse.jgit.diff.DiffFormatter.scan(RevTree,RevTree)
org.eclipse.jgit.transport.RefSpec.isForceUpdate()
org.eclipse.jgit.transport.TransportHttp.doPush(ProgressMonitor,Map,OutputStream)
org.eclipse.jgit.treewalk.filter.ByteArraySet.equals(byte,byte,int)
org.eclipse.jgit.transport.PushCertificate.getCommands()
org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testGarbageSelectivelyVisible()
org.eclipse.jgit.api.RebaseCommand.initializeSquashFixupFile(String,String)
org.eclipse.jgit.storage.pack.PackConfig.getThreads()
org.eclipse.jgit.attributes.CGitAttributesTest.testDirectoryMatchSubRecursiveBacktrack()
org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryUnregisteringWhenExpired()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleStarCase2()
org.eclipse.jgit.junit.JGitTestUtil.writeTrashFile(Repository,String,String)
org.eclipse.jgit.dircache.DirCacheTree.removeChild(int)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_a()
org.eclipse.jgit.submodule.SubmoduleWalk.getRepository()
org.eclipse.jgit.transport.PushCertificateParser.parseHeader(StringReader,String)
org.eclipse.jgit.transport.BaseReceivePack.setRefFilter(RefFilter)
org.eclipse.jgit.internal.storage.dfs.DfsBlock.zeroCopyByteBuffer(int)
org.eclipse.jgit.lib.AsyncObjectLoaderQueue.open()
org.eclipse.jgit.util.sha1.SHA1.update(byte,int,int)
org.eclipse.jgit.notes.NoteMapTest.count(Iterator)
org.eclipse.jgit.internal.storage.dfs.DfsCachedPack.hasObject(ObjectToPack,StoredObjectRepresentation)
org.eclipse.jgit.internal.ketch.ReplicaPushRequest.getCommands()
org.eclipse.jgit.util.FileUtilsTest.testDeleteEmptyTreeOk()
org.eclipse.jgit.storage.pack.PackConfig.setSinglePack(boolean)
org.eclipse.jgit.transport.http.apache.internal.HttpApacheText.get()
org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testExceptionThrown_BareRepoGetIndexFile()
org.eclipse.jgit.internal.storage.file.GC.isHead(Ref)
org.eclipse.jgit.lib.CommitBuilder.toByteArray()
org.eclipse.jgit.lib.Config.clear()
org.eclipse.jgit.util.ChangeIdUtil.clean(String)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.insert(int,byte,int,int)
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached()
org.eclipse.jgit.transport.HttpConfigTest.setUp()
org.eclipse.jgit.transport.BaseReceivePack.setAdvertiseRefsHook(AdvertiseRefsHook)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateGcPackSizeInNewRepo()
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.getRefDatabase()
org.eclipse.jgit.api.ResetCommandTest.testHardResetReflogDisabled()
org.eclipse.jgit.lib.AsyncObjectLoaderQueue.getCurrent()
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test001_Initalize()
org.eclipse.jgit.http.server.AsIsFileFilter.doFilter(ServletRequest,ServletResponse,FilterChain)
org.eclipse.jgit.lib.RefDatabaseConflictingNamesTest.peel(Ref)
org.eclipse.jgit.lib.ConfigTest.test010_readNamesInSubSection()
org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test004_lookupDeltifiedObject()
org.eclipse.jgit.diff.DiffEntryTest.apply(DirCacheEntry)
org.eclipse.jgit.util.sha1.SHA1Test.shatteredCollision()
org.eclipse.jgit.http.test.MeasurePackSizeTest.setUp()
org.eclipse.jgit.diff.DiffFormatter.open(DiffEntry,Side,DiffEntry)
org.eclipse.jgit.util.io.TimeoutOutputStreamTest.close()
org.eclipse.jgit.util.SystemReader.getenv(String)
org.eclipse.jgit.pgm.RevWalkTextBuiltin.show(ObjectWalk,RevObject)
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.getRef(String)
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.objBytes()
org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitsEmptyTree()
org.eclipse.jgit.util.FS.getRc()
org.eclipse.jgit.internal.storage.reftable.MergedReftable.compare(RefQueueEntry,RefQueueEntry)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onBeginRefDelta(long,AnyObjectId,long)
org.eclipse.jgit.transport.WalkRemoteObjectDatabase.openReader(String)
org.eclipse.jgit.blame.Candidate.has(RevFlag)
org.eclipse.jgit.api.CloneCommandTest.allRefNames(List)
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.close()
org.eclipse.jgit.patch.CombinedFileHeader.getScriptText(Charset,Charset)
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test1_FromString()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testVerySimpleGroupCase0()
org.eclipse.jgit.lib.BatchRefUpdate.disableRefLog()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.beginBlock(BlockWriter,Entry)
org.eclipse.jgit.junit.MockSystemReader.getCurrentTime()
org.eclipse.jgit.transport.PushCertificateStoreTest.saveTwoCertsOnSameRefInOneUpdate()
org.eclipse.jgit.transport.JschSession.exec(String,int)
org.eclipse.jgit.transport.Transport.findTrackingRefName(String,Collection)
org.eclipse.jgit.util.RefListTest.testBuilder_Set()
org.eclipse.jgit.pgm.CLIGitCommand.outString()
org.eclipse.jgit.util.QuotedString.dq(byte,int,int)
org.eclipse.jgit.pgm.ReceivePack.requiresRepository()
org.eclipse.jgit.pgm.debug.MakeCacheTree.show(DirCacheTree)
org.eclipse.jgit.transport.CredentialsProviderUserInfo.getPassphrase()
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapWalker.requiresCommitBody()
org.eclipse.jgit.api.Git.getRepository()
org.eclipse.jgit.ignore.IgnoreNodeTest.testLeadingSpaces()
org.eclipse.jgit.util.NB.decodeUInt16(byte,int)
org.eclipse.jgit.transport.PushProcess.modifyUpdatesForDryRun()
org.eclipse.jgit.transport.AdvertiseRefsHookChain.advertiseRefs(BaseReceivePack)
org.eclipse.jgit.attributes.CGitAttributesTest.testRelativePath()
org.eclipse.jgit.api.StashApplyCommandTest.tearDown()
org.eclipse.jgit.transport.URIishTest.testURIEncodeDecode()
org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testAndMultiSubPath()
org.eclipse.jgit.internal.storage.dfs.DfsReader.open()
org.eclipse.jgit.util.FS_POSIX.getAttributes(File)
org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_NegativeSize()
org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmodules()
org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_Negate_ALL()
org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.absoluteGitDirRef()
org.eclipse.jgit.api.RebaseCommand.autoStash()
org.eclipse.jgit.transport.WalkEncryptionTest.cryptoCipherListPBE()
org.eclipse.jgit.transport.TransportLocal.getSchemes()
org.eclipse.jgit.pgm.Merge.getOldHead()
org.eclipse.jgit.internal.storage.dfs.DfsReader.open(Iterable,boolean)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.estimateGcPackSize(PackSource,PackSource)
org.eclipse.jgit.lib.ConfigTest.testGetInvalidEnum()
org.eclipse.jgit.transport.TransferConfig.skipList()
org.eclipse.jgit.internal.storage.file.PackInputStream.read()
org.eclipse.jgit.diff.RenameDetector.getRenameLimit()
org.eclipse.jgit.revwalk.ObjectWalkTest.testOneCommitOneTreeTwoBlob()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_17()
org.eclipse.jgit.transport.PacketLineOut.flush()
org.eclipse.jgit.pgm.StatusTest.testStatusDefault()
org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.newInserter()
org.eclipse.jgit.transport.RemoteConfigTest.testBackup()
org.eclipse.jgit.api.TagCommandTest.testEmptyTagName()
org.eclipse.jgit.api.BranchCommandTest.testCreationImplicitStart()
org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_c()
org.eclipse.jgit.internal.storage.reftable.MergedReftable.add(LogQueueEntry)
org.eclipse.jgit.pgm.ArchiveTest.zipEntryContent(byte,String)
org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_SmallBlocks1()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit()
org.eclipse.jgit.http.test.FileResolverTest.testNotAGitRepository()
org.eclipse.jgit.transport.BaseReceivePack.setRefLogIdent(PersonIdent)
org.eclipse.jgit.blame.BlameGenerator.getSourceEnd()
org.eclipse.jgit.diff.ContentSource.getCachedBytes()
org.eclipse.jgit.internal.storage.reftable.ReftableConfig.setRestartInterval(int)
org.eclipse.jgit.api.ResetCommand.resolveRefToCommitId()
org.eclipse.jgit.http.server.resolver.AsIsFileService.access(HttpServletRequest,Repository)
org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch()
org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple()
org.eclipse.jgit.pgm.Show.run()
org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject()
org.eclipse.jgit.lib.ObjectCheckerTest.testRejectNulInPathSegment()
org.eclipse.jgit.lib.MutableObjectId.fromRaw(int)
org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_DoesNotMatch()
org.eclipse.jgit.pgm.DescribeTest.testDescribeCommitMatch()
org.eclipse.jgit.revwalk.RevCommit.getParentCount()
org.eclipse.jgit.notes.NoteMapTest.commitNoteMap(NoteMap)
org.eclipse.jgit.storage.pack.PackConfig.setDeltaCacheSize(long)
org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting6()
org.eclipse.jgit.junit.TestRepository.author()
org.eclipse.jgit.transport.http.apache.HttpClientConnection.getRequestMethod()
org.eclipse.jgit.util.ChangeIdUtil.insertId(String,ObjectId,boolean)
org.eclipse.jgit.revwalk.AbstractRevQueue.next()
org.eclipse.jgit.pgm.Log.abbrev(int)
org.eclipse.jgit.transport.TrackingRefUpdate.toString()
org.eclipse.jgit.lib.BaseRepositoryBuilder.addCeilingDirectories(Collection)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testEscapedBackslash()
org.eclipse.jgit.diff.RawTextTest.t(String)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testManySolutionsCase0()
org.eclipse.jgit.util.FileUtil.isFile(File)
org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIfRootIsFile()
org.eclipse.jgit.events.ConfigChangedListener.onConfigChanged(ConfigChangedEvent)
org.eclipse.jgit.revwalk.RevTree.getType()
org.eclipse.jgit.lib.RefComparator.sort(Collection)
org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup()
org.eclipse.jgit.transport.HttpAuthMethod.getType()
org.eclipse.jgit.dircache.DirCacheTreeTest.testEmptyCache_CreateEmptyCacheTree()
org.eclipse.jgit.lib.RebaseTodoLine.getAction()
org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.beginWalk()
org.eclipse.jgit.diff.RenameDetectorTest.blob(String)
org.eclipse.jgit.util.FS.execute(ProcessBuilder,InputStream)
org.eclipse.jgit.internal.storage.dfs.DfsReaderIoStats.getInflatedBytes()
org.eclipse.jgit.patch.HunkHeader.toEditList()
org.eclipse.jgit.internal.storage.file.PackWriterTest.verifyObjectsOrder(ObjectId)
org.eclipse.jgit.attributes.CGitAttributesTest.toString(TemporaryBuffer)
org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.fullPackFileName(ObjectId,String)
org.eclipse.jgit.lib.Ref.isPeeled()
org.eclipse.jgit.submodule.SubmoduleWalk.getObjectId()
org.eclipse.jgit.patch.FileHeader.getPatchType()
org.eclipse.jgit.lib.MutableObjectId.fromString(String)
org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion()
org.eclipse.jgit.internal.storage.file.StoredBitmapTest.newStoredBitmap(EWAHCompressedBitmap)
org.eclipse.jgit.util.Paths.coreCompare(byte,int,int,int,byte,int,int,int)
org.eclipse.jgit.junit.TestRepository.fsck(RevObject)
org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath2()
org.eclipse.jgit.internal.storage.pack.PackExt.values()
org.eclipse.jgit.api.CheckoutCommandTest.createRepositoryWithRemote()
org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex()
org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge()
org.eclipse.jgit.transport.WalkEncryptionTest.remoteDelete()
org.eclipse.jgit.transport.WalkEncryptionTest.verifyFileContent(File,File)
org.eclipse.jgit.transport.Transport.getObjectChecker()
org.eclipse.jgit.lib.ConfigTest.test_ReadNamesInSectionRecursive()
org.eclipse.jgit.transport.ReceivedPackStatistics.addDeltaObject(int)
org.eclipse.jgit.util.FileUtilsTest.testIsStaleFileHandleInCausalChainWithIndirectCause()
org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked(IgnoreSubmoduleMode)
org.eclipse.jgit.util.sha1.SHA1.hasCollision()
org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_writeBuffer_Success1()
org.eclipse.jgit.internal.storage.file.LockFile.requireLock()
org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch()
org.eclipse.jgit.treewalk.TreeWalk.pathOf(AbstractTreeIterator)
org.eclipse.jgit.transport.URIishTest.testWindowsFile2()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDirs()
org.eclipse.jgit.storage.pack.PackConfig.getBitmapDistantCommitSpan()
org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.add(DfsReftable)
org.eclipse.jgit.api.CommitCommandTest.discoverGitExe()
org.eclipse.jgit.diff.AbstractDiffTestCase.testEdit_InsertNearCommonTail()
org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc()
org.eclipse.jgit.internal.ketch.LeaderSnapshot.debug(StringBuilder,String,ObjectId,ObjectId)
org.eclipse.jgit.lib.BranchTrackingStatus.getAheadCount()
org.eclipse.jgit.lib.RefTest.testResolvedSymRef()
org.eclipse.jgit.internal.storage.pack.GcCommitSelectionTest.testSelectionOrderingWithChains()
org.eclipse.jgit.gitrepo.RepoProject.equals(Object)
org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyFromStringByte()
org.eclipse.jgit.ignore.FastIgnoreRuleTest.testSimpleRules()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.onRefsChanged(RefsChangedEvent)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.myAlternates()
org.eclipse.jgit.awtui.CommitGraphPane.getTableCellRendererComponent(JTable,Object,boolean,boolean,int,int)
org.eclipse.jgit.diff.MyersDiff.getRight(int)
org.eclipse.jgit.dircache.DirCacheTree.peq(byte,byte,int)
org.eclipse.jgit.transport.JschSession.isRunning()
org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeModeStartsWithZero1()
org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.read(byte)
org.eclipse.jgit.pgm.StatusTest.testStatusUall()
org.eclipse.jgit.revplot.PlotCommitList.drawLaneToChild(int,PlotCommit,PlotLane)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testXDigitGroupCase5()
org.eclipse.jgit.treewalk.WorkingTreeIterator.filterClean(InputStream)
org.eclipse.jgit.treewalk.filter.ByteArraySet.nextHash()
org.eclipse.jgit.attributes.TreeWalkAttributeTest.testEmptyGitAttributeFile()
org.eclipse.jgit.treewalk.filter.ByteArraySet.toArray()
org.eclipse.jgit.pgm.DescribeTest.testDescribeCommit()
org.eclipse.jgit.storage.pack.PackStatistics.getTotalObjects()
org.eclipse.jgit.api.RebaseCommand.setPreserveMerges(boolean)
org.eclipse.jgit.util.TemporaryBufferTest.testHeap()
org.eclipse.jgit.submodule.SubmoduleWalk.setRootTree(AbstractTreeIterator)
org.eclipse.jgit.internal.storage.file.SimpleDataOutput.writeLong(long)
org.eclipse.jgit.revwalk.RevWalk.isNotStarted()
org.eclipse.jgit.transport.OpenSshConfig.mapKey(String)
org.eclipse.jgit.api.AddNoteCommand.setMessage(String)
org.eclipse.jgit.transport.URIish.setPath(String)
org.eclipse.jgit.merge.SimpleMergeTest.testOurs()
org.eclipse.jgit.lib.IndexDiffTest.add(Repository,File,String)
org.eclipse.jgit.diff.ContentSource.openStream()
org.eclipse.jgit.transport.http.apache.HttpClientConnection.getResponseCode()
org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldReturnZeroWhenMergedInto()
org.eclipse.jgit.internal.storage.file.LockFile.unlock()
org.eclipse.jgit.api.BlameCommand.setFilePath(String)
org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromDotGitGitDir()
org.eclipse.jgit.patch.Patch.parseDiffGit(byte,int,int)
org.eclipse.jgit.api.ArchiveCommandTest.getByPath(String)
org.eclipse.jgit.merge.MergeFormatterPass.writeLine(RawText,int)
org.eclipse.jgit.api.AddCommandTest.testBadCleanFilter2()
org.eclipse.jgit.api.RebaseCommand.toAuthorScript(PersonIdent)
org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldBeAbleToHandleEmptyLinesInRebaseTodoFile()
org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore(MergeStrategy)
org.eclipse.jgit.util.RefListTest.testCopyLeadingPrefix()
org.eclipse.jgit.nls.RootLocaleTest.testCLIText()
org.eclipse.jgit.transport.PreUploadHook.onSendPack(UploadPack,Collection,Collection)
org.eclipse.jgit.pgm.internal.CLIText.format(Object)
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.newRename(String,String)
org.eclipse.jgit.ignore.CGitIgnoreTest.assertSameAsCGit(String)
org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.testEmptyGitAttributeFile()
org.eclipse.jgit.transport.TransportSftp.readLooseRefs(TreeMap,String,String)
org.eclipse.jgit.blame.BlameGenerator.findRename(RevCommit,RevCommit,PathFilter)
org.eclipse.jgit.treewalk.CanonicalTreeParser.parseEntry()
org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.readDatabase(byte,int,int)
org.eclipse.jgit.pgm.LsRemote.show(AnyObjectId,String)
org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff2()
org.eclipse.jgit.errors.InvalidPatternException.getPattern()
org.eclipse.jgit.hooks.PrePushHook.setRemoteName(String)
org.eclipse.jgit.transport.RemoteConfigTest.multipleInsteadOf()
org.eclipse.jgit.transport.Transport.isPushThin()
org.eclipse.jgit.internal.storage.file.PackIndexTestCase.testCompareEntriesOffsetsWithGetOffsets()
org.eclipse.jgit.internal.storage.reftable.ReftableTest.oneTagRef()
org.eclipse.jgit.revplot.PlotCommitList.handleMerge(int,PlotCommit,PlotCommit,PlotCommit,PlotLane)
org.eclipse.jgit.internal.storage.file.RefUpdateTest.updateRef(String)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.openLooseObject(WindowCursor,AnyObjectId)
org.eclipse.jgit.util.TemporaryBufferTest.testOneBlockAndHalf_BulkWrite()
org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository()
org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify()
org.eclipse.jgit.attributes.Attributes.canBeContentMerged()
org.eclipse.jgit.junit.http.RecordingLogger.warn(String,Throwable)
org.eclipse.jgit.lib.Repository.open(AnyObjectId)
org.eclipse.jgit.lib.RefDatabase.refresh()
org.eclipse.jgit.diff.DiffFormatter.formatHeader(ByteArrayOutputStream,DiffEntry)
org.eclipse.jgit.util.ReadLinesTest.testReadLines_singleLine()
org.eclipse.jgit.revwalk.RevTagParseTest.testTagTag()
org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent()
org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch()
org.eclipse.jgit.internal.storage.pack.PackWriter.isShallow()
org.eclipse.jgit.lib.MutableObjectId.fromHexString(byte,int)
org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertTail()
org.eclipse.jgit.fnmatch.AbstractHead.setNewHeads(List)
org.eclipse.jgit.gitrepo.ManifestParser.removeNotInGroup()
org.eclipse.jgit.transport.PushOptionsTest.create(Object,Repository)
org.eclipse.jgit.api.Git.submoduleStatus()
org.eclipse.jgit.diff.DiffEntry.getOldPath()
org.eclipse.jgit.diff.RenameDetector.findExactRenames(ProgressMonitor)
org.eclipse.jgit.revwalk.RevObjectTest.testAddRevFlag()
org.eclipse.jgit.pgm.ArchiveTest.testPrefixWithoutTrailingSlash()
org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4()
org.eclipse.jgit.api.MergeCommandTest.testNoFastForward()
org.eclipse.jgit.api.CreateBranchCommand.setStartPoint(RevCommit)
org.eclipse.jgit.util.GitDateParserTest.rfc()
org.eclipse.jgit.patch.FormatError.toString()
org.eclipse.jgit.treewalk.AbstractTreeIterator.stopWalk()
org.eclipse.jgit.util.IO.read(ReadableByteChannel,byte,int,int)
org.eclipse.jgit.util.RawParseUtils_HexParseTest.parse32(String)
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRefs_InvalidPrefixes()
org.eclipse.jgit.awtui.CommitGraphPane.stroke(int)
org.eclipse.jgit.patch.FileHeader.parseName(String,int,int)
org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.getRepository()
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getReverseIdx(DfsReader)
org.eclipse.jgit.lib.TypedConfigGetter.getEnum(Config,T,String,String,String,T)
org.eclipse.jgit.transport.Transport.open(Repository,URIish,String)
org.eclipse.jgit.lib.IndexDiff.hasOurs()
org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.pack(Repository,RevObject)
org.eclipse.jgit.internal.storage.pack.ObjectToPack.toString()
org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withCommitLoadedByDifferentRevWalk()
org.eclipse.jgit.merge.MergeStrategy.register(String,MergeStrategy)
org.eclipse.jgit.lib.ConfigTest.testTimeUnitInvalid()
org.eclipse.jgit.internal.storage.file.PackIndexV1.resolve(Set,AbbreviatedObjectId,int)
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.isNameConflicting(String)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testWordGroupCase0()
org.eclipse.jgit.util.RefMap.next()
org.eclipse.jgit.lib.BatchingProgressMonitor.update(int)
org.eclipse.jgit.diff.HistogramDiffIndex.recCnt(long)
org.eclipse.jgit.internal.ketch.KetchReplica.retryLater(ReplicaPushRequest)
org.eclipse.jgit.patch.Patch.parseHunks(FileHeader,int,int)
org.eclipse.jgit.util.FS.userHomeImpl()
org.eclipse.jgit.junit.TestRepository.reset(AnyObjectId)
org.eclipse.jgit.lfs.server.LargeFileRepository.getVerifyAction(AnyLongObjectId)
org.eclipse.jgit.transport.RefAdvertiser.advertiseCapability(String)
org.eclipse.jgit.transport.http.apache.HttpClientConnection.getResponseMessage()
org.eclipse.jgit.util.IOReadLineTest.testReadLine()
org.eclipse.jgit.http.server.GitSmartHttpTools.isGitClient(HttpServletRequest)
org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.next()
org.eclipse.jgit.transport.SshTransport.getSession()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testUnsupportedGroupCase1()
org.eclipse.jgit.transport.ReceivePack.service()
org.eclipse.jgit.events.RefsChangedEvent.getListenerType()
org.eclipse.jgit.util.Base64Test.testEncode()
org.eclipse.jgit.internal.storage.reftable.ReftableTest.sym(String,String)
org.eclipse.jgit.internal.storage.pack.PackWriter.have(ObjectToPack,AnyObjectId)
org.eclipse.jgit.internal.storage.pack.ObjectToPack.setCachedSize(int)
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.execute(RevWalk,ProgressMonitor)
org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount()
org.eclipse.jgit.internal.storage.dfs.DfsReader.getCachedPacksAndUpdate(BitmapBuilder)
org.eclipse.jgit.transport.URIishTest.testScpStyleNoURIDecoding()
org.eclipse.jgit.util.FSTest.tearDown()
org.eclipse.jgit.revwalk.RevCommit.carry(RevFlag)
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.assertEqualsPath(File,File)
org.eclipse.jgit.lib.TagBuilder.toByteArray()
org.eclipse.jgit.treewalk.TreeWalk.getPathString()
org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_FooSpBar()
org.eclipse.jgit.lib.IndexDiff.diff(ProgressMonitor,int,int,String)
org.eclipse.jgit.util.GitDateFormatterTest.ISO()
org.eclipse.jgit.transport.URIishTest.testRelativePath()
org.eclipse.jgit.api.ResetCommand.resetMerge()
org.eclipse.jgit.util.io.LimitedInputStream.mark(int)
org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable(MergeStrategy,IndexState,WorktreeState)
org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta()
org.eclipse.jgit.api.FetchCommand.setRefSpecs(RefSpec)
org.eclipse.jgit.internal.storage.file.GC.doGc()
org.eclipse.jgit.dircache.DirCacheTree.contains(byte,int,int)
org.eclipse.jgit.internal.storage.dfs.DfsPackParser.toBlockStart(long)
org.eclipse.jgit.dircache.DirCacheIteratorTest.testNoSubtree_NoTreeWalk()
org.eclipse.jgit.blame.Region.copy(int)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase3()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllLoose()
org.eclipse.jgit.api.AddCommandTest.writeTempFile(String)
org.eclipse.jgit.pgm.TextBuiltin.die(boolean,Throwable)
org.eclipse.jgit.gitrepo.ManifestParser.removeOverlaps()
org.eclipse.jgit.api.RebaseCommandTest.testEmptyRebaseTodo()
org.eclipse.jgit.api.RebaseCommand.continueRebase()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.getPathHash()
org.eclipse.jgit.transport.WalkEncryptionTest.isAlgorithmAllowed(Properties)
org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_NoEnterSubtree()
org.eclipse.jgit.internal.storage.file.WindowCache.close(PackFile)
org.eclipse.jgit.transport.PacketLineOut.setFlushOnEnd(boolean)
org.eclipse.jgit.internal.fsck.FsckError.getNonCommitHeads()
org.eclipse.jgit.lib.ObjectChecker.newBlobObjectChecker()
org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.assertSubmoduleFetchHeads(ObjectId,ObjectId)
org.eclipse.jgit.transport.ChainingCredentialsProvider.isInteractive()
org.eclipse.jgit.lfs.server.internal.LfsServerText.get()
org.eclipse.jgit.ignore.FastIgnoreRuleTest.testSegments()
org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl()
org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.reftableMap(PackList)
org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries()
org.eclipse.jgit.diff.AbstractDiffTestCase.testEdit_UniqueCommonLargerThanMatchPoint()
org.eclipse.jgit.internal.storage.reftable.EmptyLogCursor.close()
org.eclipse.jgit.diff.ContentSource.seek(String)
org.eclipse.jgit.dircache.DirCache.read()
org.eclipse.jgit.lfs.server.fs.UploadTest.testUpload()
org.eclipse.jgit.api.StashCreateCommandTest.diffWorkingAgainstHead(RevCommit)
org.eclipse.jgit.revwalk.Generator.shareFreeList(BlockRevQueue)
org.eclipse.jgit.util.RefList.emptyList()
org.eclipse.jgit.util.RawSubStringPattern.pattern()
org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded()
org.eclipse.jgit.transport.TrackingRefUpdate.setResult(ReceiveCommand,Result,String)
org.eclipse.jgit.internal.storage.dfs.DfsInserter.encodeTypeSize(int,long)
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setPackStats(PackStatistics)
org.eclipse.jgit.diff.HistogramDiffTest.testEdit_NoUniqueMiddleSide_Insert2()
org.eclipse.jgit.transport.WalkPushConnection.deleteCommand(RemoteRefUpdate)
org.eclipse.jgit.lib.ConfigTest.test004_PutGetSimple()
org.eclipse.jgit.http.test.DefaultReceivePackFactoryTest.getRemoteUser()
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getCurrentSize()
org.eclipse.jgit.internal.storage.file.ObjectDirectory.getPackedObjectSize(WindowCursor,AnyObjectId)
org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testInserterIgnoresUnreachable()
org.eclipse.jgit.lib.ObjectIdRefTest.testToString()
org.eclipse.jgit.revwalk.LIFORevQueue.everbodyHasFlag(int)
org.eclipse.jgit.internal.storage.file.PackIndex.remove()
org.eclipse.jgit.pgm.CommitAndLogTest.testCommitAmend()
org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_RejoinIfUnpaired()
org.eclipse.jgit.api.SubmoduleAddCommand.setPath(String)
org.eclipse.jgit.transport.ReceivedPackStatistics.getNumRefDelta()
org.eclipse.jgit.transport.BaseReceivePack.setAllowDeletes(boolean)
org.eclipse.jgit.api.TagCommand.setSigned(boolean)
org.eclipse.jgit.internal.storage.reftable.MergedReftable.getRef()
org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPreserveOldPacks()
org.eclipse.jgit.submodule.SubmoduleWalkTest.generatorFilteredToOneOfTwoSubmodules()
org.eclipse.jgit.diff.DiffConfig.isRenameDetectionEnabled()
org.eclipse.jgit.diff.SimilarityIndex.create(ObjectLoader)
org.eclipse.jgit.http.server.glue.SuffixPipeline.toString()
org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1()
org.eclipse.jgit.treewalk.WorkingTreeIterator.loadRulesFromFile(IgnoreNode,File)
org.eclipse.jgit.transport.http.HttpConnectionFactory.create(URL)
org.eclipse.jgit.api.LogCommand.addRange(AnyObjectId,AnyObjectId)
org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsertAtEnd()
org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.setUp()
org.eclipse.jgit.lfs.lib.LongObjectIdTest.test009_toString()
org.eclipse.jgit.transport.DaemonClient.getRemoteAddress()
org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches()
org.eclipse.jgit.util.RefList.copy(int)
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1DotSuffix()
org.eclipse.jgit.ignore.FastIgnoreRuleTest.testAsteriskDot()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testEscapedBracket2()
org.eclipse.jgit.api.CloneCommand.checkout(Repository,FetchResult)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_18()
org.eclipse.jgit.lib.ConfigSnapshot.end(List,int,String,String,String)
org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.oneCommit()
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparerTest.close()
org.eclipse.jgit.internal.ketch.KetchReplica.getLeader()
org.eclipse.jgit.internal.storage.dfs.DfsPackCompacterTest.setUp()
org.eclipse.jgit.pgm.ResetTest.testZombieArgument_Bug484951()
org.eclipse.jgit.lfs.lib.MutableLongObjectIdTest.testFromStringByte()
org.eclipse.jgit.pgm.FetchTest.testFetchDefault()
org.eclipse.jgit.lib.RefTest.testReadLooseRef()
org.eclipse.jgit.revwalk.RevWalk.retainOnReset(Collection)
org.eclipse.jgit.treewalk.WorkingTreeIterator.initializeReadBuffer()
org.eclipse.jgit.api.InitCommand.setBare(boolean)
org.eclipse.jgit.storage.pack.PackConfig.setBitmapContiguousCommitCount(int)
org.eclipse.jgit.junit.TestRepository.committer(PersonIdent)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5()
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1()
org.eclipse.jgit.transport.HttpConfigUriPathTest.testNormalizationWithDotDot()
org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_12(Git,int)
org.eclipse.jgit.api.EolRepositoryTest.test_ConfigAutoCRLF_false_ConfigEOL_native()
org.eclipse.jgit.util.LongMapTest.testInsertMinValue()
org.eclipse.jgit.lib.UserConfig.getDefaultUserName()
org.eclipse.jgit.internal.storage.reftable.BlockReader.readRef()
org.eclipse.jgit.api.ResetCommandTest.testResetDefaultMode()
org.eclipse.jgit.api.BlameCommand.reverse(AnyObjectId,Collection)
org.eclipse.jgit.pgm.Blame.run()
org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder()
org.eclipse.jgit.pgm.opt.CmdLineParser.printSingleLineUsage(Writer,ResourceBundle)
org.eclipse.jgit.revwalk.RevCommit.parseHeaders(RevWalk)
org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testOneEntry_Forward()
org.eclipse.jgit.lib.RepositoryCache.registerRepository(Key,Repository)
org.eclipse.jgit.lib.BatchRefUpdate.toString()
org.eclipse.jgit.pgm.debug.ReadReftable.run()
org.eclipse.jgit.util.PathsTest.testPathCompare()
org.eclipse.jgit.transport.ServiceMayNotContinueException.setOutput()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidParent3()
org.eclipse.jgit.pgm.Diff.abbrev(boolean)
org.eclipse.jgit.lib.ObjectReader.setAvoidUnreachableObjects(boolean)
org.eclipse.jgit.pgm.ResetTest.testResetPathDoubleDash()
org.eclipse.jgit.internal.ketch.KetchSystem.requireMonotonicLeaderElections()
org.eclipse.jgit.lib.AnyObjectId.copyTo(char,Writer)
org.eclipse.jgit.lib.MutableObjectId.set(int,int,int,int,int)
org.eclipse.jgit.internal.storage.file.WindowCursor.prepareInflater()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.findPosition(AnyObjectId)
org.eclipse.jgit.lib.Repository.open(AnyObjectId,int)
org.eclipse.jgit.api.AddCommand.call()
org.eclipse.jgit.http.server.glue.MetaFilter.add(Object)
org.eclipse.jgit.transport.WalkEncryptionTest.isAlgorithmPresent(String)
org.eclipse.jgit.ignore.internal.StringsTest.testCount()
org.eclipse.jgit.internal.storage.file.XInputStream.readFully(byte,int,int)
org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting3()
org.eclipse.jgit.lib.Repository.create()
org.eclipse.jgit.transport.URIishTest.testUNC()
org.eclipse.jgit.lib.RefUpdate.setOldObjectId(ObjectId)
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test7_FromString()
org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onBeginWholeObject(long,int,long)
org.eclipse.jgit.util.FS.length(File)
org.eclipse.jgit.pgm.opt.CmdLineParser.getRevWalkGently()
org.eclipse.jgit.api.PullCommand.call()
org.eclipse.jgit.api.Status.isClean()
org.eclipse.jgit.lib.RebaseTodoLine.createInvalidCommentException(String)
org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict()
org.eclipse.jgit.notes.NoteMapMergerTest.countNotes(NoteMap)
org.eclipse.jgit.diff.SimilarityIndexTest.testIndexingLargeObject()
org.eclipse.jgit.transport.WalkEncryptionTest.discover()
org.eclipse.jgit.awtui.AWTPlotRenderer.drawBoundaryDot(int,int,int,int)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testUpperGroupCase0()
org.eclipse.jgit.dircache.DirCacheEntry.getObjectId()
org.eclipse.jgit.revwalk.RevWalk.getRevFilter()
org.eclipse.jgit.transport.PackParser.setObjectChecking(boolean)
org.eclipse.jgit.pgm.BranchTest.testDeleteForceMultiple()
org.eclipse.jgit.diff.RenameDetector.populateMap(List,ProgressMonitor)
org.eclipse.jgit.dircache.DirCacheTree.getObjectId()
org.eclipse.jgit.diff.EditTest.testSwap()
org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_PackedGitOpenFiles_0()
org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviatePackedBlob()
org.eclipse.jgit.treewalk.AbstractTreeIterator.createEmptyTreeIterator()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase3()
org.eclipse.jgit.transport.SideBandProgressMonitor.format(StringBuilder,String,int,int,int)
org.eclipse.jgit.diff.SimilarityIndex.key(int)
org.eclipse.jgit.attributes.AttributesHandlerTest.testExpandNonMacro1()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testLowerGroupCase2()
org.eclipse.jgit.dircache.DirCachePathEditTest.apply(DirCacheEntry)
org.eclipse.jgit.revwalk.RevWalk.peel(RevObject)
org.eclipse.jgit.revwalk.RevCommit.guessEncoding()
org.eclipse.jgit.internal.storage.file.PackIndexV1.getOffset64Count()
org.eclipse.jgit.revwalk.RevObjectList.set(int,E)
org.eclipse.jgit.junit.http.RecordingLogger.debug(String,Object)
org.eclipse.jgit.gitrepo.RepoCommand.setRemoteReader(RemoteReader)
org.eclipse.jgit.transport.SpiTransport.open(URIish,Repository,String)
org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.follow(String)
org.eclipse.jgit.internal.storage.reftable.Reftable.hasId(AnyObjectId)
org.eclipse.jgit.lib.IndexDiff.addConflict(String,int)
org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.flushBlock()
org.eclipse.jgit.internal.storage.dfs.DfsReader.pin(BlockBasedFile,long)
org.eclipse.jgit.api.CloneCommand.isNonEmptyDirectory(File)
org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode()
org.eclipse.jgit.pgm.opt.CmdLineParser.required()
org.eclipse.jgit.transport.BasePackPushConnection.writePack(Map,ProgressMonitor)
org.eclipse.jgit.lib.TreeFormatter.toString()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoTree4()
org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.writeVarintString(String)
org.eclipse.jgit.internal.storage.reftable.BlockReader.getOldId()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testSpecialGroupCase5()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_b()
org.eclipse.jgit.util.FileUtilsTest.testIsStaleFileHandleWithDirectCause()
org.eclipse.jgit.lfs.CleanFilter.create(Repository,InputStream,OutputStream)
org.eclipse.jgit.internal.storage.pack.PackWriter.select(ObjectToPack,StoredObjectRepresentation)
org.eclipse.jgit.internal.storage.file.ByteWindow.copy(long,byte,int,int)
org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.getAdvertisedRefs(Repository,RevWalk)
org.eclipse.jgit.revwalk.ObjectWalk.getPathHashCode()
org.eclipse.jgit.internal.ketch.RemoteGitReplica.startPush(ReplicaPushRequest)
org.eclipse.jgit.util.FileUtil.normalize(String)
org.eclipse.jgit.merge.MergeMessageFormatterTest.testCommit()
org.eclipse.jgit.transport.Connection.getPeerUserAgent()
org.eclipse.jgit.lib.FileMode.copyTo(OutputStream)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.gcWithTtl()
org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_LsFiles()
org.eclipse.jgit.api.EolRepositoryTest.test_ConfigAutoCRLF_input_GlobalEOL_lf()
org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink()
org.eclipse.jgit.fnmatch.FileNameMatcher.reset()
org.eclipse.jgit.internal.storage.reftable.ReftableReader.initObjIndex()
org.eclipse.jgit.pgm.Main.execute(String)
org.eclipse.jgit.transport.OpenSshConfig.getConfig()
org.eclipse.jgit.api.PushCommand.setRefLeaseSpecs(RefLeaseSpec)
org.eclipse.jgit.treewalk.TreeWalk.getAttributesNodeProvider()
org.eclipse.jgit.api.ArchiveCommand.getFormat()
org.eclipse.jgit.treewalk.filter.NotTreeFilterTest.testWrap()
org.eclipse.jgit.internal.storage.file.PackReverseIndex.findNextOffset(long,long)
org.eclipse.jgit.ignore.FastIgnoreRuleTest.testSegmentsDoNotMatch()
org.eclipse.jgit.internal.storage.file.BasePackBitmapIndex.getFlags()
org.eclipse.jgit.notes.LeafBucketTest.testSetFive_MixedOrder()
org.eclipse.jgit.api.CloneCommandTest.testCloneRepository()
org.eclipse.jgit.archive.TarFormat.suffixes()
org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_ShortLineOnlyEmbeddedAndEndingLF()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testGraphGroupCase1()
org.eclipse.jgit.revwalk.DelayRevQueue.next()
org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testFull_FromByteArray()
org.eclipse.jgit.transport.BaseReceivePack.receivePackAndCheckConnectivity()
org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testAlnumGroupCase2()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getBlobs()
org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag()
org.eclipse.jgit.submodule.SubmoduleWalk.forPath(Repository,AbstractTreeIterator,String)
org.eclipse.jgit.diff.ContentSource.getType()
org.eclipse.jgit.api.Git.checkout()
org.eclipse.jgit.util.GitDateParserTest.tearDown()
org.eclipse.jgit.util.RawParseUtilsTest.testParseEncoding_Accept_Latin_One_AsISO8859_1()
org.eclipse.jgit.lib.RefTest.testRemoteNames()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.getFlags()
org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.close()
org.eclipse.jgit.storage.pack.PackConfig.setDeltaBaseAsOffset(boolean)
org.eclipse.jgit.util.SystemReader.run()
org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyToOutputStream()
org.eclipse.jgit.util.NBTest.testDecodeInt32()
org.eclipse.jgit.dircache.DirCacheCheckout.getConflicts()
org.eclipse.jgit.api.EolRepositoryTest.test_ConfigAutoCRLF_true_ConfigEOL_lf()
org.eclipse.jgit.transport.HttpAuthMethod.parse(String)
org.eclipse.jgit.attributes.AttributesRule.isNameOnly()
org.eclipse.jgit.internal.storage.file.WindowCache.removeAll(PackFile)
org.eclipse.jgit.revwalk.RevWalk.isRetainBody()
org.eclipse.jgit.dircache.DirCacheTree.getChildCount()
org.eclipse.jgit.util.RawCharUtil.trimLeadingWhitespace(byte,int,int)
org.eclipse.jgit.treewalk.filter.NotTreeFilter.clone()
org.eclipse.jgit.internal.storage.pack.DeltaTask.add(Slice)
org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_7()
org.eclipse.jgit.lib.ObjectLoaderTest.read()
org.eclipse.jgit.dircache.DirCacheBasicTest.testWriteEmptyCommit_RealIndex()
org.eclipse.jgit.diff.DiffFormatter.format(AbbreviatedObjectId)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testVerySimpleStarCase0()
org.eclipse.jgit.pgm.RevParse.run()
org.eclipse.jgit.util.FS.readPipe(File,String,String,Map)
org.eclipse.jgit.diff.HashedSequenceComparator.hash(HashedSequence,int)
org.eclipse.jgit.lfs.test.LongObjectIdTestUtils.hash(String)
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setBlockSize(PackExt,int)
org.eclipse.jgit.transport.PackParser.release()
org.eclipse.jgit.transport.PushCertificateStore.commandsEqual(ReceiveCommand,ReceiveCommand)
org.eclipse.jgit.revwalk.RevWalk.parseTree(AnyObjectId)
org.eclipse.jgit.lib.ObjectCheckerTest.testValidPosixTree()
org.eclipse.jgit.dircache.DirCacheBasicTest.testWriteEmptyLockEmpty_RealIndex()
org.eclipse.jgit.transport.PacketLineOut.formatLength(byte,int)
org.eclipse.jgit.transport.UploadPack.getOptions()
org.eclipse.jgit.ignore.FastIgnoreRuleTest.testWildmatchDoNotMatch()
org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase2()
org.eclipse.jgit.internal.storage.pack.PackWriter.singleThreadDeltaSearch(ProgressMonitor,ObjectToPack,int)
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef2()
org.eclipse.jgit.internal.storage.reftable.ReftableTest.estimateCurrentBytesOneRef()
org.eclipse.jgit.pgm.RemoteTest.testVerboseList()
org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll()
org.eclipse.jgit.storage.file.WindowCacheConfig.setPackedGitOpenFiles(int)
org.eclipse.jgit.util.FileUtils.delete(File)
org.eclipse.jgit.transport.PushProcessTest.testUpdateUpToDate()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testLowerGroupCase1()
org.eclipse.jgit.pgm.debug.RebuildCommitGraph.run()
org.eclipse.jgit.internal.storage.file.GlobalAttributesNode.load()
org.eclipse.jgit.dircache.BaseDirCacheEditor.replace()
org.eclipse.jgit.nls.TranslationBundleTest.testNonTranslatedBundle()
org.eclipse.jgit.internal.ketch.KetchReplica.prepareCommit(Repository,Map,ObjectId)
org.eclipse.jgit.transport.HttpAuthTest.checkResponse(String,String)
org.eclipse.jgit.pgm.BranchTest.testCreateFromOldCommit()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoType3()
org.eclipse.jgit.diff.SimilarityIndexTest.testCommonScore_SameFiles_CR_canonicalization()
org.eclipse.jgit.transport.WalkRemoteObjectDatabase.writeFile(String,byte)
org.eclipse.jgit.notes.LeafBucketTest.testSetFive_ReverseOrder()
org.eclipse.jgit.util.ChangeIdUtilTest.testChangeIdAlreadySetWithReplacement()
org.eclipse.jgit.diff.DiffFormatter.diff(RawText,RawText)
org.eclipse.jgit.lib.BitmapIndex.contains(AnyObjectId)
org.eclipse.jgit.revwalk.RevWalk.parseNew(AnyObjectId,ObjectLoader)
org.eclipse.jgit.transport.OpenSshConfig.positive(String)
org.eclipse.jgit.internal.storage.file.PackWriterTest.setUp()
org.eclipse.jgit.internal.storage.file.PackIndexWriterV2.writeCRCs()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.test2AlphaGroupsCase0()
org.eclipse.jgit.transport.BaseReceivePack.isSideBand()
org.eclipse.jgit.transport.SignedPushConfig.setCertNonceSlopLimit(int)
org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_NewlinesOnly()
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag()
org.eclipse.jgit.util.io.TimeoutOutputStreamTest.want(int)
org.eclipse.jgit.http.test.GitServletResponseTests.testRuntimeExceptionInPreReceiveHook()
org.eclipse.jgit.util.FS_Win32_Cygwin.newInstance()
org.eclipse.jgit.merge.MergeMessageFormatter.addConflictsMessage(List,StringBuilder)
org.eclipse.jgit.revwalk.RevWalk.getCachedBytes(RevObject,ObjectLoader)
org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeletePathAndTreeNormalNames()
org.eclipse.jgit.ant.tasks.GitCloneTaskTest.shouldRaiseErrorOnBadUrl()
org.eclipse.jgit.revwalk.RevCommit.getCommitTime()
org.eclipse.jgit.transport.RemoteRefUpdate.getRemoteName()
org.eclipse.jgit.errors.LargeObjectException.getObjectName()
org.eclipse.jgit.internal.storage.file.PackFile.getObjectSize(WindowCursor,AnyObjectId)
org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(TreeWalk)
org.eclipse.jgit.lib.ObjectInserter.insert(CommitBuilder)
org.eclipse.jgit.util.FS_POSIX.isCaseSensitive()
org.eclipse.jgit.lib.BaseRepositoryBuilder.getFS()
org.eclipse.jgit.api.AddCommandTest.testAddNothing()
org.eclipse.jgit.lib.TreeFormatter.entrySize(FileMode,int)
org.eclipse.jgit.util.RelativeDateFormatterTest.testFormatWeeks()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedCommittedComparedWithInitialCommit()
org.eclipse.jgit.storage.file.WindowCacheConfig.install()
org.eclipse.jgit.http.test.SmartClientSmartServerTest.doFilter(ServletRequest,ServletResponse,FilterChain)
org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldReturnNullWithoutMergeBranchForLocalBranch()
org.eclipse.jgit.transport.BundleWriter.newPackWriter()
org.eclipse.jgit.internal.storage.reftable.EmptyLogCursor.getUpdateIndex()
org.eclipse.jgit.util.FS.isSymLink(File)
org.eclipse.jgit.attributes.CGitAttributesTest.testDirectoryMatchSubRecursiveBacktrack6()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithNoGarbage()
org.eclipse.jgit.lib.ObjectStream.reset()
org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writeReftable()
org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_DontBreakAboveScore()
org.eclipse.jgit.lib.ObjectReader.resolve(AbbreviatedObjectId)
org.eclipse.jgit.revwalk.RevWalk.lookupTag(AnyObjectId)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.writeFileModified()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testReset()
org.eclipse.jgit.revwalk.DateRevQueueTest.testCloneFIFO()
org.eclipse.jgit.util.BlockListTest.testAddRejectsBadIndexes()
org.eclipse.jgit.patch.PatchErrorTest.testError_DisconnectedHunk()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5b()
org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testAndMultiSubPathDualNegate()
org.eclipse.jgit.lib.BaseRepositoryBuilder.addAlternateObjectDirectories(File)
org.eclipse.jgit.transport.TrackingRefUpdate.decode(ReceiveCommand,Result)
org.eclipse.jgit.internal.storage.file.InflatingBitSet.mask(int)
org.eclipse.jgit.lib.RefWriter.writeInfoRefs()
org.eclipse.jgit.transport.PackParser.endInput()
org.eclipse.jgit.junit.TestRepositoryTest.nonRacingChange()
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.isCorrupt(long)
org.eclipse.jgit.internal.storage.file.PackIndexV2.idOffset(int)
org.eclipse.jgit.api.Git.tagList()
org.eclipse.jgit.internal.storage.file.RefDirectory.getRef(String)
org.eclipse.jgit.merge.StrategyOneSided.mergeImpl()
org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_NoHeader()
org.eclipse.jgit.internal.storage.pack.DeltaWindow.remaining()
org.eclipse.jgit.transport.WalkEncryption.request(HttpURLConnection,String)
org.eclipse.jgit.revwalk.RevCommit.getTree()
org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_1(Git,int)
org.eclipse.jgit.diff.DiffFormatter.setDiffComparator(RawTextComparator)
org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits()
org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementInLastLineNoLineBreak()
org.eclipse.jgit.transport.PackParser.setCheckEofAfterPackFooter(boolean)
org.eclipse.jgit.internal.storage.reftable.BlockWriter.blockSizeTooSmall(Entry)
org.eclipse.jgit.attributes.CGitAttributesTest.createFiles(String)
org.eclipse.jgit.transport.TransportHttp.getSchemes()
org.eclipse.jgit.internal.storage.file.PackFileTest.objectHeader(TemporaryBuffer,Heap,int,int)
org.eclipse.jgit.notes.FanoutBucket.build(boolean,ObjectInserter)
org.eclipse.jgit.awtui.AWTPlotRenderer.drawText(String,int,int)
org.eclipse.jgit.transport.ReceiveCommand.setResult(Result)
org.eclipse.jgit.util.io.IsolatedOutputStream.write(byte,int,int)
org.eclipse.jgit.lib.UserConfig.getDefaultEmail()
org.eclipse.jgit.util.io.TimeoutInputStream.skip(long)
org.eclipse.jgit.internal.storage.file.RefDirectory.getRefs(String)
org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.unlock()
org.eclipse.jgit.internal.storage.reftable.MergedReftable.allLogs()
org.eclipse.jgit.lib.RepositoryCache.clearExpired()
org.eclipse.jgit.internal.storage.file.ObjectDirectory.newCachedDatabase()
org.eclipse.jgit.http.server.glue.UrlPipeline.init(ServletContext,Set)
org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testOrMultiThreeMixSubPathNegate()
org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.newMerger(ObjectInserter,Config)
org.eclipse.jgit.lib.ObjectCheckerTest.idFor(int,byte)
org.eclipse.jgit.storage.pack.PackConfig.setBitmapRecentCommitSpan(int)
org.eclipse.jgit.revwalk.BlockObjQueue.newBlock()
org.eclipse.jgit.dircache.DirCacheBuilder.isTree(CanonicalTreeParser)
org.eclipse.jgit.internal.storage.dfs.DfsInserter.clear()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedComparedWithInitialCommit()
org.eclipse.jgit.util.QuotedStringGitPathStyleTest.assertDequote(String,String)
org.eclipse.jgit.pgm.debug.TextHashFunctions.requiresRepository()
org.eclipse.jgit.dircache.DirCacheEntry.isExtended()
org.eclipse.jgit.http.server.ServletUtils.getRepository(ServletRequest)
org.eclipse.jgit.lib.ObjectIdSubclassMap.insert(V)
org.eclipse.jgit.pgm.ResetTest.testResetPathNoDoubleDash()
org.eclipse.jgit.api.Git.nameRev()
org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testShallowFileCorrupt()
org.eclipse.jgit.api.ApplyCommand.call()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpaceGroupCase2()
org.eclipse.jgit.revwalk.BlockObjQueue.add(RevObject)
org.eclipse.jgit.ignore.BasicRuleTest.testStripTrailingWhitespace()
org.eclipse.jgit.storage.file.FileBasedConfig.getFile()
org.eclipse.jgit.http.test.HookMessageTest.open(HttpServletRequest,String)
org.eclipse.jgit.treewalk.TreeWalk.forPath(Repository,String,RevTree)
org.eclipse.jgit.internal.storage.file.PackIndex.getOffset()
org.eclipse.jgit.pgm.LsRemoteTest.testLsRemoteTags()
org.eclipse.jgit.util.time.ProposedTimestamp.toString()
org.eclipse.jgit.internal.storage.io.BlockSource.close()
org.eclipse.jgit.internal.storage.file.WindowCache.removeAll()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testGraphGroupCase4()
org.eclipse.jgit.transport.PushCertificateIdentTest.incompleteCasesMatchPersonIdent()
org.eclipse.jgit.internal.storage.pack.PackOutputStream.getCopyBuffer()
org.eclipse.jgit.transport.WalkEncryptionTest.textWrite(File,String)
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesDotLockInRefName()
org.eclipse.jgit.util.HttpSupport.verify(String,SSLSession)
org.eclipse.jgit.internal.storage.reftable.BlockWriter.tryAdd(Entry)
org.eclipse.jgit.treewalk.FileTreeIterator.idSubmodule(Entry)
org.eclipse.jgit.api.RebaseCommand.getFile(String)
org.eclipse.jgit.util.ChangeIdUtilTest.testOnelinerFollowedByBlank()
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.xor(Bitmap)
org.eclipse.jgit.submodule.SubmoduleWalk.setTree(AnyObjectId)
org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB()
org.eclipse.jgit.hooks.CommitMsgHook.getCommitEditMessageFilePath()
org.eclipse.jgit.dircache.DirCache.writeTo(File,OutputStream)
org.eclipse.jgit.patch.EditListTest.testFileHeader()
org.eclipse.jgit.archive.Tbz2Format.suffixes()
org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit()
org.eclipse.jgit.internal.storage.file.WindowCursor.inflater()
org.eclipse.jgit.attributes.AttributesNodeTest.after()
org.eclipse.jgit.lib.ConfigTest.testInclude()
org.eclipse.jgit.internal.storage.file.UnpackedObject.readSome(InputStream,byte,int,int)
org.eclipse.jgit.util.io.TimeoutInputStream.read(byte,int,int)
org.eclipse.jgit.api.EolStreamTypeUtilTest.testCheckinCRLF()
org.eclipse.jgit.lib.RefRename.needToUpdateHEAD()
org.eclipse.jgit.lib.DirCacheCheckoutTest.go()
org.eclipse.jgit.transport.FetchProcess.deleteTrackingRef(FetchResult,BatchRefUpdate,RefSpec,Ref)
org.eclipse.jgit.api.NotesCommandTest.testListNotes()
org.eclipse.jgit.transport.ReceivedPackStatistics.getNumDeltaCommit()
org.eclipse.jgit.dircache.DirCache.writeTree(ObjectInserter)
org.eclipse.jgit.util.RawSubStringPatternTest.testNoMatches()
org.eclipse.jgit.transport.TransportAmazonS3.getName()
org.eclipse.jgit.lib.BranchTrackingStatus.of(Repository,String)
org.eclipse.jgit.internal.fsck.FsckError.getCorruptIndices()
org.eclipse.jgit.transport.BaseReceivePack.parseCommand(String)
org.eclipse.jgit.attributes.AttributesHandlerTest.writeAttributesFile(String,String)
org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange()
org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef()
org.eclipse.jgit.lfs.server.s3.SignerV4.hash(String)
org.eclipse.jgit.transport.PushConnectionTest.create(Object,Repository)
org.eclipse.jgit.lib.RefUpdate.getResult()
org.eclipse.jgit.util.FileUtils.getLength(File)
org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.writeAttributesFile(String,String)
org.eclipse.jgit.pgm.StatusTest.writeAllFiles()
org.eclipse.jgit.transport.OperationResult.getAdvertisedRef(String)
org.eclipse.jgit.internal.storage.file.WindowCursor.getShallowCommits()
org.eclipse.jgit.ignore.internal.AbstractMatcher.toString()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_Full()
org.eclipse.jgit.util.TemporaryBuffer.writeTo(OutputStream,ProgressMonitor)
org.eclipse.jgit.transport.http.JDKHttpConnection.setRequestMethod(String)
org.eclipse.jgit.internal.storage.dfs.DfsReaderIoStats.getReadBlocksMicros()
org.eclipse.jgit.transport.PacketLineInTest.testReadString5()
org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakNone()
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.commitPackImpl(Collection,Collection)
org.eclipse.jgit.attributes.TreeWalkAttributeTest.writeAttributesFile(String,String)
org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.removeFromTable(Entry)
org.eclipse.jgit.notes.NoteParser.parse()
org.eclipse.jgit.internal.storage.dfs.DeltaBaseCacheTest.get(byte,int)
org.eclipse.jgit.internal.storage.file.PackIndexWriterV2.writeOffset64()
org.eclipse.jgit.internal.storage.reftable.ReftableReader.blocksIn(long,long)
org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_4(Git,int)
org.eclipse.jgit.http.test.SmartClientSmartServerTest.get(URIish,CredentialItem)
org.eclipse.jgit.internal.storage.file.RefDirectory.pack(Collection,Map)
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.removed(File)
org.eclipse.jgit.junit.http.AppServer.getRequests(String)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.searchPacksAgain(PackList)
org.eclipse.jgit.ignore.internal.Strings.split(String,char)
org.eclipse.jgit.api.Git.close()
org.eclipse.jgit.api.BranchCommandTest.testDelete()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.ofObjectType(EWAHCompressedBitmap,int)
org.eclipse.jgit.lib.BatchingProgressMonitor.end(BatchingProgressMonitor)
org.eclipse.jgit.transport.RefSpecTest.testWildcardAtStart()
org.eclipse.jgit.dircache.DirCacheEntry.write(OutputStream)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.producesNewReftable()
org.eclipse.jgit.transport.ReceiveCommand.setRefLogMessage(String,boolean)
org.eclipse.jgit.api.ApplyCommandTest.testModifyX()
org.eclipse.jgit.patch.Patch.getErrors()
org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onPackFooter(byte)
org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable(MergeStrategy,IndexState,WorktreeState)
org.eclipse.jgit.transport.Transport.doesNotExist(RemoteConfig)
org.eclipse.jgit.http.server.glue.UrlPipeline.initFilter(Filter,ServletContext,Set)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.isTag(Ref)
org.eclipse.jgit.lib.Config.getState()
org.eclipse.jgit.transport.TransportGitSsh.getOptionalFields()
org.eclipse.jgit.internal.storage.file.LockFile.setNeedStatInformation(boolean)
org.eclipse.jgit.http.server.glue.ServletBinderImpl.through(Filter)
org.eclipse.jgit.internal.storage.file.UnpackedObject.getCachedBytes()
org.eclipse.jgit.lib.CLIRepositoryTestCase.assertStringArrayEquals(String,String)
org.eclipse.jgit.lib.RepositoryCacheConfigTest.testAutoCleanupDelayShouldBeMax10minutes()
org.eclipse.jgit.lib.BatchRefUpdate.addCommand(Collection)
org.eclipse.jgit.internal.storage.file.PackWriterTest.writeVerifyPack2(boolean)
org.eclipse.jgit.util.RefMap.get(Object)
org.eclipse.jgit.dircache.DirCacheEditor.toString()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.rewriteFileInFolderIgnored()
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockFrom()
org.eclipse.jgit.ignore.CGitVsJGitRandomIgnorePatternTest.buildAssertionToAdd(String,String,boolean)
org.eclipse.jgit.internal.storage.dfs.DfsReader.getObjectSize(AnyObjectId,int)
org.eclipse.jgit.diff.DiffFormatter.isEndOfLineMissing(RawText,int)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e()
org.eclipse.jgit.revplot.PlotCommitList.findPassingThrough(PlotCommit,Collection)
org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testNotEscapingBackslash()
org.eclipse.jgit.transport.PushCertificateStoreTest.toList(Iterable)
org.eclipse.jgit.notes.NoteMapTest.testIteratorFlatTree()
org.eclipse.jgit.lfs.lib.LfsPointerFilter.shouldBeRecursive()
org.eclipse.jgit.http.test.SmartClientSmartServerTest.testInitialClone_Redirect307Small()
org.eclipse.jgit.api.EolRepositoryTest.testBinary1()
org.eclipse.jgit.patch.FormatError.getSeverity()
org.eclipse.jgit.dircache.DirCacheEntry.getRawMode()
org.eclipse.jgit.diff.Subsequence.a(S,Edit)
org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath3()
org.eclipse.jgit.patch.BinaryHunk.getStartOffset()
org.eclipse.jgit.transport.AtomicPushTest.newRepo(String)
org.eclipse.jgit.internal.storage.file.ReflogWriter.log(String,byte)
org.eclipse.jgit.lib.Repository.getAllRefs()
org.eclipse.jgit.lib.ObjectIdOwnerMap.equals(AnyObjectId,AnyObjectId)
org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort()
org.eclipse.jgit.transport.JschConfigSessionFactory.createSession(CredentialsProvider,FS,String,String,String,int,OpenSshConfig,Host)
org.eclipse.jgit.api.BranchCommandTest.testCreateFromLightweightTag()
org.eclipse.jgit.util.ChangeIdUtilTest.testRegularCommit()
org.eclipse.jgit.transport.URIishTest.testGetAbsEmptyHumanishName()
org.eclipse.jgit.util.TemporaryBufferTest.testOneBlockAndHalf_Copy()
org.eclipse.jgit.api.RebaseCommandTest.createTreeWalk()
org.eclipse.jgit.transport.RefSpec.setSource(String)
org.eclipse.jgit.api.HugeFileTest.testAddHugeFile()
org.eclipse.jgit.lib.MutableObjectId.fromRaw(byte,int)
org.eclipse.jgit.internal.storage.reftree.AlwaysFailUpdate.getRefDatabase()
org.eclipse.jgit.merge.RecursiveMerger.createCommitForTree(ObjectId,List)
org.eclipse.jgit.transport.PreUploadHook.onBeginNegotiateRound(UploadPack,Collection,int)
org.eclipse.jgit.transport.InternalHttpServerGlue.setPeerUserAgent(UploadPack,String)
org.eclipse.jgit.util.io.TeeInputStream.read()
org.eclipse.jgit.internal.storage.file.WindowCache.purge(PackFile)
org.eclipse.jgit.transport.BundleWriterTest.makeBundleWithCallback(String,String,RevCommit,boolean)
org.eclipse.jgit.internal.storage.file.FileSnapshotTest.append(File,byte)
org.eclipse.jgit.api.DescribeCommand.reaches(RevCommit)
org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaBlock()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeModeNotOctal1()
org.eclipse.jgit.internal.storage.pack.DeltaIndex.negmatch(byte,int,byte,int,int)
org.eclipse.jgit.internal.storage.dfs.DfsRepositoryDescription.getRepositoryName()
org.eclipse.jgit.transport.PushCertificateParser.receiveSignature(StringReader)
org.eclipse.jgit.transport.http.HttpConnection.setDoOutput(boolean)
org.eclipse.jgit.transport.TestProtocolTest.registerProto(UploadPackFactory,ReceivePackFactory)
org.eclipse.jgit.internal.storage.file.RefDirectory.performsAtomicTransactions()
org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2()
org.eclipse.jgit.util.FileUtilsTest.testIsStaleFileHandleWithIndirectCause()
org.eclipse.jgit.ignore.internal.Strings.setNext(char,char)
org.eclipse.jgit.revwalk.RevWalkFilterTest.testCommitTimeRevFilter()
org.eclipse.jgit.internal.storage.pack.PackWriter.preparePack(ProgressMonitor,Set,Set,Set)
org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_IgnoreWhitespace()
org.eclipse.jgit.api.CommitCommandTest.testReflogs()
org.eclipse.jgit.dircache.BaseDirCacheEditor.commit()
org.eclipse.jgit.api.FetchCommand.setCallback(Callback)
org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.setConcurrencyLevel(int)
org.eclipse.jgit.patch.FileHeader.parseIndexLine(int,int)
org.eclipse.jgit.util.io.LimitedInputStream.available()
org.eclipse.jgit.nls.TranslationBundle.resourceBundle()
org.eclipse.jgit.internal.storage.reftree.RefTreeRename.asNew(Ref)
org.eclipse.jgit.util.RefList.isEmpty()
org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.newMerger(Repository,boolean)
org.eclipse.jgit.dircache.DirCacheBuilderTest.testFindSingleFile()
org.eclipse.jgit.diff.DiffFormatterReflowTest.testNoNewLine1()
org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithNoSubmodules()
org.eclipse.jgit.transport.HttpConfigTest.testMatchWithUser()
org.eclipse.jgit.util.io.UnionInputStream.isEmpty()
org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.doPeel(Ref)
org.eclipse.jgit.transport.FetchResult.submoduleResults()
org.eclipse.jgit.internal.ketch.RemoteGitReplica.blockingFetch(Repository,ReplicaFetchRequest)
org.eclipse.jgit.api.RemoteAddCommand.call()
org.eclipse.jgit.internal.storage.dfs.DeltaBaseCacheTest.testCacheMemoryUsedConsistentWithExpectations()
org.eclipse.jgit.api.errors.AbortedByHookException.getReturnCode()
org.eclipse.jgit.internal.storage.reftable.BlockWriter.writeTo(ReftableOutputStream)
org.eclipse.jgit.revwalk.DateRevQueueTest.testInsertTie()
org.eclipse.jgit.merge.SquashMessageFormatterTest.setUp()
org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testTopAndMultiPathDualNegate()
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePath()
org.eclipse.jgit.lib.ObjectCheckerTest.rejectName(byte)
org.eclipse.jgit.lfs.lib.AnyLongObjectId.getName()
org.eclipse.jgit.transport.TransportHttp.duplicateAdvertisement(String)
org.eclipse.jgit.notes.NoteMapMerger.get(LeafBucket,int)
org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree3()
org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.put(Ref)
org.eclipse.jgit.pgm.debug.LfsStore.getStoreUrl(URI)
org.eclipse.jgit.lib.SubmoduleConfigTest.fetchRecurseToConfigValue()
org.eclipse.jgit.attributes.AttributesHandlerTest.testStarPathMatch()
org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackRepoWithNoRefs(boolean)
org.eclipse.jgit.util.FS_POSIX.runHookIfPresent(Repository,String,String,PrintStream,PrintStream,String)
org.eclipse.jgit.internal.storage.file.GcPackRefsTest.concurrentOnlyOneWritesPackedRefs()
org.eclipse.jgit.internal.storage.pack.PackWriter.getReusedObjects()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_InvalidName()
org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount()
org.eclipse.jgit.internal.storage.pack.DeltaIndex.sizeOf(long)
org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate()
org.eclipse.jgit.api.CreateBranchCommand.getStartPointObjectId()
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyPackBypassCache(PackOutputStream,DfsReader)
org.eclipse.jgit.treewalk.TreeWalkJava7Test.testSymlinkToDirNotRecursingViaSymlink()
org.eclipse.jgit.storage.pack.PackConfig.setDeltaCacheLimit(int)
org.eclipse.jgit.pgm.ArchiveTest.shellQuote(String)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.seekDatabase(UnresolvedDelta,ObjectTypeAndSize)
org.eclipse.jgit.api.SubmoduleAddCommand.submoduleExists()
org.eclipse.jgit.transport.SshSessionFactory.releaseSession(RemoteSession)
org.eclipse.jgit.blame.Region.deepCopy()
org.eclipse.jgit.api.PullResult.getFetchedFrom()
org.eclipse.jgit.revplot.PlotCommitList.enter(int,PlotCommit)
org.eclipse.jgit.util.TemporaryBufferTest.testOneBlock_BulkWrite()
org.eclipse.jgit.internal.storage.file.PackWriterTest.createVerifyOpenPack(Set,Set,boolean,boolean)
org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack1()
org.eclipse.jgit.patch.HunkHeader.getEndOffset()
org.eclipse.jgit.gitrepo.ManifestParser.getFilteredProjects()
org.eclipse.jgit.api.RebaseCommandTest.testUnknownUpstream()
org.eclipse.jgit.merge.MergeStrategy.register(MergeStrategy)
org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.getConfig()
org.eclipse.jgit.internal.storage.file.DescriptionTest.description()
org.eclipse.jgit.dircache.DirCache.lock(File,FS,IndexChangedListener)
org.eclipse.jgit.util.BlockListTest.testRemoveFromEnd()
org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testClear()
org.eclipse.jgit.internal.storage.file.PackIndexWriterV2.writeOffset32()
org.eclipse.jgit.internal.storage.reftable.ReftableConfig.isIndexObjects()
org.eclipse.jgit.transport.TransportHttp.openFetch()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testAlphaGroupCase1()
org.eclipse.jgit.internal.storage.pack.DeltaTask.runWindow(DeltaWindow)
org.eclipse.jgit.transport.http.apache.TemporaryBufferEntity.getContentLength()
org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_existing()
org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyTo(OutputStream)
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose5()
org.eclipse.jgit.merge.MergeResult.containsConflicts()
org.eclipse.jgit.transport.TransportAmazonS3.close()
org.eclipse.jgit.internal.storage.reftable.ReftableTest.assertScan(List,Reftable)
org.eclipse.jgit.api.CloneCommand.setGitDir(File)
org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.getStats()
org.eclipse.jgit.api.CommitOnlyTest.expected_f3_head(int)
org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryFileMode()
org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal()
org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge()
org.eclipse.jgit.util.RefList.put(T)
org.eclipse.jgit.ant.tasks.GitCheckoutTask.setSrc(File)
org.eclipse.jgit.diff.AbstractDiffTestCase.testEdit_DeleteNearCommonTail()
org.eclipse.jgit.lib.RepositoryCacheConfigTest.testDisabledCleanupDelay()
org.eclipse.jgit.notes.DefaultNoteMergerTest.testEditEdit()
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparerTest.testNextSelectionDistanceWithSmallerDistantSpan()
org.eclipse.jgit.internal.storage.dfs.DfsInserter.read()
org.eclipse.jgit.attributes.AttributesHandler.attributesNode(TreeWalk,WorkingTreeIterator,DirCacheIterator,CanonicalTreeParser)
org.eclipse.jgit.fnmatch.LastHead.getNextHeads(char)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleGroupRangeCase4()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testVerySimplePatternCase4()
org.eclipse.jgit.lib.ObjectInserter.insert(TreeFormatter)
org.eclipse.jgit.internal.storage.pack.DeltaTask.compare(WeightedPath,WeightedPath)
org.eclipse.jgit.treewalk.NameConflictTreeWalk.min()
org.eclipse.jgit.lib.ThreadSafeProgressMonitor.endTask()
org.eclipse.jgit.lib.ReflogConfigTest.commit(String,long,int)
org.eclipse.jgit.internal.storage.reftable.BlockReader.invalidBlock(Throwable)
org.eclipse.jgit.fnmatch.AbstractHead.getNextHeads(char)
org.eclipse.jgit.api.RebaseCommandTest.readFile(String,RevCommit)
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMixedCaseGit()
org.eclipse.jgit.transport.URIish.getHost()
org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.isNameConflicting(String)
org.eclipse.jgit.lib.RepositoryResolveTest.assertUnparseable(String)
org.eclipse.jgit.internal.storage.file.InflatingBitSet.block(int)
org.eclipse.jgit.internal.fsck.FsckPackParser.seekDatabase(UnresolvedDelta,ObjectTypeAndSize)
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsNotMacHFSGit()
org.eclipse.jgit.transport.RefSpecTest.testSetSource()
org.eclipse.jgit.transport.WalkEncryptionTest.verifyCrypto(WalkEncryption)
org.eclipse.jgit.api.SubmoduleSyncCommand.addPath(String)
org.eclipse.jgit.api.ArchiveCommand.setFilename(String)
org.eclipse.jgit.api.PushCommand.getRefSpecs()
org.eclipse.jgit.revwalk.BlockRevQueue.resetToMiddle()
org.eclipse.jgit.transport.AmazonS3.maxAttempts(String,String)
org.eclipse.jgit.ignore.FastIgnoreRuleTest.testWildmatch()
org.eclipse.jgit.revwalk.RevWalk.setTreeFilter(TreeFilter)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testSimpleStarCase0()
org.eclipse.jgit.pgm.ArchiveTest.testPrefixDoesNotNormalizeDoubleSlash()
org.eclipse.jgit.lib.ConfigTest.testIncludeInvalidName()
org.eclipse.jgit.internal.storage.pack.PackWriter.exclude(AnyObjectId)
org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.uriOf(Repository)
org.eclipse.jgit.transport.WalkFetchConnection.downloadPackedObject(ProgressMonitor,AnyObjectId)
org.eclipse.jgit.http.server.glue.ServletBinderImpl.getServlet()
org.eclipse.jgit.transport.PushConfig.matchConfigValue(String)
org.eclipse.jgit.lfs.lib.MutableLongObjectId.fromHexString(byte,int)
org.eclipse.jgit.http.server.glue.UrlPipeline.destroyFilter(Filter,Set)
org.eclipse.jgit.api.LogCommandTest.logNoMergeCommits()
org.eclipse.jgit.treewalk.filter.AndTreeFilter.create(Collection)
org.eclipse.jgit.transport.BaseReceivePack.init(InputStream,OutputStream,OutputStream)
org.eclipse.jgit.transport.NetRC.getEntries()
org.eclipse.jgit.lib.Repository.writeMergeHeads(List)
org.eclipse.jgit.util.sha1.SHA1.initBlock(byte,int)
org.eclipse.jgit.revwalk.RevWalk.getRevSort()
org.eclipse.jgit.util.io.TimeoutInputStream.endRead()
org.eclipse.jgit.lib.ObjectCheckerTest.checkOneName(String)
org.eclipse.jgit.api.ApplyCommandTest.testAddA1()
org.eclipse.jgit.transport.URIishTest.testUserPasswordAndPort()
org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection()
org.eclipse.jgit.util.IO.readSome(File,int)
org.eclipse.jgit.transport.ReceivedPackStatistics.getNumDeltaTree()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.getBootstrap()
org.eclipse.jgit.transport.RefSpec.eq(String,String)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.getGarbageTtlMillis()
org.eclipse.jgit.internal.ketch.ProposalRound.canCombine(PersonIdent,PersonIdent)
org.eclipse.jgit.lib.RepositoryCache.canonical(File)
org.eclipse.jgit.lib.BlobObjectChecker.update(byte,int,int)
org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded()
org.eclipse.jgit.util.IntList.clear()
org.eclipse.jgit.lib.IndexDiff.getChanged()
org.eclipse.jgit.merge.ResolveMerger.cleanUp()
org.eclipse.jgit.util.GitDateFormatterTest.SHORT()
org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(ObjectId,DirCache,RevWalk)
org.eclipse.jgit.api.Status.getUncommittedChanges()
org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryNotUnregisteringWhenClosing()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testGraphGroupCase1()
org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC()
org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps()
org.eclipse.jgit.internal.storage.dfs.DfsPackCompacterTest.testEstimateCompactPackSizeInNewRepo()
org.eclipse.jgit.revwalk.filter.AndRevFilter.create(RevFilter)
org.eclipse.jgit.patch.HunkHeader.parseHeader()
org.eclipse.jgit.revwalk.filter.PatternMatchRevFilter.requiresCommitBody()
org.eclipse.jgit.internal.storage.reftable.BlockWriter.nextShouldBeRestart()
org.eclipse.jgit.util.BlockList.clear()
org.eclipse.jgit.lib.Repository.resolveAbbreviation(String)
org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_Limits1()
org.eclipse.jgit.api.AddCommandTest.createNestedRepo(String)
org.eclipse.jgit.pgm.CloneTest.testCloneIntoCurrentDir()
org.eclipse.jgit.lib.RepositoryCache.getKeys()
org.eclipse.jgit.internal.storage.file.PackIndexWriter.createOldestPossible(OutputStream,List)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testVerySimpleGroupRangeCase2()
org.eclipse.jgit.api.RmCommandTest.testRemove()
org.eclipse.jgit.internal.storage.file.PackIndex.hasNext()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testWordroupCase1()
org.eclipse.jgit.internal.storage.file.AutoGcTest.testNotTooManyPacks()
org.eclipse.jgit.archive.Tbz2Format.equals(Object)
org.eclipse.jgit.lib.PersonIdent.getName()
org.eclipse.jgit.attributes.AttributesHandlerTest.testComplexPathMatch()
org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.toPrune()
org.eclipse.jgit.http.server.glue.MetaFilter.size()
org.eclipse.jgit.transport.OperationResult.add(TrackingRefUpdate)
org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.add(DfsPackFile)
org.eclipse.jgit.api.BlameCommandTest.testRename()
org.eclipse.jgit.transport.TransportTest.testSpi()
org.eclipse.jgit.dircache.DirCacheIterator.back(int)
org.eclipse.jgit.util.io.ThrowingPrintWriter.println()
org.eclipse.jgit.transport.ReceiveCommand.updateType(RevWalk)
org.eclipse.jgit.internal.storage.file.FileSnapshotTest.setUp()
org.eclipse.jgit.internal.ketch.KetchSystem.newThread(Runnable)
org.eclipse.jgit.junit.MockSystemReader.getProperty(String)
org.eclipse.jgit.lfs.server.s3.SignerV4.canonicalRequest(URL,String,String,String,String,String)
org.eclipse.jgit.revwalk.AbstractRevQueue.anybodyHasFlag(int)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.selectObjectRepresentation(PackWriter,ObjectToPack,WindowCursor,Set)
org.eclipse.jgit.transport.SpiTransport.openFetch()
org.eclipse.jgit.transport.OpenSshConfig.lookup(String)
org.eclipse.jgit.pgm.BranchTest.testListContains()
org.eclipse.jgit.attributes.AttributesMatcherTest.assertNotMatched(String,String)
org.eclipse.jgit.api.AddCommand.isUpdate()
org.eclipse.jgit.transport.OpenSshConfig.getValues(String)
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathBadSecondCheckout(String)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_d()
org.eclipse.jgit.transport.BaseReceivePack.setAllowNonFastForwards(boolean)
org.eclipse.jgit.http.test.DumbClientDumbServerTest.testInitialClone_Loose()
org.eclipse.jgit.util.GSSManagerFactory.newInstance(URL)
org.eclipse.jgit.http.test.SmartClientSmartServerSslTest.testInitialClone_RedirectBackToHttp()
org.eclipse.jgit.lib.RefUpdate.setCheckConflicting(boolean)
org.eclipse.jgit.diff.SimilarityRenameDetector.dstFile(long)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.deleteFileInFolder()
org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository()
org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.finishFile()
org.eclipse.jgit.http.server.UploadPackServlet.begin(HttpServletRequest,Repository)
org.eclipse.jgit.internal.storage.pack.PackOutputStream.writeObject(ObjectToPack)
org.eclipse.jgit.revwalk.RevWalk.carryFlagsImpl(RevCommit)
org.eclipse.jgit.pgm.Status.printList(Collection)
org.eclipse.jgit.transport.HttpAuthTest.parseHeaders(String)
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog()
org.eclipse.jgit.http.server.UploadPackServlet.init(FilterConfig)
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.noRefLog()
org.eclipse.jgit.transport.http.JDKHttpConnectionFactory.create(URL)
org.eclipse.jgit.treewalk.filter.TreeFilterTest.testANY_DIFF_IdentityClone()
org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple()
org.eclipse.jgit.api.StashDropCommandTest.dropAll()
org.eclipse.jgit.transport.BaseReceivePack.isExpectDataAfterPackFooter()
org.eclipse.jgit.notes.NoteMapTest.testCreateFromEmpty()
org.eclipse.jgit.diff.SimilarityRenameDetector.setRenameScore(int)
org.eclipse.jgit.transport.JschConfigSessionFactory.isAuthenticationFailed(JSchException)
org.eclipse.jgit.transport.JschSession.getOutputStream()
org.eclipse.jgit.util.FileUtils.relativize(String,String)
org.eclipse.jgit.transport.Transport.open(URIish)
org.eclipse.jgit.revwalk.BlockRevQueue.newBlock()
org.eclipse.jgit.gitrepo.RepoProject.getRecommendShallow()
org.eclipse.jgit.diff.DiffEntry.getNewId()
org.eclipse.jgit.transport.TransportHttp.setAdditionalHeaders(Map)
org.eclipse.jgit.internal.ketch.Proposal.setPushCertificate(PushCertificate)
org.eclipse.jgit.transport.http.JDKHttpConnection.getRequestMethod()
org.eclipse.jgit.util.IO.readFully(InputStream,byte,int,int)
org.eclipse.jgit.lfs.server.s3.S3Config.getBucket()
org.eclipse.jgit.treewalk.AbstractTreeIterator.growPath(int)
org.eclipse.jgit.http.server.glue.NoParameterFilterConfig.getServletContext()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRefs_CycleInSymbolicRef()
org.eclipse.jgit.lib.Config.getRawString(String,String,String)
org.eclipse.jgit.util.io.TimeoutInputStreamTest.now()
org.eclipse.jgit.transport.TransportProtocol.getSchemes()
org.eclipse.jgit.internal.storage.reftable.BlockWriter.encodeSuffixAndType(int,int)
org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefUpdatedRefUpdateSucceeds()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test5_FromString()
org.eclipse.jgit.util.TemporaryBufferTest.testOneBlockAndHalf_SingleWrite()
org.eclipse.jgit.junit.http.SimpleHttpServer.nameOf(Repository)
org.eclipse.jgit.http.test.ErrorServletTest.testHandler()
org.eclipse.jgit.revwalk.FixUninterestingGenerator.outputType()
org.eclipse.jgit.internal.storage.file.UnpackedObject.buffer(InputStream)
org.eclipse.jgit.lib.RefTest.testGetShortExactRef()
org.eclipse.jgit.dircache.DirCacheBuildIterator.skip()
org.eclipse.jgit.transport.WalkEncryptionTest.isTestConfigPresent()
org.eclipse.jgit.internal.storage.file.LockFile.toString()
org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.blobInsertersForTheSameFanOutDir(ObjectDirectory)
org.eclipse.jgit.treewalk.TreeWalk.enterSubtree()
org.eclipse.jgit.transport.BaseReceivePack.write(int)
org.eclipse.jgit.internal.storage.file.PackFile.setCorrupt(long)
org.eclipse.jgit.api.EolRepositoryTest.test_ConfigAutoCRLF_input()
org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_Foo()
org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testConcurrentInsertionOfBlobsToTheSameNewFanOutDirectory()
org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.copy(String,String,String)
org.eclipse.jgit.util.HttpSupport.checkClientTrusted(X509Certificate,String)
org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing()
org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.getMemoryUsedByTableForTest()
org.eclipse.jgit.internal.storage.pack.DeltaIndex.countEntries(DeltaIndexScanner)
org.eclipse.jgit.api.BranchCommandTest.testCreateForce()
org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.ref(String,int)
org.eclipse.jgit.api.RevertCommand.include(Ref)
org.eclipse.jgit.lib.RepositoryCache.isGitRepository(File,FS)
org.eclipse.jgit.api.EolRepositoryTest.test_ConfigAutoCRLF_true_GlobalEOL_lf()
org.eclipse.jgit.revwalk.RevWalk.toObjectWalkWithSameObjects()
org.eclipse.jgit.internal.storage.dfs.DfsReader.findAllFromPack(DfsPackFile,Iterable)
org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange()
org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision()
org.eclipse.jgit.attributes.AttributesHandlerTest.testWorkDirRootOverridesGlobal()
org.eclipse.jgit.api.LsRemoteCommandTest.setUp()
org.eclipse.jgit.util.ProcessResult.getStatus()
org.eclipse.jgit.treewalk.WorkingTreeIterator.toString()
org.eclipse.jgit.transport.PackParserTest.testPackWithDuplicateBlob()
org.eclipse.jgit.util.FileUtilsTest.testDeleteRecursiveEmptyNeedsToCheckFilesFirst()
org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooters()
org.eclipse.jgit.archive.TgzFormat.putEntry(ArchiveOutputStream,ObjectId,String,FileMode,ObjectLoader)
org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree()
org.eclipse.jgit.treewalk.TreeWalk.isPathSuffix(byte,int)
org.eclipse.jgit.transport.PushCertificateStore.hasNext()
org.eclipse.jgit.transport.WalkEncryptionTest.test_V0_Java7_JET()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.getFormat()
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.write(byte,int,int)
org.eclipse.jgit.revwalk.RevTagParseTest.testParse_implicit_mixed_encoded()
org.eclipse.jgit.util.TemporaryBufferTest.testEmpty()
org.eclipse.jgit.fnmatch.RestrictedWildCardHead.toString()
org.eclipse.jgit.transport.HttpConfig.normalize(String)
org.eclipse.jgit.transport.AbstractAdvertiseRefsHook.advertiseRefs(UploadPack)
org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.packHeader(TemporaryBuffer,Heap,int)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testInversedGroupCase1()
org.eclipse.jgit.pgm.AbstractFetchCommand.showRemoteMessages(ThrowingPrintWriter,String)
org.eclipse.jgit.hooks.PrePushHook.canRun()
org.eclipse.jgit.api.Git.open(File,FS)
org.eclipse.jgit.notes.FanoutBucket.append(Note)
org.eclipse.jgit.revplot.PlotCommit.reset()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.getSourcePacks()
org.eclipse.jgit.lib.CLIRepositoryTestCase.execute(String)
org.eclipse.jgit.patch.CombinedHunkHeader.getOldImage()
org.eclipse.jgit.internal.storage.file.PackFile.readFully(long,byte,int,int,WindowCursor)
org.eclipse.jgit.attributes.TreeWalkAttributeTest.testNoAttributes()
org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI()
org.eclipse.jgit.util.io.AutoCRLFOutputStreamTest.encode(byte)
org.eclipse.jgit.api.MergeCommand.include(AnyObjectId)
org.eclipse.jgit.transport.PackedObjectInfo.setType(int)
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.isComplete()
org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3_NoParentRewriting()
org.eclipse.jgit.lib.ValidRefNameTest.testNormalizeWithSlashes()
org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleOtherMapping()
org.eclipse.jgit.revwalk.filter.RevFlagFilter.hasAny(RevFlag)
org.eclipse.jgit.internal.storage.reftable.MergedReftable.skipShadowedRefs(String)
org.eclipse.jgit.transport.WalkEncryptionTest.policySetup(boolean)
org.eclipse.jgit.archive.TgzFormat.hashCode()
org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple()
org.eclipse.jgit.internal.storage.file.ObjectDirectory.getPreservedDirectory()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_ConflictCausesAbort()
org.eclipse.jgit.storage.pack.PackStatistics.getTotalDeltas()
org.eclipse.jgit.lib.Config.setLong(String,String,String,long)
org.eclipse.jgit.util.io.AutoCRLFInputStreamTest.testBoundary()
org.eclipse.jgit.treewalk.AbstractTreeIterator.getNameOffset()
org.eclipse.jgit.treewalk.filter.NotTreeFilterTest.testCloneIsDeepClone()
org.eclipse.jgit.transport.PacketLineInTest.testReadStringRaw2()
org.eclipse.jgit.revwalk.RevObject.add(RevFlagSet)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testSpecialGroupCase7()
org.eclipse.jgit.treewalk.filter.PathFilterGroup.create(Collection)
org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone()
org.eclipse.jgit.diff.MyersDiff.getLeft(int)
org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getObjectCount()
org.eclipse.jgit.api.MergeResult.addConflict(String,int)
org.eclipse.jgit.api.RmCommandTest.setUp()
org.eclipse.jgit.api.RebaseCommand.cherryPickCommitFlattening(RevCommit)
org.eclipse.jgit.lib.ObjectId.fromRaw(byte,int)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.seekDatabase(PackedObjectInfo,ObjectTypeAndSize)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPunctGroupCase2()
org.eclipse.jgit.gitrepo.RepoCommand.setInputStream(InputStream)
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeLog(String,long,PersonIdent,ObjectId,ObjectId,String)
org.eclipse.jgit.util.RefMap.remove(Object)
org.eclipse.jgit.internal.storage.file.LargePackedWholeObject.getObjectId()
org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec()
org.eclipse.jgit.util.QuotedStringBourneStyleTest.testDequote_LoneBackslash()
org.eclipse.jgit.lib.ObjectLoader.isLarge()
org.eclipse.jgit.api.PushCommand.getTimeout()
org.eclipse.jgit.lib.ObjectLoaderTest.testLargeObjectLoader()
org.eclipse.jgit.revwalk.RevTagParseTest.testParse_GitStyleMessage()
org.eclipse.jgit.transport.TransportSftp.open(String)
org.eclipse.jgit.http.server.GitSmartHttpTools.sendUploadPackError(HttpServletRequest,HttpServletResponse,String)
org.eclipse.jgit.lib.Repository.resolveReflog(RevWalk,Ref,String)
org.eclipse.jgit.internal.storage.file.LockFile.lockForAppend()
org.eclipse.jgit.transport.OpenSshConfig.nows(String)
org.eclipse.jgit.junit.StrictWorkMonitor.endTask()
org.eclipse.jgit.archive.TxzFormat.suffixes()
org.eclipse.jgit.notes.NoteMapTest.testRemoveDeletesTreeFanout2_38()
org.eclipse.jgit.internal.storage.dfs.DfsFsck.verifyPack(ProgressMonitor,FsckError,DfsReader,DfsPackFile,ReadableChannel)
org.eclipse.jgit.util.FS.findHook(Repository,String)
org.eclipse.jgit.patch.FileHeader.getHunks()
org.eclipse.jgit.internal.storage.dfs.PackInputStream.read()
org.eclipse.jgit.lib.BitmapIndex.getBitmapIndex()
org.eclipse.jgit.http.server.glue.MetaFilter.find(HttpServletRequest)
org.eclipse.jgit.treewalk.FileTreeIteratorTest.nameOf(AbstractTreeIterator)
org.eclipse.jgit.patch.PatchErrorTest.testError_GarbageBetweenFiles()
org.eclipse.jgit.diff.MyersDiff.newSnake(int,int)
org.eclipse.jgit.internal.fsck.FsckPackParser.seekDatabase(PackedObjectInfo,ObjectTypeAndSize)
org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle()
org.eclipse.jgit.internal.storage.file.PackFile.extFile(PackExt)
org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyRawTo(ByteBuffer)
org.eclipse.jgit.lib.BranchTrackingStatus.getRemoteTrackingBranch()
org.eclipse.jgit.diff.RenameDetector.id(DiffEntry)
org.eclipse.jgit.transport.URIishTest.testGetWithSlashDotGitHumanishName()
org.eclipse.jgit.api.ShowNoteCommand.setNotesRef(String)
org.eclipse.jgit.api.BranchCommandTest.setUp()
org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf(AutoCRLF,AutoCRLF)
org.eclipse.jgit.dircache.DirCacheEntry.getLastModified()
org.eclipse.jgit.transport.WalkEncryptionTest.isAlgorithmTestable(Properties)
org.eclipse.jgit.util.FS_Win32_Cygwin.findHook(Repository,String)
org.eclipse.jgit.treewalk.TreeWalk.setFilter(TreeFilter)
org.eclipse.jgit.pgm.ArchiveTest.assertMagic(byte,File)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase7()
org.eclipse.jgit.internal.storage.pack.PackExt.toString()
org.eclipse.jgit.internal.storage.file.PackIndex.toObjectId()
org.eclipse.jgit.junit.TestRepository.delete()
org.eclipse.jgit.transport.PacketLineInTest.testReadString_Len0001()
org.eclipse.jgit.internal.ketch.KetchLeader.scheduleLeader()
org.eclipse.jgit.transport.WalkEncryptionTest.securityProviderName(String)
org.eclipse.jgit.util.FileUtil.createSymLink(File,String)
org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3()
org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex()
org.eclipse.jgit.storage.file.FileBasedConfigTest.tearDown()
org.eclipse.jgit.internal.storage.file.ObjectDirectory.handlePackError(IOException,PackFile)
org.eclipse.jgit.internal.storage.file.ReflogEntryImpl.parseCheckout()
org.eclipse.jgit.diff.RenameDetector.setRenameLimit(int)
org.eclipse.jgit.transport.BaseConnection.setPeerUserAgent(String)
org.eclipse.jgit.transport.RemoteRefUpdate.getNewObjectId()
org.eclipse.jgit.util.RefMap.peek()
org.eclipse.jgit.notes.DefaultNoteMergerTest.testDeleteDelete()
org.eclipse.jgit.http.server.ReceivePackServlet.init(FilterConfig)
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.prefixCompare(long,int)
org.eclipse.jgit.internal.storage.reftable.BlockWriter.blockType()
org.eclipse.jgit.notes.FanoutBucket.getTreeId()
org.eclipse.jgit.diff.EditTest.testExtendA()
org.eclipse.jgit.patch.FileHeader.parseNewFileMode(int,int)
org.eclipse.jgit.internal.storage.file.FileSnapshotTest.testNewFileWithWait()
org.eclipse.jgit.diff.SimilarityIndex.hashLargeObject(ObjectLoader)
org.eclipse.jgit.lfs.lib.LongObjectIdTest.setup()
org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.compressStandardFormat(int,byte)
org.eclipse.jgit.dircache.DirCacheCheckout.cleanUpConflicts()
org.eclipse.jgit.revwalk.filter.OrRevFilter.include(RevWalk,RevCommit)
org.eclipse.jgit.lib.RepositoryCache.getFile()
org.eclipse.jgit.lfs.lib.LongObjectId.isId(String)
org.eclipse.jgit.junit.MockSystemReader.getLocale()
org.eclipse.jgit.transport.http.HttpConnection.getHeaderFields()
org.eclipse.jgit.lib.ObjectChecker.isInvalidOnWindows(byte)
org.eclipse.jgit.lfs.lib.AnyLongObjectId.writeRawLong(OutputStream,long)
org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.getFileName()
org.eclipse.jgit.internal.storage.file.FileSnapshot.hashCode()
org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.tearDown()
org.eclipse.jgit.lib.ObjectIdSubclassMap.next()
org.eclipse.jgit.lib.ObjectIdSubclassMap.size()
org.eclipse.jgit.http.server.RepositoryFilter.destroy()
org.eclipse.jgit.api.RebaseCommand.squashIntoPrevious(boolean,RebaseTodoLine)
org.eclipse.jgit.http.test.DefaultReceivePackFactoryTest.testCreate_Enabled()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleGroupRangeCase3()
org.eclipse.jgit.api.PullCommandTest.testPullWithUntrackedStash()
org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserAndPort()
org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps()
org.eclipse.jgit.dircache.DirCacheEntry.getStage()
org.eclipse.jgit.api.ArchiveCommandTest.getFoo()
org.eclipse.jgit.internal.storage.dfs.DfsCachedPack.getPackDescription()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.setExtendedFlag(int)
org.eclipse.jgit.pgm.debug.LfsStore.getProtocolUrl(URI)
org.eclipse.jgit.internal.storage.file.LockFile.unlock(File)
org.eclipse.jgit.dircache.DirCacheEntry.isIntentToAdd()
org.eclipse.jgit.transport.TransportHttp.getRequiredFields()
org.eclipse.jgit.transport.TransportHttp.open(URIish,Repository,String)
org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_BatchModeDefault()
org.eclipse.jgit.ant.tasks.GitCloneTask.setDest(File)
org.eclipse.jgit.util.Base64.encodeBytes(byte)
org.eclipse.jgit.storage.pack.PackStatistics.getInterestingObjects()
org.eclipse.jgit.transport.http.JDKHttpConnection.getOutputStream()
org.eclipse.jgit.internal.storage.file.PackWriterTest.index(byte)
org.eclipse.jgit.transport.URIishTest.testSshGitProto()
org.eclipse.jgit.pgm.Blame.abbreviate(RevCommit)
org.eclipse.jgit.http.server.glue.UrlPipeline.hasMoreElements()
org.eclipse.jgit.lib.RefDatabase.findRef(Map,String)
org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_SymlinkAndFile()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimplePatternCase1()
org.eclipse.jgit.api.FetchCommand.isRemoveDeletedRefs()
org.eclipse.jgit.internal.storage.pack.DeltaTask.initWindow(Slice)
org.eclipse.jgit.hooks.PreCommitHook.getHookName()
org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag()
org.eclipse.jgit.junit.TestRepository.lightweightTag(String,ObjectId)
org.eclipse.jgit.notes.FanoutBucket.contractIfTooSmall(AnyObjectId,ObjectReader)
org.eclipse.jgit.lib.SubmoduleConfigTest.fetchRecurseNoMatch()
org.eclipse.jgit.revwalk.RevTag.disposeBody()
org.eclipse.jgit.pgm.opt.ObjectIdHandler.getDefaultMetaVariable()
org.eclipse.jgit.util.RefMapTest.testEmpty_NoPrefix2()
org.eclipse.jgit.util.io.AutoLFInputStreamTest.testLFCR()
org.eclipse.jgit.lib.CoreConfig.isLogAllRefUpdates()
org.eclipse.jgit.api.FetchCommand.setRefSpecs(String)
org.eclipse.jgit.transport.RefSpec.setForceUpdate(boolean)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.toTemp(int,byte,int,int)
org.eclipse.jgit.storage.pack.PackConfig.setBitmapExcessiveBranchCount(int)
org.eclipse.jgit.internal.storage.reftable.ReftableReader.readFileHeader()
org.eclipse.jgit.blame.BlameResult.getResultContents()
org.eclipse.jgit.revplot.AbstractPlotRendererTest.drawLabel(int,int,Ref)
org.eclipse.jgit.lib.Repository.resolve(String)
org.eclipse.jgit.transport.PackParser.setObjectChecker(ObjectChecker)
org.eclipse.jgit.http.server.FileSender.getLastModified()
org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_FailFooBar()
org.eclipse.jgit.ignore.CGitVsJGitRandomIgnorePatternTest.readProcessStream(InputStream)
org.eclipse.jgit.diff.SimilarityIndex.sort()
org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder()
org.eclipse.jgit.internal.storage.pack.DeltaTask.size()
org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWithoutConflict()
org.eclipse.jgit.api.TagCommandTest.testFailureOnSignedTags()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSomethingDotDot()
org.eclipse.jgit.lib.BranchConfig.getRemote()
org.eclipse.jgit.transport.DaemonTest.testDaemonStop()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1.hashCode()
org.eclipse.jgit.notes.NoteMapMerger.notNullOrEmpty(LeafBucket)
org.eclipse.jgit.api.DiffCommandTest.testDiffModified()
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.include(RevWalk,RevCommit)
org.eclipse.jgit.patch.CombinedFileHeader.parseNewFileMode(int,int)
org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit_IndexChangedEvent()
org.eclipse.jgit.dircache.DirCacheIterator.parseEntry()
org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.fileFor(AnyObjectId)
org.eclipse.jgit.attributes.AttributesRule.getPattern()
org.eclipse.jgit.internal.ketch.KetchLeader.setReplicas(Collection)
org.eclipse.jgit.internal.storage.pack.DeltaIndex.getIndexSize()
org.eclipse.jgit.internal.storage.file.PackBitmapIndex.open(File,PackIndex,PackReverseIndex)
org.eclipse.jgit.lib.UserConfig.getNameInternal(Config,String)
org.eclipse.jgit.lib.ObjectCheckerTest.testRejectInvalidWindowsCharacters()
org.eclipse.jgit.internal.storage.file.InflatingBitSet.isEmpty()
org.eclipse.jgit.transport.JschConfigSessionFactory.isAuthenticationCanceled(JSchException)
org.eclipse.jgit.lib.ObjectInserter.idFor(int,byte)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testVerySimpleStarCase1()
org.eclipse.jgit.api.RebaseResult.getUncommittedChanges()
org.eclipse.jgit.junit.http.RecordingLogger.clear()
org.eclipse.jgit.lib.ObjectIdSubclassMapTest.id(int)
org.eclipse.jgit.util.FS.run()
org.eclipse.jgit.util.FilterCommandsTest.run()
org.eclipse.jgit.lib.DirCacheCheckoutTest.resetHard(RevCommit)
org.eclipse.jgit.lib.ConfigTest.test002_ReadWithSubsection()
org.eclipse.jgit.revwalk.BlockRevQueue.freeBlock(Block)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedAllIgnored()
org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.has(AnyObjectId,Set)
org.eclipse.jgit.revwalk.AlwaysEmptyRevQueueTest.testAddFails()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testPrintGroupCase0()
org.eclipse.jgit.transport.TransportHttp.newDumbConnection(InputStream)
org.eclipse.jgit.internal.storage.dfs.DfsInserter.close()
org.eclipse.jgit.lfs.lib.AnyLongObjectId.equals(AnyLongObjectId)
org.eclipse.jgit.http.server.FileSender.close()
org.eclipse.jgit.diff.AbstractDiffTestCase.testCreateFile()
org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.flush()
org.eclipse.jgit.api.MergeCommandTest.testMergeInItself()
org.eclipse.jgit.lfs.server.LargeFileRepository.getUploadAction(AnyLongObjectId,long)
org.eclipse.jgit.internal.storage.pack.DeltaIndex.fwdmatch(byte,int,byte,int)
org.eclipse.jgit.diff.RawTextComparator.equals(RawText,int,RawText,int)
org.eclipse.jgit.revwalk.RevWalk.createCommit(AnyObjectId)
org.eclipse.jgit.diff.DiffAlgorithm.diff(SequenceComparator,S,S)
org.eclipse.jgit.api.CleanCommand.filterIgnorePaths(Set,Set,boolean)
org.eclipse.jgit.lib.CommitBuilder.addParentId(AnyObjectId)
org.eclipse.jgit.transport.FetchProcess.wantTag(Ref)
org.eclipse.jgit.transport.PacketLineOutTest.flush()
org.eclipse.jgit.transport.URIishTest.testGetValidWithSlashDotGitHumanishName()
org.eclipse.jgit.revwalk.RevCommit.carryFlags1(RevCommit,int,int)
org.eclipse.jgit.transport.WalkFetchConnection.pushLocalCommit(RevCommit)
org.eclipse.jgit.lfs.server.fs.DownloadTest.testDownloadInvalidPathInfo()
org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow()
org.eclipse.jgit.merge.StrategyResolve.getName()
org.eclipse.jgit.transport.RemoteConfigTest.testSaveTimeout()
org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok()
org.eclipse.jgit.http.server.GitServlet.setReceivePackFactory(ReceivePackFactory)
org.eclipse.jgit.lib.ValidRefNameTest.testValidTag()
org.eclipse.jgit.lib.Repository.readMergeCommitMsg()
org.eclipse.jgit.lib.ObjectIdTest.test010_toString()
org.eclipse.jgit.internal.storage.file.BitSet.block(int)
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllPacked()
org.eclipse.jgit.ignore.CGitVsJGitRandomIgnorePatternTest.assertCgitAndJgitMatch(String,FastIgnoreRule,CGitIgnoreRule,String)
org.eclipse.jgit.api.errors.CheckoutConflictException.getConflictingPaths()
org.eclipse.jgit.internal.ketch.KetchLeader.onReplicaUpdate(KetchReplica)
org.eclipse.jgit.internal.storage.pack.PackWriter.getObjects()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b()
org.eclipse.jgit.internal.storage.dfs.DfsReader.findAll(Iterable)
org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_NoMode()
org.eclipse.jgit.lib.ThreadSafeProgressMonitor.pollForUpdates()
org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_SetMerge_Conflict()
org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryCustomRemote()
org.eclipse.jgit.treewalk.WorkingTreeOptions.isDirNoGitLinks()
org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory()
org.eclipse.jgit.revwalk.FooterLineTest.testEmptyValueWithLF()
org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_GapByOne()
org.eclipse.jgit.util.RawParseUtils.parseBase10(byte,int,MutableInteger)
org.eclipse.jgit.revwalk.RevWalk.retainOnReset(RevFlag)
org.eclipse.jgit.internal.storage.dfs.DfsReader.resolveImpl(PackList,AbbreviatedObjectId,HashSet)
org.eclipse.jgit.internal.storage.pack.PackWriter.getStatistics()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUpperGroupCase1()
org.eclipse.jgit.diff.HistogramDiffIndex.recNext(long)
org.eclipse.jgit.treewalk.AbstractTreeIteratorTest.testEntryFileMode()
org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles()
org.eclipse.jgit.pgm.Checkout.run()
org.eclipse.jgit.treewalk.NameConflictTreeWalk.nameEqual(AbstractTreeIterator,AbstractTreeIterator)
org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.beginWalk()
org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test2_FromString()
org.eclipse.jgit.pgm.debug.BenchmarkReftable.seekHot(String)
org.eclipse.jgit.internal.ketch.ElectionRound.success()
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue()
org.eclipse.jgit.lib.ObjectLoaderTest.getRng()
org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_2_36()
org.eclipse.jgit.internal.storage.file.PackIndex.contains(AnyObjectId)
org.eclipse.jgit.transport.URIishTest.testScpStyleWithUser()
org.eclipse.jgit.transport.http.JDKHttpConnection.usingProxy()
org.eclipse.jgit.internal.storage.file.RefDirectory.getLooseRefs()
org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations()
org.eclipse.jgit.transport.TransportHttp.isGzipContent(HttpConnection)
org.eclipse.jgit.internal.storage.file.PackIndexTestCase.testIteratorReturnedValues2()
org.eclipse.jgit.api.CheckoutCommandTest.newOrphanBranchCommand()
org.eclipse.jgit.events.ListenerList.addConfigChangedListener(ConfigChangedListener)
org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_3(Git)
org.eclipse.jgit.internal.storage.pack.DeltaWindow.search()
org.eclipse.jgit.lib.ObjectCheckerTest.testAcceptTreeModeWithZero()
org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_illegalEncoding()
org.eclipse.jgit.notes.NoteParser.parseObjectId(MutableObjectId)
org.eclipse.jgit.api.MergeResult.getConflicts()
org.eclipse.jgit.lib.Config.copy(ConfigSnapshot,List)
org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog()
org.eclipse.jgit.patch.CombinedHunkHeader.parseBody(Patch,int)
org.eclipse.jgit.internal.storage.file.PackIndexV2.hasCRC32Support()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotDot()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase3()
org.eclipse.jgit.gitrepo.RepoCommand.setRecordRemoteBranch(boolean)
org.eclipse.jgit.util.io.IsolatedOutputStream.execute(Callable)
org.eclipse.jgit.lib.ObjectDatabase.has(AnyObjectId)
org.eclipse.jgit.transport.PushCertificate.getVersion()
org.eclipse.jgit.api.TagCommand.processOptions(RepositoryState)
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_16()
org.eclipse.jgit.internal.storage.reftable.ReftableReader.minUpdateIndex()
org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testFilteringTreeFiltersReferencedBlobs()
org.eclipse.jgit.util.FileUtils.mkdirs(File,boolean)
org.eclipse.jgit.ignore.CGitIgnoreTest.initRepo()
org.eclipse.jgit.lib.Constants.newMessageDigest()
org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_12_f2_14(Git,int)
org.eclipse.jgit.transport.TransferConfig.isAllowTipSha1InWant()
org.eclipse.jgit.attributes.AttributesHandlerTest.testRecursiveMacro()
org.eclipse.jgit.util.RefMapTest.testToString_NoPrefix()
org.eclipse.jgit.internal.storage.file.FileRepository.getConfig()
org.eclipse.jgit.api.StashCreateCommand.setRef(String)
org.eclipse.jgit.internal.storage.reftable.BlockReader.readBlockPositionList()
org.eclipse.jgit.lib.ValidRefNameTest.testNoDirectorySuffix()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test2_FromString()
org.eclipse.jgit.pgm.debug.TextHashFunctions.hashRegion(byte,int,int)
org.eclipse.jgit.pgm.debug.TextHashFunctions.rabin(byte,int)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testEscapedBracket6()
org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_SoleDq()
org.eclipse.jgit.treewalk.filter.TreeFilterTest.testALL_IdentityClone()
org.eclipse.jgit.internal.storage.file.PackIndexWriterV2.writeObjectNames()
org.eclipse.jgit.dircache.DirCache.findEntry(String)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_14()
org.eclipse.jgit.diff.PatchIdDiffFormatter.formatIndexLine(OutputStream,DiffEntry)
org.eclipse.jgit.diff.DiffFormatter.scan(AbstractTreeIterator,AbstractTreeIterator)
org.eclipse.jgit.diff.PatchIdDiffFormatter.getCalulatedPatchId()
org.eclipse.jgit.api.ApplyCommandTest.testModifyW()
org.eclipse.jgit.gitrepo.RepoCommand.setIgnoreRemoteFailures(boolean)
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.createWorkRepository()
org.eclipse.jgit.internal.ketch.ProposalRound.success()
org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_8(Git)
org.eclipse.jgit.pgm.debug.LfsStore.requiresRepository()
org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.receive(ReceivePack,TemporaryBuffer,Heap,TemporaryBuffer,Heap)
org.eclipse.jgit.api.CheckoutCommandTest.assertCheckoutRef(Ref)
org.eclipse.jgit.internal.storage.reftable.ReftableTest.onlyReflog()
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.simpleForce()
org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource()
org.eclipse.jgit.internal.ketch.LocalReplica.blockingFetch(Repository,ReplicaFetchRequest)
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getObjectType(DfsReader,long)
org.eclipse.jgit.internal.ketch.RemoteGitReplica.getURI()
org.eclipse.jgit.transport.TransportAmazonS3.loose(Ref)
org.eclipse.jgit.transport.PackedObjectInfo.getType()
org.eclipse.jgit.lib.ObjectIdOwnerMapTest.init()
org.eclipse.jgit.lib.SymbolicRef.getStorage()
org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.touch(long,File)
org.eclipse.jgit.http.server.GitServlet.addReceivePackFilter(Filter)
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockHEAD()
org.eclipse.jgit.transport.WalkEncryptionTest.fromSysProps()
org.eclipse.jgit.transport.TransportHttp.getInputStream()
org.eclipse.jgit.http.server.IsLocalFilter.destroy()
org.eclipse.jgit.treewalk.NameConflictTreeWalk.isTree(AbstractTreeIterator)
org.eclipse.jgit.transport.AmazonS3.toCleanString(List)
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_CreateBadTree()
org.eclipse.jgit.lib.ObjectInserter.digest()
org.eclipse.jgit.fnmatch.FileNameMatcher.createSimpleHeads(String,Character)
org.eclipse.jgit.api.SubmoduleSyncCommand.call()
org.eclipse.jgit.internal.ketch.KetchReplica.pushAsync(ReplicaPushRequest)
org.eclipse.jgit.attributes.AttributesRule.getAttributes()
org.eclipse.jgit.blame.Candidate.mergeRegions(Candidate)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testManySolutionsCase2()
org.eclipse.jgit.transport.PushCertificateStore.sortPending(List)
org.eclipse.jgit.util.BlockListTest.testSet()
org.eclipse.jgit.internal.storage.file.PackWriterTest.testNotIgnoreNonExistingObjects()
org.eclipse.jgit.transport.PacketLineInTest.testReadString_Len0002()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.setGarbageTtl(long,TimeUnit)
org.eclipse.jgit.util.RawParseUtils_LineMapTest.testTwoLineNoLF()
org.eclipse.jgit.internal.storage.file.SimpleDataInput.readByte()
org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoTracking()
org.eclipse.jgit.internal.storage.dfs.DfsInserter.isLarge()
org.eclipse.jgit.ignore.internal.Strings.convertGlob(String)
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.putRef(DfsStreamKey,long,T)
org.eclipse.jgit.transport.http.HttpConnection.getRequestMethod()
org.eclipse.jgit.lib.ConfigSnapshot.remove()
org.eclipse.jgit.transport.RemoteConfig.addPushRefSpec(RefSpec)
org.eclipse.jgit.internal.storage.reftable.MergedReftable.skipShadowed(String,long)
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.fromLongObjectId(AnyLongObjectId)
org.eclipse.jgit.transport.DaemonClient.execute(Socket)
org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries()
org.eclipse.jgit.transport.PackParserTest.testNonMarkingInputStream()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.getCoalesceGarbageLimit()
org.eclipse.jgit.lib.CLIRepositoryTestCase.assertArrayOfLinesEquals(String,String)
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeModeMissingName()
org.eclipse.jgit.api.RemoteDeleteCommandTest.testDelete()
org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildRejectsUnsetFileMode()
org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testTagIsPeeled()
org.eclipse.jgit.lib.TypedConfigGetter.getLong(Config,String,String,String,long)
org.eclipse.jgit.internal.storage.reftable.MergedReftable.byObjectId(AnyObjectId)
org.eclipse.jgit.internal.storage.file.PackWriterTest.writePack(FileRepository,RevWalk,int,Set,Set,Set)
org.eclipse.jgit.notes.NoteMap.readTree(ObjectReader,ObjectId)
org.eclipse.jgit.internal.storage.file.ReflogWriter.log(String,ReflogEntry)
org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.moveToHead(Entry)
org.eclipse.jgit.http.server.InfoRefsServlet.end()
org.eclipse.jgit.transport.BaseReceivePack.getMessageOutputStream()
org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.scanPacks(PackList)
org.eclipse.jgit.internal.storage.dfs.DfsReftable.size()
org.eclipse.jgit.internal.storage.reftable.ReftableTest.estimateCurrentBytesWithIndex()
org.eclipse.jgit.transport.RemoteConfig.getTagOpt()
org.eclipse.jgit.internal.storage.dfs.BeforeDfsPackIndexLoadedEvent.getPackFile()
org.eclipse.jgit.api.Git.diff()
org.eclipse.jgit.transport.PushCertificateStoreTest.saveOneCertOnOneRef()
org.eclipse.jgit.internal.storage.file.ReflogReaderImpl.getReverseEntries()
org.eclipse.jgit.diff.ContentSource.getSize()
org.eclipse.jgit.gitrepo.RepoCommandTest.absoluteRemoteURL()
org.eclipse.jgit.revwalk.RevWalk.parseAny(Iterable,boolean)
org.eclipse.jgit.lib.ObjectChecker.isNormalizedGit(byte,int,int)
org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest.testDequote_BareA()
org.eclipse.jgit.internal.storage.pack.PackWriter.computeName()
org.eclipse.jgit.junit.TestRepository.blob(String)
org.eclipse.jgit.transport.TransportHttp.onReceivePack()
org.eclipse.jgit.transport.TransportProtocol.getRequiredFields()
org.eclipse.jgit.revplot.AbstractPlotRendererTest.laneColor(PlotLane)
org.eclipse.jgit.lib.ConfigSnapshot.getNames(String,String)
org.eclipse.jgit.revwalk.RevObjectTest.testHasRevFlag()
org.eclipse.jgit.internal.storage.reftable.ReftableConfig.setRefBlockSize(int)
org.eclipse.jgit.util.IOReadLineTest.testReadLineNoTrailingNewline()
org.eclipse.jgit.internal.storage.file.RefDirectory.scanRef(LooseRef,String)
org.eclipse.jgit.hooks.PrePushHook.call()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.deleteFileInFolderAndCommit()
org.eclipse.jgit.api.MergeCommand.setSquash(boolean)
org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_DifferentObjects()
org.eclipse.jgit.transport.PacketLineIn.readACK(MutableObjectId)
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockTo()
org.eclipse.jgit.internal.storage.reftable.BlockReader.name()
org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.createTree(String)
org.eclipse.jgit.internal.storage.file.PackWriterTest.writeVerifyPack4(boolean)
org.eclipse.jgit.util.io.IsolatedOutputStream.newThread(Runnable)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDir()
org.eclipse.jgit.internal.ketch.ProposalRound.abort()
org.eclipse.jgit.util.FS.getName()
org.eclipse.jgit.revwalk.FIFORevQueue.removeFlag(int)
org.eclipse.jgit.transport.WalkRemoteObjectDatabase.toArray()
org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines()
org.eclipse.jgit.treewalk.FileTreeIteratorTest.assertEntry(String,String,TreeWalk)
org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitEntirelyShallow()
org.eclipse.jgit.transport.PackParser.streamPosition()
org.eclipse.jgit.http.server.GitFilter.setAsIsFileService(AsIsFileService)
org.eclipse.jgit.api.RebaseCommandTest.writeFileAndAdd(String,String)
org.eclipse.jgit.submodule.SubmoduleWalk.getModulesIgnore()
org.eclipse.jgit.dircache.DirCacheEntry.encodeTS(int,long)
org.eclipse.jgit.pgm.Glog.windowClosing(WindowEvent)
org.eclipse.jgit.util.RefMap.entrySet()
org.eclipse.jgit.lib.ObjectIdRefTest.testConstructor_PeeledStatusNotKnown()
org.eclipse.jgit.dircache.DirCacheEntryTest.testSetFileMode()
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.xor(EWAHCompressedBitmap)
org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1()
org.eclipse.jgit.lfs.server.LfsProtocolServlet.sendError(HttpServletResponse,Writer,int,String)
org.eclipse.jgit.blame.Candidate.getAuthor()
org.eclipse.jgit.http.test.SmartClientSmartServerTest.initialClone_Redirect(int,int)
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.run()
org.eclipse.jgit.api.RebaseCommandTest.modifyCommitMessage(String)
org.eclipse.jgit.util.FileUtils.normalize(File)
org.eclipse.jgit.dircache.DirCacheTreeTest.testEmptyCache_Clear_NoCacheTree()
org.eclipse.jgit.http.server.ClientVersionUtil.hasPushStatusBug(int)
org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2()
org.eclipse.jgit.attributes.Attributes.isCustom(String)
org.eclipse.jgit.transport.WalkFetchConnection.markLocalObjComplete(RevObject)
org.eclipse.jgit.internal.storage.file.WindowCursor.copyObjectAsIs(PackOutputStream,ObjectToPack,boolean)
org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.insertUnpackedObject(File,ObjectId,boolean)
org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_BareABCZ_OnlyBC()
org.eclipse.jgit.transport.PushCertificateStoreTest.missingRef()
org.eclipse.jgit.http.server.ServletUtils.send(byte,HttpServletRequest,HttpServletResponse)
org.eclipse.jgit.util.FS.resolveGrandparentFile(File)
org.eclipse.jgit.storage.pack.PackStatistics.getMessage()
org.eclipse.jgit.revwalk.RevWalk.hasNext()
org.eclipse.jgit.transport.TransportHttp.openReader(String)
org.eclipse.jgit.treewalk.NameConflictTreeWalk.combineDF(AbstractTreeIterator)
org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchSingleConfigValue()
org.eclipse.jgit.lib.TagBuilder.setMessage(String)
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindows()
org.eclipse.jgit.lfs.lib.LongObjectIdTest.test005_notIsId()
org.eclipse.jgit.api.CommitCommand.call()
org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest.testDequote_Empty2()
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows3()
org.eclipse.jgit.revwalk.RevWalkTestCase.setUp()
org.eclipse.jgit.lib.InflaterCache.get()
org.eclipse.jgit.notes.FanoutBucket.loadIfLazy(NoteBucket,AnyObjectId,ObjectReader)
org.eclipse.jgit.lib.ObjectLoaderTest.testSmallObjectLoader()
org.eclipse.jgit.diff.DiffEntry.scan(TreeWalk)
org.eclipse.jgit.storage.pack.PackConfig.getBitmapContiguousCommitCount()
org.eclipse.jgit.lib.AbbreviatedObjectId.prefixCompare(int,int)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMixedGroupCase7()
org.eclipse.jgit.transport.BasePackConnection.duplicateAdvertisement(String)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules4thru13_IndexEntryNotInHead()
org.eclipse.jgit.internal.storage.pack.DeltaIndex.sizeOfArray(int,int)
org.eclipse.jgit.transport.CredentialsProviderUserInfo.newPrompt(String)
org.eclipse.jgit.internal.storage.pack.PackWriter.writeDeltaObjectDeflate(PackOutputStream,ObjectToPack)
org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddGetAndContains()
org.eclipse.jgit.treewalk.filter.NotTreeFilter.shouldBeRecursive()
org.eclipse.jgit.internal.ketch.ProposalRound.start()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.createEmptyFolderAndCommit()
org.eclipse.jgit.lib.SubmoduleConfig.toConfigValue()
org.eclipse.jgit.util.FileUtilsTest.testDeleteNotEmptyTreeNotOkButIgnoreFail()
org.eclipse.jgit.api.AddCommandTest.retryFailedLockFileCommit()
org.eclipse.jgit.util.FileUtilsTest.testDeleteRecursiveEmptyDirectoriesOnlyButIsFile()
org.eclipse.jgit.pgm.ProxyConfigTest.testNoSetting()
org.eclipse.jgit.revwalk.filter.OrRevFilter.requiresCommitBody()
org.eclipse.jgit.transport.HttpConfig.get()
org.eclipse.jgit.junit.http.MockServletConfig.getServletContext()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getTrees()
org.eclipse.jgit.transport.PackParser.setAllowThin(boolean)
org.eclipse.jgit.pgm.Push.printUpdateLine(char,String,String,String,String)
org.eclipse.jgit.internal.storage.pack.PackOutputStream.flush()
org.eclipse.jgit.api.AddCommandTest.testMultipleCleanFilter()
org.eclipse.jgit.http.test.SmartClientSmartServerSslTest.destroy()
org.eclipse.jgit.transport.BaseReceivePack.packInputStream()
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.atomicUpdateRespectsInProcessLock()
org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree2()
org.eclipse.jgit.gitrepo.RepoProject.getPath()
org.eclipse.jgit.util.RefMap.remove()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.create()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleStarCase0()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c()
org.eclipse.jgit.api.RemoteListCommandTest.testList()
org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.merge(byte)
org.eclipse.jgit.junit.http.RecordingLogger.getWarnings()
org.eclipse.jgit.attributes.CGitAttributesTest.testRelativePaths()
org.eclipse.jgit.internal.storage.file.BasePackBitmapIndex.getBitmap()
org.eclipse.jgit.api.GitConstructionTest.testOpen()
org.eclipse.jgit.internal.storage.file.StoredBitmapTest.testGetBitmapWithThreeXor()
org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict()
org.eclipse.jgit.transport.TransportHttp.openInputStream(HttpConnection)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirsAndNewIndexEntry()
org.eclipse.jgit.internal.storage.pack.PackOutputStream.ofsDeltaVarIntLength(long)
org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.doDelete(Result)
org.eclipse.jgit.lib.Config.unsetSection(String,String)
org.eclipse.jgit.transport.URIishTest.testSshProtoWithADUserPassAndPort()
org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsParentDir_CreateRepositoryFromDotGitGitDir()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testGraphGroupCase0()
org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects()
org.eclipse.jgit.transport.PushCertificateStoreTest.assertCerts(PushCertificateStore,String,PushCertificate)
org.eclipse.jgit.transport.OpenSshConfigTest.config(String)
org.eclipse.jgit.internal.storage.reftable.ReftableReader.maxUpdateIndex()
org.eclipse.jgit.internal.fsck.FsckPackParser.overwriteObjectCount(long)
org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateSymLink()
org.eclipse.jgit.http.server.ClientVersionUtilTest.testParse()
org.eclipse.jgit.pgm.debug.LfsStore.getLargeFileRepository(LfsRequest,String,String)
org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.advertiseRefs(UploadPack)
org.eclipse.jgit.pgm.StatusTest.assertStagedFiles(String,boolean,boolean)
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixOfExisting()
org.eclipse.jgit.internal.storage.file.LockFile.write(byte,int,int)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_b()
org.eclipse.jgit.api.DiffCommand.setContextLines(int)
org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.deleteIsHidden()
org.eclipse.jgit.api.AbstractRemoteCommandTest.setupRemote()
org.eclipse.jgit.merge.ResolveMerger.checkout()
org.eclipse.jgit.util.RefListTest.testRemoveEndOfList()
org.eclipse.jgit.internal.storage.pack.DeltaWindow.checkLoadable(DeltaWindowEntry,long)
org.eclipse.jgit.pgm.Status.getStageStateDescription(StageState)
org.eclipse.jgit.util.RunExternalScriptTest.testCopyStdIn()
org.eclipse.jgit.util.TemporaryBuffer.openInputStream()
org.eclipse.jgit.internal.storage.dfs.DfsStreamKey.equals(Object)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.tearDown()
org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.getPacks()
org.eclipse.jgit.diff.SimilarityIndex.count(int)
org.eclipse.jgit.util.FS.normalize(String)
org.eclipse.jgit.api.MergeCommandTest.addAllAndCommit(Git)
org.eclipse.jgit.transport.TransportGitAnon.getDefaultPort()
org.eclipse.jgit.transport.ReceivedPackStatistics.getNumWholeTree()
org.eclipse.jgit.util.RawParseUtils_ParsePersonIdentTest.assertPersonIdent(String,PersonIdent)
org.eclipse.jgit.lib.Config.toText()
org.eclipse.jgit.transport.PackParserTest.testPackWithTrailingGarbage()
org.eclipse.jgit.transport.NetRCTest.testNetRCDefault()
org.eclipse.jgit.revwalk.filter.RevFlagFilter.hasAll(RevFlagSet)
org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip()
org.eclipse.jgit.transport.FetchConnection.getPackLocks()
org.eclipse.jgit.lib.Repository.doClose()
org.eclipse.jgit.internal.ketch.RemoteGitReplica.asUpdateList(Collection)
org.eclipse.jgit.revwalk.ObjectWalkFilterTest.countObjects()
org.eclipse.jgit.revwalk.RevFlagSet.remove()
org.eclipse.jgit.lfs.server.fs.LfsServerTest.putContent(AnyLongObjectId,String)
org.eclipse.jgit.lfs.lib.Constants.newMessageDigest()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.beginLog()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testMixedGroupCase1()
org.eclipse.jgit.util.FS_POSIX.newInstance()
org.eclipse.jgit.api.RebaseCommand.setProgressMonitor(ProgressMonitor)
org.eclipse.jgit.treewalk.filter.InterIndexDiffFilter.clone()
org.eclipse.jgit.treewalk.CanonicalTreeParser.reset()
org.eclipse.jgit.patch.Patch.parse(InputStream)
org.eclipse.jgit.dircache.DirCacheBuilder.beforeAdd(DirCacheEntry)
org.eclipse.jgit.util.io.UnionInputStreamTest.skip(long)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testInversedGroupCase1()
org.eclipse.jgit.treewalk.CanonicalTreeParser.next(int)
org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.getFS()
org.eclipse.jgit.lfs.lib.MutableLongObjectId.toObjectId()
org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.addAlternateObjectDirectory(File)
org.eclipse.jgit.http.server.GitFilter.addReceivePackFilter(Filter)
org.eclipse.jgit.transport.WalkFetchConnection.expandOneAlternate(AnyObjectId,ProgressMonitor)
org.eclipse.jgit.lib.ObjectChecker.checkId(byte)
org.eclipse.jgit.merge.EolAwareOutputStream.write(byte,int,int)
org.eclipse.jgit.internal.storage.reftree.RefTreeRename.doRename()
org.eclipse.jgit.lib.ObjectCheckerTest.assertSkipListAccepts(int,byte)
org.eclipse.jgit.util.RefMap.toMapKey(Ref)
org.eclipse.jgit.internal.storage.file.SimpleDataInput.readBoolean()
org.eclipse.jgit.storage.pack.PackConfig.setMaxDeltaDepth(int)
org.eclipse.jgit.api.CherryPickCommand.toString()
org.eclipse.jgit.revwalk.RevWalkTestCase.commitBuilder()
org.eclipse.jgit.api.MergeResult.getFailingPaths()
org.eclipse.jgit.junit.time.MonotonicFakeClock.read(TimeUnit)
org.eclipse.jgit.merge.MergeFormatterPass.writeConflictMetadata(MergeChunk)
org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.commit(RevWalk,List)
org.eclipse.jgit.dircache.DirCacheEntry.idOffset()
org.eclipse.jgit.events.ChangeRecorder.assertNoEvent()
org.eclipse.jgit.internal.storage.reftable.BlockWriter.valueType()
org.eclipse.jgit.pgm.ArchiveTest.testArchivePreservesMode()
org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCompareToLong()
org.eclipse.jgit.internal.ketch.ReplicaSnapshot.getAccepted()
org.eclipse.jgit.lib.RefUpdate.getName()
org.eclipse.jgit.pgm.Show.ignoreAllSpace(boolean)
org.eclipse.jgit.events.ListenerList.addListener(Class,T)
org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag()
org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest.testDequote_LoneBackslash()
org.eclipse.jgit.internal.storage.dfs.DfsConfig.save()
org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_13(Git,int)
org.eclipse.jgit.util.LongMap.remove(long)
org.eclipse.jgit.util.GitDateParserBadlyFormattedTest.tearDown()
org.eclipse.jgit.pgm.ResetTest.resetPath(boolean,boolean)
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag()
org.eclipse.jgit.http.test.DumbClientSmartServerTest.testInitialClone_Small()
org.eclipse.jgit.revwalk.filter.PatternMatchRevFilter.include(RevWalk,RevCommit)
org.eclipse.jgit.attributes.CGitAttributesTest.cgitAttributes(Set)
org.eclipse.jgit.api.Git.add()
org.eclipse.jgit.diff.HistogramDiff.setMaxChainLength(int)
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting2()
org.eclipse.jgit.pgm.debug.DiffAlgorithms.create()
org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testUnsupportedOptionalExtension()
org.eclipse.jgit.util.io.UnionInputStream.available()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelCommit()
org.eclipse.jgit.http.server.ObjectFileServlet.etag(FileSender)
org.eclipse.jgit.lfs.Lfs.getLfsTmpDir()
org.eclipse.jgit.patch.Patch.parseTraditionalPatch(byte,int,int)
org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testCrissCross()
org.eclipse.jgit.transport.WalkEncryptionTest.haveProp(String,Properties)
org.eclipse.jgit.api.CommitCommand.setOnly(String)
org.eclipse.jgit.lib.RefRename.getRefLogIdent()
org.eclipse.jgit.lib.RefUpdate.getRefLogMessage()
org.eclipse.jgit.revwalk.RevCommit.parse(RevWalk,byte)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testPrintGroupCase2()
org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject()
org.eclipse.jgit.internal.ketch.KetchSystem.newCommitter(ProposedTimestamp)
org.eclipse.jgit.transport.WalkRemoteObjectDatabase.writeRef(String,ObjectId)
org.eclipse.jgit.api.StashDropCommand.createRefUpdate(Ref)
org.eclipse.jgit.junit.TestRepositoryTest.amendRef()
org.eclipse.jgit.transport.Transport.findRemoteRefUpdatesFor(Repository,Collection,Map,Collection)
org.eclipse.jgit.internal.ketch.KetchSystem.createLeader(Repository)
org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testSpecificEntryNumber()
org.eclipse.jgit.internal.ketch.LeaderSnapshot.debug(StringBuilder,ReplicaSnapshot)
org.eclipse.jgit.http.server.resolver.DefaultUploadPackFactory.create(HttpServletRequest,Repository)
org.eclipse.jgit.junit.http.RecordingLogger.setDebugEnabled(boolean)
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.write(String)
org.eclipse.jgit.internal.storage.pack.DeltaEncoder.insert(byte,int,int)
org.eclipse.jgit.transport.URIishTest.testURIEncode_00()
org.eclipse.jgit.pgm.debug.TextHashFunctions.equals(Object)
org.eclipse.jgit.lfs.server.s3.S3Config.isDisableSslVerify()
org.eclipse.jgit.api.RebaseCommand.parseAuthor(byte)
org.eclipse.jgit.treewalk.TreeWalk.skipEntriesEqual()
org.eclipse.jgit.api.StashCreateCommandTest.indexDelete()
org.eclipse.jgit.transport.PackParser.getReceivedPackStatistics()
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getMissCount()
org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles()
org.eclipse.jgit.api.MergeCommand.setMessage(String)
org.eclipse.jgit.transport.Transport.isPushAtomic()
org.eclipse.jgit.lfs.server.fs.ObjectUploadListener.onDataAvailable()
org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.assertFileNameMatch(String,String,char,boolean,boolean)
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRefs_DiscoversNew()
org.eclipse.jgit.pgm.Diff.sourcePrefix(String)
org.eclipse.jgit.util.io.AutoLFInputStreamTest.testBinaryDontDetect()
org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyWrongOldIdButAlreadyCurrentIsNoOp()
org.eclipse.jgit.lfs.server.s3.SignerV4.addHostHeader(URL,Map)
org.eclipse.jgit.internal.storage.file.ReflogEntryImpl.toString()
org.eclipse.jgit.internal.storage.file.SimpleDataInput.readUTF()
org.eclipse.jgit.treewalk.CanonicalTreeParser.resetRoot(ObjectReader,AnyObjectId)
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.isGC(PackSource)
org.eclipse.jgit.util.RefMapTest.testNotEmpty_NoPrefix()
org.eclipse.jgit.http.test.SmartClientSmartServerTest.enableReceivePack()
org.eclipse.jgit.revplot.PlotCommitListTest.lanePos(int)
org.eclipse.jgit.notes.NoteMap.getRoot()
org.eclipse.jgit.lfs.server.s3.SignerV4.canonicalizeQueryString(Map)
org.eclipse.jgit.util.RelativeDateFormatter.upperLimit(long)
org.eclipse.jgit.http.test.DumbClientDumbServerTest.data()
org.eclipse.jgit.blame.Candidate.beginResult(RevWalk)
org.eclipse.jgit.revwalk.LIFORevQueueTest.testAddLargeBlocks()
org.eclipse.jgit.pgm.ArchiveTest.testArchiveWithLongFilename()
org.eclipse.jgit.internal.storage.file.AlternatesTest.createCommit()
org.eclipse.jgit.internal.storage.pack.PackWriter.getObjectCount()
org.eclipse.jgit.api.CleanCommandTest.testCleanDirs()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testLongFilename()
org.eclipse.jgit.ignore.internal.StringsTest.testString(String,int,int)
org.eclipse.jgit.ignore.IgnoreNodeTest.writeIgnoreFile(String,String)
org.eclipse.jgit.notes.NoteMap.remove(AnyObjectId)
org.eclipse.jgit.lfs.server.s3.SignerV4.urlEncode(String,boolean)
org.eclipse.jgit.pgm.Blame.ignoreAllSpace(boolean)
org.eclipse.jgit.internal.ketch.RemoteGitReplica.isExpectedValue(Map,RemoteRefUpdate)
org.eclipse.jgit.lib.TreeFormatter.insertTo(ObjectInserter)
org.eclipse.jgit.lfs.lib.MutableLongObjectId.fromRaw(byte)
org.eclipse.jgit.revwalk.BlockObjQueue.isEmpty()
org.eclipse.jgit.transport.PushCertificate.toText()
org.eclipse.jgit.http.test.RegexPipelineTest.setUp()
org.eclipse.jgit.revwalk.BlockRevQueue.canUnpop()
org.eclipse.jgit.revwalk.filter.NotRevFilter.negate()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.toPrune()
org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl()
org.eclipse.jgit.internal.storage.reftree.Scanner.peel(RefList,CanonicalTreeParser)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testPunctGroupCase2()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testWordGroupCase4()
org.eclipse.jgit.transport.UploadPack.setPostUploadHook(PostUploadHook)
org.eclipse.jgit.lib.CheckoutEntry.getToBranch()
org.eclipse.jgit.api.AddCommandTest.testAddFolder()
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test024_createCommitNonAscii()
org.eclipse.jgit.transport.http.HttpConnection.usingProxy()
org.eclipse.jgit.http.server.glue.WrappedRequest.getServletPath()
org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoRangesInOneGroupCase0()
org.eclipse.jgit.internal.ketch.LocalReplica.run()
org.eclipse.jgit.nls.NoPropertiesBundle.get()
org.eclipse.jgit.transport.HttpConfig.getMaxRedirects()
org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.remove(AnyObjectId)
org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_SingleByteFiles()
org.eclipse.jgit.pgm.ArchiveTest.testPrefixDoesNotNormalizeDoubleSlashInTar()
org.eclipse.jgit.transport.PushCertificateParserTest.testMissingPusheeField()
org.eclipse.jgit.junit.JGitTestUtil.check(Repository,String)
org.eclipse.jgit.internal.storage.file.RefDirectory.peel(ObjectIdRef)
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.reflogCustomIdent()
org.eclipse.jgit.api.LogCommandTest.createCommits(Git)
org.eclipse.jgit.api.DescribeCommandTest.testDescribe()
org.eclipse.jgit.internal.ketch.KetchPreReceive.waitForQueue(Proposal,ProgressSpinner)
org.eclipse.jgit.http.test.AsIsServiceTest.getRemoteHost()
org.eclipse.jgit.util.io.TimeoutOutputStreamTest.free(int)
org.eclipse.jgit.pgm.ResetTest.testResetSelf()
org.eclipse.jgit.internal.storage.pack.CachedPack.getDeltaCount()
org.eclipse.jgit.internal.ketch.KetchReplica.getCommitSpeed()
org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2()
org.eclipse.jgit.api.GitConstructionTest.setUp()
org.eclipse.jgit.diff.SimilarityIndexTest.keyFor(String)
org.eclipse.jgit.internal.storage.dfs.DfsInserter.endObject(ObjectId,long)
org.eclipse.jgit.internal.storage.reftable.BlockReader.decodeBlockLen(int)
org.eclipse.jgit.transport.BaseReceivePack.isAllowBranchDeletes()
org.eclipse.jgit.internal.storage.file.FileSnapshot.save(long)
org.eclipse.jgit.treewalk.filter.OrTreeFilter.shouldBeRecursive()
org.eclipse.jgit.api.AddCommandTest.testBuiltinCleanFilter(boolean)
org.eclipse.jgit.revwalk.RevCommit.getCommitterIdent()
org.eclipse.jgit.api.InitCommandTest.testInitRepository()
org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths()
org.eclipse.jgit.transport.resolver.FileResolver.exportRepository(String,Repository)
org.eclipse.jgit.junit.http.AppServer.getURI()
org.eclipse.jgit.attributes.AttributesNodeTest.testEmptyNegativeAttributeKey()
org.eclipse.jgit.ignore.FastIgnoreRule.hashCode()
org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.hash(long)
org.eclipse.jgit.revwalk.FIFORevQueueTest.testCloneEmpty()
org.eclipse.jgit.diff.DiffFormatter.flush()
org.eclipse.jgit.api.TagCommand.setName(String)
org.eclipse.jgit.storage.pack.PackStatistics.getTransferRate()
org.eclipse.jgit.transport.FetchProcess.isTag(Ref)
org.eclipse.jgit.ignore.internal.PathMatcher.matches(String,int,int,boolean)
org.eclipse.jgit.pgm.Diff.setAlgorithm(SupportedAlgorithm)
org.eclipse.jgit.internal.storage.file.LockFile.lock()
org.eclipse.jgit.pgm.MergeTest.testMergeNoCommitSquash()
org.eclipse.jgit.http.server.glue.UrlPipeline.getInitParameter(String)
org.eclipse.jgit.transport.FetchProcess.removeFetchHeadRecord(ObjectId)
org.eclipse.jgit.diff.RenameDetectorTest.testRenameLimit()
org.eclipse.jgit.util.RefList.contains(String)
org.eclipse.jgit.junit.http.SimpleHttpServer.getUri()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoObject5()
org.eclipse.jgit.internal.storage.pack.PackWriter.getTimeSearchingForReuse()
org.eclipse.jgit.internal.storage.dfs.DfsInserter.beginObject(int,long)
org.eclipse.jgit.diff.MyersDiff.getX(int,int)
org.eclipse.jgit.api.NameRevCommandTest.onePathMerge()
org.eclipse.jgit.lib.AsyncObjectSizeQueue.getCurrent()
org.eclipse.jgit.revplot.PlotCommitList.nextFreeLane(BitSet)
org.eclipse.jgit.transport.OperationResult.setAdvertisedRefs(URIish,Map)
org.eclipse.jgit.util.RawParseUtils.prevLF(byte,int,char)
org.eclipse.jgit.transport.InternalFetchConnection.close()
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.reconfigure(DfsBlockCacheConfig)
org.eclipse.jgit.api.RebaseCommand.resetSoftToParent()
org.eclipse.jgit.lib.BaseRepositoryBuilder.getObjectDirectory()
org.eclipse.jgit.lib.BranchConfig.isRebase()
org.eclipse.jgit.lfs.server.fs.LfsServerTest.getDir()
org.eclipse.jgit.lib.ConfigTest.test008_readSectionNames()
org.eclipse.jgit.api.EolRepositoryTest.generateTestData(int,int,boolean,boolean)
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.maxUpdateIndex()
org.eclipse.jgit.merge.ResolveMerger.add(byte,CanonicalTreeParser,int,long,long)
org.eclipse.jgit.hooks.CommitMsgHook.getParameters()
org.eclipse.jgit.util.RefMap.equals(Object)
org.eclipse.jgit.treewalk.FileModeStrategy.getMode(File,FS,Attributes)
org.eclipse.jgit.util.BlockList.next()
org.eclipse.jgit.util.FileUtilsTest.testCreateSymlinkOverrideExisting()
org.eclipse.jgit.lfs.CleanFilter.register()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedNonRecursive()
org.eclipse.jgit.dircache.DirCacheBasicTest.testDetectUnmergedPaths()
org.eclipse.jgit.hooks.CommitMsgHook.getHookName()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testGraphGroupCase2()
org.eclipse.jgit.api.NameRevCommandTest.assertOneResult(String,NameRevCommand,ObjectId)
org.eclipse.jgit.merge.ResolveMerger.getCommitNames()
org.eclipse.jgit.diff.Edit.getBeginB()
org.eclipse.jgit.util.FS_POSIX.normalize(File)
org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testCreateSubtreeIterator()
org.eclipse.jgit.lib.TreeFormatter.append(byte,int,int,FileMode,AnyObjectId,boolean)
org.eclipse.jgit.util.RunExternalScriptTest.testWrongSh()
org.eclipse.jgit.attributes.TreeWalkAttributeTest.testIndexOnly()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.objIndexSize()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1.ofObjectType(EWAHCompressedBitmap,int)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderIgnored()
org.eclipse.jgit.internal.storage.reftree.AlwaysFailUpdate.unlock()
org.eclipse.jgit.lib.IndexDiff.clone()
org.eclipse.jgit.internal.storage.pack.BinaryDelta.format(byte)
org.eclipse.jgit.pgm.CommandCatalog.scan(URL)
org.eclipse.jgit.internal.storage.reftable.ReftableReader.next()
org.eclipse.jgit.diff.Subsequence.size()
org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2(MergeStrategy,IndexState,WorktreeState)
org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.getObjectCount()
org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testOneEntry_Backwards()
org.eclipse.jgit.transport.PacketLineOutTest.testWritePacket2()
org.eclipse.jgit.lib.ObjectChecker.setSafeForMacOS(boolean)
org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementInLastLine()
org.eclipse.jgit.internal.storage.dfs.DfsInserter.getCount()
org.eclipse.jgit.pgm.StatusTest.commitPendingChanges(Git)
org.eclipse.jgit.revwalk.RevWalkCarryFlagsTest.testRevWalkCarryUninteresting_fastClock()
org.eclipse.jgit.lib.EmptyProgressMonitor.isCancelled()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.objectsBefore()
org.eclipse.jgit.transport.PackParser.setExpectedObjectCount(long)
org.eclipse.jgit.util.StringUtilsTest.testToLowerCaseString()
org.eclipse.jgit.transport.RemoteRefUpdate.getTrackingRefUpdate()
org.eclipse.jgit.util.BlockListTest.testAddAllFromOtherList()
org.eclipse.jgit.transport.BaseReceivePack.isAllowCreates()
org.eclipse.jgit.transport.RemoteConfig.set(Config,String,String,String)
org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_DeleteGitLink()
org.eclipse.jgit.pgm.Init.run()
org.eclipse.jgit.api.EolRepositoryTest.gitAdd(Git,String)
org.eclipse.jgit.util.NB.encodeInt32(byte,int,int)
org.eclipse.jgit.internal.ketch.ReplicaPushRequest.getException()
org.eclipse.jgit.lib.BaseRepositoryBuilder.addCeilingDirectories(File)
org.eclipse.jgit.util.io.MessageWriter.getRawStream()
org.eclipse.jgit.lib.BatchRefUpdate.isAllowNonFastForwards()
org.eclipse.jgit.transport.WalkRemoteObjectDatabase.readPackedRefs(Map)
org.eclipse.jgit.revwalk.filter.CommitTimeRevFilter.toString()
org.eclipse.jgit.transport.SpiTransport.close()
org.eclipse.jgit.util.io.ThrowingPrintWriter.write(char,int,int)
org.eclipse.jgit.internal.storage.file.RefDirectory.lockPackedRefs()
org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice(boolean)
org.eclipse.jgit.pgm.Show.init(Repository,String)
org.eclipse.jgit.attributes.TreeWalkAttributeTest.assertEntry(FileMode,String,Set)
org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserPassAndPort()
org.eclipse.jgit.internal.storage.file.WindowCache.gc()
org.eclipse.jgit.revwalk.RevCommitList.clear()
org.eclipse.jgit.lib.BranchTrackingStatus.getBehindCount()
org.eclipse.jgit.util.FileUtilsTest.testDeleteSymlinkToDirectoryDoesNotDeleteTarget()
org.eclipse.jgit.util.BlockListTest.testFastIterator()
org.eclipse.jgit.revplot.PlotWalk.createCommit(AnyObjectId)
org.eclipse.jgit.transport.URIish.getPath()
org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testEmpty_FromByteArray()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testMixedGroupCase4()
org.eclipse.jgit.diff.DiffFormatter.getOldPrefix()
org.eclipse.jgit.internal.storage.reftable.BlockWriter.estimateEntryCount(byte,byte,int)
org.eclipse.jgit.transport.ReceiveCommand.getResult()
org.eclipse.jgit.internal.storage.file.WindowCursor.selectObjectRepresentation(PackWriter,ProgressMonitor,Iterable)
org.eclipse.jgit.api.AddCommandTest.testCleanFilter()
org.eclipse.jgit.api.CheckoutCommandTest.testCreateBranchOnCheckout()
org.eclipse.jgit.transport.TransportBundleFile.openFetch()
org.eclipse.jgit.nls.NLS.get(Class)
org.eclipse.jgit.lfs.server.fs.ObjectUploadListener.close()
org.eclipse.jgit.internal.storage.reftree.RefTree.copy()
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1()
org.eclipse.jgit.lib.BatchingProgressMonitor.start(int)
org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest.testDequote_Empty1()
org.eclipse.jgit.lib.ObjectCheckerTest.testCheckBlobWithBlobObjectCheckerNotCorrupt()
org.eclipse.jgit.events.WorkingTreeModifiedEvent.getListenerType()
org.eclipse.jgit.api.StatusCommand.setWorkingTreeIt(WorkingTreeIterator)
org.eclipse.jgit.lib.Repository.getBranch()
org.eclipse.jgit.util.StringUtilsTest.testReplaceLineBreaks()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testLowerGroupCase2()
org.eclipse.jgit.internal.storage.file.ByteBufferWindow.setInput(int,Inflater)
org.eclipse.jgit.internal.storage.file.FileRepository.loadRulesFromFile(AttributesNode,File)
org.eclipse.jgit.diff.AbstractDiffTestCase.t(String)
org.eclipse.jgit.api.NameRevCommand.call()
org.eclipse.jgit.revwalk.BlockObjQueue.pop()
org.eclipse.jgit.transport.URIish.setRawPath(String)
org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.empty()
org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_6_f2_14(Git,int)
org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testMissingObject()
org.eclipse.jgit.lfs.server.LargeFileRepository.getSize(AnyLongObjectId)
org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.size()
org.eclipse.jgit.transport.http.apache.TemporaryBufferEntity.isStreaming()
org.eclipse.jgit.http.server.glue.MetaFilter.doFilter(ServletRequest,ServletResponse,FilterChain)
org.eclipse.jgit.api.StashApplyCommand.setStrategy(MergeStrategy)
org.eclipse.jgit.transport.WalkRemoteObjectDatabase.deleteFile(String)
org.eclipse.jgit.transport.PushCertificateParserTest.newEnabledConfig()
org.eclipse.jgit.transport.NetRCCredentialsProvider.get(URIish,CredentialItem)
org.eclipse.jgit.util.NBTest.testEncodeInt32()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.rewriteFileIgnored()
org.eclipse.jgit.internal.storage.file.PackIndexV2.getLevelTwo(long,int)
org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.assertAttributesNode(String,AttributesNode,List)
org.eclipse.jgit.pgm.RmTest.setUp()
org.eclipse.jgit.events.ChangeRecorder.assertEvent(String,String)
org.eclipse.jgit.util.RefListTest.testSet()
org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_Mixed()
org.eclipse.jgit.http.server.ClientVersionUtil.invalidVersion()
org.eclipse.jgit.fnmatch.FileNameMatcher.isMatch()
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath2()
org.eclipse.jgit.internal.storage.pack.PackWriter.setThin(boolean)
org.eclipse.jgit.transport.PushProcessTest.executePush()
org.eclipse.jgit.internal.storage.dfs.DfsReader.prepareInflater()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.anyPackHas(AnyObjectId)
org.eclipse.jgit.transport.PackParserTest.index(InputStream)
org.eclipse.jgit.util.FileUtilsTest.testRenameOverExistingFile()
org.eclipse.jgit.revwalk.filter.OrRevFilter.create(RevFilter)
org.eclipse.jgit.internal.storage.dfs.DfsInserter.insert(int,long,InputStream)
org.eclipse.jgit.lib.Config.setTypedConfigGetter(TypedConfigGetter)
org.eclipse.jgit.util.HttpSupport.response(HttpConnection)
org.eclipse.jgit.internal.storage.pack.ObjectReuseAsIs.getCachedPacksAndUpdate(BitmapBuilder)
org.eclipse.jgit.transport.AtomicPushTest.setUp()
org.eclipse.jgit.internal.storage.reftable.ReftableTest.failDeepChainOfSymbolicRef()
org.eclipse.jgit.pgm.Status.printPorcelainLine(char,char,String)
org.eclipse.jgit.errors.LargeObjectException.getObjectId()
org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.create()
org.eclipse.jgit.pgm.TextBuiltin.die(String)
org.eclipse.jgit.diff.DiffEntry.getPath(Side)
org.eclipse.jgit.treewalk.filter.IndexDiffFilter.copyUntrackedFolders(String)
org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(int,int,boolean)
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRefs_DeeplyNestedBranch()
org.eclipse.jgit.http.server.SmartServiceInfoRefs.init(FilterConfig)
org.eclipse.jgit.internal.storage.reftree.RefTree.apply(Collection)
org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile()
org.eclipse.jgit.transport.PackParser.getPackSize()
org.eclipse.jgit.transport.TransportSftp.writeFile(String,byte)
org.eclipse.jgit.lib.AnyObjectId.name()
org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.isCancelled()
org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation.getWeight()
org.eclipse.jgit.internal.fsck.FsckPackParser.read(long,byte,int,int)
org.eclipse.jgit.internal.storage.dfs.DfsBlock.contains(DfsStreamKey,long)
org.eclipse.jgit.util.RefMapTest.testIterator_RefusesRemove()
org.eclipse.jgit.lib.Repository.writeMergeCommitMsg(String)
org.eclipse.jgit.revplot.PlotCommit.isChild(PlotCommit)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModified()
org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.setup()
org.eclipse.jgit.transport.TransportGitSsh.initSshSessionFactory()
org.eclipse.jgit.submodule.SubmoduleWalkTest.setUp()
org.eclipse.jgit.api.TagCommandTest.testUnannotatedTagging()
org.eclipse.jgit.transport.PushCertificateIdent.getTimeZone()
org.eclipse.jgit.lib.ObjectCheckerTest.assertCorrupt(String,int,StringBuilder)
org.eclipse.jgit.lib.Constants.encodedTypeString(int)
org.eclipse.jgit.transport.PushCertificateStoreTest.command(ObjectId,ObjectId,String)
org.eclipse.jgit.transport.HMACSHA1NonceGenerator.createNonce(Repository,long)
org.eclipse.jgit.internal.storage.dfs.DfsInserter.getType()
org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldReturnZeroOnSameCommit()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase7()
org.eclipse.jgit.transport.HttpAuthTest.getHeaderFields()
org.eclipse.jgit.http.server.glue.MetaFilter.serveRegex(Pattern)
org.eclipse.jgit.util.FileUtil.setHidden(File,boolean)
org.eclipse.jgit.dircache.DirCache.updateSmudgedEntries()
org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.getCurrentPacks()
org.eclipse.jgit.util.io.AutoLFInputStreamTest.testBinaryDetect()
org.eclipse.jgit.api.DescribeCommandTest.setUp()
org.eclipse.jgit.lib.ProgressMonitor.update(int)
org.eclipse.jgit.transport.RemoteConfig.isMirror()
org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId()
org.eclipse.jgit.pgm.ResetTest.testResetEmptyPath()
org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation.getFormat()
org.eclipse.jgit.transport.URIish.cleanLeadingSlashes(String,String)
org.eclipse.jgit.archive.FormatActivator.stop(BundleContext)
org.eclipse.jgit.api.CloneCommand.setCallback(Callback)
org.eclipse.jgit.http.server.glue.MetaFilter.createPipelines()
org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.setDoNotDelta()
org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38()
org.eclipse.jgit.internal.storage.reftable.BlockReader.readPersonIdent()
org.eclipse.jgit.treewalk.filter.ByteArraySet.insert(byte,int)
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testFull_FromByteArray()
org.eclipse.jgit.transport.PostReceiveHook.onPostReceive(ReceivePack,Collection)
org.eclipse.jgit.dircache.DirCacheBuildIterator.needsStopWalk()
org.eclipse.jgit.lib.SymbolicRefTest.testLeaf()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_SkipsLockFiles()
org.eclipse.jgit.junit.TestRepositoryTest.insertChangeId()
org.eclipse.jgit.internal.storage.file.InflatingBitSetTest.testContainsEmpty()
org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.path(ObjectId)
org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations()
org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines()
org.eclipse.jgit.pgm.RevList.show(ObjectWalk,RevObject)
org.eclipse.jgit.lib.RepositoryCache.openRepository(Key,boolean)
org.eclipse.jgit.merge.RecursiveMergerTest.setUp()
org.eclipse.jgit.fnmatch.FileNameMatcher.findGroupEnd(int,String)
org.eclipse.jgit.diff.DiffEntryTest.shouldListChangesInWorkingTree()
org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest.testQuote_User()
org.eclipse.jgit.transport.PushOptionsTest.connectLocalToRemote(Git,Git)
org.eclipse.jgit.api.EolRepositoryTest.collectEntryContentAndAttributes(FileMode,String,ActualEntry)
org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged()
org.eclipse.jgit.internal.storage.reftable.BlockWriter.compare(byte,int,int,byte,int,int)
org.eclipse.jgit.util.QuotedStringBourneStyleTest.testQuote_Empty()
org.eclipse.jgit.lib.ObjectId.toString(ObjectId)
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce()
org.eclipse.jgit.lib.ObjectLoaderTest.isLarge()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.hasNext()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testDigitGroupCase2()
org.eclipse.jgit.http.test.AdvertiseErrorTest.create(HttpServletRequest,Repository)
org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testFilteringCommitsHasNoEffect()
org.eclipse.jgit.dircache.DirCache.requireLocked(LockFile)
org.eclipse.jgit.lib.CLIRepositoryTestCase.contains(List,String)
org.eclipse.jgit.http.test.SmartClientSmartServerTest.setUp()
org.eclipse.jgit.junit.http.AppServer.createTestSslContextFactory(String)
org.eclipse.jgit.transport.URIish.parseHexByte(byte,byte)
org.eclipse.jgit.lib.TagBuilder.getObjectId()
org.eclipse.jgit.api.DeleteBranchCommand.setForce(boolean)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_d()
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.getObjectId()
org.eclipse.jgit.lfs.server.LfsObject.getOid()
org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions.getDeltaBaseCacheLimit()
org.eclipse.jgit.transport.WalkEncryptionTest.setUp()
org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testUnsupportedRequiredExtension()
org.eclipse.jgit.util.sha1.SHA1.compress(byte,int)
org.eclipse.jgit.gitrepo.RepoProject.isAncestorOf(String)
org.eclipse.jgit.treewalk.filter.PathFilterGroup.compare(byte,byte)
org.eclipse.jgit.transport.Transport.setPushThin(boolean)
org.eclipse.jgit.revplot.AbstractPlotRendererTest.createCommitList(ObjectId)
org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree()
org.eclipse.jgit.revwalk.RevFlagSet.next()
org.eclipse.jgit.transport.PushCertificate.toString()
org.eclipse.jgit.api.StashDropCommand.updateRef(Ref,ObjectId)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c()
org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged()
org.eclipse.jgit.api.ApplyCommandTest.testAddA1Sub()
org.eclipse.jgit.http.test.HttpClientTests.testListRemote_Dumb_Auth()
org.eclipse.jgit.api.NameRevCommand.minCommitTime()
org.eclipse.jgit.internal.storage.pack.PackWriter.toString()
org.eclipse.jgit.attributes.AttributesRule.isMatch(String,boolean)
org.eclipse.jgit.internal.storage.file.ByteArrayWindow.copy(int,byte,int,int)
org.eclipse.jgit.api.RebaseCommand.getOurCommitName()
org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase()
org.eclipse.jgit.util.IntList.size()
org.eclipse.jgit.ant.tasks.GitCloneTaskTest.enableLogging()
org.eclipse.jgit.pgm.Main.exit(int,Exception)
org.eclipse.jgit.pgm.debug.RebuildCommitGraph.recreateCommitGraph()
org.eclipse.jgit.lfs.server.s3.S3Repository.getObjectUrl(AnyLongObjectId)
org.eclipse.jgit.util.TemporaryBufferTest.testInCoreInputStream()
org.eclipse.jgit.junit.MockSystemReader.load()
org.eclipse.jgit.api.StatusCommand.setProgressMonitor(ProgressMonitor)
org.eclipse.jgit.notes.DefaultNoteMergerTest.testEditDelete()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGitCorruptUTF8AtEnd2()
org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.asPacketLineIn(TemporaryBuffer,Heap)
org.eclipse.jgit.util.io.TimeoutOutputStream.writeTimedOut()
org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions.getStreamFileThreshold()
org.eclipse.jgit.junit.TestRepository.update(String,CommitBuilder)
org.eclipse.jgit.pgm.ArchiveTest.testUnrecognizedExtensionMeansTar()
org.eclipse.jgit.api.EolRepositoryTest.gitResetHard(Git)
org.eclipse.jgit.dircache.DirCacheCheckout.remove(String)
org.eclipse.jgit.lfs.lib.LongObjectIdTest.testZeroId()
org.eclipse.jgit.treewalk.NameConflictTreeWalk.skipEntry(AbstractTreeIterator)
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testExactRef_FetchHead()
org.eclipse.jgit.notes.LeafBucket.getNote(AnyObjectId,ObjectReader)
org.eclipse.jgit.attributes.Attributes.get(String)
org.eclipse.jgit.internal.storage.file.AlternatesTest.setAlternate(FileRepository,FileRepository)
org.eclipse.jgit.internal.storage.reftable.ReftableReader.initScan()
org.eclipse.jgit.internal.storage.pack.PackWriter.pruneEdgesFromObjectList(List)
org.eclipse.jgit.lfs.lib.LongObjectIdTest.test003_equals()
org.eclipse.jgit.pgm.TextBuiltin.die(String,Throwable)
org.eclipse.jgit.transport.PackParserTest.release()
org.eclipse.jgit.api.AbstractRemoteCommandTest.assertRemoteConfigEquals(RemoteConfig,RemoteConfig)
org.eclipse.jgit.diff.DiffFormatter.combineB(List,int)
org.eclipse.jgit.internal.fsck.FsckError.getType()
org.eclipse.jgit.transport.TransportGitSsh.getName()
org.eclipse.jgit.awtui.AwtCredentialsProvider.isInteractive()
org.eclipse.jgit.api.RemoteListCommand.call()
org.eclipse.jgit.util.sha1.SHA1.save(int,int,int,int,int)
org.eclipse.jgit.blame.BlameGenerator.push(String,byte)
org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime()
org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude()
org.eclipse.jgit.util.CachedAuthenticator.add(CachedAuthentication)
org.eclipse.jgit.internal.fsck.FsckPackParser.onAppendBase(int,byte,PackedObjectInfo)
org.eclipse.jgit.api.RebaseResult.getFailingPaths()
org.eclipse.jgit.internal.storage.dfs.DfsBlock.check(Inflater,byte,long,int)
org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.writeAttributesFile(String,String)
org.eclipse.jgit.pgm.Diff.run()
org.eclipse.jgit.transport.AmazonS3.delete(String,String)
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.BUG_WorkAroundRacyGitIssues(String)
org.eclipse.jgit.notes.NonNoteEntry.treeEntrySize()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsEmpty()
org.eclipse.jgit.revwalk.filter.AuthorRevFilter.create(String)
org.eclipse.jgit.api.DescribeCommandTest.noTargetSet()
org.eclipse.jgit.treewalk.filter.NotTreeFilterTest.testShouldBeRecursive_PathFilter()
org.eclipse.jgit.transport.WalkEncryptionTest.reportPolicy()
org.eclipse.jgit.transport.TransportGitSsh.getDefaultPort()
org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testSingleRename()
org.eclipse.jgit.internal.storage.file.FileSnapshot.toString()
org.eclipse.jgit.lib.RefRename.rename()
org.eclipse.jgit.junit.http.RecordingLogger.getName()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeleted()
org.eclipse.jgit.internal.storage.pack.PackWriter.writeIndex(OutputStream)
org.eclipse.jgit.api.PushCommand.isForce()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.getExtendedFlags()
org.eclipse.jgit.internal.storage.reftable.BlockWriter.padBetweenBlocks(byte)
org.eclipse.jgit.util.io.TimeoutInputStreamTest.testTimeout_skip_Timeout()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testXDigitGroupCase0()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoTree1()
org.eclipse.jgit.transport.URIishTest.testSshProto()
org.eclipse.jgit.transport.PacketLineOut.writeString(String)
org.eclipse.jgit.transport.SpiTransport.openPush()
org.eclipse.jgit.util.LongMapTest.testRemoveCollision1()
org.eclipse.jgit.lfs.server.s3.SignerV4.createSignature(S3Config,String,String,String,String)
org.eclipse.jgit.lfs.lib.MutableLongObjectIdTest.testFromRawLong()
org.eclipse.jgit.pgm.RevWalkTextBuiltin.enableDateOrder(boolean)
org.eclipse.jgit.transport.RefSpec.hashCode()
org.eclipse.jgit.pgm.CloneTest.createInitialCommit()
org.eclipse.jgit.lib.DirCacheCheckoutTest.apply(DirCacheEntry)
org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubject_NoBodySobAndBug()
org.eclipse.jgit.transport.PushProcess.execute(ProgressMonitor)
org.eclipse.jgit.api.StashDropCommand.setStashRef(int)
org.eclipse.jgit.api.CreateBranchCommand.processOptions()
org.eclipse.jgit.treewalk.AbstractTreeIterator.findFile(byte)
org.eclipse.jgit.transport.TransportAmazonS3.loadProperties()
org.eclipse.jgit.lib.PersonIdent.equals(Object)
org.eclipse.jgit.util.GitDateFormatterTest.tearDown()
org.eclipse.jgit.api.Format.createArchiveOutputStream(OutputStream,Map)
org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation.newDelta(PackFile,long,long,ObjectId)
org.eclipse.jgit.transport.TransportGitAnon.open(URIish,Repository,String)
org.eclipse.jgit.lib.RefRename.getRefLogMessage()
org.eclipse.jgit.revwalk.ObjectWalk.getPathString()
org.eclipse.jgit.lfs.server.fs.FileLfsServlet.doGet(HttpServletRequest,HttpServletResponse)
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.createRepository(boolean)
org.eclipse.jgit.transport.URIish.escape(String,boolean,boolean)
org.eclipse.jgit.pgm.AddTest.testAddFileTwice()
org.eclipse.jgit.util.BlockList.newDirectory(int)
org.eclipse.jgit.submodule.SubmoduleWalk.setTree(AbstractTreeIterator)
org.eclipse.jgit.transport.WalkFetchConnection.downloadPack(ProgressMonitor)
org.eclipse.jgit.api.Git.branchCreate()
org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsTheirs()
org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun()
org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.ensureBytesAvailableInBlockBuf(int)
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test33_FromString()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeTruncatedInObjectId()
org.eclipse.jgit.treewalk.filter.AlwaysCloneTreeFilter.include(TreeWalk)
org.eclipse.jgit.pgm.ArchiveTest.readFromProcess(Process)
org.eclipse.jgit.pgm.ArchiveTest.writeAsync(OutputStream,byte)
org.eclipse.jgit.pgm.Rm.run()
org.eclipse.jgit.lfs.lib.AnyLongObjectId.formatHexByte(byte,int,long)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.openLooseFromSelfOrAlternate(WindowCursor,AnyObjectId,Set)
org.eclipse.jgit.internal.storage.dfs.DfsBlock.copy(long,byte,int,int)
org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch()
org.eclipse.jgit.diff.SimilarityIndex.growAt(int)
org.eclipse.jgit.transport.HMACSHA1NonceGeneratorTest.signedByDifferentKey()
org.eclipse.jgit.transport.URIishTest.testSshProtoWithEscapedADUserPassAndPort()
org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Add()
org.eclipse.jgit.diff.SimilarityRenameDetector.encodeFile(int)
org.eclipse.jgit.lib.Config.setStringList(String,String,String,List)
org.eclipse.jgit.transport.UploadPack.getRequestPolicy()
org.eclipse.jgit.treewalk.filter.AlwaysCloneTreeFilter.clone()
org.eclipse.jgit.transport.OpenSshConfig.isListKey(String)
org.eclipse.jgit.lfs.server.fs.FileLfsServlet.sendError(HttpServletResponse,int,String)
org.eclipse.jgit.internal.storage.reftree.Command.checkRef(DirCacheEntry)
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.iterator()
org.eclipse.jgit.transport.BasePackFetchConnection.getPackLocks()
org.eclipse.jgit.internal.ketch.LeaderSnapshot.isIdle()
org.eclipse.jgit.http.server.glue.MetaServlet.destroy()
org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag()
org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs()
org.eclipse.jgit.lib.Config.getSections()
org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.shouldNotFetchSubmodulesWhenNo(boolean)
org.eclipse.jgit.internal.ketch.LeaderSnapshot.getHead()
org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.scanWithGitDirRef()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommitted()
org.eclipse.jgit.lib.Config.unset(String,String,String)
org.eclipse.jgit.internal.storage.reftable.ReftableTest.noIndexSeek()
org.eclipse.jgit.revwalk.RevQueueTestCase.testEmpty()
org.eclipse.jgit.revwalk.filter.RevFlagFilter.requiresCommitBody()
org.eclipse.jgit.internal.ketch.ReplicaConfig.newFromConfig(Config,String)
org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth1()
org.eclipse.jgit.revwalk.RevObjectTest.testId()
org.eclipse.jgit.api.DescribeCommand.longDescription(Ref,int,ObjectId)
org.eclipse.jgit.transport.PushCertificateParser.receiveHeader(PacketLineIn,boolean)
org.eclipse.jgit.transport.PacketLineOutTest.testWritePacket1()
org.eclipse.jgit.merge.ResolveMergerTest.checkContentMergeNoConflict_noRepo(MergeStrategy)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrue()
org.eclipse.jgit.internal.storage.dfs.ReftableStack.readers()
org.eclipse.jgit.internal.storage.file.WindowCache.getStreamFileThreshold()
org.eclipse.jgit.transport.HttpConfig.isSslVerify()
org.eclipse.jgit.internal.storage.file.RefDirectory.setRetrySleepMs(List)
org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.readLsTree()
org.eclipse.jgit.transport.URIish.setPass(String)
org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root()
org.eclipse.jgit.util.FS.readSymLink(File)
org.eclipse.jgit.storage.pack.PackConfig.getCutDeltaChains()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c()
org.eclipse.jgit.pgm.opt.CmdLineParser.toString()
org.eclipse.jgit.api.SubmoduleStatusCommand.call()
org.eclipse.jgit.api.DiffCommand.setDestinationPrefix(String)
org.eclipse.jgit.treewalk.filter.TreeFilterTest.testNotALL_IncludesNothing()
org.eclipse.jgit.internal.storage.reftree.Command.setResult(Result,String)
org.eclipse.jgit.revwalk.ObjectWalkFilterTest.tearDown()
org.eclipse.jgit.util.time.ProposedTimestamp.date()
org.eclipse.jgit.util.io.InterruptTimer.end()
org.eclipse.jgit.diff.HashedSequencePair.getA()
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.oneRefLockFailure()
org.eclipse.jgit.merge.MergeConfig.getMergeOptions(String,Config)
org.eclipse.jgit.internal.storage.pack.ObjectToPack.setWeight(int)
org.eclipse.jgit.lib.Repository.parseSimple(RevWalk,String)
org.eclipse.jgit.diff.HistogramDiffTest.testFallbackToMyersDiff()
org.eclipse.jgit.transport.BasePackFetchConnection.negotiateBegin()
org.eclipse.jgit.internal.storage.reftable.BlockWriter.valueSize()
org.eclipse.jgit.internal.storage.file.RefDirectory.pack(Map)
org.eclipse.jgit.revwalk.FooterLineTest.testFilterFootersIgnoreCase()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.estimateTotalBytes()
org.eclipse.jgit.notes.NoteMapMerger.mergeLeafBucket(int,LeafBucket,LeafBucket,LeafBucket)
org.eclipse.jgit.transport.URIishTest.testGetSlashSlashDotGitSlashHumanishName()
org.eclipse.jgit.util.FS_Win32.userHomeImpl()
org.eclipse.jgit.util.RawParseUtils_MatchTest.testMatch_TooSmall()
org.eclipse.jgit.lfs.server.LfsProtocolServlet.getOperation()
org.eclipse.jgit.transport.RemoteRefUpdate.updateTrackingRef(RevWalk)
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.addFileExt(PackExt)
org.eclipse.jgit.junit.time.MonotonicFakeClock.propose()
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.createTempFile()
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixNameExists()
org.eclipse.jgit.notes.NoteMap.load(ObjectId)
org.eclipse.jgit.http.test.AsIsServiceTest.testCreate_Default()
org.eclipse.jgit.transport.WalkEncryption.encrypt(OutputStream)
org.eclipse.jgit.util.RawParseUtils_ParsePersonIdentTest.testParsePersonIdent_malformedCases()
org.eclipse.jgit.revwalk.filter.PatternMatchRevFilter.forceToRaw(String)
org.eclipse.jgit.lfs.lib.AnyLongObjectId.getFirstByte()
org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_FooTabBar()
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.reflogDelete()
org.eclipse.jgit.transport.PushOptionsTest.testNonAtomicPushWithOptions()
org.eclipse.jgit.pgm.debug.BenchmarkReftable.readLsRemote()
org.eclipse.jgit.transport.WalkEncryptionTest.testCrypto()
org.eclipse.jgit.internal.ketch.ProposalRound.blockUntil(ProposedTimestamp)
org.eclipse.jgit.lib.ObjectStream.read(byte,int,int)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testVerySimplePatternCase1()
org.eclipse.jgit.revwalk.FollowFilter.toString()
org.eclipse.jgit.api.ResetCommand.setMode(ResetType)
org.eclipse.jgit.revwalk.EndGenerator.outputType()
org.eclipse.jgit.lib.Config.setInt(String,String,String,int)
org.eclipse.jgit.lib.UserConfig.stripInvalidCharacters(String)
org.eclipse.jgit.pgm.ArchiveTest.assertContainsEntryWithMode(String,String,String)
org.eclipse.jgit.transport.URIish.getPass()
org.eclipse.jgit.transport.resolver.FileResolver.setExportAll(boolean)
org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch()
org.eclipse.jgit.api.LogCommand.add(boolean,AnyObjectId)
org.eclipse.jgit.revplot.AbstractPlotRendererTest.drawBoundaryDot(int,int,int,int)
org.eclipse.jgit.revwalk.RevFlagSet.size()
org.eclipse.jgit.util.SystemReader.init()
org.eclipse.jgit.internal.ketch.ReplicaConfig.getMaxRetry(TimeUnit)
org.eclipse.jgit.internal.storage.file.RefDirectory.lockPackedRefsOrThrow()
org.eclipse.jgit.ignore.IgnoreNodeTest.testRepeatedNegationInDifferentFiles1()
org.eclipse.jgit.pgm.MergeTest.setUp()
org.eclipse.jgit.pgm.Blame.findLine(int,String)
org.eclipse.jgit.internal.ketch.KetchPreReceive.onPreReceive(ReceivePack,Collection)
org.eclipse.jgit.junit.JGitTestUtil.read(Repository,String)
org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3()
org.eclipse.jgit.transport.HttpAuthMethod.scanResponse(HttpConnection,Collection)
org.eclipse.jgit.lib.ObjectReader.open()
org.eclipse.jgit.util.ChangeIdUtilTest.testKernelStyleFooter()
org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead()
org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.execute(RevWalk,ProgressMonitor)
org.eclipse.jgit.transport.BasePackPushConnection.readStatusReport(Map)
org.eclipse.jgit.transport.RemoteConfigTest.noPushInsteadOf()
org.eclipse.jgit.merge.MergeFormatter.formatMerge(OutputStream,MergeResult,List,String)
org.eclipse.jgit.transport.PushCertificateStore.iterator()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.writeBitmapEntry(StoredEntry)
org.eclipse.jgit.dircache.DirCacheEditor.inDir(DirCacheEntry,byte,int)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMixedGroupCase4()
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.scan(HashEntry,DfsStreamKey,long)
org.eclipse.jgit.revwalk.FooterLineTest.parse(String)
org.eclipse.jgit.dircache.DirCache.getCacheTree(boolean)
org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(RevCommit)
org.eclipse.jgit.internal.storage.reftable.MergedReftable.getUpdateIndex()
org.eclipse.jgit.api.Git.lsRemoteRepository()
org.eclipse.jgit.internal.storage.file.PackIndexTestCase.testCompareEntriesOffsetsWithFindOffsets()
org.eclipse.jgit.dircache.DirCacheTree.insertChild(int,DirCacheTree)
org.eclipse.jgit.attributes.AttributeTest.testBasic()
org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyRawTo(byte,int)
org.eclipse.jgit.ignore.CGitIgnoreTest.testDirectoryMatchSubRecursiveBacktrack4()
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.ones(int)
org.eclipse.jgit.transport.DaemonService.setOverridable(boolean)
org.eclipse.jgit.util.FS.isHidden(File)
org.eclipse.jgit.internal.storage.file.UnpackedObject.checkValidEndOfStream(InputStream,Inflater,AnyObjectId,byte)
org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond()
org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict()
org.eclipse.jgit.merge.MergeConfig.isSquash()
org.eclipse.jgit.diff.RawTextIgnoreAllWhitespaceTest.testEqualsWithWhitespace()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoGroupsCase1()
org.eclipse.jgit.junit.TestRepository.file(String,RevBlob)
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.newUpdate(String,boolean)
org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_SmallBlocks3()
org.eclipse.jgit.internal.storage.reftable.ReftableTest.newRef(String)
org.eclipse.jgit.transport.HttpConfig.segmentCompare(String,String)
org.eclipse.jgit.junit.StrictWorkMonitor.isCancelled()
org.eclipse.jgit.revwalk.filter.CommitTimeRevFilter.before(Date)
org.eclipse.jgit.lib.ObjectStream.getSize()
org.eclipse.jgit.api.NameRevCommandTest.onePathMergeLongerFirstParentPath()
org.eclipse.jgit.transport.BaseReceivePack.checkConnectivity()
org.eclipse.jgit.notes.NoteMapMergerTest.testAddDifferentNotes()
org.eclipse.jgit.util.RunExternalScriptTest.testArguments()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testTwoGroupsCase0()
org.eclipse.jgit.api.CommitCommand.getMessage()
org.eclipse.jgit.api.LogCommand.add(AnyObjectId)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_a()
org.eclipse.jgit.awtui.CommitGraphPane.getRowCount()
org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths()
org.eclipse.jgit.pgm.Push.safeAbbreviate(ObjectReader,ObjectId)
org.eclipse.jgit.lib.ObjectChecker.checkCommit(byte)
org.eclipse.jgit.util.FS_POSIX.runInShell(String,String)
org.eclipse.jgit.junit.TestRepository.writeFile(String,byte)
org.eclipse.jgit.http.server.ServletUtils.getInputStream(HttpServletRequest)
org.eclipse.jgit.transport.SideBandInputStream.doProgressLine(String)
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.hexUInt64(byte,int,int)
org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.setIncludeDeletes(boolean)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testWordroupCase2()
org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.testEmptyGitAttributeFile()
org.eclipse.jgit.lib.Repository.stripWorkDir(File,File)
org.eclipse.jgit.internal.storage.file.FileRepository.descriptionFile()
org.eclipse.jgit.transport.WalkFetchConnection.doFetch(ProgressMonitor,Collection,Set)
org.eclipse.jgit.revwalk.filter.SubStringRevFilter.include(RevWalk,RevCommit)
org.eclipse.jgit.junit.MockSystemReader.getenv(String)
org.eclipse.jgit.internal.ketch.RemoteGitReplica.push(Repository,ReplicaPushRequest)
org.eclipse.jgit.revplot.PlotCommitList.source(RevWalk)
org.eclipse.jgit.transport.TransportGitSsh.disconnect()
org.eclipse.jgit.pgm.debug.DiffAlgorithms.isFile(TreeWalk,int)
org.eclipse.jgit.revwalk.RevTree.parseBody(RevWalk)
org.eclipse.jgit.internal.storage.file.InflatingBitSetTest.testContainsMany()
org.eclipse.jgit.blame.Candidate.blame(EditList,Candidate,Candidate)
org.eclipse.jgit.api.Git.reflog()
org.eclipse.jgit.transport.TransportHttp.isSmartHttp(HttpConnection,String)
org.eclipse.jgit.api.GarbageCollectCommand.call()
org.eclipse.jgit.pgm.CommandCatalog.get(String)
org.eclipse.jgit.notes.DefaultNoteMergerTest.setUp()
org.eclipse.jgit.api.ApplyCommandTest.testNonASCIIAdd2()
org.eclipse.jgit.patch.FileHeader.toEditList()
org.eclipse.jgit.internal.ketch.KetchSystem.getClock()
org.eclipse.jgit.pgm.Version.getImplementationVersion()
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1()
org.eclipse.jgit.lib.ConfigTest.testNoFinalNewline()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.writeFileInFolderAndCommit()
org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_modifyExisting()
org.eclipse.jgit.internal.storage.file.LazyObjectIdSetFile.load()
org.eclipse.jgit.archive.TarFormat.createArchiveOutputStream(OutputStream,Map)
org.eclipse.jgit.util.QuotedStringGitPathStyleTest.assertQuote(String,String)
org.eclipse.jgit.junit.TestRepositoryTest.setUp()
org.eclipse.jgit.transport.AmazonS3.open(String,String,String,Map)
org.eclipse.jgit.notes.NoteMapMerger.sameNoteOrNull(Note,Note)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithGarbage()
org.eclipse.jgit.pgm.TagTest.testTagDelete()
org.eclipse.jgit.blame.BlameGenerator.getResultContents()
org.eclipse.jgit.notes.FanoutBucket.iterator(AnyObjectId,ObjectReader)
org.eclipse.jgit.attributes.TreeWalkAttributeTest.testPrecedenceRoot()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testTwoRangesInOneGroupCase2()
org.eclipse.jgit.junit.time.MonotonicFakeClock.blockUntil(Duration)
org.eclipse.jgit.internal.fsck.FsckPackParser.onInflatedObjectData(PackedObjectInfo,int,byte)
org.eclipse.jgit.lib.ThreadSafeProgressMonitor.startWorkers(int)
org.eclipse.jgit.attributes.Attribute.toString()
org.eclipse.jgit.util.LongMapTest.testEmptyMap()
org.eclipse.jgit.junit.TestRepository.insertChangeId(org,eclipse,jgit,lib,CommitBuilder)
org.eclipse.jgit.internal.storage.dfs.DfsCachedPack.getObjectCount()
org.eclipse.jgit.api.ArchiveCommand.setFormat(String)
org.eclipse.jgit.lib.Repository.getAllRefsByPeeledObjectId()
org.eclipse.jgit.merge.SimpleMergeTest.assertCorrectId(DirCache,TreeWalk)
org.eclipse.jgit.transport.SideBandInputStream.remote(String)
org.eclipse.jgit.pgm.StatusTest.testStatusPorcelainU()
org.eclipse.jgit.revwalk.RevWalkTestCase.assertCommit(RevCommit,RevCommit)
org.eclipse.jgit.util.RefListTest.testEmptyBuilder()
org.eclipse.jgit.lib.ObjectIdTest.testFromString_nonHex()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testSpaceGroupCase0()
org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict()
org.eclipse.jgit.diff.SimilarityRenameDetector.srcFile(long)
org.eclipse.jgit.util.io.AutoCRLFOutputStream.write(byte)
org.eclipse.jgit.api.NameRevCommand.createCommit(AnyObjectId)
org.eclipse.jgit.internal.storage.reftable.BlockWriter.lastKey()
org.eclipse.jgit.transport.Transport.setOptionReceivePack(String)
org.eclipse.jgit.api.CommitCommand.insertChangeId(ObjectId)
org.eclipse.jgit.treewalk.TreeWalk.getDepth()
org.eclipse.jgit.transport.BaseReceivePack.write(byte,int,int)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_a()
org.eclipse.jgit.lfs.lib.MutableLongObjectId.fromObjectId(AnyLongObjectId)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.writeFileInFolderModifiedAllIgnored()
org.eclipse.jgit.api.RebaseCommand.composeSquashMessage(boolean,RevCommit,String,int)
org.eclipse.jgit.merge.MergeAlgorithmTest.testModificationsWithMiddleDelete()
org.eclipse.jgit.treewalk.filter.TreeFilterTest.testALL_IncludesAnything()
org.eclipse.jgit.util.io.ThrowingPrintWriter.print(Object)
org.eclipse.jgit.lib.BitmapIndex.cardinality()
org.eclipse.jgit.patch.Patch.parseDiffCombined(byte,byte,int,int)
org.eclipse.jgit.treewalk.filter.TreeFilter.shouldBeRecursive()
org.eclipse.jgit.api.ApplyCommand.setPatch(InputStream)
org.eclipse.jgit.junit.http.RecordingLogger.ignore(Throwable)
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.hashCode()
org.eclipse.jgit.diff.RenameDetector.compute(ContentSource,Pair,ProgressMonitor)
org.eclipse.jgit.pgm.BranchTest.testDelete()
org.eclipse.jgit.api.BlameCommand.setFollowFileRenames(boolean)
org.eclipse.jgit.internal.storage.dfs.DfsFsck.checkPacks(ProgressMonitor,FsckError)
org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting4()
org.eclipse.jgit.internal.storage.pack.DeltaTask.tryStealWork(Slice)
org.eclipse.jgit.dircache.DirCacheEntryTest.testCreate_ByStringPathAndStage()
org.eclipse.jgit.util.RefListTest.testRemoveMakesEmpty()
org.eclipse.jgit.diff.RawText.writeLine(OutputStream,int)
org.eclipse.jgit.merge.ResolveMergerTest.checkModificationTimeStampOrder(String)
org.eclipse.jgit.transport.resolver.FileResolver.isExportAll()
org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.setMinUpdateIndex(long)
org.eclipse.jgit.http.server.UploadPackServlet.log(Repository,Throwable)
org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward()
org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse()
org.eclipse.jgit.util.SystemReader.openUserConfig(Config,FS)
org.eclipse.jgit.api.AddNoteCommand.setObjectId(RevObject)
org.eclipse.jgit.notes.NoteMap.shortenRefName(String)
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath3Case()
org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryAttributesNode()
org.eclipse.jgit.internal.storage.dfs.BeforeDfsPackIndexLoadedListener.onBeforeDfsPackIndexLoaded(BeforeDfsPackIndexLoadedEvent)
org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testNoDF_NoGap()
org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_14(Git,int)
org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull()
org.eclipse.jgit.junit.JGitTestUtil.copyTestResource(String,File)
org.eclipse.jgit.pgm.Remote.print(List)
org.eclipse.jgit.pgm.debug.BenchmarkReftable.byIdCold(ObjectId)
org.eclipse.jgit.lib.DirCacheCheckoutTest.buildIndex(HashMap)
org.eclipse.jgit.revwalk.TopoSortGenerator.shareFreeList(BlockRevQueue)
org.eclipse.jgit.diff.SimilarityRenameDetector.score(long)
org.eclipse.jgit.internal.storage.pack.DeltaIndex.copyEntries(DeltaIndexScanner)
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparerTest.newPeparer(int,int,int)
org.eclipse.jgit.internal.storage.file.UnpackedObject.isLarge()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.isWritten()
org.eclipse.jgit.util.RefMapTest.newRef(String,ObjectId)
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.flushCurBlock()
org.eclipse.jgit.http.server.GitServlet.setUploadPackFactory(UploadPackFactory)
org.eclipse.jgit.transport.Transport.getOptionUploadPack()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testSpecialGroupCase0()
org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryDefaultDirectory()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.getDeltaDepth()
org.eclipse.jgit.internal.storage.dfs.DfsRepository.getGlobalAttributesNode()
org.eclipse.jgit.internal.storage.file.PackIndexWriterV1.writeImpl()
org.eclipse.jgit.pgm.Show.abbrev(boolean)
org.eclipse.jgit.junit.TestRepository.message(String)
org.eclipse.jgit.transport.OpenSshConfigTest.testHomeDirUserReplacement()
org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddGrowsWithObjects()
org.eclipse.jgit.pgm.CommandRef.create()
org.eclipse.jgit.http.server.GitServlet.getFilterName()
org.eclipse.jgit.transport.AmazonS3.put(String,String,byte)
org.eclipse.jgit.internal.fsck.FsckPackParser.verifySafeObject(AnyObjectId,int,byte)
org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.execute(RevWalk,List)
org.eclipse.jgit.dircache.DirCacheEntry.setCreationTime(long)
org.eclipse.jgit.internal.storage.file.GC.deleteOrphans()
org.eclipse.jgit.internal.storage.file.PackIndexV1.findLevelOne(long)
org.eclipse.jgit.ignore.IgnoreNode.isIgnored(String,boolean)
org.eclipse.jgit.internal.storage.file.LooseRef.getSnapShot()
org.eclipse.jgit.lfs.lib.LongObjectIdTest.test002_toString()
org.eclipse.jgit.util.RunExternalScriptTest.testRc()
org.eclipse.jgit.transport.RemoteRefUpdate.isForceUpdate()
org.eclipse.jgit.api.CloneCommand.calculateRefSpecs(String)
org.eclipse.jgit.diff.HashedSequenceComparator.equals(HashedSequence,int,HashedSequence,int)
org.eclipse.jgit.events.ConfigChangeEventTest.testFileRepository_ChangeEventsOnlyOnSave()
org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.tryLock(boolean)
org.eclipse.jgit.diff.RenameDetector.mode(DiffEntry)
org.eclipse.jgit.transport.RefSpecTest.invalidWhenMoreThanOneWildcardInSource()
org.eclipse.jgit.api.AddCommandTest.testBadCleanFilter()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.writeBody(PackBitmapIndexBuilder)
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGit2()
org.eclipse.jgit.transport.BaseReceivePack.getPeerUserAgent()
org.eclipse.jgit.lib.BitmapIndex.or(Bitmap)
org.eclipse.jgit.lfs.server.fs.LfsServerTest.getContent(AnyLongObjectId,Path)
org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE()
org.eclipse.jgit.transport.resolver.RepositoryResolver.open(C,String)
org.eclipse.jgit.lfs.server.fs.LfsServerTest.checkResponseStatus(HttpResponse)
org.eclipse.jgit.transport.SideBandProgressMonitor.onUpdate(String,int,int,int)
org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testSinglePath()
org.eclipse.jgit.util.FS.getStdout()
org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithAuthentication()
org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.bytesAvailableInBlock()
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.hasFileExt(PackExt)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.openPack(File)
org.eclipse.jgit.internal.storage.pack.DeltaCache.cache(byte,int,int)
org.eclipse.jgit.blame.Candidate.getParentCount()
org.eclipse.jgit.gitrepo.ManifestParserTest.testManifestParser()
org.eclipse.jgit.util.HookTest.testCommitMsgHookReceivesCorrectParameter()
org.eclipse.jgit.dircache.DirCache.hasUnmergedPaths()
org.eclipse.jgit.revplot.PlotCommitListTest.testDuplicateParents()
org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilterNegative()
org.eclipse.jgit.diff.DiffEntry.getOldId()
org.eclipse.jgit.events.ListenerList.remove(ListenerHandle)
org.eclipse.jgit.transport.Transport.getTransportProtocols()
org.eclipse.jgit.lfs.server.s3.S3Repository.getPath(AnyLongObjectId)
org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.getReftables()
org.eclipse.jgit.diff.RawTextComparator.findReverseLine(IntList,int,int)
org.eclipse.jgit.treewalk.TreeWalk.isPathPrefix(byte,int)
org.eclipse.jgit.transport.CredentialItem.isValueSecure()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testCreate()
org.eclipse.jgit.treewalk.filter.AndTreeFilter.create(TreeFilter,TreeFilter)
org.eclipse.jgit.transport.UsernamePasswordCredentialsProvider.supports(CredentialItem)
org.eclipse.jgit.transport.BaseReceivePack.isBiDirectionalPipe()
org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree6()
org.eclipse.jgit.diff.SimilarityIndex.size()
org.eclipse.jgit.http.test.RegexPipelineTest.tearDown()
org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.exclude(ObjectIdSet)
org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_8()
org.eclipse.jgit.blame.Candidate.add(RevFlag)
org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doUpdate(Result)
org.eclipse.jgit.notes.FanoutBucket.set(AnyObjectId,AnyObjectId,ObjectReader)
org.eclipse.jgit.internal.storage.file.BitSet.clear(int)
org.eclipse.jgit.transport.TransportAmazonS3.open(String)
org.eclipse.jgit.internal.ketch.LeaderSnapshot.toString()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_12()
org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doDelete(Result)
org.eclipse.jgit.internal.storage.file.RefDirectory.readRef(String,RefList)
org.eclipse.jgit.api.CherryPickCommand.setMainlineParentNumber(int)
org.eclipse.jgit.revwalk.RevTagParseTest.create(String)
org.eclipse.jgit.api.InitCommandTest.testInitNonEmptyRepository()
org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onBeginOfsDelta(long,long,long)
org.eclipse.jgit.internal.storage.reftree.RefTree.apply(DirCacheEntry)
org.eclipse.jgit.api.CommitCommandTest.newInstance()
org.eclipse.jgit.attributes.TreeWalkAttributeTest.testPrecedenceCurrent()
org.eclipse.jgit.transport.URIishTest.testGetValidLocalWithTwoSlashesHumanishName()
org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(Repository)
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.createBareRepository()
org.eclipse.jgit.revwalk.StartGenerator.next()
org.eclipse.jgit.http.server.glue.ErrorServlet.doGet(HttpServletRequest,HttpServletResponse)
org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryPathLength()
org.eclipse.jgit.transport.OperationResult.getAdvertisedRefs()
org.eclipse.jgit.internal.storage.file.RefDirectory.getPackedRefs()
org.eclipse.jgit.pgm.Die.isAborted()
org.eclipse.jgit.api.RmCommand.delete(File)
org.eclipse.jgit.api.Format.putEntry(T,ObjectId,String,FileMode,ObjectLoader)
org.eclipse.jgit.storage.pack.PackConfig.setReuseDeltas(boolean)
org.eclipse.jgit.internal.storage.file.PackIndexV2.getObjectId(long)
org.eclipse.jgit.http.test.HookMessageTest.onPreReceive(ReceivePack,Collection)
org.eclipse.jgit.notes.NoteMapMerger.equals(NoteBucket,NoteBucket)
org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_10(Git,int)
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.setMaxUpdateIndex(long)
org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug()
org.eclipse.jgit.internal.storage.file.PackIndexV2.findCRC32(AnyObjectId)
org.eclipse.jgit.transport.TestProtocolTest.setUp()
org.eclipse.jgit.internal.storage.file.RefDirectory.log(RefUpdate,String,boolean)
org.eclipse.jgit.storage.pack.PackStatistics.byObjectType(int)
org.eclipse.jgit.lfs.lib.LongObjectId.toString(LongObjectId)
org.eclipse.jgit.transport.PushCertificateParser.getAdvertiseNonce()
org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_2(Git,int)
org.eclipse.jgit.api.LsRemoteCommandTest.fileUri()
org.eclipse.jgit.internal.storage.pack.PackWriter.hasNext()
org.eclipse.jgit.revwalk.RevObjectTest.testHasAllFlag()
org.eclipse.jgit.transport.URIishTest.testStringConstructor()
org.eclipse.jgit.transport.ReceivePack.autoGc()
org.eclipse.jgit.attributes.AttributesNodeTest.testBasic()
org.eclipse.jgit.ignore.FastIgnoreRuleTest.match(String,String)
org.eclipse.jgit.util.TemporaryBuffer.destroy()
org.eclipse.jgit.util.FS.setLastModified(File,long)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testFilePathCase2()
org.eclipse.jgit.internal.storage.pack.PackWriter.close()
org.eclipse.jgit.internal.storage.reftable.Reftable.resolve(Ref,int)
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.ceilTestDirectories(List)
org.eclipse.jgit.api.CherryPickCommand.setOurCommitName(String)
org.eclipse.jgit.storage.pack.PackStatistics.getTimeCounting()
org.eclipse.jgit.attributes.CGitAttributesTest.testDirectoryMatchSubRecursiveBacktrack3()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testMixedGroupCase5()
org.eclipse.jgit.pgm.Main.run(String)
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_NonFastForwardDoesNotDoExpensiveMergeCheck()
org.eclipse.jgit.diff.DiffFormatter.writeRange(char,int,int)
org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_PackedGitLimit_0()
org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithSubmodule()
org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.configureReftable(ReftableConfig,DfsOutputStream)
org.eclipse.jgit.internal.storage.reftree.RefTreeTest.update(String,ObjectId,ObjectId)
org.eclipse.jgit.notes.NoteMapTest.testIteratorFanoutTree2_38()
org.eclipse.jgit.internal.ketch.KetchLeader.notifySuccess(Round)
org.eclipse.jgit.diff.DiffFormatter.setPathFilter(TreeFilter)
org.eclipse.jgit.util.RefMapTest.testNotEmpty_WithPrefix()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMixedGroupCase3()
org.eclipse.jgit.treewalk.FileTreeIteratorTest.testTreewalkEnterSubtree()
org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest.testDirModeAndRegex2()
org.eclipse.jgit.util.RunExternalScriptTest.testStdErr()
org.eclipse.jgit.transport.URIishTest.testGetValidWithSlashesDotGitHumanishName()
org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeid()
org.eclipse.jgit.transport.PackParser.readObjectHeader(ObjectTypeAndSize)
org.eclipse.jgit.revwalk.LIFORevQueueTest.create()
org.eclipse.jgit.internal.storage.file.GcOrphanFilesTest.bitmapDeletedButIdxAndPackNot()
org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_UnsetMerge_Conflict()
org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Modify()
org.eclipse.jgit.treewalk.WorkingTreeOptions.getEOL()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateUnreachableGarbagePackSize()
org.eclipse.jgit.blame.Candidate.loadText(ObjectReader)
org.eclipse.jgit.lib.SubmoduleConfigTest.fetchRecurseMatch()
org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testObjectFilterCanFilterOutBlob()
org.eclipse.jgit.transport.PacketLineOutTest.testWriteString3()
org.eclipse.jgit.transport.BaseReceivePack.getRefFilter()
org.eclipse.jgit.pgm.ArchiveTest.testArchivePrefixOption()
org.eclipse.jgit.transport.RemoteConfigTest.testRemoveLastURI()
org.eclipse.jgit.lib.T0001_PersonIdentTest.testToExternalStringTrimsNameAndEmail()
org.eclipse.jgit.http.server.UploadPackServlet.destroy()
org.eclipse.jgit.util.time.ProposedTimestamp.timestamp()
org.eclipse.jgit.pgm.debug.WriteReftable.printf(String,Object)
org.eclipse.jgit.api.EolRepositoryTest.test_GlobalEOL_lf_InfoEOL_unspec_RootEOL_crlf()
org.eclipse.jgit.transport.TransportTest.setUp()
org.eclipse.jgit.lfs.lib.LongObjectIdTest.testGetByte()
org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3()
org.eclipse.jgit.api.ArchiveCommand.setPrefix(String)
org.eclipse.jgit.pgm.Init.requiresRepository()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_PackedNotPeeled_WrongSort()
org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.insert(String)
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.toLongObjectId()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict()
org.eclipse.jgit.lib.BaseRepositoryBuilder.requireGitDirOrWorkTree()
org.eclipse.jgit.internal.ketch.KetchLeaderCache.computeKey(Repository)
org.eclipse.jgit.attributes.Attribute.getState()
org.eclipse.jgit.treewalk.filter.SkipWorkTreeFilter.toString()
org.eclipse.jgit.revplot.PlotCommit.getRefCount()
org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.checkNonFastForwards(RevWalk,List)
org.eclipse.jgit.diff.HashedSequencePair.getComparator()
org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple()
org.eclipse.jgit.pgm.LsTree.run()
org.eclipse.jgit.transport.RefSpecTest.invalidSetSource()
org.eclipse.jgit.util.io.ThrowingPrintWriter.print(long)
org.eclipse.jgit.treewalk.filter.PathFilter.toString()
org.eclipse.jgit.internal.storage.dfs.DfsCachedPack.getDeltaCount()
org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo2()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.isExtendedFlag(int)
org.eclipse.jgit.treewalk.WorkingTreeIterator.filterClean(InputStream,OperationType)
org.eclipse.jgit.transport.FetchProcess.expandWildcard(RefSpec,Set)
org.eclipse.jgit.http.test.RefsUnreadableInMemoryRepository.scanAllRefs()
org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly()
org.eclipse.jgit.merge.ResolveMerger.contentMerge(CanonicalTreeParser,CanonicalTreeParser,CanonicalTreeParser)
org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfigTest.tooSmallBlockSizeIsConvertedToDefault()
org.eclipse.jgit.api.RebaseCommandTest.checkoutCommit(RevCommit)
org.eclipse.jgit.pgm.Branch.printHead(ObjectReader,String,boolean,Ref)
org.eclipse.jgit.junit.http.HttpTestCase.fsck(Repository,RevObject)
org.eclipse.jgit.util.io.AutoCRLFOutputStream.decideMode()
org.eclipse.jgit.http.test.AdvertiseErrorTest.setUp()
org.eclipse.jgit.api.CommitCommand.setReflogComment(String)
org.eclipse.jgit.http.test.DefaultReceivePackFactoryTest.getRemoteHost()
org.eclipse.jgit.lib.ObjectStream.available()
org.eclipse.jgit.pgm.debug.LfsStore.readAWSKeys()
org.eclipse.jgit.merge.CherryPickTest.testPick()
org.eclipse.jgit.util.io.AutoCRLFOutputStreamTest.testBoundary()
org.eclipse.jgit.api.AddCommandTest.supportsExecute()
org.eclipse.jgit.util.RefList.get(String)
org.eclipse.jgit.revwalk.RevWalk.parseBody(RevObject)
org.eclipse.jgit.util.FS_Win32_Cygwin.runInShell(String,String)
org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChanges()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor1()
org.eclipse.jgit.internal.storage.file.RefDirectory.newSymbolicRef(FileSnapshot,String,String)
org.eclipse.jgit.storage.file.WindowCacheConfig.getStreamFileThreshold()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict()
org.eclipse.jgit.api.MergeCommand.setFastForward(FastForwardMode)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b()
org.eclipse.jgit.lfs.lib.AnyLongObjectId.equals(AnyLongObjectId,AnyLongObjectId)
org.eclipse.jgit.api.AddCommandTest.testAddSubrepoWithDirNoGitlinks()
org.eclipse.jgit.util.GitDateParser.initialValue()
org.eclipse.jgit.transport.RefSpecTest.testDeleteMaster()
org.eclipse.jgit.api.EolRepositoryTest.test_ConfigAutoCRLF_input_GlobalEOL_crlf()
org.eclipse.jgit.api.TagCommandTest.testDeleteEmptyTagNames()
org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.writeReflog(List)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onPackHeader(long)
org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1.findPosition(AnyObjectId)
org.eclipse.jgit.api.RemoteSetUrlCommand.setPush(boolean)
org.eclipse.jgit.diff.SimilarityIndexTest.testCommonScore_SimiliarBy75()
org.eclipse.jgit.lib.Constants.encode(String)
org.eclipse.jgit.lib.SymbolicRef.isSymbolic()
org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty()
org.eclipse.jgit.pgm.opt.CmdLineParser.restoreRequiredOptions(List)
org.eclipse.jgit.util.QuotedStringBourneStyleTest.testQuote_NamedEscapes()
org.eclipse.jgit.transport.WalkPushConnection.close()
org.eclipse.jgit.attributes.CGitAttributesTest.testDirectoryMatchSubSimple()
org.eclipse.jgit.revplot.PlotCommit.addLane(PlotLane,PlotLane)
org.eclipse.jgit.lib.Ref.getTarget()
org.eclipse.jgit.revwalk.FooterLineTest.testNoFooters_NewlineOnlyBody1()
org.eclipse.jgit.api.CommitCommand.setCommitter(String,String)
org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit()
org.eclipse.jgit.junit.http.RecordingLogger.info(String,Object)
org.eclipse.jgit.internal.storage.file.WindowCursor.has(AnyObjectId)
org.eclipse.jgit.internal.storage.reftable.ReftableReader.initRefIndex()
org.eclipse.jgit.util.SystemReader.openSystemConfig(Config,FS)
org.eclipse.jgit.transport.BasePackFetchConnection.maxTimeWanted(Collection)
org.eclipse.jgit.transport.SignedPushConfig.setCertNonceSeed(String)
org.eclipse.jgit.transport.URIishTest.testSshProtoWithEmailUserAndPort()
org.eclipse.jgit.transport.BundleWriter.include(Ref)
org.eclipse.jgit.api.ListBranchCommand.getRefs(String)
org.eclipse.jgit.lib.RefDatabaseConflictingNamesTest.isNameConflicting(String)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testTwoGroupsCase3()
org.eclipse.jgit.transport.http.HttpConnection.getOutputStream()
org.eclipse.jgit.lib.BaseRepositoryBuilder.setup()
org.eclipse.jgit.internal.storage.file.GcConcurrentTest.call()
org.eclipse.jgit.treewalk.filter.PathFilter.create(String)
org.eclipse.jgit.http.server.ObjectFileServlet.doHead(HttpServletRequest,HttpServletResponse)
org.eclipse.jgit.lib.CLIRepositoryTestCase.deleteTrashFile(String)
org.eclipse.jgit.merge.ResolveMergerTest.checkContentMergeNoConflict(MergeStrategy)
org.eclipse.jgit.internal.storage.file.FileSnapshotTest.tearDown()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.write(PackBitmapIndexBuilder,byte)
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.compareAndPut(Ref,Ref)
org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex()
org.eclipse.jgit.api.SubmoduleStatusCommand.addPath(String)
org.eclipse.jgit.api.GarbageCollectCommand.setPrunePreserved(boolean)
org.eclipse.jgit.util.ProcessResult.isExecutedWithError()
org.eclipse.jgit.treewalk.WorkingTreeIterator.getOptions()
org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(CanonicalTreeParser,DirCacheBuildIterator,WorkingTreeIterator)
org.eclipse.jgit.revwalk.filter.AuthorRevFilter.clone()
org.eclipse.jgit.revwalk.FIFORevQueueTest.testEmpty()
org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees()
org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OneRenameTwoUnrelatedFiles()
org.eclipse.jgit.transport.resolver.FileResolver.isExportOk(C,String,Repository)
org.eclipse.jgit.diff.DiffEntry.add(String,AnyObjectId)
org.eclipse.jgit.api.ArchiveCommand.lookupFormat(String)
org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest.assertDequote(String,String)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testSinglePackForAllRefs()
org.eclipse.jgit.api.Git.submoduleUpdate()
org.eclipse.jgit.junit.http.RecordingLogger.warn(String)
org.eclipse.jgit.attributes.CGitAttributesTest.testBug508568()
org.eclipse.jgit.notes.Note.setData(ObjectId)
org.eclipse.jgit.transport.UploadPack.processHaveLines(List,ObjectId)
org.eclipse.jgit.pgm.Log.showNotes(RevCommit,NoteMap,String,boolean)
org.eclipse.jgit.api.BlameCommand.setDiffAlgorithm(DiffAlgorithm)
org.eclipse.jgit.http.server.glue.MetaServlet.init(ServletConfig)
org.eclipse.jgit.patch.Patch.addError(FormatError)
org.eclipse.jgit.http.server.glue.RegexPipeline.toString()
org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyRawToOutputStream()
org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.setBlockLimit(long)
org.eclipse.jgit.pgm.debug.LfsStore.run()
org.eclipse.jgit.transport.PushCertificateStoreTest.getBeforeSaveDoesNotIncludePending()
org.eclipse.jgit.transport.BasePackPushConnection.transmitOptions()
org.eclipse.jgit.transport.PacketLineInTest.testReadStringRaw_End()
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.cardinality()
org.eclipse.jgit.transport.BasePackConnection.endOut()
org.eclipse.jgit.util.sha1.UbcCheck.check(int)
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test6_FromString()
org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onInflatedObjectData(PackedObjectInfo,int,byte)
org.eclipse.jgit.transport.URIishTest.testGetNullHumanishName()
org.eclipse.jgit.internal.ketch.LocalReplica.startPush(ReplicaPushRequest)
org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testImmediatePruning()
org.eclipse.jgit.lib.DefaultTypedConfigGetter.match(String,String)
org.eclipse.jgit.transport.ReceiveCommand.getNewId()
org.eclipse.jgit.merge.Merger.setObjectInserter(ObjectInserter)
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.encodeHeader(byte)
org.eclipse.jgit.transport.AmazonS3.newMD5()
org.eclipse.jgit.junit.TestRepository.delete(String)
org.eclipse.jgit.api.DescribeCommandTest.describe(ObjectId)
org.eclipse.jgit.ignore.CGitVsJGitRandomIgnorePatternTest.testRandomPatterns()
org.eclipse.jgit.pgm.BranchTest.testRenameSingleArg()
org.eclipse.jgit.transport.Transport.setTagOpt(TagOpt)
org.eclipse.jgit.internal.storage.file.GcPackRefsTest.emptyRefDirectoryDeleted()
org.eclipse.jgit.transport.DaemonClient.setRemoteAddress(InetAddress)
org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2_NoParentRewriting()
org.eclipse.jgit.transport.FetchConnection.setPackLockMessage(String)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase4()
org.eclipse.jgit.api.ReflogCommandTest.setUp()
org.eclipse.jgit.lib.ConfigTest.tearDown()
org.eclipse.jgit.internal.storage.file.PackWriterTest.testShallowIsMinimalDepth2()
org.eclipse.jgit.attributes.AttributesMatcherTest.testFileNameWildcards()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writePack(PackSource,PackWriter,ProgressMonitor,long)
org.eclipse.jgit.treewalk.TreeWalk.getFileMode(int)
org.eclipse.jgit.lib.PersonIdent.getWhen()
org.eclipse.jgit.internal.storage.file.PackInputStream.close()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testVerySimpleWildcardCase0()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidParent5()
org.eclipse.jgit.internal.storage.file.GC.loosen(ObjectDirectoryInserter,ObjectReader,PackFile,HashSet)
org.eclipse.jgit.treewalk.filter.SkipWorkTreeFilter.clone()
org.eclipse.jgit.junit.RepositoryTestCase.createEntry(String,FileMode,String)
org.eclipse.jgit.internal.storage.reftable.BlockWriter.padBetweenBlocks()
org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.oneTableSeek()
org.eclipse.jgit.transport.URIishTest.testFileProtocol()
org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testNoLog()
org.eclipse.jgit.junit.TestRepository.create()
org.eclipse.jgit.internal.storage.pack.DeltaEncoder.insert(String)
org.eclipse.jgit.transport.OpenSshConfigTest.testPattern()
org.eclipse.jgit.api.RemoteRemoveCommand.setName(String)
org.eclipse.jgit.dircache.DirCacheTreeTest.testEmptyCache_NoCacheTree()
org.eclipse.jgit.pgm.Log.addNoteMap(String)
org.eclipse.jgit.lib.TagBuilder.setTag(String)
org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict()
org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit()
org.eclipse.jgit.util.RawCharUtilTest.testIsWhitespace()
org.eclipse.jgit.ignore.CGitIgnoreTest.testSimpleIgnored()
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.reflogFileDirectoryConflict()
org.eclipse.jgit.transport.TransportGitAnon.getOptionalFields()
org.eclipse.jgit.treewalk.EmptyTreeIterator.back(int)
org.eclipse.jgit.api.TagCommand.call()
org.eclipse.jgit.transport.BaseConnection.getMessageWriter()
org.eclipse.jgit.util.time.ProposedTimestamp.micros()
org.eclipse.jgit.transport.PacketLineInTest.testReadACK_Invalid1()
org.eclipse.jgit.internal.storage.pack.DeltaWindow.index(DeltaWindowEntry)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase5()
org.eclipse.jgit.transport.PushCertificateParser.read()
org.eclipse.jgit.diff.Subsequence.b(S,Edit)
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.refIndexLevels()
org.eclipse.jgit.util.LongMapTest.testReplaceMaxValue()
org.eclipse.jgit.internal.storage.dfs.DfsBlock.size()
org.eclipse.jgit.junit.http.RecordingLogger.debug(String,Object,Object)
org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits()
org.eclipse.jgit.lib.RepositoryCache.close(Repository)
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree()
org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.set(ObjectToPack)
org.eclipse.jgit.transport.WalkEncryptionTest.cryptoTest(Properties)
org.eclipse.jgit.transport.BasePackFetchConnection.didFetchTestConnectivity()
org.eclipse.jgit.fnmatch.FileNameMatcher.parseHeads(String,Character)
org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines()
org.eclipse.jgit.lib.RefTest.writeNewRef(String,ObjectId)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUpperGroupCase4()
org.eclipse.jgit.internal.storage.reftable.ReftableConfig.setAlignBlocks(boolean)
org.eclipse.jgit.http.test.AdvertiseErrorTest.testPush_CreateBranch()
org.eclipse.jgit.transport.TransportLocal.close()
org.eclipse.jgit.internal.storage.reftree.Command.symref(String)
org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex(MergeStrategy)
org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSame()
org.eclipse.jgit.diff.ContentSource.open(String,ObjectId)
org.eclipse.jgit.lib.Repository.isValidRefName(String)
org.eclipse.jgit.revwalk.RevTag.parseBody(RevWalk)
org.eclipse.jgit.transport.JschSession.destroy()
org.eclipse.jgit.util.ChangeIdUtil.computeChangeId(ObjectId,ObjectId,PersonIdent,PersonIdent,String)
org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTwoRefSpecs()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test17_FromString()
org.eclipse.jgit.pgm.CheckoutTest.testCheckoutWithMissingWorkingTreeFile()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.getTxnCommitted()
org.eclipse.jgit.api.StashCreateCommand.updateStashRef(ObjectId,PersonIdent,String)
org.eclipse.jgit.revwalk.RevWalkTestCase.tag(String,RevObject)
org.eclipse.jgit.util.FileUtils.normalize(String)
org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.put(DfsStreamKey,long,int,byte)
org.eclipse.jgit.lib.RefRename.disableRefLog()
org.eclipse.jgit.api.CommitCommand.setAuthor(PersonIdent)
org.eclipse.jgit.transport.PushCertificateStoreTest.saveInBatch()
org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testDefaultFilter()
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getLastModified()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.isId(String)
org.eclipse.jgit.lib.ConfigTest.testIncludeTooManyRecursions()
org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.shouldNotFetchSubmodulesWhenFetchConfigurationSetToNo(boolean)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_a()
org.eclipse.jgit.api.RemoveNoteCommand.setNotesRef(String)
org.eclipse.jgit.diff.DiffFormatter.setAbbreviationLength(int)
org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameDifferByAssumeValid()
org.eclipse.jgit.internal.storage.reftable.ReftableTest.nameTooLongDoesNotWrite()
org.eclipse.jgit.pgm.Repo.run()
org.eclipse.jgit.revwalk.FooterLineTest.testEmptyValueNoLF()
org.eclipse.jgit.pgm.ProxyConfigTest.getOutput(Process)
org.eclipse.jgit.internal.ketch.ReplicaSnapshot.getState()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_a()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testGraphGroupCase3()
org.eclipse.jgit.api.CommitCommandTest.commitEmptyCommits()
org.eclipse.jgit.errors.InvalidObjectIdException.msg(byte,int,int)
org.eclipse.jgit.internal.storage.reftree.RefTree.writeTree(ObjectInserter)
org.eclipse.jgit.dircache.DirCache.cmp(DirCacheEntry,DirCacheEntry)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testAlnumGroupCase0()
org.eclipse.jgit.blame.BlameGenerator.isFile(int)
org.eclipse.jgit.http.server.GitSmartHttpTools.sendError(HttpServletRequest,HttpServletResponse,int,String)
org.eclipse.jgit.util.FileUtils.getFileAttributesBasic(FS,File)
org.eclipse.jgit.transport.SideBandOutputStream.write(int)
org.eclipse.jgit.submodule.SubmoduleInitTest.addSubmoduleToIndex()
org.eclipse.jgit.storage.pack.PackConfig.fromConfig(Config)
org.eclipse.jgit.internal.storage.file.WindowCache.isFull()
org.eclipse.jgit.api.StatusCommand.getPaths()
org.eclipse.jgit.http.server.ReceivePackServlet.begin(HttpServletRequest,Repository)
org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail()
org.eclipse.jgit.transport.http.apache.HttpClientConnection.setConnectTimeout(int)
org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_ManyRenames()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testEscapedTrailingSpaces()
org.eclipse.jgit.patch.CombinedHunkHeader.getId()
org.eclipse.jgit.internal.fsck.FsckPackParser.getCorruptObjects()
org.eclipse.jgit.revwalk.RevWalkResetTest.testRevFilterReceivesParsedCommits()
org.eclipse.jgit.diff.AbstractDiffTestCase.testEmptyInputs()
org.eclipse.jgit.transport.WalkPushConnection.isNewRepository()
org.eclipse.jgit.pgm.debug.TextHashFunctions.run()
org.eclipse.jgit.diff.Edit.swap()
org.eclipse.jgit.lib.AnyObjectId.formatHexChar(char,int,int)
org.eclipse.jgit.pgm.Show.show(RevTag)
org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree()
org.eclipse.jgit.transport.BaseFetchConnection.didFetchIncludeTags()
org.eclipse.jgit.internal.storage.file.InflatingBitSet.get(int)
org.eclipse.jgit.lfs.server.fs.UploadTest.testLargeFileUpload()
org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.close()
org.eclipse.jgit.patch.Patch.skipFile(byte,int)
org.eclipse.jgit.transport.URIishTest.testURIEncode_unicode()
org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit()
org.eclipse.jgit.transport.BaseReceivePack.setObjectChecker(ObjectChecker)
org.eclipse.jgit.lib.ConfigTest.testSetEnum()
org.eclipse.jgit.transport.TransportLocal.open(URIish,Repository,String)
org.eclipse.jgit.util.IntListTest.testFillTo0()
org.eclipse.jgit.ignore.IgnoreNodeTest.testToString()
org.eclipse.jgit.submodule.SubmoduleWalk.getModulesUrl()
org.eclipse.jgit.internal.storage.file.BasePackBitmapIndex.getBitmaps()
org.eclipse.jgit.lib.ObjectLoader.getBytes()
org.eclipse.jgit.revwalk.RevTag.parse(byte)
org.eclipse.jgit.lib.ObjectStream.markSupported()
org.eclipse.jgit.transport.DaemonService.isEnabled()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_33()
org.eclipse.jgit.internal.storage.reftable.ReftableReader.readBlockLen(long)
org.eclipse.jgit.attributes.TreeWalkAttributeTest.testIndexOnly2()
org.eclipse.jgit.internal.storage.reftable.BlockWriter.nameUtf8(Ref)
org.eclipse.jgit.internal.ketch.LagCheck.initRevWalk()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesRefsTxnNamespace()
org.eclipse.jgit.api.CommitCommand.getCommitter()
org.eclipse.jgit.lib.AnyObjectId.copyTo(char,StringBuilder)
org.eclipse.jgit.transport.OpenSshConfig.getUser()
org.eclipse.jgit.pgm.MergeTest.testMergeSelf()
org.eclipse.jgit.lib.BatchRefUpdate.setRefLogMessage(String,boolean)
org.eclipse.jgit.revwalk.filter.CommitTimeRevFilter.requiresCommitBody()
org.eclipse.jgit.internal.fsck.FsckError.getFileName()
org.eclipse.jgit.pgm.debug.TextHashFunctions.hashCode()
org.eclipse.jgit.lib.Config.escapeValue(String)
org.eclipse.jgit.dircache.DirCacheCheckout.idEqual(AbstractTreeIterator,AbstractTreeIterator)
org.eclipse.jgit.transport.PackParser.next()
org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO_REVERSE()
org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_writeByte_Success2()
org.eclipse.jgit.transport.RefAdvertiser.addSymref(String,String)
org.eclipse.jgit.util.NBTest.testCompareUInt32()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.sortByOffsetAndIndex(BlockList,ObjectIdOwnerMap,List)
org.eclipse.jgit.internal.storage.pack.PackWriter.run()
org.eclipse.jgit.pgm.TextBuiltin.printUsageAndExit(CmdLineParser)
org.eclipse.jgit.transport.WalkEncryptionTest.fromConfigFile(String)
org.eclipse.jgit.lib.DirCacheCheckoutTest.genSha1(String)
org.eclipse.jgit.internal.storage.pack.DeltaTask.remaining()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testBlankGroupCase3()
org.eclipse.jgit.internal.storage.file.PackWriterTest.writeVerifyPack1()
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.representation(DfsObjectRepresentation,long,DfsReader,PackReverseIndex)
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1()
org.eclipse.jgit.pgm.CLIGitCommandTest.testSplit()
org.eclipse.jgit.api.StashApplyCommandTest.noStashedCommits()
org.eclipse.jgit.lib.IndexDiff.getWorkingTreeIterator(Repository)
org.eclipse.jgit.treewalk.TreeWalk.getEolStreamType()
org.eclipse.jgit.lib.Config.getNames(String,String)
org.eclipse.jgit.transport.ProgressSpinner.update()
org.eclipse.jgit.http.server.SmartServiceInfoRefs.destroy()
org.eclipse.jgit.util.FS_Win32_Cygwin.relativize(String,String)
org.eclipse.jgit.transport.WalkEncryptionTest.configCreate(String)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpaceGroupCase4()
org.eclipse.jgit.junit.http.MockServletConfig.getInitParameterNames()
org.eclipse.jgit.lib.ObjectCheckerTest.testValidTag()
org.eclipse.jgit.api.NameRevCommandTest.multiplePathsSecondParent()
org.eclipse.jgit.lib.AnyObjectId.copy()
org.eclipse.jgit.treewalk.filter.NotTreeFilterTest.testNegateIsUnwrap()
org.eclipse.jgit.internal.ketch.KetchReplica.pushTxnAcceptedAsync(Round)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testVerySimpleGroupRangeCase5()
org.eclipse.jgit.internal.storage.file.FileSnapshot.equals(FileSnapshot)
org.eclipse.jgit.diff.DiffFormatter.getPathFilter()
org.eclipse.jgit.internal.ketch.ReplicaFetchRequest.getWantObjects()
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_gitDirAndWorkTreeSet()
org.eclipse.jgit.api.DescribeCommandTest.describe(ObjectId,boolean)
org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.setWorkTree(File)
org.eclipse.jgit.patch.Patch.parseFile(byte,int,int)
org.eclipse.jgit.transport.RefSpecTest.isWildcardShouldWorkForWildcardSuffixAndComponent()
org.eclipse.jgit.transport.http.apache.HttpClientConnection.execute()
org.eclipse.jgit.util.sha1.SHA1.update(byte)
org.eclipse.jgit.lib.ObjectInserter.close()
org.eclipse.jgit.events.ListenerList.add(ListenerHandle)
org.eclipse.jgit.attributes.AttributesHandlerTest.endWalk()
org.eclipse.jgit.internal.ketch.LeaderSnapshot.str(ObjectId)
org.eclipse.jgit.merge.MergeResult.iterator()
org.eclipse.jgit.internal.storage.file.GcPackRefsTest.call()
org.eclipse.jgit.transport.ReceiveCommand.disableRefLog()
org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_5(Git,int)
org.eclipse.jgit.lib.ObjectIdSubclassMap.createArray(int)
org.eclipse.jgit.util.io.TimeoutOutputStreamTest.beginWrite()
org.eclipse.jgit.revwalk.RevWalkTestCase.createRevWalk()
org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_MY_ALL_And_NONE()
org.eclipse.jgit.internal.storage.file.WindowCursor.getBitmapIndex()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getFlags()
org.eclipse.jgit.junit.RepositoryTestCase.writeTrashFiles(boolean,String)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testPlus()
org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(int)
org.eclipse.jgit.treewalk.TreeWalk.getAttributes()
org.eclipse.jgit.lib.BatchingProgressMonitor.beginTask(String,int)
org.eclipse.jgit.api.FetchCommand.getRemote()
org.eclipse.jgit.lib.ReflogReader.getReverseEntry(int)
org.eclipse.jgit.treewalk.TreeWalk.parserFor(AnyObjectId)
org.eclipse.jgit.api.FetchCommand.isThin()
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.setGitwebDescription(String)
org.eclipse.jgit.ant.tasks.GitCloneTaskTest.before()
org.eclipse.jgit.lib.BitmapIndex.xor(Bitmap)
org.eclipse.jgit.revwalk.RevWalk.parseCommit(AnyObjectId)
org.eclipse.jgit.util.Base64Test.b(String)
org.eclipse.jgit.pgm.opt.UntrackedFilesHandler.parseArguments(Parameters)
org.eclipse.jgit.junit.http.RecordingLogger.warn(String,Object)
org.eclipse.jgit.internal.storage.dfs.DfsPackParser.seekDatabase(PackedObjectInfo,ObjectTypeAndSize)
org.eclipse.jgit.http.test.MeasurePackSizeTest.create(HttpServletRequest,Repository)
org.eclipse.jgit.junit.http.RecordingLogger.debug(String,Throwable)
org.eclipse.jgit.errors.CheckoutConflictException.buildList(String)
org.eclipse.jgit.lib.TreeFormatter.append(String,RevCommit)
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testAbbreviate()
org.eclipse.jgit.transport.http.HttpConnection.getInputStream()
org.eclipse.jgit.internal.storage.file.PackFile.getIndex()
org.eclipse.jgit.transport.HttpConfigUriPathTest.testSegmentCompareFailing()
org.eclipse.jgit.util.Paths.lastPathChar(int)
org.eclipse.jgit.pgm.Show.showDiff(RevCommit)
org.eclipse.jgit.http.server.AsIsFileFilter.init(FilterConfig)
org.eclipse.jgit.util.io.AutoCRLFOutputStream.buffer(byte,int,int)
org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches()
org.eclipse.jgit.internal.storage.file.PackFile.iterator()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c()
org.eclipse.jgit.revwalk.RevWalkFilterTest.requiresCommitBody()
org.eclipse.jgit.transport.http.HttpConnection.configure(KeyManager,TrustManager,SecureRandom)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.resolve(Set,AbbreviatedObjectId)
org.eclipse.jgit.transport.TransportHttp.invalidAdvertisement(String)
org.eclipse.jgit.internal.storage.dfs.DfsRepository.getReflogReader(String)
org.eclipse.jgit.api.EolRepositoryTest.test_ConfigAutoCRLF_true_GlobalEOL_lf_InfoEOL_crlf()
org.eclipse.jgit.transport.UploadPack.setAdvertiseRefsHook(AdvertiseRefsHook)
org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL_Or_NONE()
org.eclipse.jgit.http.server.InfoRefsServlet.doGet(HttpServletRequest,HttpServletResponse)
org.eclipse.jgit.lib.Config.getLong(String,String,long)
org.eclipse.jgit.lib.ObjectIdOwnerMap.isEmpty()
org.eclipse.jgit.transport.http.apache.HttpClientConnection.configure(KeyManager,TrustManager,SecureRandom)
org.eclipse.jgit.transport.TransportAmazonS3.openFetch()
org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyWrongOldId()
org.eclipse.jgit.pgm.Branch.createForce(List)
org.eclipse.jgit.util.RawParseUtils.parseHexInt64(byte,int)
org.eclipse.jgit.treewalk.EmptyTreeIterator.next(int)
org.eclipse.jgit.diff.RenameDetector.compute(ObjectReader,ProgressMonitor)
org.eclipse.jgit.treewalk.filter.OrTreeFilter.matchFilter(TreeWalk)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testVerySimpleGroupCase1()
org.eclipse.jgit.http.server.GitServlet.init(ServletConfig)
org.eclipse.jgit.api.RebaseCommand.calculatePickList(RevCommit)
org.eclipse.jgit.transport.SideBandOutputStream.writeBuffer()
org.eclipse.jgit.diff.RenameDetector.sortOf(ChangeType)
org.eclipse.jgit.http.test.DefaultReceivePackFactoryTest.testCreate_NullUser()
org.eclipse.jgit.internal.storage.pack.BinaryDelta.apply(byte,byte,byte)
org.eclipse.jgit.internal.storage.reftable.ReftableConfig.isAlignBlocks()
org.eclipse.jgit.patch.FileHeader.hasMetaDataChanges()
org.eclipse.jgit.blame.ReverseWalk.addChild(ReverseCommit)
org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_1(Git)
org.eclipse.jgit.http.test.ErrorServletTest.tearDown()
org.eclipse.jgit.internal.ketch.LeaderSnapshot.getTerm()
org.eclipse.jgit.dircache.DirCacheIterator.load(ObjectReader)
org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_self()
org.eclipse.jgit.api.CherryPickCommandTest.prepareCherryPick(Git)
org.eclipse.jgit.dircache.DirCache.lock(File,FS)
org.eclipse.jgit.pgm.AbstractFetchCommand.longTypeOf(ObjectReader,TrackingRefUpdate)
org.eclipse.jgit.internal.ketch.Proposal.getCommands()
org.eclipse.jgit.lib.ObjectDatabase.open(AnyObjectId)
org.eclipse.jgit.util.HttpSupport.proxyFor(ProxySelector,URL)
org.eclipse.jgit.api.RebaseCommand.checkParameters()
org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withBOM()
org.eclipse.jgit.pgm.Config.list(StoredConfig)
org.eclipse.jgit.util.SystemReader.getSimpleDateFormat(String)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_16()
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsSecondBad()
org.eclipse.jgit.revwalk.ObjectWalk.releaseTreeVisit(TreeVisit)
org.eclipse.jgit.util.sha1.SHA1.compress()
org.eclipse.jgit.api.StashDropCommand.getRef()
org.eclipse.jgit.http.server.GitSmartHttpTools.sendError(HttpServletRequest,HttpServletResponse,int)
org.eclipse.jgit.notes.NotesMergeConflictException.noteData(Note)
org.eclipse.jgit.revplot.PlotWalk.addAdditionalRefs(Iterable)
org.eclipse.jgit.util.io.AutoCRLFInputStream.close()
org.eclipse.jgit.transport.RefSpecTest.invalidSetDestination()
org.eclipse.jgit.treewalk.TreeWalk.getTree(int,Class)
org.eclipse.jgit.transport.BaseConnection.available(Map)
org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testTopOrMultiPathDual()
org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack1()
org.eclipse.jgit.lib.RepositoryCacheTest.testUnregister()
org.eclipse.jgit.util.FileUtils.getFileAttributesPosix(FS,File)
org.eclipse.jgit.attributes.TreeWalkAttributeTest.tearDown()
org.eclipse.jgit.internal.ketch.ReplicaSnapshot.getReplica()
org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddIfAbsentGrowsWithObjects()
org.eclipse.jgit.lib.Config.newState(List)
org.eclipse.jgit.junit.TestRepository.insertChangeId(String)
org.eclipse.jgit.util.io.TimeoutOutputStream.endWrite()
org.eclipse.jgit.lib.ConfigTest.testReadLong()
org.eclipse.jgit.diff.RenameDetector.setRenameScore(int)
org.eclipse.jgit.internal.storage.pack.DeltaIndex.newEncoder(OutputStream,long,int)
org.eclipse.jgit.junit.http.AccessEvent.clone(Map)
org.eclipse.jgit.revwalk.RevWalk.sort(RevSort)
org.eclipse.jgit.diff.DiffFormatter.writeLine(char,RawText,int)
org.eclipse.jgit.internal.storage.reftable.ReftableTest.unpeeledDoesNotWrite()
org.eclipse.jgit.transport.TestProtocol.open(URIish,Repository,String)
org.eclipse.jgit.util.FS.setGitSystemConfig(File)
org.eclipse.jgit.internal.storage.file.PackIndexV2.getOffset64Count()
org.eclipse.jgit.diff.PatchIdDiffFormatter.writeHunkHeader(int,int,int,int)
org.eclipse.jgit.util.StringUtilsTest.testEqualsIgnoreCase4()
org.eclipse.jgit.revplot.PlotCommit.addForkingOffLane(PlotLane)
org.eclipse.jgit.util.RefListTest.testFindContainsGet()
org.eclipse.jgit.lib.AbbreviatedObjectId.equals(Object)
org.eclipse.jgit.util.HookTest.testRunHook()
org.eclipse.jgit.junit.http.AppServer.assertNotYetSetUp()
org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.alignToBlock(long)
org.eclipse.jgit.archive.TxzFormat.hashCode()
org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.setup()
org.eclipse.jgit.api.Git.stashList()
org.eclipse.jgit.revwalk.filter.CommitterRevFilter.clone()
org.eclipse.jgit.internal.storage.file.UnpackedObject.getSize()
org.eclipse.jgit.blame.BlameGenerator.done()
org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFreakingHugePathName()
org.eclipse.jgit.api.EolRepositoryTest.test_ConfigAutoCRLF_true()
org.eclipse.jgit.lib.RebaseTodoLine.setShortMessage(String)
org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting7()
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.remove()
org.eclipse.jgit.transport.http.apache.HttpClientConnection.verify(String,SSLSession)
org.eclipse.jgit.lfs.server.s3.SignerV4.canonicalizeHeaderNames(Map)
org.eclipse.jgit.diff.RawText.isMissingNewlineAtEnd()
org.eclipse.jgit.util.BlockListTest.testRemoveRejectsBadIndexes()
org.eclipse.jgit.revwalk.BlockObjQueue.isFull()
org.eclipse.jgit.lib.IndexDiffTest.removeFromIndex(String)
org.eclipse.jgit.util.RefMapTest.testRemove()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames1_Tree()
org.eclipse.jgit.http.test.DumbClientSmartServerTest.testListRemote()
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpr()
org.eclipse.jgit.transport.OpenSshConfig.isBatchMode()
org.eclipse.jgit.internal.storage.reftree.Command.append(StringBuilder,Ref,String)
org.eclipse.jgit.api.CommitCommand.isMergeDuringRebase(RepositoryState)
org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testNextDoesNothing()
org.eclipse.jgit.merge.MergeMessageFormatter.joinNames(List,String,String)
org.eclipse.jgit.ignore.CGitVsJGitRandomIgnorePatternTest.randomSpecialFragment()
org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testTagWithoutObject()
org.eclipse.jgit.ignore.internal.Strings.lookBehind(StringBuilder)
org.eclipse.jgit.internal.storage.reftable.BlockReader.parseKey()
org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution()
org.eclipse.jgit.lfs.server.s3.SignerV4.appendQuery(StringBuilder,String,String)
org.eclipse.jgit.api.EolStreamTypeUtilTest.testCheckout(EolStreamType,EolStreamType,String,String)
org.eclipse.jgit.transport.TransportHttp.getDefaultPort()
org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit()
org.eclipse.jgit.api.SubmoduleAddCommand.call()
org.eclipse.jgit.internal.storage.reftable.BlockWriter.tryAdd(Entry,boolean)
org.eclipse.jgit.transport.TransferConfig.newReceiveObjectChecker()
org.eclipse.jgit.diff.EditTest.testType_Insert()
org.eclipse.jgit.pgm.DescribeTest.testNoHead()
org.eclipse.jgit.pgm.TextBuiltin.printUsage(String,CmdLineParser)
org.eclipse.jgit.pgm.opt.AbstractTreeIteratorHandler.getDefaultMetaVariable()
org.eclipse.jgit.revwalk.FollowFilter.create(String,DiffConfig)
org.eclipse.jgit.http.server.InfoPacksServlet.doGet(HttpServletRequest,HttpServletResponse)
org.eclipse.jgit.api.FetchCommand.getRefSpecs()
org.eclipse.jgit.transport.SshSessionFactory.setInstance(SshSessionFactory)
org.eclipse.jgit.http.server.GitSmartHttpTools.isReceivePackSideBand(HttpServletRequest)
org.eclipse.jgit.notes.LeafBucket.get(int)
org.eclipse.jgit.transport.PackedObjectInfo.setCRC(int)
org.eclipse.jgit.treewalk.EmptyTreeIterator.hasId()
org.eclipse.jgit.api.TransportCommand.setTransportConfigCallback(TransportConfigCallback)
org.eclipse.jgit.dircache.DirCacheCheckout.keep(DirCacheEntry)
org.eclipse.jgit.internal.storage.file.RefDirectory.scan(String)
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyUnix()
org.eclipse.jgit.lib.ReflogEntry.getComment()
org.eclipse.jgit.api.PushCommand.setForce(boolean)
org.eclipse.jgit.transport.RefSpecTest.invalidWhenSourceEndsWithSlash()
org.eclipse.jgit.lib.CLIRepositoryTestCase.toString(List)
org.eclipse.jgit.attributes.AttributesMatcherTest.testTargetWithoutLeadingSlash()
org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.assertNoMatches(TreeWalk)
org.eclipse.jgit.revwalk.RevObjectList.get(int)
org.eclipse.jgit.pgm.ArchiveTest.commitFoo()
org.eclipse.jgit.transport.FetchProcess.expandAutoFollowTags()
org.eclipse.jgit.internal.storage.reftree.AlwaysFailUpdate.doLink(String)
org.eclipse.jgit.api.RemoveNoteCommand.commitNoteMap(RevWalk,NoteMap,RevCommit,ObjectInserter,String)
org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.newRef(String,ObjectId)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoRangesInOneGroupCase5()
org.eclipse.jgit.transport.WalkEncryptionTest.remoteVerify()
org.eclipse.jgit.lib.Repository.peel(Ref)
org.eclipse.jgit.api.errors.FilterFailedException.getFilterCommand()
org.eclipse.jgit.internal.storage.reftable.ReftableTest.namespaceNotFound()
org.eclipse.jgit.lib.ReflogResolveTest.resolveDate()
org.eclipse.jgit.transport.CredentialsProviderUserInfo.promptYesNo(String)
org.eclipse.jgit.lib.RefUpdate.delete()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.commitRm(String)
org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.setBlockSize(int)
org.eclipse.jgit.lib.DirCacheCheckoutTest.assertAllEmpty()
org.eclipse.jgit.pgm.Fetch.nofsck(boolean)
org.eclipse.jgit.lfs.server.fs.LfsServerTest.createPseudoRandomContentFile(Path,long)
org.eclipse.jgit.transport.http.apache.HttpClientConnection.getOutputStream()
org.eclipse.jgit.transport.WalkRemoteObjectDatabase.deleteRefLog(String)
org.eclipse.jgit.ignore.internal.PathMatcher.simpleMatch(String,boolean,boolean)
org.eclipse.jgit.transport.RefSpec.expandFromDestination(String)
org.eclipse.jgit.ignore.internal.AbstractMatcher.hashCode()
org.eclipse.jgit.api.RebaseCommandTest.getStashedDiff()
org.eclipse.jgit.pgm.debug.DiffAlgorithms.run()
org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.setUp()
org.eclipse.jgit.attributes.AttributesHandlerTest.testNestedMatch()
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.cloneEnv()
org.eclipse.jgit.internal.storage.dfs.DfsReader.getIoStats()
org.eclipse.jgit.diff.DiffFormatterTest.setUp()
org.eclipse.jgit.hooks.PrePushHook.getStdinArgs()
org.eclipse.jgit.util.HttpSupport.checkServerTrusted(X509Certificate,String)
org.eclipse.jgit.http.server.glue.SuffixPipeline.create()
org.eclipse.jgit.api.GitConstructionTest.testWrap()
org.eclipse.jgit.lib.RefDatabase.firstExactRef(String)
org.eclipse.jgit.api.CommitOnlyTest.prepare_f3_f2_14(Git,int,boolean)
org.eclipse.jgit.lib.ObjectChecker.scanPathSegment(byte,int,int,AnyObjectId)
org.eclipse.jgit.submodule.SubmoduleWalk.setRootTree(AnyObjectId)
org.eclipse.jgit.dircache.DirCacheEntry.isMerged()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.setDeltaBase(ObjectId)
org.eclipse.jgit.lib.AbbreviatedObjectId.length()
org.eclipse.jgit.transport.BaseReceivePack.getAdvertisedRefs()
org.eclipse.jgit.storage.pack.PackStatistics.getTimeSearchingForReuse()
org.eclipse.jgit.patch.Patch.addFile(FileHeader)
org.eclipse.jgit.lib.BaseRepositoryBuilder.isMustExist()
org.eclipse.jgit.lib.RepositoryCacheTest.testFileKeyOpenNew()
org.eclipse.jgit.internal.ketch.ReplicaFetchRequest.setRefs(Map)
org.eclipse.jgit.lib.RebaseTodoLine.setAction(Action)
org.eclipse.jgit.transport.UploadPack.findSymrefs(RefAdvertiser,Map)
org.eclipse.jgit.lfs.server.s3.SignerV4.createHeaderAuthorization(S3Config,URL,String,Map,String)
org.eclipse.jgit.internal.storage.file.WindowCursor.getCreatedFromInserter()
org.eclipse.jgit.pgm.TextBuiltin.printUsageAndExit(String,CmdLineParser)
org.eclipse.jgit.transport.Transport.push(ProgressMonitor,Collection,OutputStream)
org.eclipse.jgit.attributes.TreeWalkAttributeTest.assertEntry(FileMode,String,Set,Set)
org.eclipse.jgit.merge.Merger.getRepository()
org.eclipse.jgit.internal.storage.file.PackFile.resetTransientErrorCount()
org.eclipse.jgit.junit.RepeatRule.evaluate()
org.eclipse.jgit.internal.fsck.FsckPackParser.onBeginOfsDelta(long,long,long)
org.eclipse.jgit.merge.Merger.nonNullRepo()
org.eclipse.jgit.revwalk.RevWalk.sort(RevSort,boolean)
org.eclipse.jgit.transport.OpenSshConfig.refresh()
org.eclipse.jgit.internal.storage.dfs.DfsInserter.read(long,byte,int,int)
org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_TruncatedZLibStream()
org.eclipse.jgit.attributes.Attributes.hashCode()
org.eclipse.jgit.util.StringUtils.compareIgnoreCase(String,String)
org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1()
org.eclipse.jgit.internal.storage.file.RefDirectory.newTemporaryUpdate()
org.eclipse.jgit.attributes.AttributesHandlerTest.testDirectoryMatchSubSimple()
org.eclipse.jgit.gitrepo.RepoCommandTest.relative()
org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.includes(TreeFilter,TreeWalk)
org.eclipse.jgit.http.server.glue.NoParameterFilterConfig.getFilterName()
org.eclipse.jgit.util.FS.supportsSymlinks()
org.eclipse.jgit.transport.PackParser.use(int)
org.eclipse.jgit.transport.HttpAuthTest.getAuthMethodName(HttpAuthMethod)
org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest.testNameOnlyMatches()
org.eclipse.jgit.ignore.FastIgnoreRuleTest.testCharClass()
org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMergeoptions()
org.eclipse.jgit.pgm.debug.TextHashFunctions.tableBits(int)
org.eclipse.jgit.treewalk.WorkingTreeIterator.safeClose(InputStream)
org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testResetDoesNotAffectPostOrder()
org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteRevision()
org.eclipse.jgit.transport.NetRC.getEntry(String)
org.eclipse.jgit.util.RawSubStringPatternTest.testCaseInsensitive()
org.eclipse.jgit.test.resources.SampleDataRepositoryTestCase.setUp()
org.eclipse.jgit.lib.ObjectInserter.newPackParser(InputStream)
org.eclipse.jgit.treewalk.AbstractTreeIterator.skip()
org.eclipse.jgit.attributes.AttributesNode.getRules()
org.eclipse.jgit.pgm.Branch.deleteForce(List)
org.eclipse.jgit.events.ChangeRecorder.getDeleted()
org.eclipse.jgit.lib.PersonIdent.appendSanitized(StringBuilder,String)
org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_Empty()
org.eclipse.jgit.lib.BaseRepositoryBuilder.isSymRef(byte)
org.eclipse.jgit.api.EolRepositoryTest.createAndAddFile(Git,String,String)
org.eclipse.jgit.notes.NoteMapMerger.mergeNonNotes(NonNoteEntry,NonNoteEntry,NonNoteEntry)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.insert(int,long,InputStream,boolean)
org.eclipse.jgit.lib.ValidRefNameTest.testEmptyString()
org.eclipse.jgit.transport.TestProtocol.register(C,Repository)
org.eclipse.jgit.junit.http.AccessEvent.cloneHeaders(Response)
org.eclipse.jgit.transport.PushCertificateStoreTest.putMatchingWithSomeMatchingRefs()
org.eclipse.jgit.errors.RepositoryNotFoundException.message(String)
org.eclipse.jgit.transport.BaseReceivePack.setExpectDataAfterPackFooter(boolean)
org.eclipse.jgit.diff.HistogramDiffTest.equals(RawText,int,RawText,int)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules1thru3_NoIndexEntry()
org.eclipse.jgit.transport.PackParser.parse(ProgressMonitor)
org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.testIncorrectAttributeFileName()
org.eclipse.jgit.pgm.CheckoutTest.testCheckoutHead()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderAllIgnored()
org.eclipse.jgit.transport.UploadPack.getLine()
org.eclipse.jgit.lib.ObjectCheckerTest.testRejectDotAtEndOnWindows()
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotUnixOk()
org.eclipse.jgit.transport.AdvertiseRefsHook.advertiseRefs(UploadPack)
org.eclipse.jgit.transport.CredentialItem.setValue(String)
org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict()
org.eclipse.jgit.util.SystemReader.getCurrentTime()
org.eclipse.jgit.transport.PushCertificate.getPusher()
org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest.testDirModeAndRegex3()
org.eclipse.jgit.transport.RemoteConfigTest.pushInsteadOfNoPushUrl()
org.eclipse.jgit.internal.storage.dfs.DfsReader.skipGarbagePack(DfsPackFile)
org.eclipse.jgit.gitrepo.RepoCommand.call()
org.eclipse.jgit.util.HttpSupport.encode(StringBuilder,String)
org.eclipse.jgit.internal.storage.pack.DeltaWindow.searchInWindow()
org.eclipse.jgit.util.io.TimeoutOutputStream.flush()
org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testTopAndMultiSubPathDualNegate()
org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex(IgnoreSubmoduleMode)
org.eclipse.jgit.transport.SideBandOutputStreamTest.createSideBandOutputStream(int,int,OutputStream)
org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.getWeight()
org.eclipse.jgit.api.MergeResult.getBase()
org.eclipse.jgit.transport.PackParser.whole(long,int,long)
org.eclipse.jgit.transport.OpenSshConfigTest.testHostCaseInsensitive()
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree2()
org.eclipse.jgit.http.test.GitServletInitTest.tearDown()
org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeFullBlob()
org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog()
org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.setOldestReflogTimeMillis(long)
org.eclipse.jgit.lib.ObjectCheckerTest.testCheckBlobNotCorrupt()
org.eclipse.jgit.transport.RefSpec.expandFromSource(Ref)
org.eclipse.jgit.util.RawParseUtils_HexParseTest.assertNotHex(char)
org.eclipse.jgit.util.RawSubStringPattern.match(RawCharSequence)
org.eclipse.jgit.pgm.Log.dateFormat(String)
org.eclipse.jgit.lfs.lib.AnyLongObjectId.name()
org.eclipse.jgit.ignore.FastIgnoreRuleTest.testSimplePatternsDoNotMatch()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead1()
org.eclipse.jgit.util.BlockList.add(int,T)
org.eclipse.jgit.hooks.Hooks.commitMsg(Repository,PrintStream)
org.eclipse.jgit.attributes.AttributesNode.asReader(InputStream)
org.eclipse.jgit.merge.MergeAlgorithmTest.testInsertVsModify()
org.eclipse.jgit.internal.storage.file.PackFile.invalid()
org.eclipse.jgit.internal.storage.file.SimpleDataInput.readLine()
org.eclipse.jgit.transport.UploadPack.setAdvertisedRefs(Map)
org.eclipse.jgit.internal.storage.reftable.ReftableTest.oneDeletedRef()
org.eclipse.jgit.hooks.PostCommitHook.getHookName()
org.eclipse.jgit.archive.TgzFormat.putEntry(ArchiveOutputStream,String,FileMode,ObjectLoader)
org.eclipse.jgit.storage.pack.PackConfig.setDeltaSearchMemoryLimit(long)
org.eclipse.jgit.transport.ServiceMayNotContinueException.getStatusCode()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testUnsupportedGroupCase0()
org.eclipse.jgit.internal.ketch.KetchLeader.snapshot()
org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_writeBuffer_Timeout()
org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwiceWithCommit()
org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyToStringBuilder()
org.eclipse.jgit.notes.LeafBucket.build()
org.eclipse.jgit.internal.storage.reftree.AlwaysFailUpdate.getRepository()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testVerySimpleGroupCase2()
org.eclipse.jgit.transport.RemoteConfig.addURI(URIish)
org.eclipse.jgit.util.sha1.SHA1.newInstance()
org.eclipse.jgit.diff.HistogramDiffIndex.tryLongestCommonSequence(int)
org.eclipse.jgit.api.SubmoduleSyncCommand.getHeadBranch(Repository)
org.eclipse.jgit.api.RebaseCommand.setUpstream(String)
org.eclipse.jgit.gitrepo.ManifestParser.endDocument()
org.eclipse.jgit.transport.TransportHttp.open(String)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimplePatternCase4()
org.eclipse.jgit.api.SubmoduleUpdateCommand.setProgressMonitor(ProgressMonitor)
org.eclipse.jgit.lib.ObjectId.fromRaw(int)
org.eclipse.jgit.lfs.server.fs.DownloadTest.formatErrorMessage(int,String)
org.eclipse.jgit.lib.Repository.writeCommitEditMsg(String)
org.eclipse.jgit.api.FetchCommandTest.setupRemoteRepository()
org.eclipse.jgit.junit.http.SimpleHttpServer.toURIish(String)
org.eclipse.jgit.internal.storage.file.PackFile.close()
org.eclipse.jgit.api.LsRemoteCommand.execute()
org.eclipse.jgit.util.IO.skipFully(InputStream,long)
org.eclipse.jgit.internal.storage.reftable.ReftableConfig.getLogBlockSize()
org.eclipse.jgit.api.TagCommand.setForceUpdate(boolean)
org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_Empty2()
org.eclipse.jgit.diff.RenameDetector.add(DiffEntry)
org.eclipse.jgit.junit.JGitTestUtil.getName()
org.eclipse.jgit.lib.TypedConfigGetter.getRefSpecs(Config,String,String,String)
org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId()
org.eclipse.jgit.util.FileUtils.isStaleFileHandleInCausalChain(Throwable)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testMultipleEscapedCharacters1()
org.eclipse.jgit.http.test.RegexPipelineTest.testServeOrdering()
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getDeltaHeader(DfsReader,long)
org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch()
org.eclipse.jgit.util.HttpSupport.responseHeader(HttpConnection,String)
org.eclipse.jgit.junit.http.HttpTestCase.extendPath(URIish,String)
org.eclipse.jgit.pgm.FetchTest.testFetchAllTags()
org.eclipse.jgit.internal.storage.file.WindowCache.clean(Entry)
org.eclipse.jgit.internal.storage.file.PackFile.getDeltaHeader(WindowCursor,long)
org.eclipse.jgit.internal.storage.reftree.Scanner.toTree(ObjectReader,AnyObjectId)
org.eclipse.jgit.internal.storage.file.GcConcurrentTest.repackAndCheckBitmapUsage()
org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.id(String)
org.eclipse.jgit.internal.storage.pack.PackWriter.getBitmapIndexMisses()
org.eclipse.jgit.diff.LowLevelDiffAlgorithm.diffNonCommon(SequenceComparator,S,S)
org.eclipse.jgit.merge.StrategyOneSided.newMerger(ObjectInserter,Config)
org.eclipse.jgit.internal.storage.file.PackWriterTest.testModifySettings()
org.eclipse.jgit.pgm.StatusTest.addFilesToIndex(Git)
org.eclipse.jgit.dircache.DirCacheTree.getPathString()
org.eclipse.jgit.diff.HistogramDiffIndex.scanA()
org.eclipse.jgit.internal.storage.file.GcPackRefsTest.isForceUpdate()
org.eclipse.jgit.transport.TransportLocal.createReceivePack(Repository)
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.or(Bitmap)
org.eclipse.jgit.transport.PushCertificateStore.read(TreeWalk)
org.eclipse.jgit.pgm.debug.RebuildCommitGraph.deleteAllRefs()
org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testOrMultiTwoMixSubPathNegate()
org.eclipse.jgit.util.io.TimeoutInputStream.read()
org.eclipse.jgit.junit.TestRepository.nameFor(ObjectDirectory,ObjectId,String)
org.eclipse.jgit.diff.AbstractDiffTestCase.testDegenerate_InsertsIntoMidPosition()
org.eclipse.jgit.merge.EolAwareOutputStream.beginln()
org.eclipse.jgit.internal.storage.file.ObjectDirectory.getShallowCommits()
org.eclipse.jgit.patch.HunkHeader.toString()
org.eclipse.jgit.pgm.UploadPack.requiresRepository()
org.eclipse.jgit.util.FSTest.testExecutableAttributes()
org.eclipse.jgit.events.ChangeRecorder.getModified()
org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.assertGitdirPath(Repository,String)
org.eclipse.jgit.api.PullCommand.setRebase(boolean)
org.eclipse.jgit.treewalk.AbstractTreeIterator.pathCompare(byte,int,int,int)
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setMinUpdateIndex(long)
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.getRepository()
org.eclipse.jgit.lib.BatchRefUpdate.getCommands()
org.eclipse.jgit.internal.storage.pack.DeltaIndex.hashBlock(byte,int)
org.eclipse.jgit.internal.storage.reftable.ReftableTest.resolveSymbolicRef()
org.eclipse.jgit.http.test.SmartClientSmartServerTest.addNormalContext(GitServlet,TestRepository,String)
org.eclipse.jgit.pgm.StatusTest.assertUntracked(String,boolean,boolean,String)
org.eclipse.jgit.util.FS.detect()
org.eclipse.jgit.internal.storage.reftable.ReftableReader.close()
org.eclipse.jgit.treewalk.FileTreeIterator.readSymlinkTarget(Entry)
org.eclipse.jgit.transport.UploadPack.isSideBand()
org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge()
org.eclipse.jgit.internal.storage.dfs.DfsReaderIoStats.getReadIndexBytes()
org.eclipse.jgit.junit.http.RecordingLogger.debug(String)
org.eclipse.jgit.internal.storage.file.ByteArrayWindow.check(Inflater,byte,long,int)
org.eclipse.jgit.util.HookTest.testAllCommitHooks()
org.eclipse.jgit.api.RebaseCommandTest.countPicks()
org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit()
org.eclipse.jgit.blame.BlameGenerator.processMerge(Candidate)
org.eclipse.jgit.pgm.RepoTest.testZombieHelpArgument()
org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.twoCommits()
org.eclipse.jgit.api.TagCommand.getMessage()
org.eclipse.jgit.internal.storage.dfs.DfsPackParser.flushBlock()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packGarbage(ProgressMonitor)
org.eclipse.jgit.api.CreateBranchCommand.getStartPointOrHead()
org.eclipse.jgit.lib.ObjectIdOwnerMap.contains(AnyObjectId)
org.eclipse.jgit.treewalk.CanonicalTreeParser.first()
org.eclipse.jgit.api.ArchiveCommandTest.setup()
org.eclipse.jgit.internal.storage.pack.ThreadSafeDeltaCache.canCache(int,ObjectToPack,ObjectToPack)
org.eclipse.jgit.transport.RemoteRefUpdate.hasTrackingRefUpdate()
org.eclipse.jgit.internal.storage.file.FileObjectDatabase.newReader()
org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_10(Git)
org.eclipse.jgit.lib.T0001_PersonIdentTest.testEmptyNameAndEmail()
org.eclipse.jgit.api.CommitCommandTest.addUnmergedEntry(String,DirCacheBuilder)
org.eclipse.jgit.lib.Config.getLong(String,String,String,long)
org.eclipse.jgit.internal.ketch.Proposal.getAuthor()
org.eclipse.jgit.gitrepo.IncludedFileReader.readIncludeFile(String)
org.eclipse.jgit.internal.storage.dfs.DfsInserter.inflate(PackedObjectInfo,long,int)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.close()
org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testOrMultiThreePath()
org.eclipse.jgit.dircache.DirCacheEntry.getFileMode()
org.eclipse.jgit.internal.ketch.LogIndex.isBefore(LogIndex)
org.eclipse.jgit.lib.Repository.parseCommit(AnyObjectId)
org.eclipse.jgit.lib.ObjectCheckerTest.setUp()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversModifiedLoose()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsGit()
org.eclipse.jgit.transport.URIish.setUser(String)
org.eclipse.jgit.revwalk.RevTagParseTest.id(String)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testEscapedBracket3()
org.eclipse.jgit.pgm.StatusTest.assertUntrackedFiles(String,boolean,boolean)
org.eclipse.jgit.attributes.AttributesNode.parse(InputStream)
org.eclipse.jgit.transport.PackParser.processDeltas(ProgressMonitor)
org.eclipse.jgit.transport.BundleFetchConnection.readLine(byte)
org.eclipse.jgit.util.RawParseUtils.parseHexInt4(byte)
org.eclipse.jgit.internal.storage.file.FileRepository.getRefDatabase()
org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.getReaderOptions()
org.eclipse.jgit.attributes.AttributesHandlerTest.setupRepo(String,String,String,String)
org.eclipse.jgit.revwalk.ObjectWalkTest.testNoCommits()
org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack.setFound()
org.eclipse.jgit.api.DiffCommand.setCached(boolean)
org.eclipse.jgit.revwalk.RevCommitParseTest.id(String)
org.eclipse.jgit.storage.pack.PackStatistics.getDeltaBytes()
org.eclipse.jgit.transport.UploadPack.setPackConfig(PackConfig)
org.eclipse.jgit.merge.SquashMessageFormatter.format(List,Ref)
org.eclipse.jgit.api.RebaseResult.uncommittedChanges(List)
org.eclipse.jgit.transport.RefSpecTest.testSetSourceDestination()
org.eclipse.jgit.transport.PushProcessTest.testPushResult()
org.eclipse.jgit.pgm.Version.getBundleVersion(URL)
org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedExpiredObjectTree_pruned()
org.eclipse.jgit.revwalk.RevCommit.hasLF(byte,int,int)
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPath(boolean,boolean,String)
org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.execute(FetchRecurseSubmodulesMode,boolean)
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents()
org.eclipse.jgit.util.io.UnionInputStreamTest.testCloseDuringClose()
org.eclipse.jgit.transport.PushProcessTest.testUpdateCreateRef()
org.eclipse.jgit.util.FS.resolve(File,String)
org.eclipse.jgit.ignore.CGitVsJGitRandomIgnorePatternTest.randomFragmentCount()
org.eclipse.jgit.junit.TestRepositoryTest.amendCommit()
org.eclipse.jgit.transport.URIishTest.testScpStyleWithoutUserRelativePath()
org.eclipse.jgit.merge.MergeChunk.getBegin()
org.eclipse.jgit.util.FS.runProcess(ProcessBuilder,OutputStream,OutputStream,InputStream)
org.eclipse.jgit.transport.UserAgent.computeVersion()
org.eclipse.jgit.internal.storage.file.LockFile.setNeedSnapshot(boolean)
org.eclipse.jgit.treewalk.TreeWalk.forPath(Repository,ObjectReader,String,AnyObjectId)
org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoHeadOtherThanMaster()
org.eclipse.jgit.transport.ReceivedPackStatistics.getNumWholeCommit()
org.eclipse.jgit.lib.ValidRefNameTest.assertNormalized(String,String)
org.eclipse.jgit.internal.storage.file.RefDirectory.newBatchUpdate()
org.eclipse.jgit.merge.ResolveMergerTest.checkConsistentLastModified(String)
org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadRightLog()
org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1()
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparerTest.testNextSelectionDistanceWithSmallerRecentSpan()
org.eclipse.jgit.internal.storage.reftable.MergedReftable.allRefs()
org.eclipse.jgit.internal.ketch.ElectionRound.bumpTerm(Repository,ProposedTimestamp,ObjectInserter)
org.eclipse.jgit.internal.storage.pack.BinaryDelta.format(byte,boolean)
org.eclipse.jgit.internal.storage.file.ReflogWriter.getRepository()
org.eclipse.jgit.submodule.SubmoduleWalk.close()
org.eclipse.jgit.internal.storage.dfs.DfsReader.release()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadBranchNotBorn()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testEmpty_FromString()
org.eclipse.jgit.dircache.DirCacheTree.nameLength()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testInversedGroupCase3()
org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict()
org.eclipse.jgit.ignore.internal.LeadingAsteriskMatcher.matches(String,int,int,boolean)
org.eclipse.jgit.ignore.CGitIgnoreTest.testDirectoryMatchSubRecursiveBacktrack()
org.eclipse.jgit.util.RawSubStringPatternTest.assertMatchResult(String,String,int)
org.eclipse.jgit.pgm.Log.abbrev(boolean)
org.eclipse.jgit.lib.ConfigSnapshot.size()
org.eclipse.jgit.dircache.DirCacheEntry.mightBeRacilyClean(int,int)
org.eclipse.jgit.diff.DiffEntry.getChangeType()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeModeStartsWithZero3()
org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef()
org.eclipse.jgit.util.TemporaryBuffer.inCoreLength()
org.eclipse.jgit.revwalk.MergeBaseGenerator._next()
org.eclipse.jgit.internal.storage.file.GC.removeOldPack(File,String,PackExt,int)
org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_CH_DATA()
org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.writePack(DfsObjDatabase,DfsPackDescription,PackWriter,ProgressMonitor)
org.eclipse.jgit.pgm.AbstractFetchCommand.showFetchResult(FetchResult)
org.eclipse.jgit.transport.WalkFetchConnection.downloadObject(ProgressMonitor,AnyObjectId)
org.eclipse.jgit.transport.URIishTest.testALot()
org.eclipse.jgit.lfs.lib.MutableLongObjectIdTest.testFromString()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testFirstExactRef()
org.eclipse.jgit.blame.Candidate.getParent(int)
org.eclipse.jgit.lib.ProgressMonitor.isCancelled()
org.eclipse.jgit.api.CloneCommand.verifyDirectories(URIish)
org.eclipse.jgit.util.LongMap.get(long)
org.eclipse.jgit.lib.Repository.getFullBranch()
org.eclipse.jgit.notes.NoteMapMergerTest.testOursEqualsTheirs()
org.eclipse.jgit.lib.NullProgressMonitor.isCancelled()
org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.assertPaths(TreeWalk,String)
org.eclipse.jgit.storage.file.FileBasedConfigTest.testSystemEncoding()
org.eclipse.jgit.transport.RefSpec.expandWildcard(String,String,String)
org.eclipse.jgit.transport.PacketLineInTest.testReadACK_ACKcommon1()
org.eclipse.jgit.http.server.ClientVersionUtil.compare(int,int)
org.eclipse.jgit.lib.BranchConfigTest.isRebase()
org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testSinglePathNegate()
org.eclipse.jgit.internal.storage.pack.PackWriter.setDeltaBaseAsOffset(boolean)
org.eclipse.jgit.transport.BasePackFetchConnection.enableCapabilities()
org.eclipse.jgit.revwalk.RevTagParseTest.testParse_ShortLineOnlyEmbeddedAndEndingLF()
org.eclipse.jgit.lib.RefDatabaseConflictingNamesTest.testGetConflictingNames()
org.eclipse.jgit.api.FetchCommand.isCheckFetchedObjects()
org.eclipse.jgit.treewalk.EmptyTreeIterator.reset()
org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails()
org.eclipse.jgit.internal.storage.file.UnpackedObject.openStream()
org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithWorktreeConfig()
org.eclipse.jgit.util.FS_Win32.runInShell(String,String)
org.eclipse.jgit.internal.storage.file.FileRepository.notifyIndexChanged()
org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag()
org.eclipse.jgit.lib.ObjectCheckerTest.testValidEmptyTree()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithGarbageAndGarbagePacksPurged()
org.eclipse.jgit.transport.TrackingRefUpdate.setResult(ReceiveCommand,Result)
org.eclipse.jgit.util.GitDateParserTest.yesterday()
org.eclipse.jgit.transport.PreReceiveHook.onPreReceive(ReceivePack,Collection)
org.eclipse.jgit.patch.FileHeader.getBuffer()
org.eclipse.jgit.revwalk.RevWalk.setRewriteParents(boolean)
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteSymref()
org.eclipse.jgit.transport.Transport.open(Repository,String)
org.eclipse.jgit.treewalk.filter.NotTreeFilterTest.testShouldBeRecursive_ALL()
org.eclipse.jgit.lib.ObjectIdTest.test001_toString()
org.eclipse.jgit.patch.PatchCcTest.parseTestPatchFile()
org.eclipse.jgit.errors.UnmergedPathException.getDirCacheEntry()
org.eclipse.jgit.internal.storage.file.PackIndexV2.binarySearchLevelTwo(AnyObjectId,int)
org.eclipse.jgit.internal.storage.file.GC.prunePacked()
org.eclipse.jgit.submodule.SubmoduleWalk.reset()
org.eclipse.jgit.internal.storage.file.PackFile.copyAsIs2(PackOutputStream,LocalObjectToPack,boolean,WindowCursor)
org.eclipse.jgit.attributes.TreeWalkAttributeTest.testHierarchyWorktreeOnly()
org.eclipse.jgit.transport.WalkPushConnection.updateCommand(RemoteRefUpdate)
org.eclipse.jgit.util.io.ThrowingPrintWriter.run()
org.eclipse.jgit.transport.FetchProcess.localRefs()
org.eclipse.jgit.diff.RenameDetectorTest.testInexactRenames_OnePair2()
org.eclipse.jgit.ant.tasks.GitCloneTask.setBranch(String)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.create()
org.eclipse.jgit.transport.URIishTest.testGetValidDotGitHumanishName()
org.eclipse.jgit.pgm.RevWalkTextBuiltin.enableRevSort(RevSort,boolean)
org.eclipse.jgit.api.EolStreamTypeUtilTest.testCheckin(EolStreamType,EolStreamType,String,String)
org.eclipse.jgit.util.io.TimeoutOutputStream.close()
org.eclipse.jgit.api.RebaseCommand.writeCurrentCommit(RevCommit)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.newPackWriter()
org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(Repository,DirCacheEntry,ObjectReader)
org.eclipse.jgit.transport.PacketLineOut.writePacket(byte)
org.eclipse.jgit.transport.RefSpecTest.testWildcardMirror()
org.eclipse.jgit.api.errors.FilterFailedException.getPath()
org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext3()
org.eclipse.jgit.internal.storage.pack.PackWriter.byObjectType(int)
org.eclipse.jgit.internal.storage.file.PackIndexV2.getOffset(long)
org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.scanPacksImpl(PackList)
org.eclipse.jgit.api.EolRepositoryTest.test_GlobalEOL_lf_RootEOL_crlf()
org.eclipse.jgit.internal.storage.file.RefDirectory.getRetrySleepMs()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase9()
org.eclipse.jgit.internal.storage.pack.ThreadSafeDeltaCache.cache(byte,int,int)
org.eclipse.jgit.treewalk.filter.AndTreeFilter.clone()
org.eclipse.jgit.util.ChangeIdUtil.insertId(String,ObjectId)
org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext10()
org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash()
org.eclipse.jgit.pgm.Log.init(Repository,String)
org.eclipse.jgit.storage.file.FileBasedConfigTest.createFile(byte)
org.eclipse.jgit.lib.Repository.writeRebaseTodoFile(String,List,boolean)
org.eclipse.jgit.patch.HunkHeader.getNewStartLine()
org.eclipse.jgit.diff.ContentSource.create(ObjectReader)
org.eclipse.jgit.revwalk.RewriteGenerator.outputType()
org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_OneUserNoLF()
org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged()
org.eclipse.jgit.internal.storage.dfs.DfsBlock.write(PackOutputStream,long,int)
org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict()
org.eclipse.jgit.util.RefListTest.testEmpty()
org.eclipse.jgit.transport.ReceivedPackStatistics.getNumDeltaBlob()
org.eclipse.jgit.transport.RemoteRefUpdate.setStatus(Status)
org.eclipse.jgit.ignore.FastIgnoreRule.getNameOnly()
org.eclipse.jgit.diff.EditListTest.testRemove()
org.eclipse.jgit.attributes.TreeWalkAttributeTest.testPrecedenceParent()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testUpperGroupCase2()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c()
org.eclipse.jgit.internal.ketch.Proposal.await()
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setPackSource(PackSource)
org.eclipse.jgit.util.RawParseUtils_FormatTest.testFormatBase10()
org.eclipse.jgit.internal.storage.file.LockFile.write(byte)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e()
org.eclipse.jgit.pgm.ConfigTest.testListConfig()
org.eclipse.jgit.transport.Transport.findRemoteRefUpdatesFor(Collection)
org.eclipse.jgit.internal.storage.dfs.DfsPackParser.read(long,byte,int,int)
org.eclipse.jgit.transport.PushConfigTest.pushRecurseSubmoduleMatch()
org.eclipse.jgit.transport.OpenSshConfig.findValue(String)
org.eclipse.jgit.transport.PushOptionsTest.testPushOptionsNotSupported()
org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.contentEquals(InputStream,InputStream)
org.eclipse.jgit.internal.storage.dfs.DfsInserter.writeNoHash(byte,int,int)
org.eclipse.jgit.internal.ketch.LeaderSnapshot.getState()
org.eclipse.jgit.util.TemporaryBuffer.toByteArray(int)
org.eclipse.jgit.transport.TransportAmazonS3.writeFile(String,byte)
org.eclipse.jgit.pgm.Diff.dstPrefix(String)
org.eclipse.jgit.transport.Transport.getPushOptions()
org.eclipse.jgit.patch.CombinedFileHeader.getParentCount()
org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withoutBOM()
org.eclipse.jgit.util.CPUTimeStopWatch.readout()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead2()
org.eclipse.jgit.internal.storage.file.PackIndex.name()
org.eclipse.jgit.revwalk.filter.MaxCountRevFilter.create(int)
org.eclipse.jgit.merge.MergeStrategy.get(String)
org.eclipse.jgit.pgm.ArchiveTest.testEmptyArchive()
org.eclipse.jgit.util.ChangeIdUtilTest.notestCommitDashV()
org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest.testDequote_User()
org.eclipse.jgit.internal.storage.reftable.ReftableTest.byObjectIdOneRefWithIndex()
org.eclipse.jgit.util.FilterCommandsTest.testBuiltinSmudgeFilter()
org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk()
org.eclipse.jgit.revwalk.filter.RevFlagFilter.include(RevWalk,RevCommit)
org.eclipse.jgit.diff.RawTextTest.testEquals()
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdateLooseOnly()
org.eclipse.jgit.util.FS.runHookIfPresent(Repository,String,String,PrintStream,PrintStream,String)
org.eclipse.jgit.api.Git.cherryPick()
org.eclipse.jgit.lib.IndexDiffTest.assumeUnchanged(String)
org.eclipse.jgit.pgm.Main.createErrorWriter()
org.eclipse.jgit.api.InteractiveHandler.modifyCommitMessage(String)
org.eclipse.jgit.internal.storage.file.CheckoutEntryImpl.getFromBranch()
org.eclipse.jgit.lib.ValidRefNameTest.setWindowsSystemReader()
org.eclipse.jgit.blame.BlameGenerator.getResultEnd()
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.openFile(DfsPackDescription,PackExt)
org.eclipse.jgit.util.NB.decodeInt64(byte,int)
org.eclipse.jgit.lib.RepositoryCache.unregister(Repository)
org.eclipse.jgit.transport.NetRCTest.config(String)
org.eclipse.jgit.transport.TestProtocol.openFetch()
org.eclipse.jgit.treewalk.WorkingTreeIterator.parseEntry()
org.eclipse.jgit.util.ChangeIdUtilTest.testDirCacheAltersId()
org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs()
org.eclipse.jgit.junit.JGitTestUtil.assertEquals(byte,byte)
org.eclipse.jgit.transport.AmazonS3.httpNow()
org.eclipse.jgit.merge.StrategyResolve.newMerger(Repository,boolean)
org.eclipse.jgit.util.RawCharUtilTest.testTrimTrailingWhitespace()
org.eclipse.jgit.gitrepo.RepoCommand.setTargetURI(String)
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.createUniqueTestGitDir(boolean)
org.eclipse.jgit.internal.storage.dfs.DfsInserter.setInput(long,Inflater)
org.eclipse.jgit.util.GSSManagerFactory.init()
org.eclipse.jgit.lib.ObjectChecker.checkBlob(byte)
org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.setUp()
org.eclipse.jgit.lib.ObjectIdTest.test003_equals()
org.eclipse.jgit.internal.storage.file.ObjectDirectory.getObjectSize(WindowCursor,AnyObjectId)
org.eclipse.jgit.lib.ObjectReader.has(AnyObjectId)
org.eclipse.jgit.ignore.FastIgnoreRuleTest.testAsteriskDotDoNotMatch()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimplePatternCase3()
org.eclipse.jgit.transport.RefSpec.isWildcard(String)
org.eclipse.jgit.api.DescribeCommand.setTarget(String)
org.eclipse.jgit.lib.ObjectIdSubclassMap.iterator()
org.eclipse.jgit.revplot.PlotCommitList.addBlockedPosition(BitSet,PlotCommit)
org.eclipse.jgit.lib.InflaterCache.releaseImpl(Inflater)
org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree()
org.eclipse.jgit.revplot.PlotCommitList.continueActiveLanes(PlotCommit)
org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheTest.streamKeyReusesBlocks()
org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.getRepository()
org.eclipse.jgit.internal.storage.pack.PackOutputStream.ofsDelta(long,byte,int)
org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooFewFiles()
org.eclipse.jgit.internal.storage.file.RefDirectory.refresh()
org.eclipse.jgit.lib.ConfigTest.test001_ReadBareKey()
org.eclipse.jgit.http.test.SmartClientSmartServerTest.addRedirectContext(GitServlet)
org.eclipse.jgit.revwalk.RevTag.getTaggerIdent()
org.eclipse.jgit.transport.HttpTransport.setConnectionFactory(HttpConnectionFactory)
org.eclipse.jgit.nls.NLSTest.testJVMDefaultLocale()
org.eclipse.jgit.revplot.AbstractPlotRendererTest.drawText(String,int,int)
org.eclipse.jgit.util.io.TimeoutOutputStream.write(int)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testBlankGroupCase2()
org.eclipse.jgit.ignore.internal.PathMatcher.matches(int,String,int,int,boolean)
org.eclipse.jgit.transport.InternalFetchConnection.run()
org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_noRepo()
org.eclipse.jgit.diff.RawText.getString(int,int,boolean)
org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal()
org.eclipse.jgit.diff.Edit.equals(Object)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.equals(Object)
org.eclipse.jgit.lib.RefDatabaseConflictingNamesTest.newRename(String,String)
org.eclipse.jgit.transport.http.apache.HttpClientConnectionFactory.create(URL,Proxy)
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose1()
org.eclipse.jgit.internal.storage.reftable.BlockReader.readValueString()
org.eclipse.jgit.lfs.lib.LongObjectIdTest.test010_toString()
org.eclipse.jgit.api.RebaseCommand.checkoutCurrentHead()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithPureGarbageAndGarbagePacksPurged()
org.eclipse.jgit.transport.HttpConfigTest.testMatchWithOnlySchemeInConfig()
org.eclipse.jgit.api.PathCheckoutCommandTest.setupConflictingState()
org.eclipse.jgit.lfs.server.s3.S3Config.getSecretKey()
org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward()
org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict2()
org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict(MergeStrategy)
org.eclipse.jgit.transport.RemoteConfigTest.testSaveNoTags()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirs()
org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testIsId()
org.eclipse.jgit.internal.storage.pack.PackWriter.getTransferRate()
org.eclipse.jgit.lib.Repository.findRef(String)
org.eclipse.jgit.revwalk.filter.NotRevFilter.clone()
org.eclipse.jgit.lib.BatchRefUpdate.execute(RevWalk,ProgressMonitor,List)
org.eclipse.jgit.http.test.GitServletInitTest.testInitUnderContainer_NoBasePath()
org.eclipse.jgit.ignore.IgnoreNodeTest.testRepeatedNegation()
org.eclipse.jgit.internal.ketch.ReplicaPushRequest.setException(Repository,Throwable)
org.eclipse.jgit.util.StringUtils.toLowerCase(char)
org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testLowerGroupCase0()
org.eclipse.jgit.revwalk.RewriteGenerator.shareFreeList(BlockRevQueue)
org.eclipse.jgit.treewalk.TreeWalk.setRecursive(boolean)
org.eclipse.jgit.internal.ketch.KetchReplica.readId(ReplicaPushRequest,ReceiveCommand)
org.eclipse.jgit.util.SystemReader.getProperty(String)
org.eclipse.jgit.transport.BaseReceivePack.isAllowPushOptions()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSomethingSpaceSomething()
org.eclipse.jgit.transport.Transport.setRemoveDeletedRefs(boolean)
org.eclipse.jgit.lib.RepositoryCacheConfig.setExpireAfter(long)
org.eclipse.jgit.diff.RawTextTest.testWriteLine2()
org.eclipse.jgit.internal.storage.dfs.DfsReaderIoStats.getScanPacks()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpaceGroupCase3()
org.eclipse.jgit.internal.storage.pack.PackWriter.parallelDeltaSearch(ProgressMonitor,ObjectToPack,int,int)
org.eclipse.jgit.pgm.Fetch.nothin(boolean)
org.eclipse.jgit.api.CheckoutCommandTest.assertNoHead()
org.eclipse.jgit.transport.CredentialItem.setValue(char)
org.eclipse.jgit.api.errors.AbortedByHookException.getMessage()
org.eclipse.jgit.lfs.server.fs.DownloadTest.testDownloadInvalidId()
org.eclipse.jgit.pgm.Show.show(RevWalk,RevCommit)
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.overrideDisableRefLog()
org.eclipse.jgit.internal.storage.dfs.DfsOutputStream.blockSize()
org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.beforeMethod()
org.eclipse.jgit.util.TemporaryBuffer.read()
org.eclipse.jgit.lib.AbbreviatedObjectId.name()
org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.doLink(String)
org.eclipse.jgit.api.CherryPickCommand.setReflogPrefix(String)
org.eclipse.jgit.api.CloneCommand.addMergeConfig(Repository,Ref)
org.eclipse.jgit.lib.RepositoryCacheTest.testGetRegistered()
org.eclipse.jgit.notes.LeafBucket.split()
org.eclipse.jgit.util.IO.readWholeStream(InputStream,int)
org.eclipse.jgit.util.FileUtilsTest.testDeleteRecursiveEmpty()
org.eclipse.jgit.pgm.CLIGitCommand.openGitDir(String)
org.eclipse.jgit.internal.ketch.Proposal.addListener(Runnable)
org.eclipse.jgit.lib.ObjectIdOwnerMap.computeGrowAt(int)
org.eclipse.jgit.util.io.UnionInputStream.read(byte,int,int)
org.eclipse.jgit.api.CommitOnlyTest.getHead(Git,String)
org.eclipse.jgit.internal.storage.reftable.EmptyLogCursor.next()
org.eclipse.jgit.transport.RemoteSession.exec(String,int)
org.eclipse.jgit.lfs.lib.MutableLongObjectId.fromRaw(long)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeleted()
org.eclipse.jgit.submodule.SubmoduleAddTest.commandWithNullUri()
org.eclipse.jgit.api.NameRevCommand.addRef(Ref,Map,FIFORevQueue)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testGraphGroupCase5()
org.eclipse.jgit.internal.storage.file.ReflogWriterTest.shouldFilterLineFeedFromMessage()
org.eclipse.jgit.api.RevertCommand.setOurCommitName(String)
org.eclipse.jgit.internal.storage.dfs.ReadableChannel.position()
org.eclipse.jgit.pgm.MergeBase.run()
org.eclipse.jgit.http.server.RepositoryFilter.doFilter(ServletRequest,ServletResponse,FilterChain)
org.eclipse.jgit.lib.ObjectCheckerTest.checkBlob(byte)
org.eclipse.jgit.dircache.DirCachePathEditTest.testFileReplacesTree()
org.eclipse.jgit.diff.DiffFormatter.getDiffTreeFilterFor(AbstractTreeIterator,AbstractTreeIterator)
org.eclipse.jgit.internal.storage.dfs.BeforeDfsPackIndexLoadedEvent.getListenerType()
org.eclipse.jgit.treewalk.FileTreeIterator.getEntryFile()
org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository()
org.eclipse.jgit.api.RebaseCommand.createFile(File,String,String)
org.eclipse.jgit.api.ListBranchCommand.compare(Ref,Ref)
org.eclipse.jgit.archive.ArchiveFormats.unregisterAll()
org.eclipse.jgit.attributes.Attributes.equals(Object)
org.eclipse.jgit.transport.WalkFetchConnection.openIndex(ProgressMonitor)
org.eclipse.jgit.pgm.ProxyConfigTest.testHttpsProxy_upperCase()
org.eclipse.jgit.http.server.ServletUtils.sendInit(byte,HttpServletRequest,HttpServletResponse)
org.eclipse.jgit.lfs.internal.AtomicObjectOutputStream.write(byte,int,int)
org.eclipse.jgit.util.io.TimeoutOutputStream.setTimeout(int)
org.eclipse.jgit.internal.storage.reftable.BlockReader.parseBlockStart(BlockSource,long,int)
org.eclipse.jgit.lfs.lib.AnyLongObjectId.toString()
org.eclipse.jgit.pgm.LsRemoteTest.testLsRemote()
org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount()
org.eclipse.jgit.lib.ConfigTest.assertReadLong(long)
org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_Or_MY_ALL()
org.eclipse.jgit.storage.pack.PackStatistics.getClientShallowCommits()
org.eclipse.jgit.api.NameRevCommandTest.prefix()
org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit()
org.eclipse.jgit.transport.WalkEncryptionTest.reportTestConfigPresent()
org.eclipse.jgit.transport.PacketLineInTest.testReadString2()
org.eclipse.jgit.http.test.TestRepositoryResolver.open(HttpServletRequest,String)
org.eclipse.jgit.util.FileUtilsTest.testRelativize_equalPaths()
org.eclipse.jgit.util.RawSubStringPatternTest.raw(String)
org.eclipse.jgit.pgm.ReflogTest.testBranch()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedIgnored()
org.eclipse.jgit.lib.SymbolicRef.getPeeledObjectId()
org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines()
org.eclipse.jgit.junit.TestRepositoryTest.reattachToMaster_Race()
org.eclipse.jgit.diff.EditTest.testToString()
org.eclipse.jgit.internal.ketch.Proposal.getProposedTimestamps()
org.eclipse.jgit.util.RawParseUtils.parseHexInt32(byte,int)
org.eclipse.jgit.lfs.server.fs.ObjectDownloadListener.onWritePossible()
org.eclipse.jgit.transport.FetchProcess.want(ObjectId)
org.eclipse.jgit.api.RebaseCommandTest.testRebaseTodoLineSetComment()
org.eclipse.jgit.archive.TxzFormat.createArchiveOutputStream(OutputStream,Map)
org.eclipse.jgit.lib.ReflogEntry.getWho()
org.eclipse.jgit.util.RelativeDateFormatter.round(long,long)
org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.copy(int,int)
org.eclipse.jgit.internal.storage.reftree.Command.toString()
org.eclipse.jgit.diff.HistogramDiff.diffReplace(Edit)
org.eclipse.jgit.revwalk.RevWalk.finishDelayedFreeFlags()
org.eclipse.jgit.internal.storage.reftable.BlockSizeTooSmallException.getMinimumBlockSize()
org.eclipse.jgit.transport.FetchProcess.executeImp(ProgressMonitor,FetchResult)
org.eclipse.jgit.internal.storage.file.LockFile.copyCurrentContent()
org.eclipse.jgit.awtui.AWTPlotRenderer.paint(Graphics,PlotCommit)
org.eclipse.jgit.merge.EolAwareOutputStream.write(int)
org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge(MergeStrategy,IndexState,WorktreeState)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1()
org.eclipse.jgit.api.ApplyCommandTest.testModifyY()
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef()
org.eclipse.jgit.util.RawParseUtils.formatBase10(byte,int,int)
org.eclipse.jgit.http.test.HttpClientTests.setUp()
org.eclipse.jgit.internal.storage.file.WindowCursor.getCachedPacksAndUpdate(BitmapBuilder)
org.eclipse.jgit.internal.storage.pack.ObjectToPack.setDeltaDepth(int)
org.eclipse.jgit.lib.TextProgressMonitor.format(StringBuilder,String,int,int,int)
org.eclipse.jgit.treewalk.filter.PathSuffixFilter.create(String)
org.eclipse.jgit.revwalk.RevWalk.next()
org.eclipse.jgit.internal.storage.reftree.Command.getResult()
org.eclipse.jgit.util.IOReadLineTest.newReader(String)
org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.getRepository()
org.eclipse.jgit.merge.StrategyOneSided.newMerger(Repository)
org.eclipse.jgit.pgm.TextBuiltin.execute(String)
org.eclipse.jgit.revplot.PlotCommitListTest.test2SideBranches()
org.eclipse.jgit.archive.Tbz2Format.putEntry(ArchiveOutputStream,String,FileMode,ObjectLoader)
org.eclipse.jgit.pgm.Main.containsHelp(String)
org.eclipse.jgit.revwalk.ObjectWalk.markTreeUninteresting(RevTree)
org.eclipse.jgit.diff.DiffFormatter.format(AnyObjectId,AnyObjectId)
org.eclipse.jgit.revwalk.BlockRevQueue.resetToEnd()
org.eclipse.jgit.lib.Ref.getStorage()
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.toString()
org.eclipse.jgit.storage.pack.PackConfig.getBigFileThreshold()
org.eclipse.jgit.api.ApplyCommandTest.testDeleteD()
org.eclipse.jgit.transport.PushConnectionTest.tearDown()
org.eclipse.jgit.pgm.Daemon.create(DaemonClient,Repository)
org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testFilterIsPrefixOfKey()
org.eclipse.jgit.lib.BranchConfigTest.parse(String)
org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_Seek3IsEOF()
org.eclipse.jgit.util.StringUtils.compareWithCase(String,String)
org.eclipse.jgit.attributes.CGitAttributesTest.initRepo()
org.eclipse.jgit.pgm.Show.ignoreSpaceAtEol(boolean)
org.eclipse.jgit.attributes.Attributes.getValue(String)
org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter()
org.eclipse.jgit.transport.PushCertificateParserTest.testParseReader()
org.eclipse.jgit.http.test.FileResolverTest.assertUnreasonable(String)
org.eclipse.jgit.util.io.IsolatedOutputStream.cleanClose()
org.eclipse.jgit.internal.storage.dfs.DfsReader.copyObjectAsIs(PackOutputStream,ObjectToPack,boolean)
org.eclipse.jgit.http.server.glue.MetaFilter.destroy()
org.eclipse.jgit.blame.BlameGenerator.splitBlameWithParent(Candidate,RevCommit)
org.eclipse.jgit.lib.DirCacheCheckoutTest.doit(HashMap,HashMap,HashMap)
org.eclipse.jgit.junit.http.TestRequestLog.getEvents()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.compare(ObjectToPack,ObjectToPack)
org.eclipse.jgit.lib.Repository.newObjectInserter()
org.eclipse.jgit.junit.TestRepository.blob(byte)
org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri()
org.eclipse.jgit.lib.ConfigSnapshot.getSubsections(String)
org.eclipse.jgit.internal.storage.pack.PackWriter.writeWholeObjectDeflate(PackOutputStream,ObjectToPack)
org.eclipse.jgit.util.FileUtils.relativizePath(String,String,String,boolean)
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.has()
org.eclipse.jgit.api.MergeCommand.setCommit(boolean)
org.eclipse.jgit.pgm.ShowRef.show(AnyObjectId,String)
org.eclipse.jgit.api.MergeCommand.fallBackToConfiguration()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.getCachedSize()
org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForwardUnknownObject()
org.eclipse.jgit.api.MergeCommandTest.setExecutable(Git,String,boolean)
org.eclipse.jgit.internal.ketch.KetchSystem.getLocalName(Config)
org.eclipse.jgit.internal.storage.reftable.BlockReader.invalidBlock()
org.eclipse.jgit.treewalk.CanonicalTreeParser.getParent()
org.eclipse.jgit.internal.storage.file.PackReverseIndex.findPostion(long)
org.eclipse.jgit.diff.DiffFormatterReflowTest.testEmpty1()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeModeNotOctal2()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithGarbageNoCoalescence()
org.eclipse.jgit.storage.pack.PackConfig.toString()
org.eclipse.jgit.transport.BasePackPushConnection.write(int)
org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyRawLongs()
org.eclipse.jgit.transport.JschSession.getErrorStream()
org.eclipse.jgit.blame.BlameGenerator.reverse(AnyObjectId,AnyObjectId)
org.eclipse.jgit.internal.storage.file.RefDirectory.fileFor(String)
org.eclipse.jgit.lib.ObjectCheckerTest.newBlobObjectChecker()
org.eclipse.jgit.junit.http.AppServer.makePrivate(File)
org.eclipse.jgit.api.CloneCommand.setURI(String)
org.eclipse.jgit.revwalk.RevWalk.iterator()
org.eclipse.jgit.treewalk.TreeWalk.getTreeCount()
org.eclipse.jgit.diff.DiffFormatter.setDiffAlgorithm(DiffAlgorithm)
org.eclipse.jgit.transport.WalkEncryptionTest.test_A2_CryptoError()
org.eclipse.jgit.util.Base64.decode4to3(byte,int,byte,int)
org.eclipse.jgit.blame.BlameGenerator.setFollowFileRenames(boolean)
org.eclipse.jgit.transport.PacketLineInTest.testReadACK_NAK()
org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnUnbornBranch()
org.eclipse.jgit.internal.storage.pack.PackWriter.setIgnoreMissingUninteresting(boolean)
org.eclipse.jgit.api.MergeResult.isSuccessful()
org.eclipse.jgit.util.TemporaryBuffer.isFull()
org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateOnReject()
org.eclipse.jgit.internal.storage.dfs.DfsRepository.notifyIndexChanged()
org.eclipse.jgit.transport.PackParser.isExpectDataAfterPackFooter()
org.eclipse.jgit.http.server.NoCacheFilter.destroy()
org.eclipse.jgit.gitrepo.RepoCommandSymlinkTest.setUp()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testManySolutionsCase4()
org.eclipse.jgit.junit.http.AppServer.loadUserInfo(String)
org.eclipse.jgit.revwalk.filter.RevFilter.negate()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.getTxnNamespace()
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.singleRefUpdateDoesNotRequirePackedRefsLock()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testWordGroupCase1()
org.eclipse.jgit.util.FS_Win32.newInstance()
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.setCorrupt(long)
org.eclipse.jgit.api.CreateBranchCommand.setStartPoint(String)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommitted()
org.eclipse.jgit.transport.URIish.setHost(String)
org.eclipse.jgit.junit.http.HttpTestCase.getRequests()
org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakAll()
org.eclipse.jgit.lib.ObjectCheckerTest.testCommitCorruptCommitter()
org.eclipse.jgit.api.ArchiveCommandTest.putEntry(MockOutputStream,String,FileMode,ObjectLoader)
org.eclipse.jgit.lib.BranchConfig.getRemoteOrDefault()
org.eclipse.jgit.internal.storage.pack.BaseSearch.add(AnyObjectId,int,int)
org.eclipse.jgit.internal.ketch.LocalReplica.initialize(Repository)
org.eclipse.jgit.pgm.CleanTest.testCleanRequiresForce()
org.eclipse.jgit.internal.storage.file.ObjectDirectory.openPackedFromSelfOrAlternate(WindowCursor,AnyObjectId,Set)
org.eclipse.jgit.lib.ThreadSafeProgressMonitor.endWorker()
org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2()
org.eclipse.jgit.lib.RebaseTodoFile.readRebaseTodo(String,boolean)
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.setUp()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.recreateEmptyFolderIgnored()
org.eclipse.jgit.util.IntListTest.testAdd_ZeroCapacity()
org.eclipse.jgit.diff.DiffFormatter.format(List)
org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_6(Git)
org.eclipse.jgit.transport.HttpConfigTest.testMatchSuccess()
org.eclipse.jgit.transport.BaseReceivePack.setMaxObjectSizeLimit(long)
org.eclipse.jgit.internal.storage.pack.PackOutputStream.length()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testMultipleContentConflicts()
org.eclipse.jgit.transport.TransportHttp.getOptionalFields()
org.eclipse.jgit.lib.AbbreviatedObjectId.prefixCompare(AnyObjectId)
org.eclipse.jgit.transport.PackedObjectInfo.setOffset(long)
org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testNotEquals_DiffLength()
org.eclipse.jgit.lib.ConfigTest.testParsedEmptyString()
org.eclipse.jgit.internal.ketch.LogIndex.nextIndex(AnyObjectId)
org.eclipse.jgit.internal.ketch.KetchReplica.equals(ObjectId,LogIndex)
org.eclipse.jgit.util.TemporaryBuffer.write(byte,int,int)
org.eclipse.jgit.treewalk.TreeWalk.close()
org.eclipse.jgit.util.StringUtils.capitalize(String)
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose4()
org.eclipse.jgit.transport.WalkEncryptionTest.haveEnvVar(String)
org.eclipse.jgit.junit.RepositoryTestCase.checkFile(File,String)
org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange()
org.eclipse.jgit.internal.storage.file.PackFile.beginWindowCache()
org.eclipse.jgit.internal.storage.file.PackIndexV1.getObjectCount()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.isMergedInto(RevCommit,RevCommit)
org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.mergeRefs(MergedReftable)
org.eclipse.jgit.transport.BaseReceivePack.limitExceeded()
org.eclipse.jgit.lib.ObjectLoader.copyTo(OutputStream)
org.eclipse.jgit.internal.ketch.KetchSystem.create()
org.eclipse.jgit.util.FS.isDirectory(File)
org.eclipse.jgit.transport.http.apache.TemporaryBufferEntity.getBuffer()
org.eclipse.jgit.transport.TransportLocal.getName()
org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getDownloadAction(AnyLongObjectId)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testAlphaGroupCase2()
org.eclipse.jgit.api.ArchiveCommand.formatBySuffix(String)
org.eclipse.jgit.revwalk.RevWalkFilterTest.include(RevWalk,RevCommit)
org.eclipse.jgit.junit.http.TestRequestLog.clear()
org.eclipse.jgit.internal.storage.file.GC.executor()
org.eclipse.jgit.attributes.AttributesHandlerTest.testDirectoryMatchSubRecursiveBacktrack()
org.eclipse.jgit.pgm.debug.ShowCommands.print(ThrowingPrintWriter,CommandRef)
org.eclipse.jgit.api.ResetCommand.resetIndexForPaths(ObjectId)
org.eclipse.jgit.lib.ObjectIdRef.getName()
org.eclipse.jgit.pgm.CLIGitCommand.outBytes()
org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.update(RevWalk)
org.eclipse.jgit.util.FS.getGitSystemConfig()
org.eclipse.jgit.internal.storage.reftable.ReftableTest.write(Ref)
org.eclipse.jgit.transport.SideBandInputStream.beginTask(int)
org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testVerySimplePatternCase3()
org.eclipse.jgit.errors.MissingBundlePrerequisiteException.format(Map)
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testEmpty_FromByteArray()
org.eclipse.jgit.transport.FetchProcess.isTag(String)
org.eclipse.jgit.lfs.errors.InvalidLongObjectIdException.asAscii(byte,int,int)
org.eclipse.jgit.junit.TestRepositoryTest.resetFromDetachedHead()
org.eclipse.jgit.util.io.EolStreamTypeUtil.checkOutStreamType(WorkingTreeOptions,Attributes)
org.eclipse.jgit.lib.ConfigTest.testQuotingForSubSectionNames()
org.eclipse.jgit.diff.RenameDetector.compute(ProgressMonitor)
org.eclipse.jgit.api.Git.remoteAdd()
org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.getNewPackStatistics()
org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict1()
org.eclipse.jgit.lib.Config.getEnum(T,String,String,String,T)
org.eclipse.jgit.transport.HttpAuthMethod.getSchemeName()
org.eclipse.jgit.util.RawParseUtils.nextLF(byte,int)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testBracketsRandom()
org.eclipse.jgit.pgm.opt.ObjectIdHandler.parseArguments(Parameters)
org.eclipse.jgit.ant.tasks.GitInitTask.setDest(File)
org.eclipse.jgit.patch.PatchCcErrorTest.parseTestPatchFile()
org.eclipse.jgit.internal.storage.file.GcTestCase.lastModified(AnyObjectId)
org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.refresh()
org.eclipse.jgit.api.TagCommand.getName()
org.eclipse.jgit.transport.PushOptionsTest.addCommit(Git)
org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config()
org.eclipse.jgit.lib.ObjectCheckerTest.testCheckBlobCorrupt()
org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.assertModes(String,FileMode,FileMode,TreeWalk)
org.eclipse.jgit.api.FetchCommand.fetchSubmodules(FetchResult)
org.eclipse.jgit.api.ResetCommand.call()
org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testExceptionThrown_BareRepoGetIndex()
org.eclipse.jgit.lib.ConfigTest.readNamesInSubSectionRecursive()
org.eclipse.jgit.revwalk.filter.CommitTimeRevFilter.after(Date)
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.andNot(Bitmap)
org.eclipse.jgit.revwalk.RevWalk.disposeFlag(RevFlag)
org.eclipse.jgit.lib.UserConfig.isCommitterNameImplicit()
org.eclipse.jgit.util.LongList.toString()
org.eclipse.jgit.util.IntList.get(int)
org.eclipse.jgit.transport.WalkEncryptionTest.argsList()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getObject(int)
org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare()
org.eclipse.jgit.api.StashApplyCommand.ignoreRepositoryState(boolean)
org.eclipse.jgit.util.FileUtilsTest.testRenameOverExistingEmptyDirectory()
org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts1()
org.eclipse.jgit.lib.FileMode.equals(int)
org.eclipse.jgit.api.PushCommand.setProgressMonitor(ProgressMonitor)
org.eclipse.jgit.dircache.DirCacheCheckout.checkValidPath(CanonicalTreeParser)
org.eclipse.jgit.lib.Repository.onIndexChanged(IndexChangedEvent)
org.eclipse.jgit.util.RefMap.iterator()
org.eclipse.jgit.api.DiffCommandTest.getTreeIterator(String)
org.eclipse.jgit.util.FS.isRegularFile()
org.eclipse.jgit.internal.storage.dfs.DfsFsck.setObjectChecker(ObjectChecker)
org.eclipse.jgit.util.FileUtils.relativizeNativePath(String,String)
org.eclipse.jgit.submodule.SubmoduleWalk.getConfigUrl()
org.eclipse.jgit.internal.storage.file.ObjectDirectory.listPackDirectory()
org.eclipse.jgit.transport.http.apache.HttpClientConnection.setUseCaches(boolean)
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.reflogAppendStatusFastForward()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMixedGroupCase9()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testBracketsUnmatched2()
org.eclipse.jgit.util.RawParseUtils_LineMapTest.asInts(IntList)
org.eclipse.jgit.internal.storage.file.RefDirectory.getAdditionalRefs()
org.eclipse.jgit.pgm.debug.DiffAlgorithms.init()
org.eclipse.jgit.lib.RefUpdate.setNewObjectId(AnyObjectId)
org.eclipse.jgit.pgm.Log.dstPrefix(String)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoGroupsCase3()
org.eclipse.jgit.internal.storage.file.GC.prune(Set)
org.eclipse.jgit.transport.Connection.getRef(String)
org.eclipse.jgit.http.server.glue.RegexGroupFilter.destroy()
org.eclipse.jgit.transport.Transport.getPackConfig()
org.eclipse.jgit.patch.FileHeader.getReverseBinaryHunk()
org.eclipse.jgit.merge.MergeAlgorithmTest.testSeparateModifications()
org.eclipse.jgit.dircache.DirCacheTree.computeSize(DirCacheEntry,int,int,ObjectInserter)
org.eclipse.jgit.util.io.TeeInputStream.skip(long)
org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline()
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADS()
org.eclipse.jgit.transport.OpenSshConfig.substitute(String,File)
org.eclipse.jgit.submodule.SubmoduleWalk.loadModulesConfig()
org.eclipse.jgit.pgm.Clone.run()
org.eclipse.jgit.util.LongList.sort()
org.eclipse.jgit.api.Git.fetch()
org.eclipse.jgit.internal.storage.reftable.ReftableTest.emptyVirtualTableFromRefs()
org.eclipse.jgit.transport.OpenSshConfig.substitute(String,String)
org.eclipse.jgit.attributes.AttributesMatcherTest.testTrailingSlash()
org.eclipse.jgit.ignore.FastIgnoreRule.equals(Object)
org.eclipse.jgit.transport.PackParser.inflateAndReturn(Source,long)
org.eclipse.jgit.lfs.server.fs.UploadTest.call()
org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.exclude(DfsPackFile)
org.eclipse.jgit.revwalk.DateRevQueue.everbodyHasFlag(int)
org.eclipse.jgit.http.server.glue.MetaFilter.serve(String)
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test027_UnpackedRefHigherPriorityThanPacked()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testVerySimpleGroupRangeCase1()
org.eclipse.jgit.api.CheckoutCommandTest.assertHeadDetached()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testWordroupCase0()
org.eclipse.jgit.lib.AbbreviatedObjectId.mask(int,int)
org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory()
org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_5(Git)
org.eclipse.jgit.api.MergeCommandTest.testFastForward()
org.eclipse.jgit.lib.AnyObjectId.getByte(int)
org.eclipse.jgit.archive.Tbz2Format.createArchiveOutputStream(OutputStream,Map)
org.eclipse.jgit.pgm.StatusTest.mergeTestBranchInMaster(Git,RevCommit)
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.performsAtomicTransactions()
org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_13(Git)
org.eclipse.jgit.hooks.CommitMsgHook.call()
org.eclipse.jgit.util.TemporaryBuffer.overflow()
org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion()
org.eclipse.jgit.pgm.DescribeTest.initialCommitAndTag()
org.eclipse.jgit.internal.storage.file.PackFile.openFail(boolean)
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.writePackedRef(String,AnyObjectId)
org.eclipse.jgit.lib.ObjectChecker.checkTree(byte)
org.eclipse.jgit.notes.NoteMapMerger.sameNote(Note,Note)
org.eclipse.jgit.archive.TgzFormat.createArchiveOutputStream(OutputStream)
org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.twoTableById()
org.eclipse.jgit.lib.BaseRepositoryBuilder.getConfig()
org.eclipse.jgit.transport.PacketLineOut.writePacket(byte,int,int)
org.eclipse.jgit.http.server.ReceivePackServlet.doPost(HttpServletRequest,HttpServletResponse)
org.eclipse.jgit.revwalk.AbstractRevQueue.clear()
org.eclipse.jgit.util.RawCharUtil.isWhitespace(byte)
org.eclipse.jgit.ant.tasks.GitAddTask.addFileset(FileSet)
org.eclipse.jgit.lib.DirCacheCheckoutTest.assertConflict(String)
org.eclipse.jgit.junit.TestRepository.setTopLevelTree(ObjectId)
org.eclipse.jgit.dircache.DirCacheEditor.deleteOverlappingSubtree(DirCacheEntry,int)
org.eclipse.jgit.api.CherryPickCommand.call()
org.eclipse.jgit.internal.storage.reftable.Reftable.exactRef(String)
org.eclipse.jgit.util.ChangeIdUtilTest.testNoteInMiddle()
org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.setIndexFile(File)
org.eclipse.jgit.internal.storage.reftable.MergedReftable.add(RefQueueEntry)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.openObject(WindowCursor,AnyObjectId)
org.eclipse.jgit.internal.storage.dfs.DfsReaderIoStats.getReadBlocksBytes()
org.eclipse.jgit.util.FS_POSIX.normalize(String)
org.eclipse.jgit.blame.BlameResult.getSourceAuthor(int)
org.eclipse.jgit.api.RebaseCommand.runInteractively(InteractiveHandler,boolean)
org.eclipse.jgit.util.sha1.SHA1.digest(MutableObjectId)
org.eclipse.jgit.api.EolRepositoryTest.beginWalk()
org.eclipse.jgit.patch.PatchTest.testParse_NoBinary()
org.eclipse.jgit.lib.RepositoryCacheConfig.fromConfig(Config)
org.eclipse.jgit.internal.storage.file.ReflogReaderTest.setupReflog(String,byte)
org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.size()
org.eclipse.jgit.transport.RefSpecTest.testMasterMaster()
org.eclipse.jgit.util.SystemReader.getHostname()
org.eclipse.jgit.treewalk.AbstractTreeIteratorTest.createSubtreeIterator(ObjectReader)
org.eclipse.jgit.transport.URIishTest.testUnixFile()
org.eclipse.jgit.lib.DefaultTypedConfigGetter.getInt(Config,String,String,String,int)
org.eclipse.jgit.http.test.DumbClientDumbServerTest.setUp()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.ofObjectType(EWAHCompressedBitmap,int)
org.eclipse.jgit.internal.storage.file.WindowCache.clear(Ref)
org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile(MergeStrategy)
org.eclipse.jgit.api.LogCommandTest.setCommitsAndMerge()
org.eclipse.jgit.transport.BaseReceivePack.getAdvertiseRefsHook()
org.eclipse.jgit.util.RefList.toRefList()
org.eclipse.jgit.notes.FanoutBucket.estimateSize(AnyObjectId,ObjectReader)
org.eclipse.jgit.dircache.DirCacheCheckout.isSamePrefix(String,String)
org.eclipse.jgit.blame.BlameGenerator.getSourcePath()
org.eclipse.jgit.transport.WalkEncryptionTest.checkTestProps(Properties)
org.eclipse.jgit.errors.LargeObjectException.setObjectId(AnyObjectId)
org.eclipse.jgit.internal.storage.pack.DeltaIndex.toString()
org.eclipse.jgit.patch.FileHeader.getParentCount()
org.eclipse.jgit.util.LongMap.index(long)
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.logCount()
org.eclipse.jgit.http.server.GitSmartHttpTools.sendReceivePackError(HttpServletRequest,HttpServletResponse,String)
org.eclipse.jgit.internal.storage.file.PackWriterTest.createVerifyOpenPack(Set,Set,boolean,boolean,boolean)
org.eclipse.jgit.junit.http.AppServer.getSecurePort()
org.eclipse.jgit.pgm.DescribeTest.testDescribeCommitMatch2()
org.eclipse.jgit.lib.ObjectCheckerTest.update(byte,int,int)
org.eclipse.jgit.transport.Transport.setPushAtomic(boolean)
org.eclipse.jgit.transport.HttpAuthTest.connect()
org.eclipse.jgit.http.test.SmartClientSmartServerTest.addAuthContext(GitServlet,String,String)
org.eclipse.jgit.transport.PushCertificateStore.getAll(String)
org.eclipse.jgit.lib.ConfigSnapshot.getSections()
org.eclipse.jgit.api.StashApplyCommand.setApplyIndex(boolean)
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.close()
org.eclipse.jgit.hooks.CommitMsgHook.canRun()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.hasGcReftable()
org.eclipse.jgit.util.RawParseUtilsTest.testParseEncoding_badEncoding()
org.eclipse.jgit.diff.RawTextIgnoreWhitespaceChangeTest.testEqualsWithoutWhitespace()
org.eclipse.jgit.junit.RepositoryTestCase.writeTrashFile(String,String,String)
org.eclipse.jgit.treewalk.filter.NotIgnoredFilter.clone()
org.eclipse.jgit.archive.TarFormat.createArchiveOutputStream(OutputStream)
org.eclipse.jgit.internal.ketch.KetchReplica.getTxnAccepted()
org.eclipse.jgit.revwalk.RevObject.remove(RevFlagSet)
org.eclipse.jgit.gitrepo.RepoCommandTest.readFile(String,String,String)
org.eclipse.jgit.junit.TestRepository.insertChangeId()
org.eclipse.jgit.http.server.ServletUtils.compress(byte)
org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommitBlankAuthor()
org.eclipse.jgit.internal.storage.pack.DeltaIndex.sizeOf(int)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testDigitGroupCase5()
org.eclipse.jgit.transport.PushCertificateParserTest.testParseMultipleFromStream()
org.eclipse.jgit.merge.RecursiveMerger.getBaseCommit(RevCommit,RevCommit)
org.eclipse.jgit.ignore.IgnoreNode.getRules()
org.eclipse.jgit.transport.http.apache.HttpClientConnection.setChunkedStreamingMode(int)
org.eclipse.jgit.lib.RepositoryCacheTest.testBareFileKey()
org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_bad_encoded2()
org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2()
org.eclipse.jgit.lib.ConstantsEncodingTest.testEncodeASCII_FailOnNonASCII()
org.eclipse.jgit.blame.BlameResult.getSourceCommitter(int)
org.eclipse.jgit.revwalk.filter.SkipRevFilter.include(RevWalk,RevCommit)
org.eclipse.jgit.transport.URIishTest.testURIEncode_0a()
org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.configureGc(GC,boolean)
org.eclipse.jgit.util.io.AutoLFOutputStream.close()
org.eclipse.jgit.events.ListenerList.dispatch(RepositoryEvent)
org.eclipse.jgit.lib.ObjectCheckerTest.testCommitCorruptAuthor()
org.eclipse.jgit.transport.TransportHttp.getURI()
org.eclipse.jgit.api.GitCommand.checkCallable()
org.eclipse.jgit.patch.HunkHeader.getLinesDeleted()
org.eclipse.jgit.api.CommitCommandTest.canExecute(File)
org.eclipse.jgit.lfs.lib.LongObjectIdTest.test011_toString()
org.eclipse.jgit.api.FetchCommand.setRemote(String)
org.eclipse.jgit.pgm.TextBuiltin.die(boolean)
org.eclipse.jgit.dircache.DirCacheEditor.finish()
org.eclipse.jgit.lib.RepositoryCache.open(Key)
org.eclipse.jgit.merge.SimpleMergeTest.commit(ObjectInserter,DirCache,ObjectId)
org.eclipse.jgit.revwalk.FooterLine.getEmailAddress()
org.eclipse.jgit.util.RunExternalScriptTest.testWrongScript()
org.eclipse.jgit.lib.CommitBuilder.setEncoding(Charset)
org.eclipse.jgit.internal.storage.file.SimpleDataInput.readChar()
org.eclipse.jgit.transport.BaseReceivePack.enableCapabilities()
org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.oneTableScan()
org.eclipse.jgit.transport.RefLeaseSpec.getRef()
org.eclipse.jgit.merge.RecursiveMergerTest.modifyWorktree(WorktreeState,String,String)
org.eclipse.jgit.util.RefListTest.testAddToMiddleOfListByInsertionPosition()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUpperGroupCase5()
org.eclipse.jgit.api.EolRepositoryTest.test_ConfigAutoCRLF_false_GlobalEOL_crlf()
org.eclipse.jgit.internal.storage.reftable.Reftable.resolve(Ref)
org.eclipse.jgit.api.AddCommandTest.testAddWholeRepo()
org.eclipse.jgit.junit.TestRepository.commit(int,RevCommit)
org.eclipse.jgit.submodule.SubmoduleWalk.getSubmoduleRemoteUrl(Repository,String)
org.eclipse.jgit.transport.UploadPack.sendMessage(String)
org.eclipse.jgit.api.CommitCommand.processOptions(RepositoryState,RevWalk)
org.eclipse.jgit.util.io.TimeoutInputStreamTest.tearDown()
org.eclipse.jgit.pgm.opt.SubcommandHandler.parseArguments(Parameters)
org.eclipse.jgit.transport.PackParser.setMaxObjectSizeLimit(long)
org.eclipse.jgit.transport.ReceiveCommand.isRefLogDisabled()
org.eclipse.jgit.pgm.CommandRef.toString()
org.eclipse.jgit.internal.storage.file.FileRepository.isOutdated()
org.eclipse.jgit.transport.ReceiveCommand.hasCustomRefLog()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testInversedGroupCase2()
org.eclipse.jgit.transport.RefSpecTest.invalidDestinationDoubleSlashes()
org.eclipse.jgit.revplot.PlotCommit.addPassingLane(PlotLane)
org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails()
org.eclipse.jgit.internal.storage.io.BlockSource.from(FileInputStream)
org.eclipse.jgit.notes.NoteMapMerger.sameContent(Note,Note)
org.eclipse.jgit.internal.storage.file.PackFile.getObjectType(WindowCursor,long)
org.eclipse.jgit.internal.storage.pack.ObjectToPack.isDoNotDelta()
org.eclipse.jgit.internal.storage.file.PackFile.getObjectCount()
org.eclipse.jgit.lib.TypedConfigGetter.getInt(Config,String,String,String,int)
org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryUsageCount()
org.eclipse.jgit.util.FileUtil.delete(File)
org.eclipse.jgit.lib.MutableObjectId.fromString(byte,int)
org.eclipse.jgit.lib.RebaseTodoFile.parseLine(byte,int,int)
org.eclipse.jgit.patch.GetTextTest.testGetText_NoBinary()
org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree()
org.eclipse.jgit.internal.storage.file.AbbreviationTest.id(String)
org.eclipse.jgit.archive.TarFormat.putEntry(ArchiveOutputStream,ObjectId,String,FileMode,ObjectLoader)
org.eclipse.jgit.util.FS_POSIX.discoverGitExe()
org.eclipse.jgit.util.FileUtilsTest.testDeleteRecursive()
org.eclipse.jgit.api.BlameCommandTest.testEditAllLines()
org.eclipse.jgit.lib.ObjectIdTest.test002_toString()
org.eclipse.jgit.internal.storage.pack.ObjectReuseAsIs.newObjectToPack(AnyObjectId,int)
org.eclipse.jgit.pgm.FetchTest.testFetchNoTags()
org.eclipse.jgit.internal.storage.file.FileSnapshot.isModified(long)
org.eclipse.jgit.transport.PushConnectionTest.invalidCommand()
org.eclipse.jgit.http.server.glue.UrlPipeline.destroyServlet(HttpServlet,Set)
org.eclipse.jgit.lfs.server.LargeFileRepository.getDownloadAction(AnyLongObjectId)
org.eclipse.jgit.util.NBTest.padb(int,int,int,int,int)
org.eclipse.jgit.util.ChangeIdUtilTest.testEmptyMessages()
org.eclipse.jgit.util.sha1.SHA1.setDetectCollision(boolean)
org.eclipse.jgit.pgm.ResetTest.testResetPathDoubleDashNoRef()
org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator()
org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.doDelete(Result)
org.eclipse.jgit.ignore.FastIgnoreRuleTest.testSplit()
org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint()
org.eclipse.jgit.transport.BaseReceivePack.isCheckReferencedObjectsAreReachable()
org.eclipse.jgit.lib.RefDatabaseConflictingNamesTest.newUpdate(String,boolean)
org.eclipse.jgit.transport.URIishTest.testGetSlashValidSlashHumanishName()
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test008_FailOnWrongVersion()
org.eclipse.jgit.transport.BasePackPushConnection.doPush(ProgressMonitor,Map,OutputStream)
org.eclipse.jgit.treewalk.AbstractTreeIterator.setPathCapacity(int,int)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onObjectData(Source,byte,int,int)
org.eclipse.jgit.junit.TestRepository.assertHash(RevObject,byte)
org.eclipse.jgit.internal.storage.file.LockFile.getCommitSnapshot()
org.eclipse.jgit.api.CloneCommand.setRemote(String)
org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.testFindNextOffsetWrongOffset()
org.eclipse.jgit.internal.ketch.LogIndex.describeForLog()
org.eclipse.jgit.treewalk.filter.PathFilter.clone()
org.eclipse.jgit.internal.storage.file.PackFile.endCopyAsIs()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMixedGroupCase5()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPunctGroupCase3()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testDigitGroupCase5()
org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_Recursive()
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparerTest.testNextSelectionDistanceWithFewerRecentCommits()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.paddingBytes()
org.eclipse.jgit.pgm.InitTest.testInitDirectory()
org.eclipse.jgit.patch.GetTextTest.testGetText_BothISO88591()
org.eclipse.jgit.util.ChangeIdUtilTest.testIndexOfChangeId()
org.eclipse.jgit.pgm.CloneTest.testCloneBare()
org.eclipse.jgit.util.GitDateParserBadlyFormattedTest.setUp()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedChangedNotModified()
org.eclipse.jgit.pgm.ArchiveTest.testTarExtension()
org.eclipse.jgit.internal.storage.file.ObjectDirectory.getDirectory()
org.eclipse.jgit.lib.AnyObjectId.toHexByteArray()
org.eclipse.jgit.util.FS_POSIX.setExecute(File,boolean)
org.eclipse.jgit.internal.storage.dfs.DfsReftable.close()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase6()
org.eclipse.jgit.submodule.SubmoduleWalk.next()
org.eclipse.jgit.ignore.CGitIgnoreTest.testDirectoryMatchSubRecursive()
org.eclipse.jgit.api.SubmoduleUpdateCommand.call()
org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_4(Git)
org.eclipse.jgit.internal.storage.file.UnpackedObject.open(InputStream,File,AnyObjectId,WindowCursor)
org.eclipse.jgit.transport.PushCertificateParserTest.newPacketLineIn(String)
org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_CH_ERROR()
org.eclipse.jgit.junit.RepositoryTestCase.checkoutBranch(String)
org.eclipse.jgit.util.FileUtil.canExecute(File)
org.eclipse.jgit.lib.IndexDiffTest.apply(DirCacheEntry)
org.eclipse.jgit.transport.http.JDKHttpConnection.getURL()
org.eclipse.jgit.treewalk.filter.PathFilterGroup.create(PathFilter)
org.eclipse.jgit.lib.ObjectReader.getShallowCommits()
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_workDirSet()
org.eclipse.jgit.pgm.debug.ShowPackDelta.select(ObjectToPack,StoredObjectRepresentation)
org.eclipse.jgit.api.ApplyCommandTest.testModifyM3()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.isHead(Ref)
org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithConflict()
org.eclipse.jgit.treewalk.filter.NotTreeFilter.create(TreeFilter)
org.eclipse.jgit.util.FS_POSIX.findHook(Repository,String)
org.eclipse.jgit.internal.storage.dfs.DfsReader.findAllImpl(PackList,Collection,List)
org.eclipse.jgit.gitrepo.RepoCommandTest.setUp()
org.eclipse.jgit.internal.storage.file.WindowCursor.getObjectSize(AnyObjectId,int)
org.eclipse.jgit.internal.ketch.ReplicaPushRequest.describe(String)
org.eclipse.jgit.revwalk.filter.NotRevFilter.include(RevWalk,RevCommit)
org.eclipse.jgit.api.ArchiveCommandTest.write(int)
org.eclipse.jgit.internal.storage.file.RefDirectory.exactRef(String)
org.eclipse.jgit.notes.LeafBucket.hasNext()
org.eclipse.jgit.api.ArchiveCommand.unregisterFormat(String)
org.eclipse.jgit.diff.DiffFormatter.writeContextLine(RawText,int)
org.eclipse.jgit.internal.storage.dfs.DfsReaderIoStats.getBlockCacheHits()
org.eclipse.jgit.internal.storage.file.PackFile.get(WindowCursor,AnyObjectId)
org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.write(ObjectId,byte)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleGroupRangeCase2()
org.eclipse.jgit.junit.TestRepository.child()
org.eclipse.jgit.lib.MutableObjectId.toObjectId()
org.eclipse.jgit.nls.NLS.setLocale(Locale)
org.eclipse.jgit.util.GitDateParserTest.daysAndWeeksAgo()
org.eclipse.jgit.lib.Repository.isBare()
org.eclipse.jgit.treewalk.CanonicalTreeParserTest.entry(FileMode,String,ObjectId)
org.eclipse.jgit.api.MergeCommandTest.testMergeMessage()
org.eclipse.jgit.diff.EditTest.testExtendB()
org.eclipse.jgit.lib.ValidRefNameTest.testNoBareDot()
org.eclipse.jgit.merge.StrategyResolve.newMerger(ObjectInserter,Config)
org.eclipse.jgit.util.FS.setHidden(File,boolean)
org.eclipse.jgit.gitrepo.RepoProject.getGroups()
org.eclipse.jgit.lib.ValidRefNameTest.testNormalizeAlreadyValidRefName()
org.eclipse.jgit.lib.RefUpdate.setDetachingSymbolicRef()
org.eclipse.jgit.lib.UserConfig.isAuthorNameImplicit()
org.eclipse.jgit.lib.ValidRefNameTest.testNoAsciiControlCharacters()
org.eclipse.jgit.transport.ReceiveCommand.setRef(Ref)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_d()
org.eclipse.jgit.api.ArchiveCommand.setTree(ObjectId)
org.eclipse.jgit.http.server.GitSmartHttpTools.isInfoRefs(HttpServletRequest)
org.eclipse.jgit.lib.RefComparator.compareTo(Ref,Ref)
org.eclipse.jgit.internal.storage.dfs.DfsReftable.open()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c()
org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacement()
org.eclipse.jgit.http.server.GitSmartHttpTools.send(HttpServletRequest,HttpServletResponse,String,byte)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit()
org.eclipse.jgit.api.PullCommandTest.writeToFile(File,String)
org.eclipse.jgit.lib.BitmapIndex.add(AnyObjectId,int)
org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict2()
org.eclipse.jgit.transport.HttpConfigUriPathTest.testNormalizationWithDotDotFailing()
org.eclipse.jgit.api.ResetCommandTest.testHardReset()
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.idOf(Ref)
org.eclipse.jgit.lfs.lib.LfsPointerFilterTest.testRegularFilesInRepositoryRoot()
org.eclipse.jgit.lib.CommitBuilder.setMessage(String)
org.eclipse.jgit.api.ResetCommand.toString()
org.eclipse.jgit.revwalk.ObjectWalk.nextObject()
org.eclipse.jgit.pgm.debug.DiffAlgorithms.included(String,List)
org.eclipse.jgit.transport.TransferConfig.parse(String)
org.eclipse.jgit.storage.pack.PackConfig.setPrunePreserved(boolean)
org.eclipse.jgit.util.IntListTest.testSet()
org.eclipse.jgit.internal.storage.file.WindowCursor.copy(PackFile,long,byte,int,int)
org.eclipse.jgit.transport.PackParserTest.testTinyThinPack()
org.eclipse.jgit.patch.FileHeader.parseGitFileName(int,int)
org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest.testNegation()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c()
org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth2()
org.eclipse.jgit.lib.Config.setEnum(String,String,String,T)
org.eclipse.jgit.merge.ResolveMerger.getModifiedFiles()
org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.assertV3TreeEntry(int,String,boolean,boolean,DirCache)
org.eclipse.jgit.util.TemporaryBuffer.close()
org.eclipse.jgit.archive.TarFormat.putEntry(ArchiveOutputStream,String,FileMode,ObjectLoader)
org.eclipse.jgit.lib.CLIRepositoryTestCase.escapeJava(String)
org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.doLink(String)
org.eclipse.jgit.api.Format.putEntry(T,String,FileMode,ObjectLoader)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimplePatternCase0()
org.eclipse.jgit.lfs.lib.LfsPointerFilterTest.testValidNestedPointers()
org.eclipse.jgit.errors.CorruptPackIndexException.getErrorType()
org.eclipse.jgit.submodule.SubmoduleAddTest.commandWithEmptyPath()
org.eclipse.jgit.lib.CommitBuilder.setParentIds(ObjectId)
org.eclipse.jgit.util.IntList.set(int,int)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.createNonRecursiveTreeWalk(RevCommit)
org.eclipse.jgit.transport.HMACSHA1NonceGeneratorTest.ok()
org.eclipse.jgit.transport.TransportGitAnon.openConnection()
org.eclipse.jgit.pgm.Main.install(String)
org.eclipse.jgit.util.HookTest.testPostCommitRunHook()
org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation.newWhole(PackFile,long,long)
org.eclipse.jgit.transport.TransportBundleFile.open(URIish)
org.eclipse.jgit.lib.ObjectLoaderTest.getType()
org.eclipse.jgit.internal.storage.file.LockFile.setFSync(boolean)
org.eclipse.jgit.internal.storage.pack.PackWriter.getInterestingObjects()
org.eclipse.jgit.treewalk.EmptyTreeIterator.stopWalk()
org.eclipse.jgit.transport.SpiTransport.getSchemes()
org.eclipse.jgit.http.server.glue.WrappedRequest.getPathInfo()
org.eclipse.jgit.util.sha1.SHA1.s3(int,int,int,int,int)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit()
org.eclipse.jgit.transport.RefSpecTest.invalidWhenSourceOnlyAndWildcard()
org.eclipse.jgit.treewalk.WorkingTreeIterator.reset()
org.eclipse.jgit.http.test.DefaultReceivePackFactoryTest.testDisabledSingleton()
org.eclipse.jgit.attributes.AttributesMatcherTest.testBasic()
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.packfileIsTruncated()
org.eclipse.jgit.util.ChangeIdUtilTest.testOneliner()
org.eclipse.jgit.transport.WalkEncryptionTest.cryptoTestIfCan(Properties)
org.eclipse.jgit.pgm.Merge.ff(boolean)
org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testIterator()
org.eclipse.jgit.submodule.SubmoduleStatus.getPath()
org.eclipse.jgit.notes.NoteMap.getNote(AnyObjectId)
org.eclipse.jgit.pgm.ArchiveTest.writeRaw(String,byte)
org.eclipse.jgit.internal.storage.pack.PackWriter.endPhase(ProgressMonitor)
org.eclipse.jgit.diff.AbstractDiffTestCase.testEdit_CommonGrowsPrefixAndSuffix()
org.eclipse.jgit.storage.pack.PackConfig.isDeltaCompress()
org.eclipse.jgit.storage.file.WindowCacheConfig.getPackedGitWindowSize()
org.eclipse.jgit.api.PullCommandTest.setUp()
org.eclipse.jgit.internal.storage.dfs.DfsReader.getObjectId()
org.eclipse.jgit.treewalk.ForPathTest.testFindObjects()
org.eclipse.jgit.util.HookTest.writeHookFile(String,String)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testEscapedBracket5()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose3()
org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakBelowScore()
org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWithLeases()
org.eclipse.jgit.revwalk.RevCommitList.clearFlag(RevFlag,int,int)
org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.execute(RevWalk,ProgressMonitor,List)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.getAllRefs()
org.eclipse.jgit.storage.pack.PackConfig.setBigFileThreshold(int)
org.eclipse.jgit.lib.BatchRefUpdate.getRefLogMessage(ReceiveCommand)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writeReftable(DfsPackDescription,Collection)
org.eclipse.jgit.transport.PushCertificateStore.newDirCache()
org.eclipse.jgit.revwalk.RewriteGenerator.rewrite(RevCommit)
org.eclipse.jgit.submodule.SubmoduleInitTest.apply(DirCacheEntry)
org.eclipse.jgit.revwalk.Commit.getDepth()
org.eclipse.jgit.transport.SideBandOutputStreamTest.testFlush()
org.eclipse.jgit.dircache.DirCacheEntry.setAssumeValid(boolean)
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testFromLongObjectId()
org.eclipse.jgit.internal.storage.reftable.BlockReader.readBlockIntoBuf(BlockSource,long,int)
org.eclipse.jgit.revwalk.ObjectWalkFilterTest.include(ObjectWalk,AnyObjectId)
org.eclipse.jgit.blame.BlameGenerator.find(RevCommit,PathFilter)
org.eclipse.jgit.patch.GetTextTest.testGetText_DiffCc()
org.eclipse.jgit.util.io.InterruptTimer.run()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.popCachedDelta()
org.eclipse.jgit.transport.UploadPack.want(RevObject)
org.eclipse.jgit.transport.BasePackConnection.wantCapability(StringBuilder,String)
org.eclipse.jgit.lib.SymbolicRef.getObjectId()
org.eclipse.jgit.transport.TransportProtocol.canHandle(URIish,Repository,String)
org.eclipse.jgit.pgm.Diff.ignoreSpaceChange(boolean)
org.eclipse.jgit.api.ListBranchCommand.filterRefs(Collection)
org.eclipse.jgit.internal.storage.file.PackFile.copyAsIs(PackOutputStream,LocalObjectToPack,boolean,WindowCursor)
org.eclipse.jgit.internal.storage.dfs.DfsReaderIoStats.getReadIndexMicros()
org.eclipse.jgit.transport.URIishTest.testFileProtoWindows()
org.eclipse.jgit.util.io.UnionInputStream.skip(long)
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.addObject(AnyObjectId,int)
org.eclipse.jgit.internal.ketch.KetchReplica.getName()
org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.setUp()
org.eclipse.jgit.internal.storage.file.ObjectDirectory.toString()
org.eclipse.jgit.transport.RemoteConfigTest.testCreateOrigin()
org.eclipse.jgit.internal.storage.file.RefDirectory.peel(Ref)
org.eclipse.jgit.http.server.ServletUtils.consumeRequestBody(InputStream)
org.eclipse.jgit.util.FS.getStderr()
org.eclipse.jgit.diff.SimilarityIndex.slot(int)
org.eclipse.jgit.transport.HMACSHA1NonceGeneratorTest.unsolicited()
org.eclipse.jgit.transport.TransportGitSsh.getRequiredFields()
org.eclipse.jgit.transport.WalkEncryptionTest.test_V2_Java8_PBE_AES()
org.eclipse.jgit.errors.TranslationBundleException.getBundleClass()
org.eclipse.jgit.dircache.DirCacheTree.getChild(int)
org.eclipse.jgit.gitrepo.RepoProject.addLinkFile(LinkFile)
org.eclipse.jgit.notes.NoteMap.get(AnyObjectId)
org.eclipse.jgit.internal.ketch.ReplicaConfig.getMillis(Config,String,String,long)
org.eclipse.jgit.lfs.server.s3.SignerV4.createAuthorizationQuery(S3Config,URL,String,Map,Map,String)
org.eclipse.jgit.merge.MergeAlgorithmTest.testAdjacentModifications()
org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty()
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.simpleNoForce()
org.eclipse.jgit.lib.Ref.getLeaf()
org.eclipse.jgit.transport.TransportLocal.canHandle(URIish,Repository,String)
org.eclipse.jgit.pgm.CheckoutTest.testCheckoutLink()
org.eclipse.jgit.junit.TestRepository.amend(RevCommit,CommitBuilder)
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.clean(HashEntry)
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.recursiveDelete(File,boolean,boolean)
org.eclipse.jgit.storage.pack.PackConfig.isReuseObjects()
org.eclipse.jgit.internal.storage.file.PackFile.endWindowCache()
org.eclipse.jgit.archive.TxzFormat.putEntry(ArchiveOutputStream,ObjectId,String,FileMode,ObjectLoader)
org.eclipse.jgit.api.CommitCommandTest.retryFailedLockFileCommit()
org.eclipse.jgit.ignore.IgnoreNodeTest.testRepeatedNegationInDifferentFiles4()
org.eclipse.jgit.transport.http.apache.HttpClientConnection.getSSLContext()
org.eclipse.jgit.revwalk.RevWalkShallowTest.testObjectDirectorySnapshot()
org.eclipse.jgit.attributes.AttributesHandler.getAttributes()
org.eclipse.jgit.treewalk.WorkingTreeIterator.getCleanFilterCommand()
org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.newUpdate(String,boolean)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.baseName(File)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_d()
org.eclipse.jgit.api.Git.reset()
org.eclipse.jgit.transport.resolver.FileResolver.nameWithDotGit(String)
org.eclipse.jgit.http.test.GitServletResponseTests.open(HttpServletRequest,String)
org.eclipse.jgit.util.io.ThrowingPrintWriter.print(short)
org.eclipse.jgit.util.SystemReader.setInstance(SystemReader)
org.eclipse.jgit.lfs.lib.MutableLongObjectId.fromRaw(long,int)
org.eclipse.jgit.api.AddCommandTest.testAddRemovedFile()
org.eclipse.jgit.lib.Config.getBoolean(String,String,boolean)
org.eclipse.jgit.revwalk.RevFlagSet.contains(Object)
org.eclipse.jgit.transport.PushCertificateIdentTest.exoticUserId()
org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath()
org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testAtEOF()
org.eclipse.jgit.http.server.SmartServiceInfoRefs.service(ServletRequest,ServletResponse)
org.eclipse.jgit.junit.TestRepository.getRepository()
org.eclipse.jgit.errors.AmbiguousObjectException.getCandidates()
org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.doCacheTests()
org.eclipse.jgit.submodule.SubmoduleWalk.loadPathNames()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.apply(ObjectReader,RefTree)
org.eclipse.jgit.api.MergeCommand.include(Ref)
org.eclipse.jgit.http.server.resolver.DefaultReceivePackFactory.create(HttpServletRequest,Repository)
org.eclipse.jgit.internal.storage.file.PackIndexTestCase.testIteratorReturnedValues1()
org.eclipse.jgit.lib.ObjectIdTest.testFromString_shortNonHex()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_15()
org.eclipse.jgit.internal.storage.file.RefDirectory.newUpdate(String,boolean)
org.eclipse.jgit.transport.PacketLineInTest.testReadACK_ERR()
org.eclipse.jgit.revwalk.filter.CommitterRevFilter.text(RevCommit)
org.eclipse.jgit.diff.DiffEntryTest.shouldThrowIAEWhenScanShouldIncludeTreesAndWalkIsRecursive()
org.eclipse.jgit.internal.storage.dfs.DfsReader.cancel(boolean)
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.commit(Function)
org.eclipse.jgit.ant.tasks.GitAddTask.translateFilePathUsingPrefix(String,String)
org.eclipse.jgit.internal.storage.pack.ObjectToPack.isDeltaRepresentation()
org.eclipse.jgit.internal.storage.dfs.DfsStreamKey.of(DfsRepositoryDescription,String)
org.eclipse.jgit.treewalk.NameConflictTreeWalk.fastMin()
org.eclipse.jgit.api.RmCommand.call()
org.eclipse.jgit.transport.BasePackFetchConnection.markAdvertised(AnyObjectId)
org.eclipse.jgit.lib.Repository.close()
org.eclipse.jgit.util.io.EolStreamTypeUtil.wrapOutputStream(OutputStream,EolStreamType)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile()
org.eclipse.jgit.util.FileUtils.readSymLink(File)
org.eclipse.jgit.treewalk.filter.OrTreeFilter.clone()
org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onEndWholeObject(PackedObjectInfo)
org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedExpiredObject_pruned()
org.eclipse.jgit.transport.JschConfigSessionFactory.identities(JSch,FS)
org.eclipse.jgit.internal.storage.reftable.BlockReader.getWho()
org.eclipse.jgit.internal.storage.file.LooseRef.peel(ObjectIdRef)
org.eclipse.jgit.junit.TestRepositoryTest.cherryPickWithContentMerge()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllPacked1()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testIgnoredBackslash()
org.eclipse.jgit.transport.CredentialItem.getPromptText()
org.eclipse.jgit.util.HookTest.testFailedPreCommitHookBlockCommit()
org.eclipse.jgit.internal.storage.file.ReflogReaderImpl.getLastEntry()
org.eclipse.jgit.diff.DiffFormatterReflowTest.readFile(String)
org.eclipse.jgit.lib.BatchRefUpdate.getRefLogMessage()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.writeFileInFolderIgnored()
org.eclipse.jgit.util.BlockList.add(T)
org.eclipse.jgit.util.FS_POSIX.supportsExecute()
org.eclipse.jgit.notes.NoteMapTest.testIteratorEmptyMap()
org.eclipse.jgit.transport.PackParser.fill(Source,int)
org.eclipse.jgit.transport.PackParser.removeBaseById(AnyObjectId)
org.eclipse.jgit.pgm.TextBuiltin.resolve(String)
org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(List,Character,boolean)
org.eclipse.jgit.lib.RepositoryCache.clearAllExpired()
org.eclipse.jgit.transport.PushProcessTest.testUpdateMixedCases()
org.eclipse.jgit.diff.SimilarityIndex.countOf(long)
org.eclipse.jgit.internal.storage.file.PackIndexV1.getLevelTwo(long,int)
org.eclipse.jgit.pgm.LsRemoteTest.testLsRemoteHeads()
org.eclipse.jgit.transport.RefAdvertiser.advertiseHave(AnyObjectId)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPunctGroupCase0()
org.eclipse.jgit.lib.Config.getStringList(String,String,String)
org.eclipse.jgit.transport.TransportGitSsh.exec(String,int)
org.eclipse.jgit.api.MergeCommand.toConfigValue()
org.eclipse.jgit.transport.UploadPack.wantSatisfied(RevObject)
org.eclipse.jgit.pgm.StatusTest.checkoutTestBranch(Git)
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.performsAtomicTransactions()
org.eclipse.jgit.junit.MockSystemReader.setCurrentPlatform()
org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldTryToParseValidLineMarkedAsComment()
org.eclipse.jgit.lib.IndexDiff.setFilter(TreeFilter)
org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict()
org.eclipse.jgit.lib.TextProgressMonitor.format(StringBuilder,String,int)
org.eclipse.jgit.lib.ObjectCheckerTest.testCheckBlobWithBlobObjectCheckerCorrupt()
org.eclipse.jgit.revwalk.filter.OrRevFilter.create(RevFilter,RevFilter)
org.eclipse.jgit.util.FS_Win32.canExecute(File)
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.remove(int)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testManySolutionsCase3()
org.eclipse.jgit.transport.PacketLineIn.discardUntilEnd()
org.eclipse.jgit.api.Git.submoduleInit()
org.eclipse.jgit.pgm.BranchTest.testRenameTwoArgs()
org.eclipse.jgit.transport.BasePackFetchConnection.close()
org.eclipse.jgit.internal.storage.dfs.DfsInserter.inflate(DfsReader,long,int)
org.eclipse.jgit.indexdiff.IndexDiffWithSymlinkTest.testSymlinkWithEncodingDifference()
org.eclipse.jgit.junit.RepositoryTestCase.lookup(Object,String,Map)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b()
org.eclipse.jgit.transport.PushCertificateParserTest.newDisabledConfig()
org.eclipse.jgit.pgm.TextBuiltin.abbreviateRef(String,boolean)
org.eclipse.jgit.notes.Note.toString()
org.eclipse.jgit.transport.PushCertificate.getPusherIdent()
org.eclipse.jgit.internal.storage.file.PackIndexV2.findOffset(AnyObjectId)
org.eclipse.jgit.internal.storage.pack.PackWriter.isUseBitmaps()
org.eclipse.jgit.nls.RootLocaleTest.testUIText()
org.eclipse.jgit.lib.ObjectReader.getObjectSize(Iterable,boolean)
org.eclipse.jgit.api.TransportCommand.configure(Transport)
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.isRecentCommit(RevCommit)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUpperGroupCase2()
org.eclipse.jgit.revplot.PlotCommitList.nextFreeLane()
org.eclipse.jgit.util.sha1.SHA1.s1(int,int,int,int,int)
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.getObjectDatabase()
org.eclipse.jgit.internal.ketch.LocalReplica.describeForLog()
org.eclipse.jgit.api.StashCreateCommand.setIndexMessage(String)
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test4_FromString()
org.eclipse.jgit.internal.storage.pack.ObjectReuseAsIs.selectObjectRepresentation(PackWriter,ProgressMonitor,Iterable)
org.eclipse.jgit.lib.ThreadSafeProgressMonitor.start(int)
org.eclipse.jgit.transport.WalkRemoteObjectDatabase.readPackedRefsImpl(Map,BufferedReader)
org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote()
org.eclipse.jgit.notes.NoteMapTest.testShorteningNoteRefName()
org.eclipse.jgit.lib.AnyObjectId.compareTo(AnyObjectId)
org.eclipse.jgit.treewalk.TreeWalk.popEntriesEqual()
org.eclipse.jgit.internal.storage.pack.BinaryDelta.getBaseSize(byte)
org.eclipse.jgit.internal.storage.file.ReflogEntryImpl.getComment()
org.eclipse.jgit.internal.storage.reftree.Command.check(DirCacheEntry,Ref)
org.eclipse.jgit.diff.DiffFormatterReflowTest.testNegativeContextFails()
org.eclipse.jgit.internal.storage.pack.PackWriter.buffer(PackConfig,ObjectReader,AnyObjectId)
org.eclipse.jgit.transport.PacketLineInTest.testReadString_Len0003()
org.eclipse.jgit.internal.storage.file.BitSet.set(int)
org.eclipse.jgit.lib.ObjectStream.skip(long)
org.eclipse.jgit.diff.DiffFormatter.setOldPrefix(String)
org.eclipse.jgit.api.GarbageCollectCommand.setPreserveOldPacks(boolean)
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.selectCommits(int,Set)
org.eclipse.jgit.transport.PushCertificateStore.pathName(String)
org.eclipse.jgit.api.ArchiveCommand.replace(ConcurrentMap,K,V,V)
org.eclipse.jgit.api.CheckoutResult.getStatus()
org.eclipse.jgit.transport.TransportHttp.getOutputStream()
org.eclipse.jgit.internal.storage.pack.PackOutputStream.writeFileHeader(int,long)
org.eclipse.jgit.diff.DiffEntry.getScore()
org.eclipse.jgit.internal.storage.reftable.ReftableConfig.setMaxIndexLevels(int)
org.eclipse.jgit.pgm.Main.init(TextBuiltin)
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setIndexVersion(int)
org.eclipse.jgit.internal.ketch.KetchReplica.prepareTxnCommitted(List,ObjectId)
org.eclipse.jgit.treewalk.TreeWalk.getNameString()
org.eclipse.jgit.notes.LeafBucket.treeSize(int)
org.eclipse.jgit.lib.IndexDiff.getConflicting()
org.eclipse.jgit.internal.storage.file.PackFile.setInvalid()
org.eclipse.jgit.transport.PacketLineInTest.testReadACK_Invalid4()
org.eclipse.jgit.util.FileUtilsTest.testAtomicMove()
org.eclipse.jgit.internal.storage.file.PackIndexV1.idOffset(int)
org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare()
org.eclipse.jgit.transport.UploadPack.reportInternalServerErrorOverSideband()
org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_DirCacheTree()
org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder()
org.eclipse.jgit.transport.RemoteRefUpdate.isFastForward()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testFilePathSimpleCase()
org.eclipse.jgit.dircache.BaseDirCacheEditor.lastSlash(byte)
org.eclipse.jgit.transport.InsecureCipherFactory.create(String)
org.eclipse.jgit.notes.NoteMapMergerTest.testAddSameNoteDifferentContent()
org.eclipse.jgit.util.GitDateParserTest.shortWithSlash()
org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.dirty()
org.eclipse.jgit.attributes.AttributesHandlerTest.testNestedMatchNot()
org.eclipse.jgit.transport.BaseReceivePack.setAllowCreates(boolean)
org.eclipse.jgit.revwalk.FollowFilter.clone()
org.eclipse.jgit.api.PushCommand.setPushOptions(List)
org.eclipse.jgit.diff.MyersDiff.meets(int,int,int,long)
org.eclipse.jgit.util.FS.runHookIfPresent(Repository,String,String)
org.eclipse.jgit.api.PullCommand.setProgressMonitor(ProgressMonitor)
org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.setObjectDirectory(File)
org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onAppendBase(int,byte,PackedObjectInfo)
org.eclipse.jgit.lib.Config.getSubsections(String)
org.eclipse.jgit.diff.RawTextTest.testEmpty()
org.eclipse.jgit.transport.UploadPack.close()
org.eclipse.jgit.internal.storage.file.GcLog.lock(boolean)
org.eclipse.jgit.diff.DiffFormatter.findCombinedEnd(List,int)
org.eclipse.jgit.transport.PushCertificateStore.updateRef(ObjectId)
org.eclipse.jgit.dircache.DirCache.unlock()
org.eclipse.jgit.pgm.TagTest.setUp()
org.eclipse.jgit.revplot.PlotCommitList.recycleLane(L)
org.eclipse.jgit.transport.URIishTest.testGitProtoUnixPort()
org.eclipse.jgit.pgm.opt.CmdLineParser.getRevWalk()
org.eclipse.jgit.merge.ResolveMerger.setDirCache(DirCache)
org.eclipse.jgit.lib.ConfigTest.testUnsetBranchSection()
org.eclipse.jgit.api.Format.createArchiveOutputStream(OutputStream)
org.eclipse.jgit.util.SystemReader.getSimpleDateFormat(String,Locale)
org.eclipse.jgit.api.ResetCommandTest.testResetToNonexistingHEAD()
org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_2_f2_f14(Git,int)
org.eclipse.jgit.blame.BlameGenerator.push(Candidate)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onEndThinPack()
org.eclipse.jgit.internal.storage.reftable.ReftableTest.logScan()
org.eclipse.jgit.dircache.DirCacheCheckout.update(String,ObjectId,FileMode)
org.eclipse.jgit.transport.URIish.isRemote()
org.eclipse.jgit.pgm.Show.unified(int)
org.eclipse.jgit.ignore.IgnoreNodeTest.testNegation()
org.eclipse.jgit.attributes.FilterCommandFactory.create(Repository,InputStream,OutputStream)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_d()
org.eclipse.jgit.lib.IndexModificationTimesTest.testModify()
org.eclipse.jgit.junit.TestRng.nextBytes(int)
org.eclipse.jgit.pgm.AddTest.testAddNothing()
org.eclipse.jgit.transport.PushConnectionTest.setUp()
org.eclipse.jgit.transport.OpenSshConfigTest.testHostnameReplacement()
org.eclipse.jgit.util.NBTest.padb(int,int,int,int)
org.eclipse.jgit.transport.WalkEncryptionTest.folderDelete(String)
org.eclipse.jgit.lib.Config.getNames(String)
org.eclipse.jgit.pgm.Log.show(RevCommit)
org.eclipse.jgit.lib.IndexDiff.getAssumeUnchanged()
org.eclipse.jgit.test.resources.SampleDataRepositoryTestCase.copyCGitTestPacks(FileRepository)
org.eclipse.jgit.pgm.CheckoutTest.testCheckoutSelf()
org.eclipse.jgit.transport.PushCertificateStore.remove()
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapWalker.clone()
org.eclipse.jgit.archive.ZipFormat.suffixes()
org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.newReader()
org.eclipse.jgit.lib.Constants.decodeTypeString(AnyObjectId,byte,byte,MutableInteger)
org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.getMatchingPaths(ObjectId,TreeFilter,boolean)
org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_bad_encoded()
org.eclipse.jgit.diff.SimilarityRenameDetector.compute(ProgressMonitor)
org.eclipse.jgit.internal.storage.file.FileRepository.shouldAutoDetach()
org.eclipse.jgit.lib.RepositoryCacheTest.testCacheRegisterOpen()
org.eclipse.jgit.api.FetchCommand.getRecurseMode(String)
org.eclipse.jgit.transport.BasePackFetchConnection.markCommon(RevObject,AckNackResult)
org.eclipse.jgit.internal.storage.pack.BaseSearch.nextSlash(byte,int,int)
org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testAndMultiThreeSubPathNegate()
org.eclipse.jgit.blame.BlameResult.computeNext()
org.eclipse.jgit.transport.UploadPack.getDepth()
org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors2()
org.eclipse.jgit.util.io.AutoLFInputStreamTest.test(byte,byte,boolean)
org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange()
org.eclipse.jgit.transport.PushCertificateParser.fromString(String)
org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.testFindNextOffset()
org.eclipse.jgit.ignore.CGitIgnoreTest.createFiles(String)
org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl()
org.eclipse.jgit.pgm.debug.TextHashFunctions.include(String,List)
org.eclipse.jgit.lib.TextProgressMonitor.onUpdate(String,int)
org.eclipse.jgit.http.server.ObjectFileServlet.serve(HttpServletRequest,HttpServletResponse,boolean)
org.eclipse.jgit.revwalk.ObjectWalkTest.createRevWalk()
org.eclipse.jgit.gitrepo.RepoCommand.setRecommendShallow(boolean)
org.eclipse.jgit.internal.storage.dfs.DfsInserter.setCompressionLevel(int)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMixedGroupCase6()
org.eclipse.jgit.transport.PackParser.setCRC(int)
org.eclipse.jgit.util.GitDateParserTest.setUp()
org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest.testMissingSubtree_DetectFileAdded_FileModified()
org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFile()
org.eclipse.jgit.blame.BlameGenerator.reverse(AnyObjectId,Collection)
org.eclipse.jgit.transport.AtomicPushTest.pushAtomicClientGivesUpEarly()
org.eclipse.jgit.internal.storage.file.GC.getExpireDate()
org.eclipse.jgit.http.server.GitSmartHttpTools.writeSideBand(OutputStream,String)
org.eclipse.jgit.lib.RepositoryResolveTest.testDistance()
org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.testNoAttributes()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptSymbolicReference()
org.eclipse.jgit.lib.ConfigTest.testTimeUnitInvalidWithSection()
org.eclipse.jgit.lib.Sets.of(T)
org.eclipse.jgit.diff.MyersDiffTest.algorithm()
org.eclipse.jgit.internal.storage.file.WindowCache.get(PackFile,long)
org.eclipse.jgit.transport.ReceivedPackStatistics.addWholeObject(int)
org.eclipse.jgit.transport.RemoteRefUpdate.getSrcRef()
org.eclipse.jgit.util.TemporaryBufferTest.testHeapWithEstimatedSize()
org.eclipse.jgit.dircache.DirCacheCheckout.isModified_IndexTree(String,ObjectId,FileMode,ObjectId,FileMode,ObjectId)
org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaResultSize()
org.eclipse.jgit.util.RefListTest.testAddToFrontOfList()
org.eclipse.jgit.internal.storage.dfs.DfsInserter.read(byte,int,int)
org.eclipse.jgit.api.GitCommand.setCallable(boolean)
org.eclipse.jgit.diff.EditListTest.testAddOne()
org.eclipse.jgit.http.server.ObjectFileServlet.doGet(HttpServletRequest,HttpServletResponse)
org.eclipse.jgit.merge.ResolveMerger.getToBeCheckedOut()
org.eclipse.jgit.submodule.SubmoduleWalk.setFilter(TreeFilter)
org.eclipse.jgit.pgm.MergeTest.testSquash()
org.eclipse.jgit.transport.TransportAmazonS3.resolveKey(String)
org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree()
org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compare(DfsPackFile,DfsPackFile)
org.eclipse.jgit.api.RebaseCommand.writeRewrittenHashes()
org.eclipse.jgit.lib.Config.getRawStringList(String,String,String)
org.eclipse.jgit.transport.http.JDKHttpConnection.setDoOutput(boolean)
org.eclipse.jgit.util.RawParseUtils.parseTimeZoneOffset(byte,int)
org.eclipse.jgit.api.CommitCommand.setMessage(String)
org.eclipse.jgit.api.DescribeCommand.describe(ObjectId)
org.eclipse.jgit.storage.file.FileBasedConfig.clear()
org.eclipse.jgit.transport.Transport.open(Repository,URIish)
org.eclipse.jgit.lfs.SmudgeFilter.run()
org.eclipse.jgit.internal.storage.file.SimpleDataOutput.writeByte(int)
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoCommitter2()
org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick()
org.eclipse.jgit.transport.BaseReceivePack.failPendingCommands()
org.eclipse.jgit.ignore.CGitIgnoreTest.testStarMatchOnSlashNot()
org.eclipse.jgit.notes.LeafBucketTest.testRemoveLast()
org.eclipse.jgit.util.NBTest.b(int,int,int)
org.eclipse.jgit.transport.RefAdvertiser.advertiseId(AnyObjectId,String)
org.eclipse.jgit.lib.ObjectReader.abbreviate(AnyObjectId)
org.eclipse.jgit.lib.DirCacheCheckoutTest.getConflicts()
org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.updateBootstrap(RevWalk,ReceiveCommand)
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getEvictions()
org.eclipse.jgit.internal.storage.pack.GcCommitSelectionTest.testBitmapSpansNoMerges()
org.eclipse.jgit.transport.Transport.setPushOptions(List)
org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onStoreStream(byte,int,int)
org.eclipse.jgit.junit.MockSystemReader.blockUntil(Duration)
org.eclipse.jgit.transport.RefSpec.matchSource(String)
org.eclipse.jgit.transport.RefSpec.expandFromSourceImp(String)
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceWindows()
org.eclipse.jgit.lib.FileMode.fromBits(int)
org.eclipse.jgit.internal.storage.reftable.ReftableReader.seekLog(String,long)
org.eclipse.jgit.lib.ObjectChecker.report(ErrorType,AnyObjectId,String)
org.eclipse.jgit.http.test.HttpClientTests.testListRemoteWithoutLocalRepository()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled()
org.eclipse.jgit.junit.StrictWorkMonitor.start(int)
org.eclipse.jgit.errors.CorruptObjectException.getErrorType()
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.get()
org.eclipse.jgit.transport.URIish.getPort()
org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test4()
org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooterlikeLineInBody()
org.eclipse.jgit.patch.EditListTest.testHunkHeader()
org.eclipse.jgit.patch.FormatError.getLineText()
org.eclipse.jgit.http.server.IsLocalFilter.init(FilterConfig)
org.eclipse.jgit.transport.BaseReceivePack.getPushCertificate()
org.eclipse.jgit.ignore.internal.WildMatcher.matches(String,int,int,boolean)
org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict()
org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.assertEqual(CGitIndexRecord,DirCacheEntry)
org.eclipse.jgit.ignore.IgnoreNodeTest.testRepeatedNegationInDifferentFiles3()
org.eclipse.jgit.lib.RefUpdate.safeParseOld(RevWalk,AnyObjectId)
org.eclipse.jgit.revwalk.BlockRevQueue.isEmpty()
org.eclipse.jgit.transport.RemoteConfigTest.testAddURI()
org.eclipse.jgit.blame.BlameGenerator.getRepository()
org.eclipse.jgit.transport.FetchProcess.expandFetchTags()
org.eclipse.jgit.lib.ConfigSnapshot.names()
org.eclipse.jgit.transport.BaseReceivePack.executeCommands()
org.eclipse.jgit.internal.storage.dfs.PackInputStream.close()
org.eclipse.jgit.pgm.debug.VerifyReftable.verify(Ref,RefCursor)
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.setUp()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testMixedGroupCase0()
org.eclipse.jgit.util.NBTest.assertOutput(byte,byte,int)
org.eclipse.jgit.revwalk.FIFORevQueueTest.testAddLargeBlocks()
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getTotalRequestCount()
org.eclipse.jgit.api.AddCommandTest.testAttributesConflictingMatch()
org.eclipse.jgit.transport.PushProcessTest.openPush()
org.eclipse.jgit.api.PullCommandWithRebaseTest.assertFileContentsEqual(File,String)
org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.setReaderOptions(DfsReaderOptions)
org.eclipse.jgit.internal.storage.file.PackIndex.open(File)
org.eclipse.jgit.internal.ketch.ReplicaConfig.getCommitMethod()
org.eclipse.jgit.junit.JGitTestUtil.read(File)
org.eclipse.jgit.api.NameRevCommand.addRef(Ref)
org.eclipse.jgit.lfs.errors.CorruptLongObjectException.getContentHash()
org.eclipse.jgit.util.RelativeDateFormatterTest.testFormatMonths()
org.eclipse.jgit.events.WorkingTreeModifiedEvent.isEmpty()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.getBitmapCount()
org.eclipse.jgit.lib.ObjectChecker.setSkipList(ObjectIdSet)
org.eclipse.jgit.transport.ReceivedPackStatistics.getNumWholeTag()
org.eclipse.jgit.util.io.IsolatedOutputStream.close()
org.eclipse.jgit.transport.WalkEncryptionTest.fromSysFile()
org.eclipse.jgit.dircache.DirCache.cmp(byte,int,byte,int)
org.eclipse.jgit.api.RevertCommandTest.prepareRevert(Git)
org.eclipse.jgit.api.CloneCommand.setNoCheckout(boolean)
org.eclipse.jgit.treewalk.FileTreeIteratorTest.testDirCacheMatchingId()
org.eclipse.jgit.util.RelativeDateFormatterTest.testFormatDays()
org.eclipse.jgit.internal.storage.reftable.ReftableReader.byObjectId(AnyObjectId)
org.eclipse.jgit.util.LongMap.createArray(int)
org.eclipse.jgit.pgm.Show.noRenames(boolean)
org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.await(CountDownLatch)
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.mask(long,long)
org.eclipse.jgit.transport.URIishTest.testGetValidWithSlashDotGitSlashHumanishName()
org.eclipse.jgit.api.MergeResult.toString()
org.eclipse.jgit.transport.OpenSshConfigTest.testMultiHost()
org.eclipse.jgit.transport.BaseReceivePack.setAdvertisedRefs(Map,Set)
org.eclipse.jgit.transport.http.HttpConnection.getContentType()
org.eclipse.jgit.api.ApplyCommandTest.testNonASCII()
org.eclipse.jgit.internal.storage.dfs.DfsPackParser.writePackIndex()
org.eclipse.jgit.dircache.DirCacheTree.writeTree(DirCacheEntry,int,int,ObjectInserter)
org.eclipse.jgit.errors.RevisionSyntaxException.toString()
org.eclipse.jgit.transport.PushCertificateStoreTest.putMatchingWithNoMatchingRefsInBatchOnEmptyRef()
org.eclipse.jgit.awtui.AWTPlotRenderer.drawLabel(int,int,Ref)
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting3()
org.eclipse.jgit.internal.storage.file.ByteArrayWindow.setInput(int,Inflater)
org.eclipse.jgit.internal.storage.pack.PackWriter.writeBitmapIndex(OutputStream)
org.eclipse.jgit.attributes.Attributes.getState(String)
org.eclipse.jgit.lfs.lib.LongObjectIdTest.test008_notIsId()
org.eclipse.jgit.lib.RefUpdate.getOldObjectId()
org.eclipse.jgit.lib.RebaseTodoLine.toToken()
org.eclipse.jgit.merge.EolAwareOutputStream.isBeginln()
org.eclipse.jgit.merge.MergeConfig.getConfigForCurrentBranch(Repository)
org.eclipse.jgit.internal.storage.file.GcOrphanFilesTest.malformedIdxNotDeleted()
org.eclipse.jgit.internal.storage.file.InflatingBitSet.contains(int)
org.eclipse.jgit.lfs.server.s3.S3Repository.getDownloadAction(AnyLongObjectId)
org.eclipse.jgit.internal.storage.io.BlockSource.size()
org.eclipse.jgit.gitrepo.ManifestParser.endElement(String,String,String)
org.eclipse.jgit.pgm.ResetTest.testPathOptionHelp()
org.eclipse.jgit.api.CheckoutCommandTest.setUp()
org.eclipse.jgit.revwalk.RevTag.parseHeaders(RevWalk)
org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest.testBasic()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModified()
org.eclipse.jgit.api.StashListCommandTest.noStashRef()
org.eclipse.jgit.treewalk.filter.ByteArraySet.chainlength(byte)
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setObjectCount(long)
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.recreate(Ref,Ref)
org.eclipse.jgit.api.MergeResult.getCheckoutConflicts()
org.eclipse.jgit.util.NBTest.padb(int,int,int)
org.eclipse.jgit.revwalk.RevCommit.slowCarryFlags(FIFORevQueue,int)
org.eclipse.jgit.lib.DefaultTypedConfigGetter.notTimeUnit(String,String,String,String)
org.eclipse.jgit.fnmatch.FileNameMatcher.createMatcherForSuffix()
org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.makeNext(DeltaWindowEntry)
org.eclipse.jgit.storage.file.WindowCacheConfig.getDeltaBaseCacheLimit()
org.eclipse.jgit.lib.PersonIdent.getTimeZoneOffset()
org.eclipse.jgit.internal.storage.file.ByteWindow.contains(PackFile,long)
org.eclipse.jgit.lib.ObjectIdTest.testFromString_short()
org.eclipse.jgit.util.FileUtils.delete(File,int)
org.eclipse.jgit.util.io.AutoCRLFOutputStreamTest.assertNoCrLf(String,String)
org.eclipse.jgit.http.server.IsLocalFilter.doFilter(ServletRequest,ServletResponse,FilterChain)
org.eclipse.jgit.internal.storage.file.GcTestCase.fsTick()
org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryLastModified()
org.eclipse.jgit.attributes.TreeWalkAttributeTest.asSet(Attribute)
org.eclipse.jgit.revwalk.RevCommit.reset()
org.eclipse.jgit.api.DescribeCommandTest.modify(String)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_13()
org.eclipse.jgit.notes.FanoutBucket.hasNext()
org.eclipse.jgit.archive.TxzFormat.equals(Object)
org.eclipse.jgit.revwalk.RevObjectList.clear()
org.eclipse.jgit.internal.storage.reftable.MergedReftable.getReflogEntry()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.writeFileWithFolderName()
org.eclipse.jgit.pgm.RemoteTest.testSetUrlPush()
org.eclipse.jgit.revwalk.RevCommitList.fillTo(RevCommit,int)
org.eclipse.jgit.lib.RacyGitTests.testRacyGitDetection()
org.eclipse.jgit.gitrepo.RepoProject.addLinkFiles(Collection)
org.eclipse.jgit.junit.http.AccessEvent.getParameter(String)
org.eclipse.jgit.transport.OpenSshConfig.getIdentityFile()
org.eclipse.jgit.lib.Config.get(SectionParser)
org.eclipse.jgit.storage.file.FileRepositoryBuilder.create(File)
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.findOffset(DfsReader,AnyObjectId)
org.eclipse.jgit.junit.http.AppServer.setUp()
org.eclipse.jgit.dircache.DirCacheEntryTest.isValidPath(String)
org.eclipse.jgit.util.RefMap.resolveLoose(Ref)
org.eclipse.jgit.api.FetchCommand.call()
org.eclipse.jgit.patch.FileHeader.parseNewName(int,int)
org.eclipse.jgit.pgm.ArchiveTest.call()
org.eclipse.jgit.util.RawCharSequence.toString()
org.eclipse.jgit.transport.Transport.unregister(TransportProtocol)
org.eclipse.jgit.internal.storage.reftable.BlockReader.skipValue()
org.eclipse.jgit.internal.storage.file.GcLog.getLogExpiry()
org.eclipse.jgit.internal.storage.file.SimpleDataOutput.write(byte)
org.eclipse.jgit.api.EolRepositoryTest.test_ConfigEOL_lf()
org.eclipse.jgit.diff.RawTextIgnoreLeadingWhitespaceTest.testEqualsWithWhitespace()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testFilePathCase1()
org.eclipse.jgit.internal.storage.file.LocalCachedPack.getPackFilePath(String)
org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral()
org.eclipse.jgit.lib.Repository.exactRef(String)
org.eclipse.jgit.treewalk.TreeWalk.reset(AnyObjectId)
org.eclipse.jgit.lib.Repository.readGitDirectoryFile(String)
org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.assertIteration(FileMode,String,List)
org.eclipse.jgit.internal.storage.pack.PackWriter.setTagTargets(Set)
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.reportDeleteFailure(boolean,File)
org.eclipse.jgit.pgm.debug.ReadDirCache.run()
org.eclipse.jgit.api.CommitOnlyTest.prepare_f3(Git,int)
org.eclipse.jgit.junit.RepositoryTestCase.indexState(int)
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRefs_HeadsOnly()
org.eclipse.jgit.lfs.server.fs.UploadTest.testParallelUploads()
org.eclipse.jgit.api.CherryPickResult.getNewHead()
org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.checkLimits(WindowCacheConfig)
org.eclipse.jgit.transport.TrackingRefUpdate.getResult()
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.insertEmptyBlob()
org.eclipse.jgit.internal.ketch.ReplicaPushRequest.setRefs(Map)
org.eclipse.jgit.transport.BaseConnection.getMessages()
org.eclipse.jgit.merge.StrategyOneSided.getBaseCommitId()
org.eclipse.jgit.diff.RenameDetector.path(DiffEntry)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoRangesInOneGroupCase3()
org.eclipse.jgit.pgm.opt.CmdLineParser.parseArgument(String)
org.eclipse.jgit.lib.DirCacheCheckoutTest.checkout()
org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.getDirectory()
org.eclipse.jgit.util.FileUtils.createTempDir(String,String,File)
org.eclipse.jgit.util.Base64Test.testEncodeMatchesDecode()
org.eclipse.jgit.util.TemporaryBuffer.reachedInCoreLimit()
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.position(long)
org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_CorruptZLibStream()
org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.repackEmptyRepo_noPackCreated(boolean)
org.eclipse.jgit.diff.DiffFormatter.source(AbstractTreeIterator)
org.eclipse.jgit.transport.resolver.UploadPackFactory.create(C,Repository)
org.eclipse.jgit.revwalk.RevWalkUtils.count(RevWalk,RevCommit,RevCommit)
org.eclipse.jgit.pgm.CommitTest.testCommitPath()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testWordGroupCase5()
org.eclipse.jgit.http.server.ReceivePackServlet.log(Repository,Throwable)
org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.setUp()
org.eclipse.jgit.internal.storage.pack.DeltaEncoder.writeVarint(long)
org.eclipse.jgit.submodule.SubmoduleStatus.getIndexId()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testPunctGroupCase3()
org.eclipse.jgit.util.FS_Win32.discoverGitExe()
org.eclipse.jgit.transport.HttpAuthMethod.authorize(URIish,CredentialsProvider)
org.eclipse.jgit.api.ResetCommand.resetIndex(ObjectId)
org.eclipse.jgit.transport.JschConfigSessionFactory.getSession(URIish,CredentialsProvider,FS,int)
org.eclipse.jgit.http.test.SmartClientSmartServerTest.testPush_CreateBranch()
org.eclipse.jgit.revwalk.RevWalkUtils.findBranchesReachableFrom(RevCommit,RevWalk,Collection)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.insertPack(PackFile)
org.eclipse.jgit.revwalk.RevCommit.getRawBuffer()
org.eclipse.jgit.pgm.debug.VerifyReftable.scan(List,ReftableReader)
org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_CH_PROGRESS()
org.eclipse.jgit.lib.RefUpdate.safeParseNew(RevWalk,AnyObjectId)
org.eclipse.jgit.transport.PushCertificateParser.parseHeader(String,String)
org.eclipse.jgit.util.io.IsolatedOutputStream.tryCleanClose()
org.eclipse.jgit.lib.Repository.readOrigHead()
org.eclipse.jgit.transport.TestProtocol.getName()
org.eclipse.jgit.lib.ConfigSnapshot.sort(List)
org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testFilteringTreeFiltersSubtrees()
org.eclipse.jgit.transport.http.HttpConnection.getResponseMessage()
org.eclipse.jgit.transport.InternalPushConnection.run()
org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onPackFooter(byte)
org.eclipse.jgit.transport.BaseReceivePack.getRefLogIdent()
org.eclipse.jgit.transport.PushCertificateParserTest.testConcatPacketLines()
org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange()
org.eclipse.jgit.internal.ketch.LeaderSnapshot.getCommitted()
org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3()
org.eclipse.jgit.util.io.IsolatedOutputStream.interrupted(InterruptedException)
org.eclipse.jgit.util.LongMapTest.testLargeMap()
org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.estimatePackSize()
org.eclipse.jgit.transport.TransportAmazonS3.getRequiredFields()
org.eclipse.jgit.transport.URIish.toString()
org.eclipse.jgit.attributes.AttributesHandlerTest.testDirectoryMatchSubRecursive()
org.eclipse.jgit.internal.storage.file.PackLock.unlock()
org.eclipse.jgit.lib.CommitBuilder.setTreeId(AnyObjectId)
org.eclipse.jgit.internal.storage.pack.BinaryDelta.getResultSize(byte)
org.eclipse.jgit.api.AddCommandTest.testCleanFilterEnvironment()
org.eclipse.jgit.transport.WalkPushConnection.createNewRepository(List)
org.eclipse.jgit.merge.MergeResult.getSequences()
org.eclipse.jgit.api.DeleteBranchCommand.call()
org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoObject4()
org.eclipse.jgit.internal.storage.pack.DeltaTask.getAdjustedWeight(ObjectToPack)
org.eclipse.jgit.diff.DiffFormatter.writeGitLinkText(AbbreviatedObjectId)
org.eclipse.jgit.lib.AbbreviatedObjectId.fromObjectId(AnyObjectId)
org.eclipse.jgit.api.RebaseResult.getStatus()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.setPathHash(int)
org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedOld()
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getIndexVersion()
org.eclipse.jgit.pgm.debug.WriteReftable.run()
org.eclipse.jgit.lib.NullProgressMonitor.endTask()
org.eclipse.jgit.http.server.GitServlet.getInitParameter(String)
org.eclipse.jgit.internal.ketch.LocalReplica.update(Repository,ReplicaPushRequest,ProposedTimestamp)
org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory()
org.eclipse.jgit.dircache.DirCache.builder()
org.eclipse.jgit.transport.http.JDKHttpConnection.setRequestProperty(String,String)
org.eclipse.jgit.internal.storage.file.LargePackedWholeObject.openStream()
org.eclipse.jgit.internal.storage.dfs.DfsInserter.checkExisting(boolean)
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.length()
org.eclipse.jgit.util.FS_Win32.isCaseSensitive()
org.eclipse.jgit.api.EolRepositoryTest.gitCommit(Git,String)
org.eclipse.jgit.transport.WalkFetchConnection.recordError(AnyObjectId,Throwable)
org.eclipse.jgit.transport.URIishTest.testGetValidDotGitSlashHumanishName()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.fromHexString(byte,int,int)
org.eclipse.jgit.submodule.SubmoduleWalk.getDirectory()
org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testQuote_NamedEscapes()
org.eclipse.jgit.dircache.DirCacheTree.write(byte,OutputStream)
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.assertRefs(Object)
org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_badConnectionAttempts()
org.eclipse.jgit.transport.UploadPack.okToGiveUp()
org.eclipse.jgit.api.PullCommandTest.call()
org.eclipse.jgit.dircache.DirCacheBuilderTest.real(int)
org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoNonConflictingModifications()
org.eclipse.jgit.transport.BaseReceivePack.getRepository()
org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_BackwardsTwo()
org.eclipse.jgit.ignore.internal.PathMatcher.matches(String,boolean,boolean)
org.eclipse.jgit.transport.PackParser.readPackHeader()
org.eclipse.jgit.lib.DefaultTypedConfigGetter.getLong(Config,String,String,String,long)
org.eclipse.jgit.treewalk.AbstractTreeIterator.pathCompare(byte,int,int,int,int)
org.eclipse.jgit.transport.TransportGitAnon.close()
org.eclipse.jgit.notes.NoteMapMergerTest.tearDown()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.prefixOf(String)
org.eclipse.jgit.lib.ObjectIdSubclassMap.initTable(int)
org.eclipse.jgit.lib.CommitBuilder.setParentIds(List)
org.eclipse.jgit.diff.SimilarityRenameDetector.size(DiffEntry,Side,DiffEntry)
org.eclipse.jgit.http.server.GitServlet.getServletContext()
org.eclipse.jgit.internal.storage.file.PackFile.incrementTransientErrorCount()
org.eclipse.jgit.util.RawParseUtils_MatchTest.testMatch_Prefix()
org.eclipse.jgit.api.RebaseResult.result(RebaseResult,Status,RevCommit)
org.eclipse.jgit.api.RebaseCommand.doSquashFixup(boolean,RevCommit,RebaseTodoLine,File,File)
org.eclipse.jgit.revplot.PlotCommitList.setupChildren(PlotCommit)
org.eclipse.jgit.internal.storage.pack.DeltaTask.computeTopPaths()
org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.filter(String)
org.eclipse.jgit.api.AddCommandTest.testCleanFilterReturning12()
org.eclipse.jgit.pgm.Show.ignoreSpaceChange(boolean)
org.eclipse.jgit.transport.Daemon.create(DaemonClient,Repository)
org.eclipse.jgit.transport.PacketLineInTest.testReadACK_ACKready1()
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.getBitmapIndex()
org.eclipse.jgit.http.server.resolver.AsIsFileService.isEnabled(Repository)
org.eclipse.jgit.transport.http.apache.HttpClientConnection.usingProxy()
org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick()
org.eclipse.jgit.internal.storage.pack.DeltaTask.cost()
org.eclipse.jgit.util.RefList.find(String)
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.next()
org.eclipse.jgit.lib.ObjectIdOwnerMap.get(AnyObjectId)
org.eclipse.jgit.revwalk.RevWalkResetTest.clone()
org.eclipse.jgit.blame.BlameResult.hasSourceData(int,int)
org.eclipse.jgit.internal.ketch.LogIndex.toString()
org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl()
org.eclipse.jgit.notes.FanoutBucket.getBucket(int)
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRefs_HeadOnOneBranch()
org.eclipse.jgit.lib.ObjectChecker.checkTag(AnyObjectId,byte)
org.eclipse.jgit.revwalk.RevCommit.disposeBody()
org.eclipse.jgit.transport.SideBandOutputStreamTest.testConstructor_RejectsBadChannel()
org.eclipse.jgit.revwalk.ObjectWalk.enterTree(RevObject)
org.eclipse.jgit.api.RebaseCommand.createFile(String,String)
org.eclipse.jgit.http.server.glue.MetaFilter.getPipelines()
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.toEnvArray(Map)
org.eclipse.jgit.lib.IndexDiffTest.verifyStageState(StageState,int)
org.eclipse.jgit.diff.DiffFormatter.format(FileHeader,RawText,RawText)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.toTemp(SHA1,int,long,InputStream)
org.eclipse.jgit.internal.storage.pack.PackExt.getPosition()
org.eclipse.jgit.util.FS.lastModified(File)
org.eclipse.jgit.internal.storage.dfs.DfsReader.newReader()
org.eclipse.jgit.attributes.AttributesNodeTest.testEmptyLine()
org.eclipse.jgit.console.ConsoleAuthenticator.promptPasswordAuthentication()
org.eclipse.jgit.internal.storage.reftree.Scanner.createParserAtPath(ObjectReader,AnyObjectId,String)
org.eclipse.jgit.revplot.PlotCommitListTest.testTwoRoots2()
org.eclipse.jgit.merge.StrategyOneSided.getResultTreeId()
org.eclipse.jgit.util.GitDateParserTest.never()
org.eclipse.jgit.util.RawParseUtils.decodeNoFallback(Charset,byte,int,int)
org.eclipse.jgit.util.IntList.fillTo(int,int)
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.put(DfsBlock)
org.eclipse.jgit.lib.ObjectIdRef.getStorage()
org.eclipse.jgit.util.LongList.get(int)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testLowerGroupCase5()
org.eclipse.jgit.internal.storage.file.RefDirectory.scanTree(String,File)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testInitialCheckout()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testMixedGroupCase3()
org.eclipse.jgit.transport.PackParserTest.test1()
org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.newPack(PackSource,long)
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeRef(Ref,long)
org.eclipse.jgit.api.CloneCommand.setBranch(String)
org.eclipse.jgit.transport.http.HttpConnection.setHostnameVerifier(HostnameVerifier)
org.eclipse.jgit.lfs.lib.AnyLongObjectId.getSecondByte()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testIncompleteRangesInOneGroupCase1()
org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack2()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.writeFileInFolderModifiedAndCommit()
org.eclipse.jgit.diff.MyersDiff.getIndex(int,int)
org.eclipse.jgit.transport.TransportAmazonS3.readRef(TreeMap,String)
org.eclipse.jgit.diff.DiffConfig.parseRenameDetectionType(String)
org.eclipse.jgit.diff.DiffEntry.getId(Side)
org.eclipse.jgit.internal.storage.file.PackFileTest.digest(TemporaryBuffer,Heap)
org.eclipse.jgit.http.test.ErrorServletTest.setUp()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadNotExistingBranchConfig()
org.eclipse.jgit.revplot.PlotWalk.sort(RevSort,boolean)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testEscapedBracket4()
org.eclipse.jgit.treewalk.filter.NotTreeFilter.toString()
org.eclipse.jgit.gitrepo.RepoProject.getPathWithSlash()
org.eclipse.jgit.internal.storage.file.WindowCache.getOpenFiles()
org.eclipse.jgit.api.FetchCommand.isDryRun()
org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree()
org.eclipse.jgit.http.test.SmartClientSmartServerTest.destroy()
org.eclipse.jgit.revwalk.AsyncRevObjectQueue.next()
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapWalker.getCountOfBitmapIndexMisses()
org.eclipse.jgit.internal.storage.file.PackWriterTest.writePack(FileRepository,Set,Set)
org.eclipse.jgit.transport.PackParser.parse(ProgressMonitor,ProgressMonitor)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrueBinary()
org.eclipse.jgit.merge.RecursiveMergerTest.modifyIndex(IndexState,String,String)
org.eclipse.jgit.internal.storage.dfs.ReftableStack.close()
org.eclipse.jgit.diff.SimilarityIndex.findIndex(int)
org.eclipse.jgit.lib.DirCacheCheckoutTest.setupCase(HashMap,HashMap,HashMap)
org.eclipse.jgit.archive.ArchiveFormats.registerAll()
org.eclipse.jgit.pgm.ArchiveTest.listZipEntries(byte)
org.eclipse.jgit.revwalk.FIFORevQueue.next()
org.eclipse.jgit.errors.NoClosingBracketException.createMessage(int,String,String)
org.eclipse.jgit.patch.HunkHeader.getLinesAdded()
org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.write(Ref)
org.eclipse.jgit.attributes.AttributesHandlerTest.testCustomGlobalMacro2()
org.eclipse.jgit.diff.Edit.getType()
org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch()
org.eclipse.jgit.http.server.glue.SuffixPipeline.service(HttpServletRequest,HttpServletResponse)
org.eclipse.jgit.internal.storage.file.GcTagTest.lightweightTag_objectNotPruned()
org.eclipse.jgit.dircache.DirCacheLargePathTest.makeLongPath(int)
org.eclipse.jgit.attributes.CGitAttributesTest.testNestedMatchWithWildcard()
org.eclipse.jgit.internal.storage.pack.PackWriter.getBytes()
org.eclipse.jgit.util.io.TimeoutInputStreamTest.setUp()
org.eclipse.jgit.diff.DiffEntry.delete(String,AnyObjectId)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testEscapedExclamationMark()
org.eclipse.jgit.dircache.DirCache.lock(Repository,IndexChangedListener)
org.eclipse.jgit.lib.ConfigTest.testBooleanWithNoValue()
org.eclipse.jgit.util.FilterCommandsTest.setUp()
org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommitNormalTime()
org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEdits_MatchNone()
org.eclipse.jgit.revwalk.DepthWalk.getReinterestingFlag()
org.eclipse.jgit.transport.ReceiveCommand.filter(Iterable,Result)
org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin()
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.build()
org.eclipse.jgit.notes.DefaultNoteMergerTest.newNote(String)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testBlankGroupCase0()
org.eclipse.jgit.http.test.FileResolverTest.testExportOk()
org.eclipse.jgit.diff.DiffFormatter.getOutputStream()
org.eclipse.jgit.storage.pack.PackConfig.isPrunePreserved()
org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict()
org.eclipse.jgit.http.test.DumbClientSmartServerTest.data()
org.eclipse.jgit.internal.ketch.KetchSystem.getTxnAccepted()
org.eclipse.jgit.api.RebaseCommandTest.setUp()
org.eclipse.jgit.internal.ketch.RemoteGitReplica.copyStatusToResult()
org.eclipse.jgit.internal.storage.pack.PackOutputStream.write(int)
org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfigTest.blockSizeNotPowerOfTwoExpectsException()
org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.writeInt24(int)
org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_3(Git,int)
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPackedRefsLockFailure()
org.eclipse.jgit.lib.ValidRefNameTest.testUnicodeNames()
org.eclipse.jgit.api.AddCommandTest.testAddGitlink()
org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_Full()
org.eclipse.jgit.internal.storage.file.ObjectDirectory.fileFor(AnyObjectId)
org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue()
org.eclipse.jgit.lfs.server.s3.SignerV4.scope(String,String)
org.eclipse.jgit.internal.ketch.Proposal.notifyState(State)
org.eclipse.jgit.revwalk.AbstractRevQueue.everbodyHasFlag(int)
org.eclipse.jgit.nls.NLSTest.testNLSLocale()
org.eclipse.jgit.errors.NoMergeBaseException.getReason()
org.eclipse.jgit.transport.BaseReceivePack.write(byte)
org.eclipse.jgit.internal.storage.reftree.RefTree.toRef(ObjectReader,DirCacheEntry,String)
org.eclipse.jgit.util.FilterCommandsTest.testBuiltinCleanAndSmudgeFilter()
org.eclipse.jgit.util.StringUtils.replaceLineBreaksWithSpace(String)
org.eclipse.jgit.api.StashCreateCommandTest.validateStashedCommit(RevCommit)
org.eclipse.jgit.nls.NLSTest.testParallelThreadsWithDifferentLocales()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase6()
org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip()
org.eclipse.jgit.revwalk.RevTagParseTest.testOneType(int)
org.eclipse.jgit.dircache.DirCache.write()
org.eclipse.jgit.util.NBTest.testDecodeUInt24()
org.eclipse.jgit.diff.DiffEntry.getTreeFilterMarks()
org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeUndefined(String,String)
org.eclipse.jgit.gitrepo.RepoCommandTest.testTargetBranch()
org.eclipse.jgit.internal.storage.file.ReflogReaderImpl.getReverseEntry(int)
org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.multipleBranches()
org.eclipse.jgit.junit.TestRepository.edit(PathEdit)
org.eclipse.jgit.internal.storage.dfs.DfsReaderIoStats.getReadBitmapIndexCount()
org.eclipse.jgit.attributes.AttributesHandlerTest.testCyclicMacros()
org.eclipse.jgit.pgm.opt.RefSpecHandler.getDefaultMetaVariable()
org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir()
org.eclipse.jgit.transport.RefSpecTest.testExpandFromDestination_Wildcard()
org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getOutputStream(AnyLongObjectId)
org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.getMatchingPaths(ObjectId,TreeFilter)
org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsBare()
org.eclipse.jgit.transport.ReceivedPackStatistics.getNumOfsDelta()
org.eclipse.jgit.archive.ZipFormat.equals(Object)
org.eclipse.jgit.api.DescribeCommand.call()
org.eclipse.jgit.treewalk.AbstractTreeIterator.pathCompare(AbstractTreeIterator)
org.eclipse.jgit.gitrepo.RepoProject.inGroup(String)
org.eclipse.jgit.internal.storage.pack.PackWriter.willInclude(AnyObjectId)
org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip()
org.eclipse.jgit.transport.Transport.open(Repository,RemoteConfig,Operation)
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getReftableStats()
org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.elapsedMicros(long)
org.eclipse.jgit.api.TagCommand.isSigned()
org.eclipse.jgit.treewalk.filter.PathFilter.matchFilter(TreeWalk)
org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.exists()
org.eclipse.jgit.pgm.Branch.run()
org.eclipse.jgit.lib.UserConfig.system()
org.eclipse.jgit.pgm.ProxyConfigTest.testHttpProxy_lowerCase()
org.eclipse.jgit.internal.storage.reftable.BlockReader.readLogUpdateIndex()
org.eclipse.jgit.lib.ObjectChecker.isGit(byte,int)
org.eclipse.jgit.internal.storage.file.SimpleDataInput.readFloat()
org.eclipse.jgit.lib.SymbolicRef.getName()
org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.getRef(String)
org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test1_FromString()
org.eclipse.jgit.internal.storage.file.GcConcurrentTest.beginTask(String,int)
org.eclipse.jgit.pgm.Merge.noff(boolean)
org.eclipse.jgit.lib.BitmapIndex.iterator()
org.eclipse.jgit.transport.TransportAmazonS3.readLooseRefs(TreeMap)
org.eclipse.jgit.lfs.lib.AnyLongObjectId.compareTo(AnyLongObjectId)
org.eclipse.jgit.lib.ConfigTest.testReadUserConfigWithInvalidCharactersStripped()
org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail()
org.eclipse.jgit.junit.TestRepository.tag(String,RevObject)
org.eclipse.jgit.nls.GermanTranslatedBundle.get()
org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordShallowRecommendation()
org.eclipse.jgit.api.TagCommandTest.testDeleteFullName()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_1()
org.eclipse.jgit.patch.CombinedFileHeader.parseModeLine(int,int)
org.eclipse.jgit.patch.BinaryHunk.getEndOffset()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_e()
org.eclipse.jgit.awtui.AwtCredentialsProvider.interactive(URIish,CredentialItem)
org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsert()
org.eclipse.jgit.diff.Edit.getBeginA()
org.eclipse.jgit.util.RefList.addAll(Ref,int,int)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testDigitGroupCase1()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.toString()
org.eclipse.jgit.blame.BlameGenerator.newFlag(String)
org.eclipse.jgit.api.CleanCommand.call()
org.eclipse.jgit.lib.ObjectIdTest.test004_isId()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_b()
org.eclipse.jgit.attributes.AttributesNodeTest.testNegativePattern()
org.eclipse.jgit.http.server.ServletUtilsTest.testAcceptGzip()
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixNameExists()
org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_WeirdHeaderOnlyCommit()
org.eclipse.jgit.api.EolRepositoryTest.test_switchToBranchWithTextAttributes()
org.eclipse.jgit.api.PushCommand.getRemote()
org.eclipse.jgit.util.FileUtils.mkdirs(File)
org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged()
org.eclipse.jgit.http.server.glue.RegexGroupFilter.groupsFor(ServletRequest)
org.eclipse.jgit.transport.http.JDKHttpConnectionFactory.create(URL,Proxy)
org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete()
org.eclipse.jgit.transport.PackParserTest.packHeader(TemporaryBuffer,Heap,int)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.accept(File,String)
org.eclipse.jgit.transport.http.apache.HttpClientConnection.verify(String,SSLSocket)
org.eclipse.jgit.treewalk.AbstractTreeIterator.reset()
org.eclipse.jgit.internal.storage.reftable.ReftableTest.indexSeek()
org.eclipse.jgit.api.TagCommand.updateTagRef(ObjectId,RevWalk,String,String)
org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.addBitmap(AnyObjectId,EWAHCompressedBitmap,int)
org.eclipse.jgit.transport.http.apache.HttpClientConnection.getHeaderField(String)
org.eclipse.jgit.api.Status.getConflictingStageState()
org.eclipse.jgit.transport.RemoteConfigTest.testMirror()
org.eclipse.jgit.transport.WalkEncryptionTest.loadBouncyCastle()
org.eclipse.jgit.transport.URIish.toPrivateString()
org.eclipse.jgit.internal.storage.file.PackFileTest.setUp()
org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.newReader()
org.eclipse.jgit.internal.storage.dfs.DfsPacksChangedEvent.getListenerType()
org.eclipse.jgit.internal.storage.file.InflatingBitSet.or(EWAHCompressedBitmap)
org.eclipse.jgit.revwalk.TreeRevFilter.clone()
org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_PreferredAuthenticationsDefault()
org.eclipse.jgit.util.RefList.asList()
org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1()
org.eclipse.jgit.attributes.AttributesRule.toString()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.setDeltaAttempted(boolean)
org.eclipse.jgit.pgm.debug.TextHashFunctions.equals(RawText,int,RawText,int)
org.eclipse.jgit.internal.storage.pack.BaseSearch.modeForType(int)
org.eclipse.jgit.transport.resolver.FileResolver.isUnreasonableName(String)
org.eclipse.jgit.revwalk.RevWalk.assertNotStarted()
org.eclipse.jgit.dircache.DirCacheBuilder.keep(int,int)
org.eclipse.jgit.lib.TextProgressMonitor.onUpdate(String,int,int,int)
org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange()
org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.readOneBlock(long,DfsReader,ReadableChannel)
org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugLineWithASpaceAndSob()
org.eclipse.jgit.internal.storage.dfs.LargePackedWholeObject.getSize()
org.eclipse.jgit.revwalk.RevWalkCarryFlagsTest.testRevWalkCarryUninteresting_SlowClock()
org.eclipse.jgit.diff.MyersDiff.initialize(int,int,int,int)
org.eclipse.jgit.lib.CLIRepositoryTestCase.setUp()
org.eclipse.jgit.internal.fsck.FsckPackParser.readFromChannel(long)
org.eclipse.jgit.transport.TransportHttp.sendRequest()
org.eclipse.jgit.transport.SignedPushConfig.getNonceGenerator()
org.eclipse.jgit.revwalk.RevWalk.reset(int)
org.eclipse.jgit.api.LsRemoteCommand.setHeads(boolean)
org.eclipse.jgit.api.CleanCommandTest.testClean()
org.eclipse.jgit.lib.IndexDiffSubmoduleTest.setUp()
org.eclipse.jgit.revwalk.RevCommitList.indexOf(RevFlag,int)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.prunesNonGcReftables()
org.eclipse.jgit.util.io.UnionInputStream.pop()
org.eclipse.jgit.console.ConsoleCredentialsProvider.install()
org.eclipse.jgit.ignore.FastIgnoreRuleTest.testQuestionmarkDoNotMatch()
org.eclipse.jgit.junit.MockSystemReader.getClock()
org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommit2Parent()
org.eclipse.jgit.transport.PushCertificateParser.receiveSignature(PacketLineIn)
org.eclipse.jgit.http.server.NoCacheFilter.doFilter(ServletRequest,ServletResponse,FilterChain)
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testForceUpdateMissingObject()
org.eclipse.jgit.lib.ObjectCheckerTest.testRejectSpaceAtEndOnWindows()
org.eclipse.jgit.junit.http.SimpleHttpServer.open(HttpServletRequest,String)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirsAndNewIndexEntry()
org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadLineWithMissingComment()
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs()
org.eclipse.jgit.transport.PackParser.checkObjectCollision(AnyObjectId,int,byte)
org.eclipse.jgit.internal.storage.file.FileRepository.getGlobalAttributesNode()
org.eclipse.jgit.console.ConsoleCredentialsProvider.get(URIish,CredentialItem)
org.eclipse.jgit.internal.storage.file.PackFile.doClose()
org.eclipse.jgit.junit.TestRepositoryTest.tearDown()
org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.getPacks()
org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryObjectId()
org.eclipse.jgit.transport.TransportHttp.readSmartHeaders(InputStream,String)
org.eclipse.jgit.submodule.SubmoduleWalk.setModulesConfig(Config)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testSpecialGroupCase9()
org.eclipse.jgit.treewalk.FileTreeIteratorTest.testCustomFileModeStrategy()
org.eclipse.jgit.junit.JGitTestUtil.deleteTrashFile(Repository,String)
org.eclipse.jgit.pgm.BranchTest.testCreate()
org.eclipse.jgit.pgm.CLIGitCommand.executeRaw(String,Repository)
org.eclipse.jgit.util.IOReadLineTest.getParameters()
org.eclipse.jgit.pgm.Log.ignoreSpaceAtEol(boolean)
org.eclipse.jgit.lfs.server.s3.SignerV4.dateStamp(Date)
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompareByte()
org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.testFindObject()
org.eclipse.jgit.revwalk.MergeBaseGenerator.init(AbstractRevQueue)
org.eclipse.jgit.pgm.ArchiveTest.testTarPrefixOption()
org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onInflatedObjectData(PackedObjectInfo,int,byte)
org.eclipse.jgit.treewalk.CanonicalTreeParser.reset(ObjectReader,AnyObjectId)
org.eclipse.jgit.lib.RefComparator.compareTo(Ref,String)
org.eclipse.jgit.blame.Candidate.canMergeRegions(Candidate)
org.eclipse.jgit.dircache.DirCacheIteratorTest.testRemovedSubtree()
org.eclipse.jgit.attributes.Attribute.getKey()
org.eclipse.jgit.revwalk.TopoSortGenerator.outputType()
org.eclipse.jgit.api.Status.getChanged()
org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains()
org.eclipse.jgit.api.StashListCommandTest.singleStashedCommit()
org.eclipse.jgit.transport.TransportHttp.read(byte,int,int)
org.eclipse.jgit.merge.MergeChunk.getConflictState()
org.eclipse.jgit.transport.URIishTest.testGetSlashValidSlashDotGitSlashHumanishName()
org.eclipse.jgit.transport.BaseReceivePackTest.assertParseCommandFails(String)
org.eclipse.jgit.pgm.RevWalkTextBuiltin.addCommitterRevFilter(String)
org.eclipse.jgit.transport.UploadPack.refIdSet(Collection)
org.eclipse.jgit.transport.http.apache.HttpClientConnection.getHeaderFields()
org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.writeReftable(DfsObjDatabase,DfsPackDescription,ReftableCompactor)
org.eclipse.jgit.util.LongList.set(int,long)
org.eclipse.jgit.diff.EditTest.testType_Delete()
org.eclipse.jgit.lib.ConfigTest.testCombinedMergeOptions()
org.eclipse.jgit.lib.RefUpdate.link(String)
org.eclipse.jgit.pgm.opt.RevTreeHandler.getDefaultMetaVariable()
org.eclipse.jgit.revwalk.filter.CommitTimeRevFilter.clone()
org.eclipse.jgit.revwalk.RevFlagSet.remove(Object)
org.eclipse.jgit.console.ConsoleCredentialsProvider.get(CredentialItem,CharArrayType)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.createEmptyFolder()
org.eclipse.jgit.notes.LeafBucket.remove()
org.eclipse.jgit.lfs.server.fs.FileLfsServlet.createGson()
org.eclipse.jgit.api.ResetCommand.setRef(String)
org.eclipse.jgit.api.PullResult.toString()
org.eclipse.jgit.lib.ObjectChecker.checkTruncatedIgnorableUTF8(byte,int,int,AnyObjectId)
org.eclipse.jgit.lib.AnyObjectId.toHexCharArray(char)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeleted()
org.eclipse.jgit.revwalk.RevObjectTest.testRemoveRevFlagSet()
org.eclipse.jgit.util.RawParseUtils.extractBinaryString(byte,int,int)
org.eclipse.jgit.patch.FileHeader.p1(String)
org.eclipse.jgit.http.test.AsIsServiceTest.getRemoteUser()
org.eclipse.jgit.lib.ObjectCheckerTest.testValidTagHasNoTaggerHeader()
org.eclipse.jgit.api.Git.branchDelete()
org.eclipse.jgit.lib.Repository.getAdditionalHaves()
org.eclipse.jgit.transport.RefSpecTest.destinationWithWildcard()
org.eclipse.jgit.blame.Candidate.copy(RevCommit)
org.eclipse.jgit.transport.JschConfigSessionFactory.createDefaultJSch(FS)
org.eclipse.jgit.transport.RefSpecTest.invalidSlashAtStart()
org.eclipse.jgit.revwalk.RevFlagSet.iterator()
org.eclipse.jgit.lib.RepositoryCache.unregisterRepository(Key)
org.eclipse.jgit.util.Holder.set(T)
org.eclipse.jgit.dircache.DirCacheEntry.isUpdateNeeded()
org.eclipse.jgit.transport.JschSession.disconnect()
org.eclipse.jgit.transport.ReceivePack.setPushOptions(List)
org.eclipse.jgit.merge.StrategyResolve.newMerger(Repository)
org.eclipse.jgit.lib.Config.getNames(String,boolean)
org.eclipse.jgit.transport.TransportHttp.isValidRedirect(URL,String,String)
org.eclipse.jgit.util.RawParseUtils.decode(Charset,byte)
org.eclipse.jgit.lib.Constants.encodeASCII(long)
org.eclipse.jgit.revwalk.DateRevQueue.next()
org.eclipse.jgit.treewalk.filter.SkipWorkTreeFilter.shouldBeRecursive()
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided()
org.eclipse.jgit.internal.fsck.FsckPackParser.onBeginWholeObject(long,int,long)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b()
org.eclipse.jgit.util.NB.decodeUInt32(byte,int)
org.eclipse.jgit.lfs.lib.AnyLongObjectId.toHexByteArray()
org.eclipse.jgit.internal.storage.file.GC.prunePreserved()
org.eclipse.jgit.revwalk.filter.RevFilter.clone()
org.eclipse.jgit.transport.ServiceMayNotContinueException.isOutput()
org.eclipse.jgit.lib.BaseRepositoryBuilder.getGitDir()
org.eclipse.jgit.util.FS.shutdownAndAwaitTermination(ExecutorService)
org.eclipse.jgit.lib.IndexDiff.recordFileMode(String,FileMode)
org.eclipse.jgit.util.FileUtils.isSymlink(File)
org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate()
org.eclipse.jgit.http.test.HookMessageTest.setUp()
org.eclipse.jgit.pgm.Version.getBundleVersion()
org.eclipse.jgit.lib.PersonIdent.appendTimezone(StringBuilder,int)
org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyTo(byte,int)
org.eclipse.jgit.blame.Region.slideAndShrink(int)
org.eclipse.jgit.patch.CombinedFileHeader.parseIndexLine(int,int)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.getId()
org.eclipse.jgit.storage.pack.PackConfig.getSinglePack()
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.lockFor(DfsStreamKey,long)
org.eclipse.jgit.lfs.server.fs.LfsServerTest.putContent(String)
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversModifiedLoose()
org.eclipse.jgit.hooks.GitHook.doRun()
org.eclipse.jgit.revwalk.RevObjectTest.testRemoveRevFlag()
org.eclipse.jgit.pgm.TextBuiltin.getErrorWriter()
org.eclipse.jgit.internal.storage.file.PackWriterTest.swap(ObjectId,int,int)
org.eclipse.jgit.transport.InternalHttpServerGlue.setPeerUserAgent(ReceivePack,String)
org.eclipse.jgit.api.ArchiveCommand.writeArchive(Format)
org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testJustCommonPrefixIsNotMatch()
org.eclipse.jgit.transport.OpenSshConfig.parse(InputStream)
org.eclipse.jgit.api.Git.wrap(Repository)
org.eclipse.jgit.http.server.glue.UrlPipeline.doFilter(ServletRequest,ServletResponse)
org.eclipse.jgit.pgm.BranchTest.testDeleteMultiple()
org.eclipse.jgit.http.server.glue.UrlPipeline.getServletContext()
org.eclipse.jgit.dircache.DirCacheEntry.decodeTS(int)
org.eclipse.jgit.nls.NLSTest.testThreadTranslationBundleInheritance()
org.eclipse.jgit.revwalk.FooterLineTest.testShortKey()
org.eclipse.jgit.transport.PackParserTest.test2()
org.eclipse.jgit.internal.storage.file.GcTestCase.tearDown()
org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.shouldFetchSubmodulesWhenYes(boolean)
org.eclipse.jgit.internal.storage.file.DeltaBaseCache.reconfigure(WindowCacheConfig)
org.eclipse.jgit.dircache.BaseDirCacheEditor.nextSlash(byte,int)
org.eclipse.jgit.internal.storage.reftable.ReftableReader.readBlock(long,long)
org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.assertRenames(String)
org.eclipse.jgit.revwalk.FooterLineTest.testNoFooters_OneLineBodyWithLF()
org.eclipse.jgit.internal.storage.reftable.ReftableReader.seek(byte,byte,BlockReader,long,long)
org.eclipse.jgit.treewalk.AbstractTreeIterator.findFile(String)
org.eclipse.jgit.api.NameRevCommand.addPrefix(String)
org.eclipse.jgit.pgm.ArchiveTest.testTarPreservesContent()
org.eclipse.jgit.transport.ReceiveCommand.getRefName()
org.eclipse.jgit.util.sha1.SHA1Test.read(String,int)
org.eclipse.jgit.internal.storage.reftable.ReftableReader.blockSize()
org.eclipse.jgit.lib.ObjectLoader.cloneArray(byte)
org.eclipse.jgit.transport.BasePackPushConnection.push(ProgressMonitor,Map,OutputStream)
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.position()
org.eclipse.jgit.api.RebaseCommand.setOperation(Operation)
org.eclipse.jgit.api.Status.getModified()
org.eclipse.jgit.api.errors.AbortedByHookException.getHookName()
org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption()
org.eclipse.jgit.pgm.Daemon.requiresRepository()
org.eclipse.jgit.transport.PushCertificateStoreTest.assertCerts(String,PushCertificate)
org.eclipse.jgit.util.RawSubStringPatternTest.testBoundary()
org.eclipse.jgit.revwalk.RevWalk.freeFlag(int)
org.eclipse.jgit.transport.DaemonService.getCommandName()
org.eclipse.jgit.internal.storage.file.WindowCache.kill()
org.eclipse.jgit.transport.RefSpecTest.testSetForceUpdate()
org.eclipse.jgit.api.DescribeCommand.getObjectIdFromRef(Ref)
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.writeRef(String,AnyObjectId)
org.eclipse.jgit.notes.DefaultNoteMergerTest.tearDown()
org.eclipse.jgit.treewalk.FileTreeIteratorWithTimeControl.getEntryLastModified()
org.eclipse.jgit.treewalk.filter.PathFilter.getPath()
org.eclipse.jgit.revplot.AbstractPlotRenderer.computeDotSize(int)
org.eclipse.jgit.lfs.server.fs.DownloadTest.testDownloadNotFound()
org.eclipse.jgit.internal.storage.reftable.BlockReader.type()
org.eclipse.jgit.merge.MergeAlgorithmTest.T(String)
org.eclipse.jgit.pgm.Main.main(String)
org.eclipse.jgit.transport.OpenSshConfig.getConfig(String)
org.eclipse.jgit.internal.storage.dfs.DeltaBaseCacheTest.testCacheLruExpires2()
org.eclipse.jgit.http.test.AdvertiseErrorTest.open(HttpServletRequest,String)
org.eclipse.jgit.api.CommitCommandTest.reflogComments(List)
org.eclipse.jgit.transport.PushCertificateStore.next()
org.eclipse.jgit.transport.BundleFetchConnection.readSignature()
org.eclipse.jgit.internal.storage.reftable.ReftableTest.id(int)
org.eclipse.jgit.ignore.FastIgnoreRule.getNegation()
org.eclipse.jgit.revwalk.RevCommitList.clearFlag(RevFlag)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_d()
org.eclipse.jgit.util.io.IsolatedOutputStream.dirtyClose()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.next()
org.eclipse.jgit.transport.http.apache.HttpClientConnection.setInstanceFollowRedirects(boolean)
org.eclipse.jgit.transport.OpenSshConfigTest.testRepeatedLookups()
org.eclipse.jgit.lib.RepositoryCache.lenient(File,FS)
org.eclipse.jgit.merge.ResolveMerger.mergeFileModes(int,int,int)
org.eclipse.jgit.http.test.AsIsServiceTest.testDisabledSingleton()
org.eclipse.jgit.revplot.AbstractPlotRenderer.laneX(PlotLane)
org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutToNonExistingBranch()
org.eclipse.jgit.junit.http.AppServer.authBasic(ServletContextHandler,String)
org.eclipse.jgit.transport.PackParser.resolveDeltasWithExternalBases(ProgressMonitor)
org.eclipse.jgit.internal.storage.dfs.DfsPacksChangedEvent.dispatch(DfsPacksChangedListener)
org.eclipse.jgit.internal.storage.pack.PackWriter.getObjectSet()
org.eclipse.jgit.revwalk.DepthGenerator.next()
org.eclipse.jgit.internal.storage.file.ReflogReaderTest.iso(PersonIdent)
org.eclipse.jgit.lfs.lib.LfsPointerFilterTest.assertLfs(String,String)
org.eclipse.jgit.api.RebaseResult.isSuccessful()
org.eclipse.jgit.transport.PacketLineInTest.assertEOF()
org.eclipse.jgit.internal.fsck.FsckPackParser.onEndWholeObject(PackedObjectInfo)
org.eclipse.jgit.junit.http.SimpleHttpServer.smart(String)
org.eclipse.jgit.lib.DirCacheCheckoutTest.assertNoConflicts()
org.eclipse.jgit.pgm.CloneTest.testClone()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testWordroupCase5()
org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.stored(Ref)
org.eclipse.jgit.transport.ProgressSpinner.endTask(String)
org.eclipse.jgit.internal.storage.pack.PackWriter.prepareBitmapIndex(ProgressMonitor)
org.eclipse.jgit.util.ChangeIdUtilTest.testTimeAltersId()
org.eclipse.jgit.lib.BaseRepositoryBuilder.findGitDir()
org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.update(int)
org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testTreeWalk_LsFiles()
org.eclipse.jgit.attributes.AttributesHandlerTest.testExpandBuiltInMacro2()
org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.setUp()
org.eclipse.jgit.junit.TestRepository.noParents()
org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_SkipsSeenSubtree()
org.eclipse.jgit.api.DescribeCommand.compare(Candidate,Candidate)
org.eclipse.jgit.blame.BlameGenerator.setDiffAlgorithm(DiffAlgorithm)
org.eclipse.jgit.attributes.AttributesHandlerTest.testNestedMatchRecursive()
org.eclipse.jgit.util.FileUtilsTest.setUp()
org.eclipse.jgit.pgm.RmTest.multiplePathsShouldBeRemoved()
org.eclipse.jgit.internal.storage.file.PackFile.getPackName()
org.eclipse.jgit.archive.TgzFormat.createArchiveOutputStream(OutputStream,Map)
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.conflictThanksToDelete()
org.eclipse.jgit.revwalk.FooterLine.toString()
org.eclipse.jgit.transport.AtomicPushTest.commands()
org.eclipse.jgit.transport.URIishTest.testGetValidSlashHumanishName()
org.eclipse.jgit.lib.internal.WorkQueue.finalize()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testVerySimplePatternCase0()
org.eclipse.jgit.transport.RemoteConfig.setTagOpt(TagOpt)
org.eclipse.jgit.merge.ResolveMergerTest.checkFileReplacedByFolderInTheirs(MergeStrategy)
org.eclipse.jgit.ant.tasks.GitCloneTaskTest.shouldRaiseErrorOnNoUrl()
org.eclipse.jgit.diff.RawTextIgnoreTrailingWhitespaceTest.testEqualsWithoutWhitespace()
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.set(int)
org.eclipse.jgit.transport.URIish.eq(String,String)
org.eclipse.jgit.transport.OpenSshConfig.getStrictHostKeyChecking()
org.eclipse.jgit.internal.storage.file.RefDirectory.sleep(long)
org.eclipse.jgit.lib.RefUpdate.getPushCertificate()
org.eclipse.jgit.internal.storage.reftable.ReftableTest.oneSymbolicRef()
org.eclipse.jgit.internal.storage.file.PackIndex.cloneEntry()
org.eclipse.jgit.api.DescribeCommand.setMatch(String)
org.eclipse.jgit.lfs.lib.LongObjectId.toObjectId()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testSpaceGroupCase1()
org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testStopWalk()
org.eclipse.jgit.notes.DefaultNoteMergerTest.testIdenticalEdit()
org.eclipse.jgit.lib.UserConfig.isAuthorEmailImplicit()
org.eclipse.jgit.lib.RefUpdate.updateImpl(RevWalk,Store)
org.eclipse.jgit.transport.URIishTest.testFileWithNoneUserHomeWithTilde()
org.eclipse.jgit.dircache.DirCachePathEditTest.testPathEditShouldBeCalledForEachStage()
org.eclipse.jgit.internal.storage.file.SimpleDataOutput.writeDouble(double)
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.newBatchUpdate()
org.eclipse.jgit.api.CheckoutCommandTest.assertRepositoryCondition(int)
org.eclipse.jgit.transport.WalkEncryptionTest.textRead(File)
org.eclipse.jgit.revwalk.FollowFilter.shouldBeRecursive()
org.eclipse.jgit.lib.RepositoryCache.equals(Object)
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoTagHeader1()
org.eclipse.jgit.patch.FileHeader.extractFileLines(Charset)
org.eclipse.jgit.lib.BaseRepositoryBuilder.setupWorkTree()
org.eclipse.jgit.api.InitCommandTest.setUp()
org.eclipse.jgit.lib.RebaseTodoFile.nextParsableToken(byte,int,int)
org.eclipse.jgit.util.RefMapTest.testClear()
org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onObjectHeader(Source,byte,int,int)
org.eclipse.jgit.util.io.TimeoutInputStreamTest.testTimeout_readBuffer_Timeout()
org.eclipse.jgit.treewalk.WorkingTreeIterator.readSymlinkTarget(Entry)
org.eclipse.jgit.api.AddCommandTest.testAddRemovedCommittedFile()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packRest(ProgressMonitor)
org.eclipse.jgit.lib.RepositoryCache.hashCode()
org.eclipse.jgit.diff.SimilarityIndex.packedIndex(int)
org.eclipse.jgit.util.sha1.SHA1Test.shatteredStoredInGitBlob()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRef_NonExistingBranchConfig()
org.eclipse.jgit.transport.RemoteConfigTest.testRemoveFirstURI()
org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testAndMultiSubPathNegate()
org.eclipse.jgit.revwalk.DateRevQueueTest.testEmpty()
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.getType()
org.eclipse.jgit.transport.UploadPack.getPreUploadHook()
org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted(MergeStrategy)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testDollar()
org.eclipse.jgit.lib.CLIRepositoryTestCase.executeUnchecked(String)
org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked()
org.eclipse.jgit.http.test.GitServletResponseTests.onPreReceive(ReceivePack,Collection)
org.eclipse.jgit.notes.FanoutBucket.setBucket(int,InMemoryNoteBucket)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoGroupsCase0()
org.eclipse.jgit.transport.TransportGitSsh.checkExecFailure(int,String,String)
org.eclipse.jgit.transport.HttpAuthMethod.KD(String,String)
org.eclipse.jgit.internal.storage.file.FileRepository.scanForRepoChanges()
org.eclipse.jgit.revwalk.FooterLineTest.testNoFooters_ShortBodyNoLF()
org.eclipse.jgit.blame.BlameGenerator.push(BlobCandidate)
org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSimpleIterate()
org.eclipse.jgit.notes.NoteMapMerger.merge(int,InMemoryNoteBucket,InMemoryNoteBucket,InMemoryNoteBucket)
org.eclipse.jgit.ignore.IgnoreNode.isIgnored(String,boolean,boolean)
org.eclipse.jgit.util.GitDateFormatterTest.LOCAL()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.setEdge()
org.eclipse.jgit.ignore.CGitIgnoreTest.testDirectoryMatchSubRecursiveBacktrack5()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRefs_DiscoversModified()
org.eclipse.jgit.api.RebaseResult.getCurrentCommit()
org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting5()
org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD()
org.eclipse.jgit.util.SystemReader.getLocale()
org.eclipse.jgit.api.AddCommandTest.testBuiltinFilters(boolean)
org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.doUpdate(Result)
org.eclipse.jgit.transport.BaseReceivePack.needCheckConnectivity()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packIsExpiredGarbage(DfsPackDescription,long)
org.eclipse.jgit.lib.TreeFormatter.toByteArray()
org.eclipse.jgit.lib.Repository.readMergeHeads()
org.eclipse.jgit.ignore.FastIgnoreRuleTest.assertNotMatched(String,String)
org.eclipse.jgit.pgm.LsRemote.compare(Ref,Ref)
org.eclipse.jgit.lib.BatchRefUpdate.isMissing(RevWalk,ObjectId)
org.eclipse.jgit.dircache.DirCacheBuilder.resort()
org.eclipse.jgit.revwalk.RevCommit.getShortMessage()
org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits()
org.eclipse.jgit.util.HookTest.testFindPostCommitHook()
org.eclipse.jgit.diff.DiffFormatter.format(DiffEntry)
org.eclipse.jgit.http.server.HttpServerText.get()
org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.translate(ReceiveCommand,Result,Result)
org.eclipse.jgit.transport.UploadPack.getAdvertiseRefsHook()
org.eclipse.jgit.api.StashDropCommand.call()
org.eclipse.jgit.revwalk.RevWalkResetTest.requiresCommitBody()
org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.writeId(ObjectId)
org.eclipse.jgit.revwalk.RevCommitListTest.setup(int)
org.eclipse.jgit.treewalk.NameConflictTreeWalk.needsStopWalk()
org.eclipse.jgit.diff.DiffFormatter.setNewPrefix(String)
org.eclipse.jgit.internal.storage.dfs.DfsStreamKey.hashCode()
org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull()
org.eclipse.jgit.pgm.debug.ShowCacheTree.run()
org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleMediumSizeFileWithNewLine()
org.eclipse.jgit.transport.PushCertificateStore.load()
org.eclipse.jgit.treewalk.WorkingTreeIterator.current()
org.eclipse.jgit.pgm.debug.DiffAlgorithms.testOne(Test,RawText,RawText)
org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit()
org.eclipse.jgit.lib.TreeFormatter.computeId(ObjectInserter)
org.eclipse.jgit.transport.UploadPack.processShallow()
org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterLargerObjects()
org.eclipse.jgit.transport.HttpConfigTest.testMatchCaseSensitivity()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.writeHeader(int,int,byte)
org.eclipse.jgit.internal.storage.dfs.DfsReader.getOptions()
org.eclipse.jgit.lib.AsyncOperation.release()
org.eclipse.jgit.util.RefList.get(int)
org.eclipse.jgit.api.CleanCommand.setCleanDirectories(boolean)
org.eclipse.jgit.transport.RemoteConfigTest.testRemoveOnlyURI()
org.eclipse.jgit.util.RawSubStringPattern.toString()
org.eclipse.jgit.api.RemoteAddCommandTest.testAdd()
org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO()
org.eclipse.jgit.internal.storage.file.ObjectDirectory.resolve(Set,AbbreviatedObjectId,Set)
org.eclipse.jgit.internal.ketch.Proposal.isDone()
org.eclipse.jgit.lib.TreeFormatter.fmtBuf(byte,int,int,FileMode)
org.eclipse.jgit.patch.FormatError.getBuffer()
org.eclipse.jgit.blame.Candidate.clearRegionList()
org.eclipse.jgit.util.RefMap.put(String,Ref)
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.getBitmap(AnyObjectId)
org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2()
org.eclipse.jgit.lib.ConfigTest.test003_PutRemote()
org.eclipse.jgit.api.PushCommand.getRefLeaseSpecs()
org.eclipse.jgit.diff.RenameDetector.rejoinModifies(ProgressMonitor)
org.eclipse.jgit.treewalk.AbstractTreeIterator.needsStopWalk()
org.eclipse.jgit.util.FileUtilsTest.testRelativize_scheme()
org.eclipse.jgit.transport.RemoteConfig.getFetchRefSpecs()
org.eclipse.jgit.internal.storage.reftable.ReftableConfig.setLogBlockSize(int)
org.eclipse.jgit.lib.AbbreviatedObjectId.prefixCompare(byte,int)
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.getPackBitmapIndex()
org.eclipse.jgit.diff.RenameDetector.bestPathMatch(DiffEntry,List)
org.eclipse.jgit.util.FileUtils.isDirectory(File)
org.eclipse.jgit.treewalk.filter.ByteArraySet.length()
org.eclipse.jgit.revwalk.DateRevQueue.anybodyHasFlag(int)
org.eclipse.jgit.events.ChangeRecorder.reset()
org.eclipse.jgit.api.PushCommand.setReceivePack(String)
org.eclipse.jgit.lib.BatchRefUpdate.getRefLogIdent()
org.eclipse.jgit.treewalk.FileTreeIteratorTest.createNestedRepo()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGit3()
org.eclipse.jgit.util.io.TimeoutInputStream.getTimeout()
org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_UnstagedFile()
org.eclipse.jgit.api.ArchiveCommand.call()
org.eclipse.jgit.internal.storage.dfs.DfsReaderIoStats.getReadPackIndexCount()
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.newBitmapWalker()
org.eclipse.jgit.treewalk.filter.ByteArraySet.hash()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CycleInSymbolicRef()
org.eclipse.jgit.transport.Transport.getCredentialsProvider()
org.eclipse.jgit.transport.PushProcessTest.setUp()
org.eclipse.jgit.patch.PatchCcTest.testParse_CcDeleteFile()
org.eclipse.jgit.treewalk.WorkingTreeIterator.isModeDifferent(int)
org.eclipse.jgit.notes.NoteMapMergerTest.testEditDifferentNotes()
org.eclipse.jgit.lib.RepositoryCacheTest.testCacheOpen()
org.eclipse.jgit.revwalk.BlockRevQueue.peek()
org.eclipse.jgit.http.test.RegexPipelineTest.testSimpleRegex()
org.eclipse.jgit.storage.file.WindowCacheConfig.getPackedGitLimit()
org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath1()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnoredNotHonored()
org.eclipse.jgit.internal.storage.reftree.Command.getNewRef()
org.eclipse.jgit.revwalk.FixUninterestingGenerator.next()
org.eclipse.jgit.lib.RebaseTodoFile.writeRebaseTodoFile(String,List,boolean)
org.eclipse.jgit.pgm.debug.WriteDirCache.run()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1.readBitmap(DataInput)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.hashCode()
org.eclipse.jgit.transport.BasePackConnection.noRepository()
org.eclipse.jgit.dircache.DirCacheTree.validate(DirCacheEntry,int,int,int)
org.eclipse.jgit.internal.storage.file.PackFile.shouldBeKept()
org.eclipse.jgit.lib.ReflogConfigTest.testlogAllRefUpdates()
org.eclipse.jgit.diff.SimilarityIndex.grow()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagInvalidTaggerHeader1()
org.eclipse.jgit.transport.PushCertificateStoreTest.setUp()
org.eclipse.jgit.transport.PushCertificateIdent.getName()
org.eclipse.jgit.revwalk.DepthGenerator.outputType()
org.eclipse.jgit.util.RefMapTest.toList(Ref)
org.eclipse.jgit.revwalk.RevTag.getObject()
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.requiresCommitBody()
org.eclipse.jgit.transport.NetRC.complete()
org.eclipse.jgit.notes.DefaultNoteMerger.merge(Note,Note,Note,ObjectReader,ObjectInserter)
org.eclipse.jgit.pgm.Config.run()
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test30_stripWorkDir()
org.eclipse.jgit.internal.storage.file.ReflogEntryImpl.getNewId()
org.eclipse.jgit.lib.BranchTrackingStatusTest.setUp()
org.eclipse.jgit.transport.PushCertificate.getNonceStatus()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e()
org.eclipse.jgit.revwalk.filter.OrRevFilter.toString()
org.eclipse.jgit.submodule.SubmoduleUpdateTest.apply(DirCacheEntry)
org.eclipse.jgit.util.TemporaryBuffer.switchToOverflow()
org.eclipse.jgit.api.AddNoteCommand.setNotesRef(String)
org.eclipse.jgit.api.PullCommand.setTagOpt(TagOpt)
org.eclipse.jgit.http.test.AsIsServiceTest.setUp()
org.eclipse.jgit.transport.TransportHttp.read()
org.eclipse.jgit.transport.resolver.FileResolver.open(C,String)
org.eclipse.jgit.internal.storage.file.PackWriterTest.testShallowFetchShallowAncestorDepth2()
org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjects()
org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyCannotCreateSubdirectory()
org.eclipse.jgit.http.test.AsIsServiceTest.testCreate_Enabled()
org.eclipse.jgit.lib.RefRename.getResult()
org.eclipse.jgit.merge.ResolveMerger.setWorkingTreeIterator(WorkingTreeIterator)
org.eclipse.jgit.pgm.Branch.addRefs(Collection,String)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.compactReftable(DfsPackDescription,ReftableCompactor)
org.eclipse.jgit.lib.ProgressMonitor.start(int)
org.eclipse.jgit.transport.WalkRemoteObjectDatabase.writeFile(String,ProgressMonitor,String)
org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject()
org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.setType(String)
org.eclipse.jgit.revwalk.TreeRevFilter.requiresCommitBody()
org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch()
org.eclipse.jgit.lib.ConfigSnapshot.first(List,int,String,String,String)
org.eclipse.jgit.pgm.ArchiveTest.testTarPreservesMode()
org.eclipse.jgit.revwalk.ObjectWalk.reset(int)
org.eclipse.jgit.transport.BaseReceivePack.getRevWalk()
org.eclipse.jgit.util.IO.readLine(Reader,int)
org.eclipse.jgit.attributes.AttributesHandlerTest.testDirectoryMatch()
org.eclipse.jgit.internal.storage.file.LockFile.createCommitSnapshot()
org.eclipse.jgit.lib.ConfigSnapshot.iterator()
org.eclipse.jgit.internal.storage.reftree.RefTreeTest.setUp()
org.eclipse.jgit.junit.RepositoryTestCase.createEntry(String,FileMode,int,String)
org.eclipse.jgit.http.test.SmartClientSmartServerTest.testInitialClone_WithAuthentication()
org.eclipse.jgit.internal.ketch.RemoteGitReplica.describeForLog()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.clearExtendedFlag(int)
org.eclipse.jgit.api.Status.hasUncommittedChanges()
org.eclipse.jgit.transport.WalkRemoteObjectDatabase.readAlternates(String)
org.eclipse.jgit.pgm.RemoteTest.testRemove()
org.eclipse.jgit.transport.PreReceiveHookChain.newChain(List)
org.eclipse.jgit.util.io.UnionInputStreamTest.testArrayConstructor()
org.eclipse.jgit.transport.TransportAmazonS3.deleteFile(String)
org.eclipse.jgit.util.FileUtil.normalize(File)
org.eclipse.jgit.transport.UploadPack.write(byte,int,int)
org.eclipse.jgit.transport.TransportHttp.overflow()
org.eclipse.jgit.lib.RefDatabase.exactRef(String)
org.eclipse.jgit.util.FileUtils.setLastModified(File,long)
org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchMultipleConfigValues()
org.eclipse.jgit.lib.DefaultTypedConfigGetter.getTimeUnit(Config,String,String,String,long,TimeUnit)
org.eclipse.jgit.revwalk.RevWalk.allocFlag()
org.eclipse.jgit.transport.RemoteConfig.getUploadPack()
org.eclipse.jgit.transport.PackParser.checkIfTooLarge(int,long)
org.eclipse.jgit.api.Callback.fetchingSubmodule(String)
org.eclipse.jgit.attributes.TreeWalkAttributeTest.testRules()
org.eclipse.jgit.dircache.DirCacheEntry.setObjectIdFromRaw(byte,int)
org.eclipse.jgit.transport.CredentialItem.clear()
org.eclipse.jgit.attributes.AttributesHandlerTest.assertIteration(FileMode,String)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithPureGarbageAndRereferencingGarbage()
org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_NoParents()
org.eclipse.jgit.treewalk.WorkingTreeIterator.possiblyFilteredInputStream(Entry,InputStream,long)
org.eclipse.jgit.revwalk.filter.RevFlagFilter.hasAny(RevFlagSet)
org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheTest.weirdBlockSize()
org.eclipse.jgit.lib.ObjectChecker.setIgnore(Set)
org.eclipse.jgit.lfs.server.fs.FileLfsRepository.toHexCharArray(int)
org.eclipse.jgit.api.BlameCommandTest.testRename(String,String)
org.eclipse.jgit.internal.storage.pack.DeltaWindow.clear(DeltaWindowEntry)
org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget()
org.eclipse.jgit.revplot.PlotCommitListTest.testMergeBlockedByOther()
org.eclipse.jgit.transport.Connection.getRefs()
org.eclipse.jgit.util.time.MonotonicSystemClock.propose()
org.eclipse.jgit.transport.BaseReceivePack.isAtomic()
org.eclipse.jgit.internal.storage.pack.BinaryDelta.apply(byte,byte)
org.eclipse.jgit.transport.TransportGitSsh.openPush()
org.eclipse.jgit.transport.WalkEncryptionTest.test_A1_ValidURI()
org.eclipse.jgit.internal.storage.file.WindowCache.tableSize(WindowCacheConfig)
org.eclipse.jgit.api.PullCommandTest.testPullMerge()
org.eclipse.jgit.internal.ketch.Proposal.addProposedTimestamp(ProposedTimestamp)
org.eclipse.jgit.internal.storage.pack.PackWriter.getReusedDeltas()
org.eclipse.jgit.revwalk.BoundaryGenerator.outputType()
org.eclipse.jgit.revwalk.DateRevQueue.peek()
org.eclipse.jgit.ignore.IgnoreNodeTest.testNegateAllExceptJavaInSrc()
org.eclipse.jgit.internal.storage.file.SimpleDataOutput.writeBoolean(boolean)
org.eclipse.jgit.util.QuotedStringBourneStyleTest.testDequote_Empty2()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testEscapedHash()
org.eclipse.jgit.treewalk.WorkingTreeIterator.encodeName(CharsetEncoder)
org.eclipse.jgit.transport.SideBandInputStream.readString(int)
org.eclipse.jgit.http.test.ProtocolErrorTest.open(HttpServletRequest,String)
org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.init(RevWalk)
org.eclipse.jgit.util.TemporaryBufferTest.testDestroyWhileOpen()
org.eclipse.jgit.transport.HttpConfig.defaultedPort(int,String)
org.eclipse.jgit.revwalk.RevTag.getFullMessage()
org.eclipse.jgit.internal.storage.dfs.DfsBlock.setInput(long,Inflater)
org.eclipse.jgit.transport.OpenSshConfigTest.testMissingArgument()
org.eclipse.jgit.submodule.SubmoduleAddTest.commandWithNullPath()
org.eclipse.jgit.diff.HistogramDiff.diffNonCommon(EditList,HashedSequenceComparator,HashedSequence,HashedSequence,Edit)
org.eclipse.jgit.pgm.Merge.isMergedInto(Ref,AnyObjectId)
org.eclipse.jgit.transport.ReceivePack.setEchoCommandFailures(boolean)
org.eclipse.jgit.lib.Repository.readCommitEditMsg()
org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_UnknownEscapeQ()
org.eclipse.jgit.internal.storage.file.ObjectDirectory.openPackedObject(WindowCursor,AnyObjectId)
org.eclipse.jgit.lib.ObjectChecker.getMessageId()
org.eclipse.jgit.api.EolStreamTypeUtilTest.testCheckinLF()
org.eclipse.jgit.transport.PackParser.indexOneObject()
org.eclipse.jgit.merge.RecursiveMergerTest.contentAsString(Repository,ObjectId,String)
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.write(File,String)
org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitOneParentShallow()
org.eclipse.jgit.internal.storage.file.RefDirectory.stored(RefDirectoryUpdate,FileSnapshot)
org.eclipse.jgit.internal.storage.reftree.Scanner.refName(CanonicalTreeParser,boolean)
org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test3_FromString()
org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo1()
org.eclipse.jgit.revwalk.RevTagParseTest.testParse_implicit_UTF8_encoded()
org.eclipse.jgit.gitrepo.RepoCommandTest.androidSetup()
org.eclipse.jgit.notes.NoteParser.isTree()
org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.testRules()
org.eclipse.jgit.lib.AnyObjectId.copyRawTo(OutputStream)
org.eclipse.jgit.http.test.AsIsServiceTest.testCreate_Disabled()
org.eclipse.jgit.gitrepo.ManifestParser.isNestedReferencefile(ReferenceFile)
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getHitRatio()
org.eclipse.jgit.api.RemoveNoteCommand.call()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_FetchHead()
org.eclipse.jgit.pgm.ProxyConfigTest.testHttpsProxy_bothCases()
org.eclipse.jgit.merge.MergeResult.setContainsConflicts(boolean)
org.eclipse.jgit.internal.ketch.Proposal.abort()
org.eclipse.jgit.transport.FetchProcess.askForIsComplete()
org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_PackedGitWindowSize_4097()
org.eclipse.jgit.blame.ReverseWalk.next()
org.eclipse.jgit.api.CherryPickCommand.setStrategy(MergeStrategy)
org.eclipse.jgit.treewalk.TreeWalk.addTree(AnyObjectId)
org.eclipse.jgit.api.FetchCommand.setRecurseSubmodules(FetchRecurseSubmodulesMode)
org.eclipse.jgit.internal.storage.reftable.ReftableTest.seekNotFound()
org.eclipse.jgit.api.EolRepositoryTest.test_ConfigAutoCRLF_input_ConfigEOL_lf()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_NonFastForwardAborts()
org.eclipse.jgit.transport.HttpConfigUriPathTest.testSegmentCompare()
org.eclipse.jgit.merge.Merger.getObjectInserter()
org.eclipse.jgit.pgm.internal.CLIText.formatLine(String)
org.eclipse.jgit.patch.Patch.parse(byte,int,int)
org.eclipse.jgit.transport.UploadPack.write(byte)
org.eclipse.jgit.api.Callback.cloningSubmodule(String)
org.eclipse.jgit.util.RefList.set(int,T)
org.eclipse.jgit.internal.storage.file.DeltaBaseCache.store(PackFile,long,byte,int)
org.eclipse.jgit.merge.RecursiveMergerTest.apply(DirCacheEntry)
org.eclipse.jgit.revwalk.AlwaysEmptyRevQueueTest.testClear()
org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidTree4()
org.eclipse.jgit.treewalk.NameConflictTreeWalk.popEntriesEqual()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor6()
org.eclipse.jgit.api.RebaseCommandTest.testOnlyCommentRebaseTodo()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c()
org.eclipse.jgit.notes.NoteParser.parseLeafTree()
org.eclipse.jgit.merge.MergeAlgorithmTest.testDeleteVsModify()
org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate()
org.eclipse.jgit.transport.URIishTest.testGetValidWithEmptySlashDotGitHumanishName()
org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(TreeWalk)
org.eclipse.jgit.api.MergeCommand.updateHead(StringBuilder,ObjectId,ObjectId)
org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testEmptyTree()
org.eclipse.jgit.merge.ResolveMerger.nonTree(int)
org.eclipse.jgit.internal.ketch.KetchReplica.call()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRefs_DetachedHead()
org.eclipse.jgit.transport.http.HttpConnection.setRequestMethod(String)
org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_REVERSE()
org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsTwo()
org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.getTree(int)
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.reflogOnLockFailure()
org.eclipse.jgit.util.LongMap.grow()
org.eclipse.jgit.http.server.glue.UrlPipeline.service(HttpServletRequest,HttpServletResponse)
org.eclipse.jgit.util.io.TimeoutInputStreamTest.assertTimeout()
org.eclipse.jgit.util.FS.createSymLink(File,String)
org.eclipse.jgit.internal.storage.file.PackIndexV1Test.getFileForPack34be9032()
org.eclipse.jgit.revwalk.RevCommit.getParents()
org.eclipse.jgit.api.EolRepositoryTest.test_switchToBranchWithBinaryAttributes()
org.eclipse.jgit.storage.file.WindowCacheConfig.isPackedGitMMAP()
org.eclipse.jgit.pgm.DescribeTest.testDescribeCommitNoMatch()
org.eclipse.jgit.revwalk.RevCommit.defer(RevCommit)
org.eclipse.jgit.api.PullCommandTest.assertFileContentsEqual(File,String)
org.eclipse.jgit.internal.storage.file.StoredBitmapTest.testGetBitmapWithOneXor()
org.eclipse.jgit.lib.ReflogEntry.parseCheckout()
org.eclipse.jgit.lib.ReflogResolveTest.resolveNonExistingBranch()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testCombinedRangesInOneGroupCase2()
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefKeySameAsName()
org.eclipse.jgit.api.StashCreateCommandTest.createTreeWalk()
org.eclipse.jgit.blame.BlameResult.getSourceLine(int)
org.eclipse.jgit.pgm.StatusTest.testStatusPorcelainUntrackedFilesNo()
org.eclipse.jgit.internal.storage.file.ObjectDirectory.openAlternate(File)
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.restartInterval()
org.eclipse.jgit.junit.http.AccessEvent.getParameters()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testTwoGroupsCase2()
org.eclipse.jgit.transport.resolver.FileResolver.exportDirectory(File)
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getObjectCount(DfsReader)
org.eclipse.jgit.transport.UploadPack.parseWants()
org.eclipse.jgit.util.io.AutoCRLFOutputStream.close()
org.eclipse.jgit.api.CheckoutResult.getRemovedList()
org.eclipse.jgit.transport.TransportHttp.execute()
org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.fakeWalk(String)
org.eclipse.jgit.transport.PacketLineOut.end()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1.getObject(int)
org.eclipse.jgit.lib.ObjectStream.getType()
org.eclipse.jgit.attributes.AttributesHandler.mergePerDirectoryEntryAttributes(String,int,boolean,WorkingTreeIterator,DirCacheIterator,CanonicalTreeParser,Attributes)
org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias()
org.eclipse.jgit.api.DescribeCommandTest.testDescribeMultiMatch()
org.eclipse.jgit.lib.ObjectReader.getObjectId()
org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_OldStyle()
org.eclipse.jgit.diff.SimilarityIndex.hash(byte,int,int)
org.eclipse.jgit.internal.ketch.Proposal.format(StringBuilder,Ref,String)
org.eclipse.jgit.lib.ConfigTest.parse(String,Config)
org.eclipse.jgit.transport.HttpConfig.compare(String,String)
org.eclipse.jgit.lib.Config.fireConfigChangedEvent()
org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryPathHashCode()
org.eclipse.jgit.http.test.HttpClientTests.testListRemote_Dumb_NoHEAD()
org.eclipse.jgit.api.CreateBranchCommand.setUpstreamMode(SetupUpstreamMode)
org.eclipse.jgit.util.io.NullOutputStream.write(byte)
org.eclipse.jgit.api.BranchCommandTest.testCreateFromCommit()
org.eclipse.jgit.util.RefMapTest.testEmpty_WithPrefix()
org.eclipse.jgit.revwalk.RevBlob.parseHeaders(RevWalk)
org.eclipse.jgit.patch.PatchTest.testEmpty()
org.eclipse.jgit.nls.NLSTest.run()
org.eclipse.jgit.lib.BaseRepositoryBuilder.guessWorkTreeOrFail()
org.eclipse.jgit.util.FileUtil.isHidden(File)
org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits()
org.eclipse.jgit.revwalk.RewriteGenerator.next()
org.eclipse.jgit.api.NameRevCommand.add(Iterable)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testFolderFileConflict()
org.eclipse.jgit.internal.storage.file.GC.getPackExpireDate()
org.eclipse.jgit.api.MergeCommand.valueOf(FastForwardMode)
org.eclipse.jgit.fnmatch.CharacterHead.toString()
org.eclipse.jgit.internal.ketch.KetchReplica.hasAccepted(LogIndex)
org.eclipse.jgit.pgm.FetchTest.setUp()
org.eclipse.jgit.transport.Transport.open(Repository,RemoteConfig)
org.eclipse.jgit.internal.storage.file.RefDirectoryRename.renameLog(RefUpdate,RefUpdate)
org.eclipse.jgit.internal.storage.dfs.DfsReader.quickCopy(DfsPackFile,long,long)
org.eclipse.jgit.blame.BlameGenerator.result(Candidate)
org.eclipse.jgit.treewalk.FileTreeIterator.getFile()
org.eclipse.jgit.util.RawParseUtils.next(byte,int,char)
org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_OneDeleteManyAdds()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidParent4()
org.eclipse.jgit.util.io.ThrowingPrintWriter.print(char)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.writeFileInFolderUntracked()
org.eclipse.jgit.util.SystemReader.getTimeZone()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMixedGroupCase0()
org.eclipse.jgit.http.server.GitFilter.init(FilterConfig)
org.eclipse.jgit.internal.storage.dfs.DfsRefRename.doRename()
org.eclipse.jgit.transport.URIishTest.testSshProtoWithEmailUserPassAndPort()
org.eclipse.jgit.internal.storage.file.PackWriterTest.testDeltaStatistics()
org.eclipse.jgit.lib.ObjectId.fromRaw(byte)
org.eclipse.jgit.http.server.GitFilter.setReceivePackFactory(ReceivePackFactory)
org.eclipse.jgit.treewalk.filter.InterIndexDiffFilter.toString()
org.eclipse.jgit.transport.TransportBundleFile.canHandle(URIish,Repository,String)
org.eclipse.jgit.util.io.IsolatedOutputStream.call()
org.eclipse.jgit.transport.TransportLocal.open(URIish)
org.eclipse.jgit.revwalk.RevWalkTestCase.getDate()
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getMaxUpdateIndex()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.writeFileInFolderModified()
org.eclipse.jgit.transport.StringReader.read()
org.eclipse.jgit.lib.Repository.resolveSimple(String)
org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.openPack(File)
org.eclipse.jgit.lib.ObjectReader.close()
org.eclipse.jgit.internal.storage.reftable.RefCursor.wasDeleted()
org.eclipse.jgit.gitrepo.RepoCommandTest.testRelative(String,String,String)
org.eclipse.jgit.notes.NotesMergeConflictException.name(NonNoteEntry)
org.eclipse.jgit.lib.ObjectLoader.openStream()
org.eclipse.jgit.internal.storage.file.ObjectDirectory.hasPackedObject(AnyObjectId)
org.eclipse.jgit.internal.storage.dfs.DfsReader.unpin()
org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugEmptyLineAndSob()
org.eclipse.jgit.util.RefList.add(T)
org.eclipse.jgit.lib.ValidRefNameTest.testMustHaveTwoComponents()
org.eclipse.jgit.attributes.TreeWalkAttributeTest.testPrecedenceInfo()
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.nonExistentRef()
org.eclipse.jgit.pgm.opt.CmdLineParser.containsHelp(String)
org.eclipse.jgit.dircache.DirCacheEntry.isSmudged()
org.eclipse.jgit.internal.storage.reftable.BlockReader.newRef(String)
org.eclipse.jgit.treewalk.WorkingTreeIterator.load()
org.eclipse.jgit.util.ChangeIdUtilTest.testATwoLines()
org.eclipse.jgit.transport.ChainingCredentialsProvider.supports(CredentialItem)
org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits()
org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict()
org.eclipse.jgit.api.EolRepositoryTest.test_ConfigEOL_crlf()
org.eclipse.jgit.revwalk.ObjectWalk.updatePathBuf(TreeVisit)
org.eclipse.jgit.util.RunExternalScriptTest.testAllTogetherBin()
org.eclipse.jgit.util.IntList.toString()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.assertPath(String,String)
org.eclipse.jgit.revwalk.RevWalk.carry(Collection)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleGroupCase0()
org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase4()
org.eclipse.jgit.pgm.opt.RevCommitHandler.addOne(String,boolean)
org.eclipse.jgit.http.server.glue.MetaServlet.register(ServletBinder)
org.eclipse.jgit.transport.TransportHttp.toBufferedReader(InputStream)
org.eclipse.jgit.revwalk.ObjectWalk.dispose()
org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_TruncatedZLibStream()
org.eclipse.jgit.http.test.HttpClientTests.testListRemote_Dumb_NeedsAuth()
org.eclipse.jgit.util.io.AutoLFOutputStream.decideMode()
org.eclipse.jgit.transport.BaseReceivePack.setAtomic(boolean)
org.eclipse.jgit.api.GarbageCollectCommand.setExpire(Date)
org.eclipse.jgit.util.RawParseUtils.endOfFooterLineKey(byte,int)
org.eclipse.jgit.gitrepo.RepoCommand.setURI(String)
org.eclipse.jgit.merge.CherryPickTest.assertCorrectId(DirCache,TreeWalk)
org.eclipse.jgit.pgm.debug.BenchmarkReftable.run()
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_gitDirSet()
org.eclipse.jgit.revwalk.RevTagParseTest.testParse_OnlyLFMessage()
org.eclipse.jgit.internal.storage.file.PackBitmapIndex.read(InputStream,PackIndex,PackReverseIndex)
org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex()
org.eclipse.jgit.transport.TransportSftp.getURI()
org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict()
org.eclipse.jgit.transport.ReceiveCommand.execute(BaseReceivePack)
org.eclipse.jgit.api.FetchCommand.setCheckFetchedObjects(boolean)
org.eclipse.jgit.transport.PushProcessTest.testUpdateUnexpectedRemote()
org.eclipse.jgit.util.ChangeIdUtil.isEmptyLine(String)
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.begin(OutputStream)
org.eclipse.jgit.lib.AnyObjectId.copyTo(OutputStream)
org.eclipse.jgit.util.RefMap.getKey()
org.eclipse.jgit.junit.TestRepository.noFiles()
org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithInitializedSubmodule()
org.eclipse.jgit.api.CheckoutCommandTest.testNullRefName()
org.eclipse.jgit.internal.storage.file.PackFile.findDeltaBase(ObjectId)
org.eclipse.jgit.pgm.ProxyConfigTest.testAll()
org.eclipse.jgit.attributes.AttributesMatcherTest.assertMatched(String,String)
org.eclipse.jgit.lib.RefDatabaseConflictingNamesTest.assertNoConflictingNames(String)
org.eclipse.jgit.attributes.FilterCommandRegistry.register(String,FilterCommandFactory)
org.eclipse.jgit.revwalk.ObjectWalk.findObjectId(byte,int)
org.eclipse.jgit.internal.storage.reftree.RefTree.exactRef(ObjectReader,String)
org.eclipse.jgit.internal.fsck.FsckPackParser.checkCRC(int)
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.insertTag(TagBuilder)
org.eclipse.jgit.junit.MockSystemReader.read(TimeUnit)
org.eclipse.jgit.revwalk.RevWalkCarryFlagsTest.testRevWalkCarryCustom_SlowClock()
org.eclipse.jgit.merge.ResolveMerger.failed()
org.eclipse.jgit.junit.JGitTestUtil.write(File,String)
org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI()
org.eclipse.jgit.util.time.MonotonicClock.propose()
org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore_noRepo(MergeStrategy)
org.eclipse.jgit.treewalk.filter.PathSuffixFilter.clone()
org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext5()
org.eclipse.jgit.http.test.DefaultUploadPackFactoryTest.testCreate_Disabled()
org.eclipse.jgit.treewalk.WorkingTreeIterator.idSubmodule(File,Entry)
org.eclipse.jgit.pgm.ResetTest.testResetPathNoDoubleDashNoRef()
org.eclipse.jgit.internal.storage.file.PackIndexV1Test.testCRC32()
org.eclipse.jgit.treewalk.filter.PathFilterGroup.shouldBeRecursive()
org.eclipse.jgit.transport.TransportAmazonS3.openPush()
org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.write(byte,int,int)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b()
org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.getPackList()
org.eclipse.jgit.transport.TransportGitSsh.openFetch()
org.eclipse.jgit.internal.storage.reftree.Scanner.scan(ObjectReader,AnyObjectId,String,boolean,RefList,RefList)
org.eclipse.jgit.lfs.server.fs.LfsServerTest.getTempDirectory()
org.eclipse.jgit.internal.storage.file.RefDirectory.create()
org.eclipse.jgit.api.FetchCommand.getProgressMonitor()
org.eclipse.jgit.transport.BaseConnection.setMessageWriter(Writer)
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.listPacks()
org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_NoAttr()
org.eclipse.jgit.diff.HistogramDiffTest.testEdit_NoUniqueMiddleSide_FlipBlocks()
org.eclipse.jgit.util.RefList.add(int,T)
org.eclipse.jgit.api.StashCreateCommandTest.diffIndexAgainstHead(RevCommit)
org.eclipse.jgit.lib.Config.newState()
org.eclipse.jgit.util.sha1.SHA1.recompress(int)
org.eclipse.jgit.api.DeleteTagCommand.call()
org.eclipse.jgit.transport.UploadPack.getRevWalk()
org.eclipse.jgit.transport.JschConfigSessionFactory.loadIdentity(JSch,File)
org.eclipse.jgit.transport.DaemonService.isEnabledFor(Repository)
org.eclipse.jgit.util.io.UnionInputStreamTest.testAutoCloseDuringRead()
org.eclipse.jgit.storage.file.WindowCacheConfig.setStreamFileThreshold(int)
org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit()
org.eclipse.jgit.lib.Config.addChangeListener(ConfigChangedListener)
org.eclipse.jgit.lib.NullProgressMonitor.start(int)
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getInstance()
org.eclipse.jgit.transport.TransportBundleFile.getSchemes()
org.eclipse.jgit.lfs.CleanFilter.run()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.logBytes()
org.eclipse.jgit.lib.MergeHeadMsgTest.testReadWriteMergeHeads()
org.eclipse.jgit.diff.RenameDetectorTest.assertAdd(String,ObjectId,FileMode,DiffEntry)
org.eclipse.jgit.internal.storage.pack.PackWriter.getIndexVersion()
org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testOrMultiTwoMixSubPath()
org.eclipse.jgit.revwalk.FooterLine.getValue()
org.eclipse.jgit.transport.TransportBundleStream.close()
org.eclipse.jgit.util.io.AutoLFOutputStream.flush()
org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsNonBare()
org.eclipse.jgit.dircache.DirCache.findEntry(byte,int)
org.eclipse.jgit.pgm.ReceivePack.run()
org.eclipse.jgit.merge.Merger.getBaseCommit(RevCommit,RevCommit)
org.eclipse.jgit.util.LongMapTest.setUp()
org.eclipse.jgit.junit.TestRepository.normalizeRef(String)
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.parseTag(AnyObjectId)
org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross(MergeStrategy)
org.eclipse.jgit.treewalk.filter.IndexDiffFilter.workingTree(TreeWalk)
org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.id(int)
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.getRefs(String)
org.eclipse.jgit.internal.storage.reftable.BlockReader.getComment()
org.eclipse.jgit.transport.WalkEncryptionTest.isAlgorithmPresent(Properties)
org.eclipse.jgit.transport.Transport.applyConfig(RemoteConfig)
org.eclipse.jgit.merge.MergeResult.add(int,int,int,ConflictState)
org.eclipse.jgit.diff.AbstractDiffTestCase.testDegenerate_ReplaceMiddle()
org.eclipse.jgit.util.io.AutoCRLFInputStreamTest.assertNoCrLf(String,String)
org.eclipse.jgit.lfs.Lfs.getLfsObjDir()
org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testUpdateMaster()
org.eclipse.jgit.transport.TransportHttp.openAlternate(String)
org.eclipse.jgit.merge.MergeMessageFormatterTest.testRemoteBranch()
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.tearDown()
org.eclipse.jgit.transport.PackParser.setNeedBaseObjectIds(boolean)
org.eclipse.jgit.pgm.ArchiveTest.listTarEntries(byte)
org.eclipse.jgit.blame.Candidate.add(Region,Candidate,Region)
org.eclipse.jgit.internal.storage.pack.PackWriter.getTotalBytes()
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceUnixOk()
org.eclipse.jgit.api.RebaseCommand.call()
org.eclipse.jgit.treewalk.TreeWalk.isRecursive()
org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEmpty_EmptyTree()
org.eclipse.jgit.util.IntListTest.testFillTo1()
org.eclipse.jgit.transport.PushCertificateParserTest.concatPacketLines(String,int,int)
org.eclipse.jgit.http.server.ReceivePackServlet.destroy()
org.eclipse.jgit.lib.Repository.readDirCache()
org.eclipse.jgit.transport.PreUploadHookChain.newChain(List)
org.eclipse.jgit.util.io.AutoCRLFOutputStreamTest.assertNoCrLfHelper(String,String)
org.eclipse.jgit.pgm.Remote.printUsage(String,CmdLineParser)
org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate()
org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack.isFound()
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1Case()
org.eclipse.jgit.diff.DiffFormatter.setReader(ObjectReader,Config,boolean)
org.eclipse.jgit.storage.file.WindowCacheConfig.getPackedGitOpenFiles()
org.eclipse.jgit.transport.ReceiveCommand.setResult(Result,String)
org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.shouldNotFetchSubmodulesWhenOnDemandAndRevisionNotChanged(boolean)
org.eclipse.jgit.http.test.MeasurePackSizeTest.testPush_packSize()
org.eclipse.jgit.treewalk.FileTreeIterator.entries()
org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.tryAddFirst(ReftableReader)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.rewriteFileInFolderAllIgnored()
org.eclipse.jgit.util.QuotedStringBourneStyleTest.assertQuote(String,String)
org.eclipse.jgit.diff.RawText.isBinary(InputStream)
org.eclipse.jgit.blame.BlameGenerator.initRevPool(boolean)
org.eclipse.jgit.treewalk.filter.SkipWorkTreeFilter.include(TreeWalk)
org.eclipse.jgit.patch.FileHeader.addHunk(HunkHeader)
org.eclipse.jgit.transport.TransportHttp.getServiceURL(String)
org.eclipse.jgit.internal.storage.reftable.BlockReader.next()
org.eclipse.jgit.ant.tasks.GitAddTask.getPath()
org.eclipse.jgit.lib.Config.replaceStringList(ConfigSnapshot,String,String,String,List)
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testFirstExactRef_Mixed()
org.eclipse.jgit.transport.BaseReceivePack.setAllowBranchDeletes(boolean)
org.eclipse.jgit.transport.UploadPack.sendPack()
org.eclipse.jgit.transport.PushCertificateStore.put(PushCertificate,PersonIdent,Collection)
org.eclipse.jgit.transport.RemoteConfigTest.checkConfig(String)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCombinedRangesInOneGroupCase1()
org.eclipse.jgit.pgm.RemoteTest.testUpdate()
org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testInserterDiscardsPack()
org.eclipse.jgit.internal.storage.dfs.DfsRepository.getInfoAttributesNode()
org.eclipse.jgit.util.GitDateParser.getNewSimpleDateFormat(ParseableSimpleDateFormat,Locale,Map)
org.eclipse.jgit.transport.PushCertificateStoreTest.saveNoChange()
org.eclipse.jgit.nls.RootLocaleTest.testJGitText()
org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFindAttributesWhenFirst()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testVerySimpleGroupRangeCase4()
org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders()
org.eclipse.jgit.transport.PushCertificateStore.put(PushCertificate,PersonIdent)
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor3()
org.eclipse.jgit.gitrepo.RepoCommandTest.resolveRelativeUris()
org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onBeginWholeObject(long,int,long)
org.eclipse.jgit.transport.Transport.setDryRun(boolean)
org.eclipse.jgit.gitrepo.RepoProject.getCopyFiles()
org.eclipse.jgit.util.IntList.add(int)
org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex()
org.eclipse.jgit.lfs.server.s3.SignerV4.formatAuthorizationQuery(Map)
org.eclipse.jgit.treewalk.AbstractTreeIterator.idEqual(AbstractTreeIterator)
org.eclipse.jgit.pgm.CLIGitCommand.executeUnchecked(String,Repository)
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidTree3()
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateMissingObject()
org.eclipse.jgit.api.RebaseCommandTest.testAuthorScriptConverter()
org.eclipse.jgit.internal.storage.file.RefDirectory.delete(File,int,LockFile)
org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_implicit_UTF8_encoded()
org.eclipse.jgit.transport.BaseReceivePack.anyRejects()
org.eclipse.jgit.api.AddCommandTest.setUp()
org.eclipse.jgit.internal.storage.reftree.Command.getMessage()
org.eclipse.jgit.util.io.UnionInputStreamTest.testReadSingleBytes()
org.eclipse.jgit.merge.ResolveMerger.isGitLink(int)
org.eclipse.jgit.util.RawParseUtils.author(byte,int)
org.eclipse.jgit.internal.storage.file.PackIndexV1.findOffset(AnyObjectId)
org.eclipse.jgit.lib.RefUpdate.setForceUpdate(boolean)
org.eclipse.jgit.internal.storage.reftree.RefTreeNames.isRefTree(RefDatabase,String)
org.eclipse.jgit.api.CheckoutCommandTest.writeTempFile(String)
org.eclipse.jgit.api.EolRepositoryTest.test_GlobalEOL_lf_InfoEOL_crlf_RootEOL_unspec()
org.eclipse.jgit.lib.ObjectChecker.check(int,byte)
org.eclipse.jgit.internal.ketch.RemoteGitReplica.prepareCommit(Repository,List,Map,Map,ObjectId)
org.eclipse.jgit.revwalk.ObjectWalk.markUninteresting(RevObject)
org.eclipse.jgit.api.CheckoutResult.getModifiedList()
org.eclipse.jgit.lib.TagBuilder.setTagger(PersonIdent)
org.eclipse.jgit.lib.IndexDiffSubmoduleTest.assertDiff(IndexDiff,IgnoreSubmoduleMode,IgnoreSubmoduleMode)
org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean(IgnoreSubmoduleMode)
org.eclipse.jgit.util.io.TimeoutOutputStreamTest.flush()
org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.getCurrentReftables()
org.eclipse.jgit.transport.ObjectCountCallback.setObjectCount(long)
org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag()
org.eclipse.jgit.pgm.ArchiveTest.testArchiveIncludesSubmoduleDirectory()
org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification()
org.eclipse.jgit.transport.BaseReceivePack.getClientShallowCommits()
org.eclipse.jgit.pgm.RemoteTest.setUp()
org.eclipse.jgit.submodule.SubmoduleWalk.getSubmoduleRepository(Repository,String)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.renameAndOpenPack(String)
org.eclipse.jgit.api.StashCreateCommandTest.validateStashedCommit(RevCommit,int)
org.eclipse.jgit.nls.NLSTest.call()
org.eclipse.jgit.merge.MergeFormatterPass.formatMerge()
org.eclipse.jgit.dircache.DirCacheCheckout.isModifiedSubtree_IndexWorkingtree(String)
org.eclipse.jgit.attributes.Attributes.getAll()
org.eclipse.jgit.ant.tasks.GitCloneTaskTest.shouldCloneAValidGitRepository()
org.eclipse.jgit.util.io.LimitedInputStream.read()
org.eclipse.jgit.transport.PushOptionsTest.testAdvertisedButUnusedPushOptions()
org.eclipse.jgit.api.RebaseCommand.setUpstreamName(String)
org.eclipse.jgit.internal.storage.reftable.BlockReader.readPositionFromIndex()
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.compareTo(DfsPackDescription)
org.eclipse.jgit.http.server.glue.MetaFilter.newIdentitySet()
org.eclipse.jgit.lfs.server.s3.SignerV4.dateTimeStampISO8601(Date)
org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsParent_CreateRepositoryFromGitDirOnlyWithBareConfigFalse()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b()
org.eclipse.jgit.api.BlameCommandTest.testTwoRenames()
org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length123()
org.eclipse.jgit.transport.HttpAuthMethod.configureRequest(HttpConnection)
org.eclipse.jgit.junit.time.MonotonicFakeClock.tick(long,TimeUnit)
org.eclipse.jgit.transport.BundleFetchConnection.didFetchTestConnectivity()
org.eclipse.jgit.revwalk.FooterLineTest.testNoFooters_ShortBodyWithLF()
org.eclipse.jgit.transport.WalkFetchConnection.markTreeComplete(RevTree)
org.eclipse.jgit.internal.storage.file.PackFile.getBitmapIndex()
org.eclipse.jgit.attributes.AttributesHandlerTest.assertIteration(FileMode,String,Collection)
org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsSet()
org.eclipse.jgit.lib.DirCacheCheckoutTest.assertWorkDir(Map)
org.eclipse.jgit.diff.DiffFormatter.quotePath(String)
org.eclipse.jgit.api.CloneCommand.setBare(boolean)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testBracketsUnmatched1()
org.eclipse.jgit.lib.RefDatabase.performsAtomicTransactions()
org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testFull_FromString()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpaceGroupCase1()
org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation.getWeight()
org.eclipse.jgit.api.Git.archive()
org.eclipse.jgit.patch.CombinedHunkHeader.parseHeader()
org.eclipse.jgit.lib.IndexDiff.getPathsWithIndexMode(FileMode)
org.eclipse.jgit.pgm.IndexPack.run()
org.eclipse.jgit.lfs.lib.AnyLongObjectId.equals(Object)
org.eclipse.jgit.treewalk.filter.IndexDiffFilter.clone()
org.eclipse.jgit.util.ChangeIdUtilTest.testChangeIdAlreadySet()
org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(int)
org.eclipse.jgit.revwalk.DateRevQueueTest.testCloneEmpty()
org.eclipse.jgit.pgm.Log.noRenames(boolean)
org.eclipse.jgit.api.CheckoutCommandTest.testNonDeletableFilesOnWindows()
org.eclipse.jgit.merge.MergeAlgorithmTest.merge(String,String,String)
org.eclipse.jgit.attributes.Attributes.toString()
org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.lockLooseRefs(List)
org.eclipse.jgit.api.RebaseCommand.getPath(String)
org.eclipse.jgit.transport.ProgressSpinner.beginTask(String,long,TimeUnit)
org.eclipse.jgit.api.StashListCommandTest.emptyStashReflog()
org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.getRng()
org.eclipse.jgit.transport.TransportHttp.setURI(URIish)
org.eclipse.jgit.lib.BaseRepositoryBuilder.build()
org.eclipse.jgit.lib.AsyncObjectSizeQueue.getObjectId()
org.eclipse.jgit.revwalk.ObjectWalk.checkConnectivity()
org.eclipse.jgit.util.io.AutoLFInputStreamTest.testCR()
org.eclipse.jgit.diff.SimilarityIndex.common(SimilarityIndex)
org.eclipse.jgit.patch.GetTextTest.readTestPatchFile(Charset)
org.eclipse.jgit.transport.UploadPack.service()
org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testNoCheckExisting()
org.eclipse.jgit.lib.ValidRefNameTest.assertValid(boolean,String)
org.eclipse.jgit.util.FileUtil.lastModified(File)
org.eclipse.jgit.api.SubmoduleUpdateCommand.setCallback(CloneCommand,Callback)
org.eclipse.jgit.storage.pack.PackConfig.getDeltaCacheLimit()
org.eclipse.jgit.api.RebaseCommand.abort(RebaseResult)
org.eclipse.jgit.api.Status.getAdded()
org.eclipse.jgit.http.test.DumbClientSmartServerTest.testPushNotSupported()
org.eclipse.jgit.util.io.AutoCRLFInputStream.fillBuffer()
org.eclipse.jgit.api.StashCreateCommand.getHead()
org.eclipse.jgit.hooks.GitHook.getOutputStream()
org.eclipse.jgit.lib.BaseRepositoryBuilder.getIndexFile()
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.addToClock(Ref,int)
org.eclipse.jgit.lib.MutableObjectId.set(int,int,int)
org.eclipse.jgit.internal.storage.dfs.DfsInserter.write(byte,int,int)
org.eclipse.jgit.lib.Repository.readSquashCommitMsg()
org.eclipse.jgit.events.ListenerList.addWorkingTreeModifiedListener(WorkingTreeModifiedListener)
org.eclipse.jgit.revwalk.RevWalkMergedIntoTest.testOldCommitWalk()
org.eclipse.jgit.diff.DiffFormatter.toFileHeader(DiffEntry)
org.eclipse.jgit.internal.storage.file.FileSnapshot.lastModified()
org.eclipse.jgit.util.QuotedString.dequote(byte,int,int)
org.eclipse.jgit.pgm.Diff.ignoreAllSpace(boolean)
org.eclipse.jgit.blame.Candidate.create(RevCommit,PathFilter)
org.eclipse.jgit.internal.storage.reftree.LocalDiskRefTreeDatabaseTest.testHeadOrigHead()
org.eclipse.jgit.patch.HunkHeader.copyLine(StringBuilder,String,int,int)
org.eclipse.jgit.lib.TagBuilder.build()
org.eclipse.jgit.api.ResetCommandTest.inIndex(String)
org.eclipse.jgit.transport.RemoteConfig.getURIs()
org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime()
org.eclipse.jgit.diff.RenameDetector.breakModifies(ContentSource,Pair,ProgressMonitor)
org.eclipse.jgit.internal.storage.file.PackIndexWriter.writeFanOutTable()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.writeFileUntracked()
org.eclipse.jgit.treewalk.WorkingTreeIterator.getEolStreamType()
org.eclipse.jgit.merge.ThreeWayMerger.getBaseCommitId()
org.eclipse.jgit.lfs.lib.AnyLongObjectId.abbreviate(int)
org.eclipse.jgit.util.RefMap.hasNext()
org.eclipse.jgit.revwalk.RevWalk.lookupCommit(AnyObjectId)
org.eclipse.jgit.lib.ObjectChecker.checkCommit(AnyObjectId,byte)
org.eclipse.jgit.diff.SimilarityIndex.hash(InputStream,long,boolean)
org.eclipse.jgit.transport.TestProtocol.close()
org.eclipse.jgit.lib.ObjectReader.getSize()
org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead()
org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithNoSubmodules()
org.eclipse.jgit.nls.NLS.useJVMDefaultLocale()
org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_11(Git,int)
org.eclipse.jgit.internal.fsck.FsckPackParser.onBeginRefDelta(long,AnyObjectId,long)
org.eclipse.jgit.transport.WalkPushConnection.safeDelete(String)
org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_RawLatin1()
org.eclipse.jgit.merge.MergeMessageFormatterTest.testMixed()
org.eclipse.jgit.transport.SshTransport.close()
org.eclipse.jgit.pgm.Push.run()
org.eclipse.jgit.transport.TransportHttp.openPush()
org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderWithMissingInWorkingTree()
org.eclipse.jgit.api.AddCommandTest.testAddIgnoredFile()
org.eclipse.jgit.lib.RefDatabaseConflictingNamesTest.getRefs(String)
org.eclipse.jgit.transport.RefAdvertiser.end()
org.eclipse.jgit.internal.storage.file.PackFile.decompress(long,int,WindowCursor)
org.eclipse.jgit.junit.http.AppServer.addContext(String)
org.eclipse.jgit.http.test.MeasurePackSizeTest.onPostReceive(ReceivePack,Collection)
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.reserveSpace(int)
org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.setUp()
org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testIterator()
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapWalker.findObjectsWalk(Iterable,BitmapBuilder,boolean)
org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyTo(Writer)
org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OnePair()
org.eclipse.jgit.internal.storage.dfs.DfsBlock.copy(int,byte,int,int)
org.eclipse.jgit.api.CommitCommand.setAmend(boolean)
org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectInNewPack()
org.eclipse.jgit.submodule.SubmoduleWalk.getModulesUpdate()
org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.testNonRecursiveFiltering()
org.eclipse.jgit.merge.MergeMessageFormatter.format(List,Ref)
org.eclipse.jgit.pgm.StatusTest.createUnmergedFile(Git)
org.eclipse.jgit.internal.ketch.KetchLeaderCache.startLeader(String,Repository)
org.eclipse.jgit.util.RefMapTest.testPut_KeyMustMatchName_WithPrefix()
org.eclipse.jgit.http.server.UploadPackServlet.doPost(HttpServletRequest,HttpServletResponse)
org.eclipse.jgit.treewalk.CanonicalTreeParser.next()
org.eclipse.jgit.lfs.lib.MutableLongObjectId.fromString(String)
org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_invalidConnectionAttempts()
org.eclipse.jgit.pgm.ResetTest.testResetPrevious()
org.eclipse.jgit.internal.storage.file.RefDirectory.isSymRef(byte,int)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onBeginOfsDelta(long,long,long)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.getConfig()
org.eclipse.jgit.errors.CheckoutConflictException.getConflictingFiles()
org.eclipse.jgit.lib.AbbreviatedObjectId.toObjectId()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames3()
org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches()
org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommit1Parent()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.isEdge()
org.eclipse.jgit.awtui.AwtCredentialsProvider.get(URIish,CredentialItem)
org.eclipse.jgit.diff.DiffFormatterTest.blob(String)
org.eclipse.jgit.api.BlameCommandTest.testSingleRevision()
org.eclipse.jgit.junit.MockSystemReader.openSystemConfig(Config,FS)
org.eclipse.jgit.transport.RefSpecTest.testExpandFromDestination_NonWildcard()
org.eclipse.jgit.revwalk.TreeRevFilter.include(RevWalk,RevCommit)
org.eclipse.jgit.api.DiffCommand.setShowNameAndStatusOnly(boolean)
org.eclipse.jgit.transport.PacketLineInTest.testReadStringRaw3()
org.eclipse.jgit.internal.ketch.ReplicaConfig.getParticipation()
org.eclipse.jgit.notes.NonNoteEntry.format(TreeFormatter)
org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead()
org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.setMaxUpdateIndex(long)
org.eclipse.jgit.lib.ObjectChecker.setAllowInvalidPersonIdent(boolean)
org.eclipse.jgit.revwalk.RevTree.parseHeaders(RevWalk)
org.eclipse.jgit.transport.CredentialsProviderUserInfo.showMessage(String)
org.eclipse.jgit.internal.storage.dfs.DeltaBaseCacheTest.testCacheLruExpires1()
org.eclipse.jgit.util.io.TimeoutOutputStreamTest.active()
org.eclipse.jgit.internal.storage.file.ReflogReaderImpl.getReverseEntries(int)
org.eclipse.jgit.transport.RefSpec.equals(Object)
org.eclipse.jgit.transport.BasePackFetchConnection.clone()
org.eclipse.jgit.util.RawParseUtils_HexParseTest.testInt32()
org.eclipse.jgit.revwalk.BoundaryGenerator.shareFreeList(BlockRevQueue)
org.eclipse.jgit.revwalk.filter.RevFilter.requiresCommitBody()
org.eclipse.jgit.diff.SimilarityRenameDetector.hash(DiffEntry,Side,DiffEntry)
org.eclipse.jgit.treewalk.filter.PathSuffixFilter.include(TreeWalk)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.addMe(Set)
org.eclipse.jgit.internal.storage.reftable.ReftableReader.binarySearch(byte,byte,long,long)
org.eclipse.jgit.gitrepo.ManifestParser.normalizeEmptyPath(URI)
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparerTest.resolve(AbbreviatedObjectId)
org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.fakeWalkAtSubtree(String)
org.eclipse.jgit.events.ConfigChangedEvent.dispatch(ConfigChangedListener)
org.eclipse.jgit.internal.ketch.ReplicaFetchRequest.getWantRefs()
org.eclipse.jgit.api.RebaseCommandTest.testLeadingSpacesRebaseTodo()
org.eclipse.jgit.lib.Repository.readCherryPickHead()
org.eclipse.jgit.internal.storage.reftree.Command.getRefName()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoRangesInOneGroupCase4()
org.eclipse.jgit.internal.storage.file.PackReverseIndex.findObjectByPosition(int)
org.eclipse.jgit.treewalk.filter.AndTreeFilter.shouldBeRecursive()
org.eclipse.jgit.lib.AnyObjectId.formatHexByte(byte,int,int)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.setCoalesceGarbageLimit(long)
org.eclipse.jgit.lib.ObjectIdSubclassMap.remove()
org.eclipse.jgit.lfs.lib.AnyLongObjectId.compareTo(byte,int)
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.reflogAppendStatusNoMessage()
org.eclipse.jgit.dircache.DirCache.lock()
org.eclipse.jgit.api.RemoteSetUrlCommandTest.testSetUrl()
org.eclipse.jgit.util.RawParseUtils.encoding(byte,int)
org.eclipse.jgit.api.Git.tagDelete()
org.eclipse.jgit.pgm.opt.OptionWithValuesListHandler.parseArguments(Parameters)
org.eclipse.jgit.transport.TrackingRefUpdate.canForceUpdate()
org.eclipse.jgit.revwalk.RevWalkTestCase.tick(int)
org.eclipse.jgit.util.sha1.SHA1.s4(int,int,int,int,int)
org.eclipse.jgit.blame.Candidate.getNextCandidate(int)
org.eclipse.jgit.lib.SubmoduleConfig.matchConfigValue(String)
org.eclipse.jgit.blame.BlameGenerator.getResultPath()
org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldReturnMergeBranchForLocalBranch()
org.eclipse.jgit.transport.BaseReceivePack.isCheckReceivedObjects()
org.eclipse.jgit.lib.ObjectIdSubclassMap.grow()
org.eclipse.jgit.junit.TestRepository.apply(DirCacheEntry)
org.eclipse.jgit.blame.Candidate.getTime()
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.get(DfsStreamKey,long)
org.eclipse.jgit.revwalk.RevFlagSetTest.testEquals()
org.eclipse.jgit.transport.BasePackConnection.close()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test15_FromString()
org.eclipse.jgit.lfs.Lfs.getLfsRoot()
org.eclipse.jgit.junit.http.AccessEvent.getRequestHeader(String)
org.eclipse.jgit.api.Git.branchRename()
org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testCommitWithoutTree()
org.eclipse.jgit.internal.storage.file.UnpackedObject.close()
org.eclipse.jgit.pgm.Archive.run()
org.eclipse.jgit.internal.storage.reftable.BlockReader.parseCheckout()
org.eclipse.jgit.api.AddCommandTest.testReplaceDirectoryConflictsWithFile()
org.eclipse.jgit.internal.storage.file.RefDirectory.getLogWriter()
org.eclipse.jgit.diff.HistogramDiffTest.testExceedsChainLength_DuringScanOfB()
org.eclipse.jgit.transport.TransportHttp.doFetch(ProgressMonitor,Collection,Set,OutputStream)
org.eclipse.jgit.api.EolRepositoryTest.test_ConfigEOL_native_windows()
org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.branch(String,RevCommit)
org.eclipse.jgit.api.Git.open(File)
org.eclipse.jgit.revwalk.RevFlagSet.hasNext()
org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups()
org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.resetsHaves()
org.eclipse.jgit.notes.NoteMap.newEmptyMap()
org.eclipse.jgit.pgm.ArchiveTest.assertIsTar(File)
org.eclipse.jgit.gitrepo.RepoProject.hashCode()
org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.mergeLogs(MergedReftable)
org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.getSourcePacks()
org.eclipse.jgit.util.IntListTest.testEmpty_SpecificCapacity()
org.eclipse.jgit.transport.SideBandInputStream.read()
org.eclipse.jgit.transport.BaseReceivePack.readPostCommands(PacketLineIn)
org.eclipse.jgit.transport.FetchProcess.expandSingle(RefSpec,Set)
org.eclipse.jgit.internal.storage.file.PackFileTest.index(byte)
org.eclipse.jgit.transport.PushCertificateStoreTest.putMatchingWithNoMatchingRefsInBatchOnNonEmptyRef()
org.eclipse.jgit.lfs.server.s3.SignerV4.formatAuthorizationHeader(S3Config,String,String,byte)
org.eclipse.jgit.api.RebaseCommandTest.testParseRewordCommand()
org.eclipse.jgit.lib.ObjectReader.cancel(boolean)
org.eclipse.jgit.transport.PushOptionsTest.testPushWithoutOptions()
org.eclipse.jgit.blame.Region.toString()
org.eclipse.jgit.lib.ObjectChecker.checkTree(AnyObjectId,byte)
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRefs_EmptyDatabase()
org.eclipse.jgit.patch.GetTextTest.testGetText_Convert()
org.eclipse.jgit.lfs.lib.MutableLongObjectId.fromString(byte,int)
org.eclipse.jgit.util.GitDateParserBadlyFormattedTest.getDataPoints()
org.eclipse.jgit.storage.file.FileBasedConfigTest.testLeadingWhitespaces()
org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyRawTo(long,int)
org.eclipse.jgit.internal.storage.pack.DeltaIndex.encode(OutputStream,byte)
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.indexState(Repository,int)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.dayStartInMillis(long)
org.eclipse.jgit.lib.RepositoryResolveTest.id(String)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.commitAdd()
org.eclipse.jgit.pgm.MergeTest.testMergeNoCommit()
org.eclipse.jgit.diff.SimilarityRenameDetector.isFile(FileMode)
org.eclipse.jgit.submodule.SubmoduleWalk.getRemoteUrl()
org.eclipse.jgit.revwalk.FooterLine.getKey()
org.eclipse.jgit.api.StashApplyCommandTest.unstashNoHead()
org.eclipse.jgit.transport.DaemonClient.getOutputStream()
org.eclipse.jgit.patch.FormatError.getMessage()
org.eclipse.jgit.dircache.DirCache.getEntry(String)
org.eclipse.jgit.pgm.opt.CmdLineParser.unsetRequiredOptions()
org.eclipse.jgit.internal.storage.pack.PackWriter.addObject(RevObject)
org.eclipse.jgit.transport.RefAdvertiser.append(int)
org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_EmptyFile2()
org.eclipse.jgit.lib.AsyncObjectSizeQueue.next()
org.eclipse.jgit.junit.http.AppServer.getRequests()
org.eclipse.jgit.transport.TransportHttp.getPackNames()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.getTxnCommitted()
org.eclipse.jgit.api.errors.CheckoutConflictException.addConflictingPath(String)
org.eclipse.jgit.treewalk.filter.PathFilterGroup.createFromStrings(Collection)
org.eclipse.jgit.treewalk.FileTreeIteratorTest.testComputeFileObjectId()
org.eclipse.jgit.dircache.DirCache.editor()
org.eclipse.jgit.awtui.SwingCommitList.createLane()
org.eclipse.jgit.internal.storage.file.GC.getPruneExpireStr()
org.eclipse.jgit.pgm.Reset.selectMode(ResetType,ResetType)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCntrlGroupCase1()
org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.getRepository()
org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.writeHeader(OutputStream,int,long)
org.eclipse.jgit.util.NB.compareUInt64(long,long)
org.eclipse.jgit.util.IO.readLines(String)
org.eclipse.jgit.lib.ObjectReader.open(AnyObjectId,int)
org.eclipse.jgit.diff.DiffFormatter.formatIndexLine(OutputStream,DiffEntry)
org.eclipse.jgit.pgm.StatusTest.commitChangesInTestBranch(Git)
org.eclipse.jgit.internal.storage.file.WindowCache.reconfigure(WindowCacheConfig)
org.eclipse.jgit.gitrepo.RepoProject.getLinkFiles()
org.eclipse.jgit.pgm.LsRemote.requiresRepository()
org.eclipse.jgit.api.CleanCommand.setDryRun(boolean)
org.eclipse.jgit.pgm.CommandRef.isCommon()
org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees(MergeStrategy)
org.eclipse.jgit.api.RebaseCommand.updateStashRef(ObjectId,PersonIdent,String)
org.eclipse.jgit.internal.storage.reftable.Reftable.seekLog(String)
org.eclipse.jgit.lfs.lib.LongObjectId.fromRaw(long)
org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testNoRename()
org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.nonTree(int)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleGroupRangeCase1()
org.eclipse.jgit.lib.AnyObjectId.toHexCharArray()
org.eclipse.jgit.merge.SimpleMergeTest.testTheirs_noRepo()
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.insertCommit(CommitBuilder)
org.eclipse.jgit.transport.SideBandInputStream.read(byte,int,int)
org.eclipse.jgit.dircache.DirCacheIterator.eof()
org.eclipse.jgit.diff.MyersDiff.snake(int,int)
org.eclipse.jgit.treewalk.TreeWalk.getFileMode()
org.eclipse.jgit.diff.DiffEntryTest.shouldThrowIAEWhenTreeWalkHasMoreThanTwoTrees()
org.eclipse.jgit.internal.storage.reftree.AlwaysFailUpdate.tryLock(boolean)
org.eclipse.jgit.transport.Transport.load(ClassLoader,String)
org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward()
org.eclipse.jgit.storage.file.WindowCacheConfig.setDeltaBaseCacheLimit(int)
org.eclipse.jgit.lib.EmptyProgressMonitor.update(int)
org.eclipse.jgit.internal.storage.pack.PackWriter.deflater()
org.eclipse.jgit.api.SubmoduleAddCommand.setProgressMonitor(ProgressMonitor)
org.eclipse.jgit.transport.CredentialItem.setValueNoCopy(char)
org.eclipse.jgit.util.RawParseUtils.parsePersonIdent(byte,int)
org.eclipse.jgit.api.ListNotesCommand.setNotesRef(String)
org.eclipse.jgit.lib.CLIRepositoryTestCase.writeTrashFile(String,String)
org.eclipse.jgit.transport.TestProtocolTest.create(User,Repository)
org.eclipse.jgit.http.server.ServletUtils.acceptsGzipEncoding(String)
org.eclipse.jgit.diff.RenameDetector.findContentRenames(ContentSource,Pair,ProgressMonitor)
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.iterator()
org.eclipse.jgit.diff.AbstractDiffTestCase.testEdit_InsertNearCommonCenter()
org.eclipse.jgit.transport.BaseReceivePack.filterCommands(Result)
org.eclipse.jgit.internal.ketch.KetchLeader.toString()
org.eclipse.jgit.revwalk.RevCommit.toString()
org.eclipse.jgit.lib.ObjectStream.mark(int)
org.eclipse.jgit.treewalk.filter.AndTreeFilter.include(TreeWalk)
org.eclipse.jgit.lib.Config.read()
org.eclipse.jgit.http.test.DefaultUploadPackFactoryTest.setUp()
org.eclipse.jgit.junit.http.RecordingLogger.info(String,Object,Object)
org.eclipse.jgit.revwalk.RevWalk.newFlag(String)
org.eclipse.jgit.util.io.IsolatedOutputStream.write(int)
org.eclipse.jgit.pgm.MergeTest.testNoFastForwardAndSquash()
org.eclipse.jgit.api.AddCommandTest.testNotApplicableFilter()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e()
org.eclipse.jgit.ignore.BasicRuleTest.testStripTrailingChar()
org.eclipse.jgit.patch.HunkHeader.getBuffer()
org.eclipse.jgit.pgm.DescribeTest.setUp()
org.eclipse.jgit.diff.HistogramDiffTest.algorithm()
org.eclipse.jgit.internal.ketch.ElectionRound.getTerm()
org.eclipse.jgit.internal.storage.reftable.ReftableTest.badCrc32()
org.eclipse.jgit.util.RelativeDateFormatterTest.testFormatSeconds()
org.eclipse.jgit.internal.storage.file.GcConcurrentTest.concurrentRepack()
org.eclipse.jgit.lib.Repository.isHex(char)
org.eclipse.jgit.lib.BranchConfig.isRemoteLocal()
org.eclipse.jgit.transport.TransportSftp.loose(Ref)
org.eclipse.jgit.transport.HttpTransport.getConnectionFactory()
org.eclipse.jgit.pgm.Daemon.startKetchLeader(org,eclipse,jgit,transport,Daemon)
org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_Empty1()
org.eclipse.jgit.gitrepo.RepoCommand.relativize(URI,URI)
org.eclipse.jgit.internal.storage.dfs.DfsInserter.copyOf(byte,int,int)
org.eclipse.jgit.internal.storage.reftable.ReftableTest.emptyTable()
org.eclipse.jgit.lib.RepositoryCache.reconfigure(RepositoryCacheConfig)
org.eclipse.jgit.internal.ketch.KetchReplica.initialize(Map)
org.eclipse.jgit.transport.BundleWriterTest.setObjectCount(long)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithGarbageCoalescenceWithShortTtl()
org.eclipse.jgit.diff.SimilarityIndex.common(long,int,long,int)
org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testOrMultiTwoPath()
org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule()
org.eclipse.jgit.transport.PushProcessTest.testUpdateUnexpectedRemoteVsForce()
org.eclipse.jgit.attributes.AttributesMatcherTest.testGetters()
org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits()
org.eclipse.jgit.dircache.DirCacheBasicTest.testLockMissing_TempIndex()
org.eclipse.jgit.internal.storage.dfs.ReadableChannel.blockSize()
org.eclipse.jgit.lib.IndexDiff.hasBase()
org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex(MergeStrategy)
org.eclipse.jgit.revplot.PlotCommitListTest.testEgitHistory()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCombinedRangesInOneGroupCase2()
org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.missedUpdate()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.objIndexLevels()
org.eclipse.jgit.revwalk.MaxCountRevFilterTest.testMaxCountRevFilter()
org.eclipse.jgit.http.test.SmartClientSmartServerTest.testPush_ChunkedEncoding()
org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod()
org.eclipse.jgit.internal.storage.reftree.Scanner.resolve(Ref,int,RefList)
org.eclipse.jgit.lib.Config.readSectionName(StringReader)
org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsKeywordCaseInsensitive()
org.eclipse.jgit.archive.FormatActivator.start(BundleContext)
org.eclipse.jgit.blame.BlameGenerator.getRenameScore()
org.eclipse.jgit.transport.ReceivePack.receive(InputStream,OutputStream,OutputStream)
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHeadInBareRepo()
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_a()
org.eclipse.jgit.revwalk.RevWalk.resetRetain(RevFlag)
org.eclipse.jgit.api.StashApplyCommand.call()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.clearDeltaBase()
org.eclipse.jgit.transport.TransportTest.testLocalTransportFetchWithoutLocalRepository()
org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.makeFile(String)
org.eclipse.jgit.internal.storage.file.RefDirectory.scanOne(String)
org.eclipse.jgit.api.PushCommand.setRefSpecs(RefSpec)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.getFS()
org.eclipse.jgit.api.BranchCommandTest.testCreationNullStartPoint()
org.eclipse.jgit.revwalk.BoundaryGenerator.next()
org.eclipse.jgit.revwalk.filter.MessageRevFilter.clone()
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.add(AnyObjectId,int)
org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname()
org.eclipse.jgit.internal.storage.dfs.DfsPackCompacterTest.testEstimateGcPackSizeWithAnExistingGcPack()
org.eclipse.jgit.internal.storage.pack.PackWriter.buffer(AnyObjectId)
org.eclipse.jgit.blame.BlameGenerator.next()
org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testExceptionThrown_BareRepoGetWorkDir()
org.eclipse.jgit.transport.PushCertificateStore.newTreeWalk(String)
org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.remove()
org.eclipse.jgit.api.Git.merge()
org.eclipse.jgit.pgm.TextBuiltin.getRepository()
org.eclipse.jgit.internal.ketch.KetchReplica.getParticipation()
org.eclipse.jgit.transport.RefSpecTest.invalidWhenDestinationEndsWithSlash()
org.eclipse.jgit.transport.UploadPack.setLogger(UploadPackLogger)
org.eclipse.jgit.internal.storage.pack.GcCommitSelectionTest.testBitmapSpansNoMerges(boolean)
org.eclipse.jgit.transport.SideBandOutputStream.write(byte,int,int)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts()
org.eclipse.jgit.storage.file.FileBasedConfig.toString()
org.eclipse.jgit.util.io.EolStreamTypeUtil.detectStreamType(OperationType,WorkingTreeOptions,Attributes)
org.eclipse.jgit.api.StatusCommandTest.testDifferentStates()
org.eclipse.jgit.util.RefMap.isEmpty()
org.eclipse.jgit.dircache.DirCacheEntry.copyMetaData(DirCacheEntry,boolean)
org.eclipse.jgit.lib.Config.reset()
org.eclipse.jgit.transport.JschSession.getSftpChannel()
org.eclipse.jgit.internal.storage.dfs.DfsReader.getSize()
org.eclipse.jgit.util.io.TimeoutInputStream.setTimeout(int)
org.eclipse.jgit.dircache.DirCache.nextEntry(int)
org.eclipse.jgit.treewalk.FileTreeIteratorTest.getMode(File,FS,Attributes)
org.eclipse.jgit.revplot.PlotCommitListTest.testDanglingCommitShouldContinueLane()
org.eclipse.jgit.internal.storage.reftable.MergedReftable.updateIndex()
org.eclipse.jgit.ignore.internal.Strings.isDirectoryPattern(String)
org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithUnconfiguredSubmodule()
org.eclipse.jgit.api.DiffCommand.setSourcePrefix(String)
org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsertAtEndNoNewlineAtEnd()
org.eclipse.jgit.pgm.BranchTest.testListDetached()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCopyConstructor()
org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildEmpty()
org.eclipse.jgit.api.MergeCommandTest.testMergeTag()
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.compare(BitmapBuilderEntry,BitmapBuilderEntry)
org.eclipse.jgit.blame.BlameResult.toString()
org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_And_ALL()
org.eclipse.jgit.internal.storage.reftable.ReftableTest.write(Collection)
org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsOurs()
org.eclipse.jgit.api.RebaseCommand.checkoutCommit(String,RevCommit)
org.eclipse.jgit.ignore.CGitVsJGitRandomIgnorePatternTest.nextRandomString()
org.eclipse.jgit.internal.storage.dfs.LargePackedWholeObject.openStream()
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.isIndexLoaded()
org.eclipse.jgit.transport.FetchResult.add(FetchHeadRecord)
org.eclipse.jgit.transport.WalkEncryptionTest.cryptoCipherList(String)
org.eclipse.jgit.events.ListenerHandle.remove()
org.eclipse.jgit.internal.storage.dfs.DfsReader.resolve(AbbreviatedObjectId)
org.eclipse.jgit.internal.storage.dfs.DfsReader.inflate(DfsPackFile,long,byte,boolean)
org.eclipse.jgit.util.StringUtilsTest.testEqualsIgnoreCase2()
org.eclipse.jgit.merge.MergeAlgorithmTest.testBlankLines()
org.eclipse.jgit.internal.storage.io.BlockSource.from(FileChannel)
org.eclipse.jgit.util.FileUtil.isDirectory(File)
org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit()
org.eclipse.jgit.api.NameRevCommand.compare(String,long,String,long)
org.eclipse.jgit.pgm.Glog.show(RevCommit)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testManySolutionsCase4()
org.eclipse.jgit.internal.storage.file.PackIndexWriterV2.writeImpl()
org.eclipse.jgit.api.InitCommandTest.testInitWithOnlyExplicitGitDir()
org.eclipse.jgit.transport.RemoteConfig.set(Config,String,boolean,boolean)
org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_WithMode()
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.getCommit()
org.eclipse.jgit.lib.TreeFormatter.append(String,FileMode,AnyObjectId)
org.eclipse.jgit.util.FS.searchPath(String,String)
org.eclipse.jgit.lib.ObjectId.equals(byte,int,byte,int)
org.eclipse.jgit.patch.CombinedFileHeader.parseDeletedFileMode(int,int)
org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.compressPackFormat(int,byte)
org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.getRefDatabase()
org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.twoEmptyTables()
org.eclipse.jgit.transport.PacketLineInTest.init(String)
org.eclipse.jgit.gitrepo.RepoCommand.setIncludedFileReader(IncludedFileReader)
org.eclipse.jgit.transport.WalkPushConnection.push(ProgressMonitor,Map,OutputStream)
org.eclipse.jgit.revwalk.TreeRevFilterTest.treeFilter(String)
org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.setWorkTree(File,File)
org.eclipse.jgit.transport.PushCertificateStoreTest.saveTwoCertsOnDifferentRefsInTwoUpdates()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.logBlockSize()
org.eclipse.jgit.api.MergeCommand.call()
org.eclipse.jgit.api.RevertCommandTest.testRevert()
org.eclipse.jgit.lib.ObjectIdSubclassMap.get(AnyObjectId)
org.eclipse.jgit.transport.TransportSftp.deleteFile(String)
org.eclipse.jgit.http.test.SmartClientSmartServerSslTest.addNormalContext(GitServlet,TestRepository,String)
org.eclipse.jgit.internal.storage.file.SimpleDataOutput.writeInt(int)
org.eclipse.jgit.api.RebaseCommand.processStep(RebaseTodoLine,boolean)
org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent()
org.eclipse.jgit.api.DeleteTagCommand.setTags(String)
org.eclipse.jgit.internal.storage.dfs.DfsConfig.load()
org.eclipse.jgit.revwalk.BlockObjQueue.next()
org.eclipse.jgit.lib.CommitBuilder.setAuthor(PersonIdent)
org.eclipse.jgit.dircache.DirCacheCheckout.preScanTwoTrees()
org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_InheritBatchMode()
org.eclipse.jgit.api.DescribeCommandTest.merge(ObjectId)
org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.writeInt16(int)
org.eclipse.jgit.storage.pack.PackStatistics.getObjectTypes()
org.eclipse.jgit.notes.NoteMapMerger.write(NonNoteEntry)
org.eclipse.jgit.util.IntListTest.testContains()
org.eclipse.jgit.transport.OperationResult.addMessages(String)
org.eclipse.jgit.revwalk.filter.RevFilter.toString()
org.eclipse.jgit.lib.CoreConfig.getAttributesFile()
org.eclipse.jgit.api.Git.push()
org.eclipse.jgit.transport.BaseConnection.getRef(String)
org.eclipse.jgit.patch.FileHeader.getForwardBinaryHunk()
org.eclipse.jgit.util.RefMapTest.testEntryTypeSet()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitDotSpace()
org.eclipse.jgit.revplot.PlotCommitListTest.testMerged()
org.eclipse.jgit.pgm.ArchiveTest.testFormatOverridesFilename()
org.eclipse.jgit.storage.pack.PackStatistics.getDeltasFound()
org.eclipse.jgit.patch.BinaryHunk.parseHunk(int,int)
org.eclipse.jgit.revwalk.RevCommit.getEncoding()
org.eclipse.jgit.transport.SpiTransport.getName()
org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest.matchAsDir(String,String)
org.eclipse.jgit.lfs.server.fs.LfsServerTest.getContent(String,Path)
org.eclipse.jgit.api.EolRepositoryTest.test_GlobalEOL_lf_InfoEOL_crlf_RootEOL_lf()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeModeStartsWithZero2()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testManySolutionsCase0()
org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.write(byte,int,int)
org.eclipse.jgit.diff.RenameDetectorTest.testSetRenameScore_IllegalArgs()
org.eclipse.jgit.internal.storage.pack.DeltaIndex.encode(OutputStream,byte,int)
org.eclipse.jgit.api.PullCommand.setRemote(String)
org.eclipse.jgit.internal.storage.file.PackIndexTestCase.setUp()
org.eclipse.jgit.http.server.ClientVersionUtil.toString(int)
org.eclipse.jgit.lib.ConstantsEncodingTest.testEncode_SimpleASCII()
org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.add(int,int)
org.eclipse.jgit.transport.http.apache.HttpClientConnection.setRequestProperty(String,String)
org.eclipse.jgit.transport.RemoteConfigTest.testSimpleTimeout()
org.eclipse.jgit.internal.ketch.Proposal.setAuthor(PersonIdent)
org.eclipse.jgit.transport.PreUploadHookChain.onEndNegotiateRound(UploadPack,Collection,int,int,boolean)
org.eclipse.jgit.internal.storage.file.RefDirectory.readPackedRefs()
org.eclipse.jgit.merge.StrategyRecursive.getName()
org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.setUp()
org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.lockFailure(ReceiveCommand,List)
org.eclipse.jgit.lib.Repository.readCommitMsgFile(String)
org.eclipse.jgit.junit.JGitTestUtil.cl()
org.eclipse.jgit.internal.ketch.KetchReplica.describeForLog()
org.eclipse.jgit.internal.ketch.StageBuilder.reduceObjects(List,List,Repository,Set)
org.eclipse.jgit.util.SystemReader.checkPath(byte)
org.eclipse.jgit.internal.storage.file.PackIndexV2.resolve(Set,AbbreviatedObjectId,int)
org.eclipse.jgit.merge.StrategyRecursive.newMerger(Repository)
org.eclipse.jgit.blame.BlameGenerator.setTextComparator(RawTextComparator)
org.eclipse.jgit.pgm.Diff.noPrefix(boolean)
org.eclipse.jgit.util.io.TimeoutOutputStream.write(byte,int,int)
org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete()
org.eclipse.jgit.internal.storage.pack.DeltaWindow.write(byte,int,int)
org.eclipse.jgit.api.StashCreateCommand.setPerson(PersonIdent)
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames1_File()
org.eclipse.jgit.internal.storage.reftable.BlockWriter.computeBlockBytes(int,boolean)
org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test4_FromString()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.peel(Ref)
org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNoSubmodules()
org.eclipse.jgit.revwalk.RevFlag.getRevWalk()
org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack.clearReuseAsIs()
org.eclipse.jgit.util.RawParseUtils_LineMapTest.testEmpty()
org.eclipse.jgit.transport.RemoteRefUpdate.getExpectedOldObjectId()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSimpleStarCase1()
org.eclipse.jgit.internal.storage.file.PackFile.mmap(long,int)
org.eclipse.jgit.fnmatch.WildCardHead.matches(char)
org.eclipse.jgit.junit.http.RecordingLogger.debug(String,long)
org.eclipse.jgit.revwalk.FollowFilter.setRenameCallback(RenameCallback)
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameContainsSlash()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeObjBlocks()
org.eclipse.jgit.pgm.CommandCatalog.common()
org.eclipse.jgit.util.SystemReader.load()
org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_ShortLineOnlyEmbeddedLF()
org.eclipse.jgit.transport.PushConfigTest.pushRecurseSubmoduleToConfigValue()
org.eclipse.jgit.diff.DiffFormatter.format(RevTree,RevTree)
org.eclipse.jgit.api.MergeCommand.setStrategy(MergeStrategy)
org.eclipse.jgit.pgm.debug.RebuildCommitGraph.computeNewRefs()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_b()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.setReftableConfig(ReftableConfig)
org.eclipse.jgit.lib.ObjectCheckerTest.rejectName(char)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase8()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getObjectSet()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetAdditionalRefs()
org.eclipse.jgit.transport.BasePackConnection.isCapableOf(String)
org.eclipse.jgit.lib.BranchConfig.getRemoteTrackingBranch()
org.eclipse.jgit.internal.storage.file.LockFile.close()
org.eclipse.jgit.util.QuotedStringGitPathStyleTest.octalEscape(int)
org.eclipse.jgit.transport.RemoteRefUpdate.setFastForward(boolean)
org.eclipse.jgit.pgm.Daemon.run()
org.eclipse.jgit.api.RevertCommand.getFailingResult()
org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_MY_ALL_Or_NONE()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.getRefDatabase()
org.eclipse.jgit.lib.BaseRepositoryBuilder.readEnvironment(SystemReader)
org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare()
org.eclipse.jgit.internal.ketch.LogIndex.getIndex()
org.eclipse.jgit.archive.ArchiveFormats.register(String,ArchiveCommand)
org.eclipse.jgit.ignore.IgnoreNode.toString()
org.eclipse.jgit.diff.RenameDetectorTest.assertRename(DiffEntry,DiffEntry,int,DiffEntry)
org.eclipse.jgit.internal.storage.pack.PackWriter.getTotalDeltas()
org.eclipse.jgit.blame.BlameResult.computeAll()
org.eclipse.jgit.api.CloneCommandTest.fetchRefSpec(Repository)
org.eclipse.jgit.diff.SimilarityIndexTest.testCommonScoreLargeObject_SameFiles_CR_canonicalization()
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.findOrInsert(AnyObjectId,int)
org.eclipse.jgit.ignore.internal.Strings.checkWildCards(String)
org.eclipse.jgit.pgm.internal.CLIText.fatalError(String)
org.eclipse.jgit.lib.Repository.getListenerList()
org.eclipse.jgit.http.server.UploadPackServlet.doFilter(ServletRequest,ServletResponse,FilterChain)
org.eclipse.jgit.revwalk.RevWalkTestCase.markStart(RevCommit)
org.eclipse.jgit.api.DescribeCommandTest.describe(ObjectId,String)
org.eclipse.jgit.pgm.ArchiveTest.commitGreeting()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b()
org.eclipse.jgit.api.LsRemoteCommand.setRemote(String)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleWildCardCase3()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testUpperGroupCase3()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDot()
org.eclipse.jgit.treewalk.filter.TreeFilterTest.testANY_DIFF_ShouldNotBeRecursive()
org.eclipse.jgit.lib.AnyObjectId.equals(AnyObjectId,AnyObjectId)
org.eclipse.jgit.notes.NoteMap.read(ObjectReader,RevTree)
org.eclipse.jgit.blame.ReverseWalk.getChild(int)
org.eclipse.jgit.internal.storage.dfs.DfsInserter.write(int)
org.eclipse.jgit.util.FileUtils.exists(File)
org.eclipse.jgit.notes.NoteParser.parse(AbbreviatedObjectId,ObjectId,ObjectReader)
org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_twoRoots(MergeStrategy,IndexState,WorktreeState)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testLowerGroupCase3()
org.eclipse.jgit.internal.storage.dfs.DfsRepository.createAttributesNodeProvider()
org.eclipse.jgit.gitrepo.RepoCommand.readFile(String,String,String)
org.eclipse.jgit.transport.RemoteConfig.getReplacements(Config,String)
org.eclipse.jgit.api.PushCommand.setRefSpecs(List)
org.eclipse.jgit.diff.AbstractDiffTestCase.testEdit_LinuxBug()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_b()
org.eclipse.jgit.api.CloneCommand.parseCommit(Repository,Ref)
org.eclipse.jgit.lib.AnyObjectId.abbreviate(int)
org.eclipse.jgit.http.test.GitServletInitTest.testInitUnderContainer_WithBasePath()
org.eclipse.jgit.treewalk.AbstractTreeIteratorTest.prefix(String)
org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules()
org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.selectObjectRepresentation(PackWriter,ObjectToPack,WindowCursor)
org.eclipse.jgit.lib.AnyObjectId.copyTo(ByteBuffer)
org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testUnsupportedGroupCase01()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateGcRestPackSizeWithAnExistingGcPack()
org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_PathBreaksTie()
org.eclipse.jgit.util.NBTest.b(int,int,int,int)
org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkMulitpleBlocks()
org.eclipse.jgit.lib.Config.setString(String,String,String,String)
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOkSecondCheckout()
org.eclipse.jgit.api.StatusCommand.setIgnoreSubmodules(IgnoreSubmoduleMode)
org.eclipse.jgit.api.CloneCommandTest.setUp()
org.eclipse.jgit.events.RepositoryEvent.toString()
org.eclipse.jgit.api.LsRemoteCommand.call()
org.eclipse.jgit.transport.WalkEncryptionTest.haveEnvVarFile(String)
org.eclipse.jgit.pgm.Remote.run()
org.eclipse.jgit.lib.RefTest.testRefsUnderRefs()
org.eclipse.jgit.http.server.SmartOutputStream.close()
org.eclipse.jgit.internal.ketch.KetchReplica.delete(List,List)
org.eclipse.jgit.notes.FanoutBucket.load(AnyObjectId,ObjectReader)
org.eclipse.jgit.internal.storage.file.AlternatesTest.setUp()
org.eclipse.jgit.util.BlockList.set(int,T)
org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.runOnThread(Runnable)
org.eclipse.jgit.internal.storage.file.BasePackBitmapIndex.getBitmap(AnyObjectId)
org.eclipse.jgit.treewalk.filter.PathFilterGroup.clone()
org.eclipse.jgit.api.Git.blame()
org.eclipse.jgit.pgm.debug.BenchmarkReftable.scan()
org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileInInitialCommit()
org.eclipse.jgit.api.CheckoutCommandTest.testCheckout()
org.eclipse.jgit.attributes.AttributesHandlerTest.testInfoOverridesWorkDirRoot()
org.eclipse.jgit.lib.ObjectIdSubclassMap.clear()
org.eclipse.jgit.api.CloneCommand.setCloneAllBranches(boolean)
org.eclipse.jgit.internal.storage.file.ReflogEntryImpl.getOldId()
org.eclipse.jgit.transport.ReceivedPackStatistics.addRefDelta()
org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile()
org.eclipse.jgit.junit.TestRepository.update(CommitBuilder)
org.eclipse.jgit.diff.RawTextTest.testComparatorReduceCommonStartEnd_EmptyLine()
org.eclipse.jgit.internal.storage.file.PackFileTest.packHeader(TemporaryBuffer,Heap,int)
org.eclipse.jgit.util.io.AutoCRLFOutputStream.flush()
org.eclipse.jgit.internal.storage.file.GC.prunePack(String)
org.eclipse.jgit.internal.storage.dfs.ReadableChannel.position(long)
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.update(String,ObjectId)
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.ewahBitmap(Bitmap)
org.eclipse.jgit.transport.BasePackFetchConnection.receivePack(ProgressMonitor,OutputStream)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testBlankGroupCase3()
org.eclipse.jgit.treewalk.WorkingTreeIterator.openEntryStream()
org.eclipse.jgit.junit.RepositoryTestCase.commitFile(String,String,String)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimplePatternCase2()
org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingThenFolderWithFileInWorkingTree()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnored()
org.eclipse.jgit.transport.PackParser.getOffset()
org.eclipse.jgit.util.FileUtils.canonicalize(File)
org.eclipse.jgit.internal.storage.file.RefDirectory.getRepository()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef3()
org.eclipse.jgit.api.CommitCommand.setCommitter(PersonIdent)
org.eclipse.jgit.internal.storage.file.SimpleDataInput.readFully(byte,int,int)
org.eclipse.jgit.diff.MyersDiff.makeEdit(long,long)
org.eclipse.jgit.internal.storage.file.UnpackedObject.getSize(InputStream,AnyObjectId,WindowCursor)
org.eclipse.jgit.ignore.FastIgnoreRule.isMatch(String,boolean)
org.eclipse.jgit.dircache.DirCache.read(ObjectReader,AnyObjectId)
org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort()
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.runHook(Repository,File,String)
org.eclipse.jgit.dircache.DirCache.clear()
org.eclipse.jgit.diff.HistogramDiffIndex.hash(HashedSequence,int)
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_EmptyDatabase()
org.eclipse.jgit.internal.storage.io.BlockSource.adviseSequentialRead(long,long)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c()
org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest.testQuote_NamedEscapes()
org.eclipse.jgit.notes.NoteMapMerger.merge(NoteMap,NoteMap,NoteMap)
org.eclipse.jgit.junit.RepositoryTestCase.copyFile(File,File)
org.eclipse.jgit.api.Git.notesAdd()
org.eclipse.jgit.internal.storage.dfs.DfsInserter.toBlockStart(long)
org.eclipse.jgit.internal.storage.file.FileRepository.getInfoAttributesNode()
org.eclipse.jgit.storage.file.WindowCacheConfig.setPackedGitMMAP(boolean)
org.eclipse.jgit.api.LogCommand.setMaxCount(int)
org.eclipse.jgit.api.StashDropCommandTest.dropNegativeRef()
org.eclipse.jgit.transport.ReceiveCommand.filter(List,Result)
org.eclipse.jgit.gitrepo.RepoProject.isAncestorOf(RepoProject)
org.eclipse.jgit.notes.NoteMap.set(AnyObjectId,String,ObjectInserter)
org.eclipse.jgit.internal.storage.file.AbbreviationTest.setUp()
org.eclipse.jgit.internal.ketch.LocalReplica.checkFailed(List,ReceiveCommand)
org.eclipse.jgit.transport.BaseReceivePack.setMaxPackSizeLimit(long)
org.eclipse.jgit.api.AddCommandTest.testAddTwoFiles()
org.eclipse.jgit.treewalk.filter.NotIgnoredFilter.toString()
org.eclipse.jgit.util.io.TimeoutOutputStream.write(byte)
org.eclipse.jgit.transport.BundleWriter.setPackConfig(PackConfig)
org.eclipse.jgit.junit.http.RecordingLogger.debug(Throwable)
org.eclipse.jgit.lib.IndexDiffTest.testAdded()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.setPackConfig(PackConfig)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_e()
org.eclipse.jgit.revwalk.FIFORevQueueTest.testUnpopAtFront()
org.eclipse.jgit.internal.ketch.RemoteGitReplica.abort(List)
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.isGarbage()
org.eclipse.jgit.api.Git.lsRemote()
org.eclipse.jgit.storage.pack.PackConfig.setIndexVersion(int)
org.eclipse.jgit.transport.RefSpecTest.testSetDestination()
org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpaceGroupCase0()
org.eclipse.jgit.internal.storage.file.GcLog.autoGcBlockedByOldLockFile(boolean)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.exists()
org.eclipse.jgit.internal.storage.pack.ObjectReuseAsIs.copyObjectAsIs(PackOutputStream,ObjectToPack,boolean)
org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testEquals_Short8()
org.eclipse.jgit.util.io.TimeoutInputStreamTest.testTimeout_readByte_Success1()
org.eclipse.jgit.internal.storage.file.RefDirectory.commitPackedRefs(LockFile,RefList,PackedRefList,boolean)
org.eclipse.jgit.patch.PatchTest.parseTestPatchFile()
org.eclipse.jgit.nls.TranslationBundleTest.testMissingPropertiesFile()
org.eclipse.jgit.internal.storage.file.RefDirectory.parsePackedRefs(BufferedReader)
org.eclipse.jgit.internal.storage.reftree.RefTree.newEmptyTree()
org.eclipse.jgit.internal.storage.reftable.ReftableReader.getReflogEntry()
org.eclipse.jgit.lib.RepositoryCacheConfigTest.testFromConfig()
org.eclipse.jgit.lib.BranchConfig.findRemoteTrackingBranch(String,String)
org.eclipse.jgit.lib.TagBuilder.setObjectId(RevObject)
org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees()
org.eclipse.jgit.transport.PushProcessTest.push(ProgressMonitor,Map)
org.eclipse.jgit.util.ChangeIdUtilTest.testSingleLineMessages()
org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateLooseBlob()
org.eclipse.jgit.transport.TransportLocal.create(Void,Repository)
org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test7()
org.eclipse.jgit.internal.storage.file.ObjectDirectory.getAlternateId()
org.eclipse.jgit.api.PullCommand.setRebase(BranchRebaseMode)
org.eclipse.jgit.lib.RepositoryCacheTest.testFileKeyOpenExisting()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.getChainLength()
org.eclipse.jgit.api.EolRepositoryTest.apply(DirCacheEntry)
org.eclipse.jgit.lib.WorkingTreeIteratorFactory.getWorkingTreeIterator(Repository)
org.eclipse.jgit.internal.storage.pack.BaseSearch.readTree(AnyObjectId)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.readPacksBefore()
org.eclipse.jgit.diff.RawTextTest.testWriteLine3()
org.eclipse.jgit.pgm.StatusTest.assertStagedStatus(String,boolean,boolean)
org.eclipse.jgit.merge.ResolveMerger.isWorktreeDirty(WorkingTreeIterator,DirCacheEntry)
org.eclipse.jgit.lib.ProgressMonitor.endTask()
org.eclipse.jgit.lib.ObjectIdOwnerMap.remove()
org.eclipse.jgit.dircache.DirCacheTree.toString()
org.eclipse.jgit.treewalk.WorkingTreeIterator.hasId()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.finishSectionMaybeWriteIndex()
org.eclipse.jgit.internal.storage.pack.PackExt.getExtension()
org.eclipse.jgit.transport.URIishTest.testGitProtoWindows()
org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugBrackersAndSob()
org.eclipse.jgit.api.CommitCommandTest.setExecute(File,boolean)
org.eclipse.jgit.transport.RefSpecTest.onlyWildCard()
org.eclipse.jgit.lib.RepositoryResolveTest.testDerefCommit()
org.eclipse.jgit.util.io.TimeoutInputStream.read(byte)
org.eclipse.jgit.pgm.opt.CmdLineParser.getRepository()
org.eclipse.jgit.http.test.SmartClientSmartServerTest.testListRemote()
org.eclipse.jgit.api.DiffCommand.setNewTree(AbstractTreeIterator)
org.eclipse.jgit.treewalk.TreeWalk.min()
org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenMissingWithFileInWorkingTree()
org.eclipse.jgit.api.ResetCommandTest.testPathsReset()
org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.setBare(File,boolean)
org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.testShouldAutomagicallyDetectGitDirectory()
org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.size()
org.eclipse.jgit.treewalk.FileTreeIterator.openInputStream()
org.eclipse.jgit.treewalk.filter.IndexDiffFilter.getIgnoredPaths()
org.eclipse.jgit.util.TemporaryBuffer.last()
org.eclipse.jgit.api.Status.getMissing()
org.eclipse.jgit.gitrepo.RepoCommand.setAuthor(PersonIdent)
org.eclipse.jgit.merge.Merger.merge(AnyObjectId)
org.eclipse.jgit.transport.OpenSshConfigTest.testIdentityFile()
org.eclipse.jgit.diff.DiffConfig.isNoPrefix()
org.eclipse.jgit.internal.ketch.KetchLeader.isIdle()
org.eclipse.jgit.api.CommitCommand.setHookOutputStream(String,PrintStream)
org.eclipse.jgit.merge.MergeFormatterPass.writeConflictEnd()
org.eclipse.jgit.http.test.DumbClientDumbServerTest.testPushNotSupported()
org.eclipse.jgit.diff.RawTextTest.testLineDelimiter()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testPrintGroupCase1()
org.eclipse.jgit.junit.http.HttpTestCase.toURIish(String)
org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_firstparent()
org.eclipse.jgit.treewalk.WorkingTreeIterator.possiblyFilteredInputStream(Entry,InputStream,long,OperationType)
org.eclipse.jgit.api.AddCommandTest.testReplaceDirectoryWithFile()
org.eclipse.jgit.transport.UploadPack.negotiate()
org.eclipse.jgit.revwalk.filter.RevFlagFilter.has(RevFlag)
org.eclipse.jgit.diff.RenameDetector.exactRename(DiffEntry,DiffEntry)
org.eclipse.jgit.notes.NoteMapTest.fanout(int,String)
org.eclipse.jgit.revwalk.filter.MaxCountRevFilter.clone()
org.eclipse.jgit.junit.http.AppServer.auth(ServletContextHandler,Authenticator,String)
org.eclipse.jgit.internal.ketch.KetchLeader.runAsync(Round)
org.eclipse.jgit.transport.http.JDKHttpConnection.setChunkedStreamingMode(int)
org.eclipse.jgit.internal.storage.file.StoredBitmapTest.bitmapOf(int)
org.eclipse.jgit.util.RawParseUtils.prev(byte,int,char)
org.eclipse.jgit.revplot.PlotWalk.next()
org.eclipse.jgit.util.ReadLinesTest.testReadLines_endLF()
org.eclipse.jgit.transport.RefSpecTest.testWildcardAfterText1()
org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleNormalCase()
org.eclipse.jgit.transport.BasePackFetchConnection.onReceivePack()
org.eclipse.jgit.api.PullCommandTest.doTestPullWithRebase(Callable,TestPullMode)
org.eclipse.jgit.internal.ketch.KetchLeader.getHead()
org.eclipse.jgit.junit.http.RecordingLogger.getLogger(String)
org.eclipse.jgit.internal.storage.pack.DeltaWindow.write(int)
org.eclipse.jgit.internal.storage.pack.PackWriter.remove()
org.eclipse.jgit.internal.storage.file.ReflogEntryImpl.getWho()
org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster()
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.getCeilings()
org.eclipse.jgit.junit.http.AccessEvent.cloneHeaders(Request)
org.eclipse.jgit.internal.storage.dfs.DfsInserter.sortObjectsById()
org.eclipse.jgit.internal.storage.pack.PackOutputStream.endObject()
org.eclipse.jgit.internal.storage.reftree.Command.getOldRef()
org.eclipse.jgit.lib.ConfigTest.testTimeUnit()
org.eclipse.jgit.api.BlameCommand.call()
org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compactPacks(DfsReader,ProgressMonitor)
org.eclipse.jgit.pgm.opt.PathTreeFilterHandler.parseArguments(Parameters)
org.eclipse.jgit.pgm.debug.TextHashFunctions.fold(int,int)
org.eclipse.jgit.pgm.ArchiveTest.testTarIncludesSubmoduleDirectory()
org.eclipse.jgit.transport.UploadPackLoggerChain.newChain(List)
org.eclipse.jgit.revwalk.RevFlag.toString()
org.eclipse.jgit.junit.TestRepository.parent(RevCommit)
org.eclipse.jgit.revwalk.FooterLineTest.testNotEmail()
org.eclipse.jgit.transport.RemoteConfig.setPushRefSpecs(List)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.compress(OutputStream)
org.eclipse.jgit.pgm.debug.WriteReftable.max(List)
org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit()
org.eclipse.jgit.junit.TestRepositoryTest.amendHead()
org.eclipse.jgit.util.RawParseUtils_HexParseTest.testInt4_1()
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.read(ByteBuffer)
org.eclipse.jgit.lib.UserConfig.getCommitterName()
org.eclipse.jgit.revwalk.RevWalk.reset()
org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterSmallObjects()
org.eclipse.jgit.internal.storage.dfs.DfsInserter.beginPack()
org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.write(File,PackWriter)
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.removeAllOrNone(PackBitmapIndex)
org.eclipse.jgit.revwalk.ObjectWalk.newTreeVisit(RevObject)
org.eclipse.jgit.junit.http.AppServer.assertAlreadySetUp()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames2()
org.eclipse.jgit.internal.storage.reftable.BlockReader.readVarint32()
org.eclipse.jgit.pgm.debug.ReadReftable.write(Ref)
org.eclipse.jgit.internal.storage.file.RefDirectory.isNameConflicting(String)
org.eclipse.jgit.api.ApplyCommandTest.testModifyZ()
org.eclipse.jgit.blame.BlameResult.lastLength()
org.eclipse.jgit.transport.PackParser.getCRC()
org.eclipse.jgit.notes.LeafBucket.search(AnyObjectId)
org.eclipse.jgit.transport.PushCertificateParserTest.disabledParserStillRequiresCorrectSyntax()
org.eclipse.jgit.internal.storage.file.ReflogWriter.logFor(String)
org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoModificationsWithSharedDelete()
org.eclipse.jgit.hooks.GitHook.getParameters()
org.eclipse.jgit.treewalk.filter.AlwaysCloneTreeFilter.shouldBeRecursive()
org.eclipse.jgit.junit.TestRepository.getRevWalk()
org.eclipse.jgit.util.ReadLinesTest.testReadLines_LF()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_19()
org.eclipse.jgit.ignore.internal.PathMatcher.iterate(String,int,int,boolean,boolean)
org.eclipse.jgit.transport.Connection.close()
org.eclipse.jgit.transport.ReceiveCommand.abort(Iterable)
org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile()
org.eclipse.jgit.http.test.SmartClientSmartServerSslTest.setUp()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testEscapedBracket1()
org.eclipse.jgit.junit.RepositoryTestCase.resetIndex(FileTreeIterator)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testManySolutionsCase1()
org.eclipse.jgit.diff.AbstractDiffTestCase.testEdit_DuplicateAButCommonUniqueInB()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeOneLevel(List)
org.eclipse.jgit.treewalk.filter.ByteArraySet.toString()
org.eclipse.jgit.diff.DiffFormatter.updateFollowFilter(List)
org.eclipse.jgit.internal.storage.file.AlternatesTest.testAlternateCyclic3()
org.eclipse.jgit.transport.NonceGenerator.verify(String,String,Repository,boolean,int)
org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_OnlyLFMessage()
org.eclipse.jgit.transport.TestProtocolTest.registerDefault()
org.eclipse.jgit.util.BlockListTest.testEmptyList()
org.eclipse.jgit.pgm.Fetch.recurseSubmodules(String)
org.eclipse.jgit.pgm.StatusTest.testStatusUntrackedFilesNo()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testFilePathCase2()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.setConfig(ReftableConfig)
org.eclipse.jgit.transport.PushCertificate.commandsEqual(PushCertificate,PushCertificate)
org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog()
org.eclipse.jgit.transport.BaseConnection.getRefsMap()
org.eclipse.jgit.transport.BasePackPushConnection.write(byte,int,int)
org.eclipse.jgit.pgm.CleanTest.testCleanLeaveDirs()
org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testOrMultiTwoSubPath()
org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testSimple()
org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e()
org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooter()
org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_flush_Success()
org.eclipse.jgit.api.BlameCommand.setTextComparator(RawTextComparator)
org.eclipse.jgit.internal.storage.file.WindowCursor.copyPackAsIs(PackFile,long,PackOutputStream)
org.eclipse.jgit.transport.FetchProcess.removeTrackingRefUpdate(ObjectId)
org.eclipse.jgit.submodule.SubmoduleWalk.forIndex(Repository)
org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir()
org.eclipse.jgit.api.RebaseCommandTest.writeFileAndCommit(String,String,String)
org.eclipse.jgit.treewalk.FileTreeIterator.getLength()
org.eclipse.jgit.transport.TrackingRefUpdate.getRemoteName()
org.eclipse.jgit.transport.OpenSshConfigTest.testLocalhostFQDNReplacement()
org.eclipse.jgit.lib.RefDatabaseConflictingNamesTest.getAdditionalRefs()
org.eclipse.jgit.revwalk.MergeBaseGenerator.add(RevCommit)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testXDigitGroupCase4()
org.eclipse.jgit.junit.http.AppServer.tearDown()
org.eclipse.jgit.storage.pack.PackConfig.getBitmapRecentCommitSpan()
org.eclipse.jgit.api.PushCommand.setDryRun(boolean)
org.eclipse.jgit.pgm.AmazonS3Client.run()
org.eclipse.jgit.pgm.LsRemoteTest.testLsRemoteHeadsTags()
org.eclipse.jgit.dircache.DirCacheEditor.pdir(byte,int)
org.eclipse.jgit.internal.storage.pack.DeltaCache.canCache(int,ObjectToPack,ObjectToPack)
org.eclipse.jgit.lfs.lib.LongObjectId.fromRaw(byte,int)
org.eclipse.jgit.internal.storage.file.DeltaBaseCache.releaseMemory()
org.eclipse.jgit.ignore.internal.NameMatcher.matches(String,boolean,boolean)
org.eclipse.jgit.storage.pack.PackStatistics.getUninterestingObjects()
org.eclipse.jgit.gitrepo.RepoCommandTest.gerritSetup()
org.eclipse.jgit.api.EolRepositoryTest.test_ConfigAutoCRLF_true_GlobalEOL_crlf()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testWordGroupCase2()
org.eclipse.jgit.internal.storage.dfs.DfsPackParser.checkCRC(int)
org.eclipse.jgit.transport.Transport.isDryRun()
org.eclipse.jgit.diff.RawTextComparator.findForwardLine(IntList,int,int)
org.eclipse.jgit.util.IntList.contains(int)
org.eclipse.jgit.lib.ObjectChecker.normalize(byte,int,int)
org.eclipse.jgit.transport.RemoteRefUpdate.setExpectedOldObjectId(ObjectId)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_a()
org.eclipse.jgit.blame.Candidate.toString()
org.eclipse.jgit.transport.URIish.getRawPath()
org.eclipse.jgit.internal.storage.file.WindowCache.getOrLoad(PackFile,long)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_a()
org.eclipse.jgit.junit.RepositoryTestCase.fsTick(File)
org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyRawToByteBuffer()
org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder2()
org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test6_FromString()
org.eclipse.jgit.revwalk.RevCommitList.source(RevWalk)
org.eclipse.jgit.util.FS.isFile(File)
org.eclipse.jgit.util.FileUtilsTest.testRenameOverExistingNonEmptyDirectory()
org.eclipse.jgit.pgm.CLIGitCommand.outLines()
org.eclipse.jgit.internal.storage.pack.PackWriter.getTimeWriting()
org.eclipse.jgit.internal.storage.file.WindowCache.toStart(long)
org.eclipse.jgit.lib.Config.getInt(String,String,int)
org.eclipse.jgit.notes.NoteMapMerger.asFanout(InMemoryNoteBucket)
org.eclipse.jgit.lib.AnyObjectId.equals(AnyObjectId)
org.eclipse.jgit.internal.storage.reftable.ReftableReader.getRef()
org.eclipse.jgit.api.GitConstructionTest.testClose()
org.eclipse.jgit.lfs.server.LfsObject.getSize()
org.eclipse.jgit.transport.WalkEncryptionTest.configDelete()
org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_1()
org.eclipse.jgit.pgm.CheckoutTest.testCheckoutBranch()
org.eclipse.jgit.lib.BaseRepositoryBuilder.setGitDir(File)
org.eclipse.jgit.transport.http.apache.TemporaryBufferEntity.isRepeatable()
org.eclipse.jgit.http.server.ClientVersionUtil.parseVersion(String)
org.eclipse.jgit.transport.HttpAuthMethod.uri(URL)
org.eclipse.jgit.api.DiffCommandTest.testNoOutputStreamSet()
org.eclipse.jgit.api.RemoteAddCommand.setUri(URIish)
org.eclipse.jgit.util.ChangeIdUtilTest.call(String)
org.eclipse.jgit.lib.AnyObjectId.copyRawTo(byte,int)
org.eclipse.jgit.treewalk.WorkingTreeOptions.getSymLinks()
org.eclipse.jgit.util.ReadLinesTest.testReadLines_CRLF()
org.eclipse.jgit.util.GitDateParserTest.weeksAgo()
org.eclipse.jgit.dircache.DirCacheTree.compare(DirCacheTree,DirCacheTree)
org.eclipse.jgit.ignore.internal.TrailingAsteriskMatcher.matches(String,int,int,boolean)
org.eclipse.jgit.internal.storage.pack.DeltaEncoder.encodeCopy(int,long,int)
org.eclipse.jgit.transport.RemoteConfig.getTimeout()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testUpperGroupCase4()
org.eclipse.jgit.api.RebaseCommand.setUpstream(RevCommit)
org.eclipse.jgit.revwalk.LIFORevQueueTest.testCloneEmpty()
org.eclipse.jgit.transport.Transport.setObjectChecker(ObjectChecker)
org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository()
org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge()
org.eclipse.jgit.internal.ketch.KetchReplica.waitingForRetry()
org.eclipse.jgit.api.SubmoduleInitCommand.addPath(String)
org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit()
org.eclipse.jgit.internal.ketch.KetchSystem.openRepository()
org.eclipse.jgit.api.ApplyCommandTest.testModifyNL1()
org.eclipse.jgit.treewalk.NameConflictTreeWalk.skipEntriesEqual()
org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.testRules()
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDotDot()
org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getVerifyAction(AnyLongObjectId)
org.eclipse.jgit.merge.MergeAlgorithmTest.testNoAgainstOneModification()
org.eclipse.jgit.submodule.SubmoduleWalk.getModulesPath()
org.eclipse.jgit.internal.storage.file.AutoGcTest.testTooManyLooseObjects()
org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onStoreStream(byte,int,int)
org.eclipse.jgit.lib.RebaseTodoLine.getCommit()
org.eclipse.jgit.archive.TgzFormat.suffixes()
org.eclipse.jgit.dircache.DirCacheEntry.checkPath(byte)
org.eclipse.jgit.diff.RawText.getStart(int)
org.eclipse.jgit.internal.storage.file.FileSnapshot.isModified(File)
org.eclipse.jgit.lib.ThreadSafeProgressMonitor.doUpdates()
org.eclipse.jgit.revwalk.FooterLineTest.testNoFooters_EmptyBody()
org.eclipse.jgit.diff.DiffFormatter.setContext(int)
org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog()
org.eclipse.jgit.util.ChangeIdUtilTest.testMultiLineMessagesWithoutFooter()
org.eclipse.jgit.api.PullCommandTest.testPullFastForward()
org.eclipse.jgit.transport.CredentialsProvider.isAnyNull(CredentialItem)
org.eclipse.jgit.lfs.server.s3.S3Repository.assertNotEmpty(String,String)
org.eclipse.jgit.api.AddCommandTest.testReplaceFileWithDirectory()
org.eclipse.jgit.transport.RemoteConfig.getAllRemoteConfigs(Config)
org.eclipse.jgit.transport.OperationResult.getTrackingRefUpdate(String)
org.eclipse.jgit.internal.storage.pack.PackWriter.getPhase()
org.eclipse.jgit.internal.storage.pack.DeltaWindow.deflateBound(int)
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.setUp()
org.eclipse.jgit.api.AddCommandTest.setExecute(File,boolean)
org.eclipse.jgit.diff.DiffFormatter.createFormatResult(DiffEntry)
org.eclipse.jgit.api.Git.revert()
org.eclipse.jgit.api.StatusCommand.addPath(String)
org.eclipse.jgit.lib.ObjectInserter.insert(int,byte)
org.eclipse.jgit.storage.pack.PackStatistics.getDeltaSearchNonEdgeObjects()
org.eclipse.jgit.api.CloneCommand.call()
org.eclipse.jgit.archive.ZipFormat.putEntry(ArchiveOutputStream,String,FileMode,ObjectLoader)
org.eclipse.jgit.api.RemoteSetUrlCommandTest.testSetPushUrl()
org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule()
org.eclipse.jgit.ignore.internal.WildMatcher.matches(String,boolean,boolean)
org.eclipse.jgit.transport.HttpAuthMethod.H(String)
org.eclipse.jgit.util.RawSubStringPattern.lc(byte)
org.eclipse.jgit.util.FS.setError(IOException,String)
org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule()
org.eclipse.jgit.util.io.AutoCRLFInputStreamTest.encode(byte)
org.eclipse.jgit.util.LongList.add(long)
org.eclipse.jgit.transport.PushCertificateParser.addCommand(ReceiveCommand)
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.execute(BatchRefUpdate)
org.eclipse.jgit.treewalk.filter.NotTreeFilter.include(TreeWalk)
org.eclipse.jgit.blame.BlameGenerator.getResultStart()
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.build()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testEscapedBracket1()
org.eclipse.jgit.transport.OpenSshConfig.getHostname()
org.eclipse.jgit.transport.FetchProcess.getFirstFailedRefName(BatchRefUpdate)
org.eclipse.jgit.transport.UserAgent.hasAgent(Set)
org.eclipse.jgit.internal.storage.reftree.AlwaysFailUpdate.doUpdate(Result)
org.eclipse.jgit.junit.TestRepositoryTest.cherryPick()
org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testQuote_Ang()
org.eclipse.jgit.blame.BlameGenerator.computeBlameResult()
org.eclipse.jgit.internal.storage.reftable.MergedReftable.poll()
org.eclipse.jgit.submodule.SubmoduleWalk.getSubmoduleRepository(File,String)
org.eclipse.jgit.merge.MergeAlgorithm.merge(SequenceComparator,S,S,S)
org.eclipse.jgit.http.test.SmartClientSmartServerTest.testInitialClone_WithAuthenticationOnPostOnly()
org.eclipse.jgit.transport.OperationResult.getPeerUserAgent()
org.eclipse.jgit.transport.WalkEncryption.error(Throwable)
org.eclipse.jgit.pgm.CLIGitCommand.errString()
org.eclipse.jgit.pgm.Merge.ffonly(boolean)
org.eclipse.jgit.transport.PushOptionsTest.setUp()
org.eclipse.jgit.http.server.glue.NoParameterFilterConfig.nextElement()
org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.getPackSize()
org.eclipse.jgit.pgm.Diff.init(Repository,String)
org.eclipse.jgit.internal.storage.file.PackWriterTest.genDeltableData(int)
org.eclipse.jgit.diff.DiffFormatter.detectRenames(List)
org.eclipse.jgit.internal.storage.file.RefDirectory.peeledPackedRef(Ref)
org.eclipse.jgit.transport.RefLeaseSpec.getExpected()
org.eclipse.jgit.pgm.ArchiveTest.testDefaultFormatIsTar()
org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkWithZeroAsEnd()
org.eclipse.jgit.transport.AmazonS3.properties(File)
org.eclipse.jgit.http.test.HookMessageTest.testPush_CreateBranch()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase2()
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.addMissingObject()
org.eclipse.jgit.pgm.BranchTest.testExistingBranch()
org.eclipse.jgit.util.io.TimeoutOutputStream.getTimeout()
org.eclipse.jgit.util.FileUtils.relativizeGitPath(String,String)
org.eclipse.jgit.util.ChangeIdUtilTest.testChangeIdAfterBugOrIssue()
org.eclipse.jgit.transport.http.JDKHttpConnection.getResponseMessage()
org.eclipse.jgit.revplot.PlotCommit.addChild(PlotCommit)
org.eclipse.jgit.pgm.Show.ignoreLeadingSpace(boolean)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMixedGroupCase8()
org.eclipse.jgit.dircache.DirCacheBuilder.createTreeParser(byte,ObjectReader,AnyObjectId)
org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange()
org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_Small()
org.eclipse.jgit.lfs.test.LongObjectIdTestUtils.hash(Path)
org.eclipse.jgit.attributes.Attributes.put(Attribute)
org.eclipse.jgit.lfs.Lfs.getMediaFile(AnyLongObjectId)
org.eclipse.jgit.notes.NoteMerger.merge(Note,Note,Note,ObjectReader,ObjectInserter)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testWordroupCase3()
org.eclipse.jgit.notes.NoteParser.storeNonNote()
org.eclipse.jgit.transport.URIishTest.testGitProtoWindowsPort()
org.eclipse.jgit.api.LogCommand.all()
org.eclipse.jgit.revwalk.RevWalk.assumeShallow(Collection)
org.eclipse.jgit.api.PathCheckoutCommandTest.setUp()
org.eclipse.jgit.storage.pack.PackStatistics.getReusedObjects()
org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testClear()
org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest.assertNotMatched(String,String,Boolean)
org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify()
org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.getId(int,byte)
org.eclipse.jgit.lib.ValidRefNameTest.testShellGlob()
org.eclipse.jgit.dircache.DirCache.newInCore()
org.eclipse.jgit.util.TemporaryBuffer.length()
org.eclipse.jgit.internal.ketch.ProposalRound.canCombine(List)
org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits()
org.eclipse.jgit.api.BlameCommand.toByteArray(InputStream,int)
org.eclipse.jgit.dircache.DirCacheCheckout.filterOut(ArrayList,IntList)
org.eclipse.jgit.diff.RenameDetector.compute()
org.eclipse.jgit.diff.HashedSequence.size()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.writeFileInFolderModifiedIgnored()
org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testIsBare_CreateRepositoryFromArbitraryGitDir()
org.eclipse.jgit.internal.storage.file.ByteBufferWindow.write(PackOutputStream,long,int)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testVerySimplePatternCase2()
org.eclipse.jgit.lib.RefUpdate.execute(Result)
org.eclipse.jgit.util.FileUtils.canExecute(File)
org.eclipse.jgit.dircache.DirCacheIterator.createSubtreeIterator(ObjectReader)
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.oneRefWrongOldValue()
org.eclipse.jgit.pgm.Branch.moveRename(List)
org.eclipse.jgit.http.server.GitSmartHttpTools.sendInfoRefsError(HttpServletRequest,HttpServletResponse,String)
org.eclipse.jgit.revwalk.RevFlagSetTest.testAddTwo()
org.eclipse.jgit.attributes.AttributesHandlerTest.testCustomGlobalMacro1()
org.eclipse.jgit.transport.TransportSftp.writeFile(String,ProgressMonitor,String)
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.createRepository(boolean,boolean)
org.eclipse.jgit.transport.OperationResult.getURI()
org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI()
org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply()
org.eclipse.jgit.internal.storage.dfs.DfsInserter.getSize()
org.eclipse.jgit.treewalk.filter.NotTreeFilter.negate()
org.eclipse.jgit.revwalk.ObjectWalk.sort(RevSort,boolean)
org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.setUp()
org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_Or_ALL()
org.eclipse.jgit.transport.ReceivedPackStatistics.build()
org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.shouldNotFetchSubmodulesWhenSubmoduleConfigurationSetToNo(boolean)
org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner.tableSize(int)
org.eclipse.jgit.lfs.server.s3.SignerV4.canonicalizeResourcePath(URL)
org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog()
org.eclipse.jgit.api.NameRevCommandTest.nameExact()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCreateMatcherForSuffix()
org.eclipse.jgit.api.MergeCommand.valueOf(FastForwardMode,Merge)
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.command(AnyObjectId,AnyObjectId,String)
org.eclipse.jgit.internal.storage.file.BitSet.clear()
org.eclipse.jgit.pgm.CommandRef.getImplementationClassLoader()
org.eclipse.jgit.util.io.NullOutputStream.write(int)
org.eclipse.jgit.revplot.PlotCommit.getChildCount()
org.eclipse.jgit.revplot.AbstractPlotRenderer.laneC(PlotLane)
org.eclipse.jgit.lfs.server.fs.ObjectDownloadListener.onError(Throwable)
org.eclipse.jgit.api.PullResult.getMergeResult()
org.eclipse.jgit.internal.storage.pack.PackWriter.isIndexDisabled()
org.eclipse.jgit.internal.storage.pack.PackWriter.getThinPackBytes()
org.eclipse.jgit.pgm.RemoteTest.testList()
org.eclipse.jgit.revplot.PlotWalk.compare(Ref,Ref)
org.eclipse.jgit.util.Paths.stripTrailingSeparator(String)
org.eclipse.jgit.internal.storage.reftable.ReftableTest.byObjectIdOneRefNoIndex()
org.eclipse.jgit.attributes.FilterCommandRegistry.getRegisteredFilterCommands()
org.eclipse.jgit.internal.storage.pack.PackWriter.isReuseDeltaCommits()
org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.apply(DirCacheEntry)
org.eclipse.jgit.internal.fsck.FsckError.getId()
org.eclipse.jgit.api.LsRemoteCommand.setUploadPack(String)
org.eclipse.jgit.internal.storage.pack.PackWriter.reuseDeltaFor(ObjectToPack)
org.eclipse.jgit.diff.DiffEntryTest.shouldThrowIAEWhenTreeWalkHasLessThanTwoTrees()
org.eclipse.jgit.pgm.DiffTree.tree_0(AbstractTreeIterator)
org.eclipse.jgit.transport.BaseReceivePack.isQuiet()
org.eclipse.jgit.api.RebaseCommand.getDir()
org.eclipse.jgit.internal.ketch.StageBuilder.makeStageList(Set,Repository,ObjectInserter)
org.eclipse.jgit.internal.storage.dfs.DfsRepository.scanForRepoChanges()
org.eclipse.jgit.util.GitDateParserTest.shortFmt()
org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryPathString()
org.eclipse.jgit.transport.RefAdvertiser.init(Repository)
org.eclipse.jgit.junit.http.RecordingLogger.warn(Throwable)
org.eclipse.jgit.patch.FileHeaderTest.data(String)
org.eclipse.jgit.util.io.TimeoutInputStreamTest.testTimeout_readByte_Success2()
org.eclipse.jgit.transport.http.JDKHttpConnection.getResponseCode()
org.eclipse.jgit.lib.MutableObjectId.fromObjectId(AnyObjectId)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoGroupsCase2()
org.eclipse.jgit.ignore.CGitIgnoreTest.testDirOnlyMatchDeep()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedIgnored()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting1()
org.eclipse.jgit.api.RebaseCommandTest.testRepositoryStateChecks()
org.eclipse.jgit.pgm.TextBuiltin.containsHelp(String)
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.fromString(byte,int,int)
org.eclipse.jgit.util.FS.getAttributes(File)
org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getXorOffset()
org.eclipse.jgit.treewalk.CanonicalTreeParser.reset(byte)
org.eclipse.jgit.internal.ketch.KetchReplica.updateView(ReplicaPushRequest,ObjectId,ReceiveCommand)
org.eclipse.jgit.lib.BitmapIndex.newBitmapBuilder()
org.eclipse.jgit.transport.PacketLineInTest.testReadString4()
org.eclipse.jgit.junit.TestRepository.add(String,String)
org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned()
org.eclipse.jgit.gitrepo.RepoProject.setGroups(String)
org.eclipse.jgit.api.TagCommandTest.testShouldNotBlowUpIfThereAreNoCommitsInRepository()
org.eclipse.jgit.api.Git.submoduleAdd()
org.eclipse.jgit.internal.storage.pack.DeltaWindow.selectDeltaBase(DeltaWindowEntry,OutputStream)
org.eclipse.jgit.treewalk.EmptyTreeIterator.getEntryObjectId()
org.eclipse.jgit.lib.IndexDiff.include(TreeWalk)
org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.add(AnyObjectId)
org.eclipse.jgit.transport.RemoteConfig.setFetchRefSpecs(List)
org.eclipse.jgit.lfs.errors.CorruptMediaFile.getSize()
org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testSimple1()
org.eclipse.jgit.internal.storage.file.PackFile.beginCopyAsIs(ObjectToPack)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testDigitGroupCase4()
org.eclipse.jgit.transport.BaseReceivePack.sendError(String)
org.eclipse.jgit.pgm.Blame.parseLineRangeOption()
org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex(MergeStrategy)
org.eclipse.jgit.transport.HttpConfigUriPathTest.testNormalizationWithDot()
org.eclipse.jgit.revwalk.RevCommitList.fillTo(int)
org.eclipse.jgit.diff.RenameDetector.reset()
org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit()
org.eclipse.jgit.junit.http.RecordingLogger.isDebugEnabled()
org.eclipse.jgit.api.ArchiveCommandTest.createArchiveOutputStream(OutputStream)
org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD()
org.eclipse.jgit.util.StringUtilsTest.testEqualsIgnoreCase1()
org.eclipse.jgit.pgm.debug.TextHashFunctions.testOne(Function,RawText,int,int)
org.eclipse.jgit.transport.WalkEncryptionTest.isBuildCI()
org.eclipse.jgit.lfs.lib.AnyLongObjectId.compareTo(long,int)
org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest.testQuote_BareA()
org.eclipse.jgit.internal.storage.file.LockFile.getLockFile(File)
org.eclipse.jgit.util.GSSManagerFactory.detect()
org.eclipse.jgit.submodule.SubmoduleStatus.getType()
org.eclipse.jgit.junit.MockSystemReader.getTimezone(long)
org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.getMatchingPaths(String,ObjectId,boolean)
org.eclipse.jgit.internal.fsck.FsckError.getMissingObjects()
org.eclipse.jgit.api.FetchCommand.setRemoveDeletedRefs(boolean)
org.eclipse.jgit.lib.ObjectId.fromRaw(int,int)
org.eclipse.jgit.attributes.CGitAttributesTest.testStarMatchOnSlashNot()
org.eclipse.jgit.treewalk.WorkingTreeIterator.eof()
org.eclipse.jgit.lib.RepositoryCacheConfigTest.setUp()
org.eclipse.jgit.lib.Constants.encodeASCII(String)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.hasPackedInSelfOrAlternate(AnyObjectId,Set)
org.eclipse.jgit.api.PathCheckoutCommandTest.assertStageOneToThree(String)
org.eclipse.jgit.internal.storage.pack.PackWriter.iterator()
org.eclipse.jgit.revwalk.RevFlagSetTest.testAddOne()
org.eclipse.jgit.attributes.TreeWalkAttributeTest.endWalk()
org.eclipse.jgit.http.server.GitFilter.getBoolean(FilterConfig,String)
org.eclipse.jgit.internal.ketch.KetchReplica.getId(Ref)
org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.testNoAttributes()
org.eclipse.jgit.http.server.SmartOutputStream.overflow()
org.eclipse.jgit.internal.storage.pack.PackExt.newPackExt(String)
org.eclipse.jgit.util.io.ThrowingPrintWriter.close()
org.eclipse.jgit.treewalk.TreeWalk.reset()
org.eclipse.jgit.revwalk.filter.SkipRevFilter.clone()
org.eclipse.jgit.transport.HttpConfigTest.testMatchWithInvalidUriInConfig()
org.eclipse.jgit.lib.EmptyProgressMonitor.start(int)
org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.invalid()
org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory()
org.eclipse.jgit.api.ResetCommandTest.assertReflog(ObjectId,ObjectId)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeleted()
org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_NoAttr_Conflict()
org.eclipse.jgit.blame.BlameResult.getSourceCommit(int)
org.eclipse.jgit.pgm.AbstractFetchCommand.safeAbbreviate(ObjectReader,ObjectId)
org.eclipse.jgit.http.test.SmartClientSmartServerTest.testListRemote_BadName()
org.eclipse.jgit.lib.RepositoryCache.toString()
org.eclipse.jgit.lib.AnyObjectId.getName()
org.eclipse.jgit.treewalk.filter.InterIndexDiffFilter.shouldBeRecursive()
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.or(EWAHCompressedBitmap)
org.eclipse.jgit.transport.TransportProtocol.open(URIish)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_d()
org.eclipse.jgit.api.NameRevCommandTest.setUp()
org.eclipse.jgit.revwalk.RevWalk.markStart(Collection)
org.eclipse.jgit.patch.HunkHeader.getStartLine()
org.eclipse.jgit.pgm.CLIGitCommand.errBytes()
org.eclipse.jgit.storage.pack.PackStatistics.getThinPackBytes()
org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.setUp()
org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkWithoutMergeBase()
org.eclipse.jgit.storage.pack.PackConfig.getBitmapExcessiveBranchCount()
org.eclipse.jgit.transport.SideBandProgressMonitor.onUpdate(String,int)
org.eclipse.jgit.lib.ObjectLoader.getCachedBytes()
org.eclipse.jgit.internal.storage.reftable.BlockWriter.mustAdd(Entry)
org.eclipse.jgit.util.RelativeDateFormatter.format(Date)
org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_4094()
org.eclipse.jgit.transport.WantNotValidException.msg(AnyObjectId)
org.eclipse.jgit.lib.ValidRefNameTest.testNormalizeBranchName()
org.eclipse.jgit.storage.pack.PackConfig.setBuildBitmaps(boolean)
org.eclipse.jgit.pgm.debug.WriteReftable.min(List)
org.eclipse.jgit.treewalk.filter.ByteArraySet.isEmpty()
org.eclipse.jgit.diff.HistogramDiffIndex.recPtr(long)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testDontOverwriteDirtyFile()
org.eclipse.jgit.revplot.PlotCommitListTest.asSet(int)
org.eclipse.jgit.api.PullResult.getFetchResult()
org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyThenReadMaster()
org.eclipse.jgit.transport.RefSpec.matchDestination(String)
org.eclipse.jgit.patch.BinaryHunk.getBuffer()
org.eclipse.jgit.api.ResetCommand.getRefOrHEAD()
org.eclipse.jgit.transport.TransportSftp.getOptionalFields()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6()
org.eclipse.jgit.transport.RemoteConfig.getReceivePack()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testPunctGroupCase1()
org.eclipse.jgit.util.QuotedStringBourneStyleTest.testDequote_Empty1()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testDigitGroupCase4()
org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementWithChangeIdInCommitMessage()
org.eclipse.jgit.transport.Connection.getRefsMap()
org.eclipse.jgit.pgm.CommandCatalog.compare(CommandRef,CommandRef)
org.eclipse.jgit.merge.MergeChunk.getEnd()
org.eclipse.jgit.lib.AbbreviatedObjectId.mask(int,int,int)
org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_ManyUsers()
org.eclipse.jgit.transport.DaemonService.execute(DaemonClient,String)
org.eclipse.jgit.lib.ObjectChecker.toLower(byte)
org.eclipse.jgit.revwalk.FIFORevQueue.add(RevCommit)
org.eclipse.jgit.transport.TransportAmazonS3.writeFile(String,ProgressMonitor,String)
org.eclipse.jgit.revwalk.RevBlob.getType()
org.eclipse.jgit.pgm.debug.LfsStore.stop()
org.eclipse.jgit.awtui.SwingCommitList.repackColors()
org.eclipse.jgit.internal.storage.pack.PackWriter.reselectNonDelta(ObjectToPack)
org.eclipse.jgit.revwalk.RevTag.getShortMessage()
org.eclipse.jgit.revwalk.AbstractRevQueue.addParents(RevCommit,RevFlag)
org.eclipse.jgit.api.RebaseResult.conflicts(List)
org.eclipse.jgit.treewalk.TreeWalk.stopWalk()
org.eclipse.jgit.transport.FetchConnection.didFetchTestConnectivity()
org.eclipse.jgit.revwalk.filter.PatternMatchRevFilter.toString()
org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions.getStreamPackBufferSize()
org.eclipse.jgit.transport.PackParser.resolveDeltas(ProgressMonitor)
org.eclipse.jgit.internal.storage.reftree.Function.apply(ObjectReader,RefTree)
org.eclipse.jgit.transport.Transport.openAll(Repository,String)
org.eclipse.jgit.transport.HttpConfigUriPathTest.testNormalizationWithDoubleSlash()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.addBitmap(AnyObjectId,Bitmap,int)
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.andNot(EWAHCompressedBitmap)
org.eclipse.jgit.api.ArchiveCommandTest.size()
org.eclipse.jgit.internal.storage.file.PackIndexTestCase.testIteratorMethodsContract()
org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.getRefs(String)
org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2()
org.eclipse.jgit.revwalk.filter.NotRevFilter.create(RevFilter)
org.eclipse.jgit.api.Git.init()
org.eclipse.jgit.lib.Repository.writeRevertHead(ObjectId)
org.eclipse.jgit.diff.Edit.getEndB()
org.eclipse.jgit.internal.storage.dfs.DfsReader.sortPacksForSelectRepresentation()
org.eclipse.jgit.internal.storage.dfs.DfsReader.getShallowCommits()
org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.assertIteration(FileMode,String)
org.eclipse.jgit.api.ApplyCommandTest.testModifyM2()
org.eclipse.jgit.api.MergeCommandTest.canExecute(Git,String)
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoObject6()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testDontOverwriteEmptyFolder()
org.eclipse.jgit.lib.RefDatabase.getConflictingNames(String)
org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.beginTask(String,int)
org.eclipse.jgit.transport.TransportGitSsh.useExtSession()
org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.getResultTreeId()
org.eclipse.jgit.util.FS_POSIX.setUmask(int)
org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.skipMe(Set)
org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithNoSubmodules()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testXDigitGroupCase7()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testLowerGroupCase1()
org.eclipse.jgit.api.CommitCommandTest.isCaseSensitive()
org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.shouldFetchSubmodulesWhenOnDemandAndRevisionChanged(boolean)
org.eclipse.jgit.lib.RepositoryCacheTest.testReconfigure()
org.eclipse.jgit.treewalk.AbstractTreeIterator.isWorkTree()
org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.testDontDeleteSymlinkOnTopOfRootDir()
org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testKeyIsPrefixOfFilter()
org.eclipse.jgit.api.CommitOnlyTest.expected_f3_idx(int)
org.eclipse.jgit.util.sha1.SHA1Test.test2()
org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible()
org.eclipse.jgit.storage.pack.PackConfig.setCompressionLevel(int)
org.eclipse.jgit.http.server.glue.MetaFilter.contains(Object)
org.eclipse.jgit.treewalk.CanonicalTreeParser.hasId()
org.eclipse.jgit.treewalk.TreeWalk.isPostOrderTraversal()
org.eclipse.jgit.treewalk.WorkingTreeIterator.getEolStreamType(OperationType)
org.eclipse.jgit.lib.Config.getRefSpecs(String,String,String)
org.eclipse.jgit.lib.ConfigTest.testSetFastForwardMergeoptions()
org.eclipse.jgit.http.server.glue.MetaFilter.iterator()
org.eclipse.jgit.lib.IndexDiff.setIgnoreSubmoduleMode(IgnoreSubmoduleMode)
org.eclipse.jgit.diff.RenameDetectorTest.setUp()
org.eclipse.jgit.transport.HMACSHA1NonceGeneratorTest.slop()
org.eclipse.jgit.ignore.BasicRuleTest.testDirectoryPattern()
org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem()
org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName()
org.eclipse.jgit.api.CloneCommand.findBranchToCheckout(FetchResult)
org.eclipse.jgit.pgm.ReflogTest.testClean()
org.eclipse.jgit.transport.PacketLineOutTest.setUp()
org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_9(Git,int)
org.eclipse.jgit.http.server.ClientVersionUtil.splitVersion(String)
org.eclipse.jgit.revwalk.ObjectWalk.setObjectFilter(ObjectFilter)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_d()
org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuilderClear()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e()
org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation.wasDeltaAttempted()
org.eclipse.jgit.transport.Transport.getURI()
org.eclipse.jgit.internal.ketch.ReplicaConfig.getMinRetry(TimeUnit)
org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeUnset(String,String)
org.eclipse.jgit.transport.PushCertificateStoreTest.saveTwoCertsOnSameRefInTwoUpdates()
org.eclipse.jgit.transport.BundleWriterTest.fetchFromBundle(Repository,byte)
org.eclipse.jgit.submodule.SubmoduleWalk.getConfigUpdate()
org.eclipse.jgit.api.CommitAndLogCommandTest.testMultipleInvocations()
org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testDonePruneTooYoungPacks()
org.eclipse.jgit.util.TemporaryBufferTest.testOneByte()
org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_ShortLineOnlyNoLF()
org.eclipse.jgit.util.RawParseUtils.charsetForAlias(String)
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setFileSize(PackExt,long)
org.eclipse.jgit.blame.BlameGenerator.getRegionLength()
org.eclipse.jgit.diff.AbstractDiffTestCase.testDegenerate_DeleteStart()
org.eclipse.jgit.internal.storage.reftable.ReftableConfig.getRefBlockSize()
org.eclipse.jgit.lib.ObjectChecker.checkPathSegment2(byte,int,int,AnyObjectId)
org.eclipse.jgit.patch.FileHeaderTest.testParseModeChange()
org.eclipse.jgit.patch.HunkHeader.getLineCount()
org.eclipse.jgit.diff.DiffFormatter.formatGitDiffFirstHeaderLine(ByteArrayOutputStream,ChangeType,String,String)
org.eclipse.jgit.internal.storage.reftable.BlockReader.readBlock(BlockSource,long,int)
org.eclipse.jgit.dircache.DirCacheEntry.getMaximumInfoLength(boolean)
org.eclipse.jgit.treewalk.CanonicalTreeParserTest.setUp()
org.eclipse.jgit.transport.RemoteConfig.unset(Config,String)
org.eclipse.jgit.patch.PatchErrorTest.testError_BodyTooLong()
org.eclipse.jgit.util.FSTest.readPermissions(File)
org.eclipse.jgit.api.ArchiveCommandTest.setFoo(int)
org.eclipse.jgit.notes.NoteMapMergerTest.testDeleteDifferentNotes()
org.eclipse.jgit.treewalk.WorkingTreeIterator.filterClean(byte,int,OperationType)
org.eclipse.jgit.http.test.GitServletResponseTests.testObjectCheckerException()
org.eclipse.jgit.api.DescribeCommandTest.branch(String,ObjectId)
org.eclipse.jgit.lib.SquashCommitMsgTest.testReadWriteMergeMsg()
org.eclipse.jgit.treewalk.filter.PathFilterGroup.createFromStrings(String)
org.eclipse.jgit.diff.HashedSequencePair.getB()
org.eclipse.jgit.junit.http.AccessEvent.getPath()
org.eclipse.jgit.lib.ValidRefNameTest.testNoSpace()
org.eclipse.jgit.internal.storage.file.BitSet.get(int)
org.eclipse.jgit.attributes.TreeWalkAttributeTest.testRulesInherited()
org.eclipse.jgit.revplot.AbstractPlotRendererTest.drawCommitDot(int,int,int,int)
org.eclipse.jgit.revwalk.RevWalk.remove()
org.eclipse.jgit.internal.storage.reftable.ReftableConfig.getRestartInterval()
org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_2(Git)
org.eclipse.jgit.errors.DirCacheNameConflictException.getPath2()
org.eclipse.jgit.lib.BatchingProgressMonitor.setDelayStart(long,TimeUnit)
org.eclipse.jgit.revwalk.RevWalkUtils.find(RevWalk,RevCommit,RevCommit)
org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree()
org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth3()
org.eclipse.jgit.lib.BaseRepositoryBuilder.setMustExist(boolean)
org.eclipse.jgit.internal.storage.pack.DeltaIndex.estimateIndexSize(int)
org.eclipse.jgit.transport.DaemonClient.getDaemon()
org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_8(Git,int)
org.eclipse.jgit.api.RebaseCommand.setUpstream(AnyObjectId)
org.eclipse.jgit.http.test.SmartClientSmartServerTest.testInitialClone_RedirectMax()
org.eclipse.jgit.http.test.GitServletResponseTests.create(HttpServletRequest,Repository)
org.eclipse.jgit.dircache.DirCachePathEditTest.testTreeReplacesFile()
org.eclipse.jgit.revwalk.RevFlagSet.containsAll(Collection)
org.eclipse.jgit.util.RunExternalScriptTest.setUp()
org.eclipse.jgit.lib.ObjectCheckerTest.contains(AnyObjectId)
org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.prefixCompare(byte,int)
org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedNonExpiredObject_notPruned()
org.eclipse.jgit.diff.HistogramDiff.diff(Edit)
org.eclipse.jgit.revwalk.DepthWalk.getUnshallowFlag()
org.eclipse.jgit.transport.http.apache.HttpClientConnection.getContentLength()
org.eclipse.jgit.patch.FileHeader.trySimpleConversion(Charset)
org.eclipse.jgit.api.MergeCommandTest.checkMergeFailedResult(MergeResult,MergeFailureReason,String,File)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testBackslash()
org.eclipse.jgit.transport.FetchConnection.didFetchIncludeTags()
org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.cachePeeledState(Ref,Ref)
org.eclipse.jgit.transport.http.HttpConnection.setUseCaches(boolean)
org.eclipse.jgit.lib.ValidRefNameTest.testValidSpecialCharacterUnixs()
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.compareAndRemove(Ref)
org.eclipse.jgit.api.ApplyCommandTest.getTestResource(String)
org.eclipse.jgit.internal.storage.file.LargePackedWholeObject.getSize()
org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.twoTableSeek()
org.eclipse.jgit.revwalk.FollowFilter.include(TreeWalk)
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead()
org.eclipse.jgit.http.server.RootLocaleTest.setUp()
org.eclipse.jgit.api.CleanCommand.cleanPath(String,Set)
org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getReadChannel(AnyLongObjectId)
org.eclipse.jgit.transport.WalkEncryptionTest.loadEnvVar(String,String,Properties)
org.eclipse.jgit.internal.storage.pack.PackWriter.isReuseValidatingObjects()
org.eclipse.jgit.internal.storage.file.PackIndexV2.findLevelOne(long)
org.eclipse.jgit.internal.storage.pack.PackWriter.getObjectWalk()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testEscapedBracket2()
org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2()
org.eclipse.jgit.transport.RefAdvertiser.advertiseAny(AnyObjectId,String)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.insert(int,long,InputStream)
org.eclipse.jgit.storage.pack.PackConfig.getCompressionLevel()
org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_7(Git)
org.eclipse.jgit.transport.UploadPack.addCommonBase(RevObject)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_b()
org.eclipse.jgit.transport.WalkEncryptionTest.test_V2_Java7_AES()
org.eclipse.jgit.treewalk.TreeWalk.getEolStreamType(OperationType)
org.eclipse.jgit.pgm.opt.SubcommandHandler.getDefaultMetaVariable()
org.eclipse.jgit.attributes.TreeWalkAttributeTest.assertEntry(FileMode,String)
org.eclipse.jgit.util.StringUtilsTest.testToLowerCaseChar()
org.eclipse.jgit.internal.storage.file.PackFile.load(WindowCursor,long)
org.eclipse.jgit.junit.TestRepository.parents()
org.eclipse.jgit.internal.storage.file.FileRepository.getObjectsDirectory()
org.eclipse.jgit.util.BlockList.toDirectoryIndex(int)
org.eclipse.jgit.pgm.CheckoutTest.testCheckoutAllPaths()
org.eclipse.jgit.revwalk.RevTagParseTest.testTagCommit()
org.eclipse.jgit.diff.DiffEntry.getOldMode()
org.eclipse.jgit.transport.URIishTest.shouldRaiseErrorOnNullURI()
org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects()
org.eclipse.jgit.dircache.DirCacheEntry.setLastModified(long)
org.eclipse.jgit.http.server.IsLocalFilter.isLocal(Repository)
org.eclipse.jgit.pgm.RevWalkTextBuiltin.addAuthorRevFilter(String)
org.eclipse.jgit.dircache.DirCacheTree.getEntrySpan()
org.eclipse.jgit.patch.CombinedFileHeader.getOldId()
org.eclipse.jgit.ignore.FastIgnoreRuleTest.testQuestionmark()
org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink()
org.eclipse.jgit.transport.PacketLineOutTest.write(int)
org.eclipse.jgit.api.PushCommandTest.testPrePushHook()
org.eclipse.jgit.http.test.HttpClientTests.testListRemote_Smart_UploadPackDisabled()
org.eclipse.jgit.dircache.DirCacheEditor.setReplace(boolean)
org.eclipse.jgit.transport.WalkEncryptionTest.proxySetup()
org.eclipse.jgit.internal.storage.pack.PackWriter.preparePack(ProgressMonitor,Set,Set)
org.eclipse.jgit.lib.ObjectCheckerTest.entry(StringBuilder,String)
org.eclipse.jgit.lib.IndexDiff.fromMask(int)
org.eclipse.jgit.dircache.DirCacheLargePathTest.testLongPath(int)
org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testCombinedRangesInOneGroupCase0()
org.eclipse.jgit.merge.ResolveMerger.getUnmergedPaths()
org.eclipse.jgit.pgm.MergeTest.testFastForward()
org.eclipse.jgit.http.server.TextFileServlet.doGet(HttpServletRequest,HttpServletResponse)
org.eclipse.jgit.pgm.CLIGitCommand.split(String)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase1()
org.eclipse.jgit.http.server.glue.NoParameterFilterConfig.hasMoreElements()
org.eclipse.jgit.api.RebaseCommandTest.prepareSteps(List)
org.eclipse.jgit.internal.storage.reftable.ReftableTest.read(byte)
org.eclipse.jgit.lfs.server.s3.S3Repository.getVerifyAction(AnyLongObjectId)
org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders()
org.eclipse.jgit.dircache.DirCacheEntryTest.testCopyMetaDataWithStage()
org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCompareToByte()
org.eclipse.jgit.lib.Repository.getGlobalListenerList()
org.eclipse.jgit.util.FileUtil.exists(File)
org.eclipse.jgit.junit.JGitTestUtil.getTestResourceFile(String)
org.eclipse.jgit.util.LongMap.put(long,V)
org.eclipse.jgit.util.FS.delete(File)
org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFlat()
org.eclipse.jgit.internal.storage.file.RefUpdateTest.writeReflog(Repository,ObjectId,String,String)
org.eclipse.jgit.treewalk.WorkingTreeIterator.idOffset()
org.eclipse.jgit.diff.RawText.isBinary(byte,int)
org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_Length130CopyFails()
org.eclipse.jgit.ignore.IgnoreNodeTest.assertEntry(FileMode,boolean,String)
org.eclipse.jgit.gitrepo.RepoProject.clearLinkFiles()
org.eclipse.jgit.api.CherryPickCommand.calculateOurName(Ref)
org.eclipse.jgit.lib.Config.unsetSection(ConfigSnapshot,String,String)
org.eclipse.jgit.diff.RenameDetector.nameOf(DiffEntry)
org.eclipse.jgit.transport.URIishTest.testMissingPort()
org.eclipse.jgit.junit.MockSystemReader.getHostname()
org.eclipse.jgit.transport.BasePackFetchConnection.fetch(ProgressMonitor,Collection,Set)
org.eclipse.jgit.pgm.ArchiveTest.testArchiveWithFiles()
org.eclipse.jgit.api.RebaseCommand.getOrdinal(int)
org.eclipse.jgit.transport.RemoteConfig.setMirror(boolean)
org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd()
org.eclipse.jgit.gitrepo.RepoCommandTest.sha1(String,String)
org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_InheritPreferredAuthentications()
org.eclipse.jgit.pgm.CheckoutTest.testCheckoutOrphan()
org.eclipse.jgit.revwalk.BlockRevQueue.shareFreeList(BlockRevQueue)
org.eclipse.jgit.api.FetchCommand.setDryRun(boolean)
org.eclipse.jgit.lfs.internal.AtomicObjectOutputStream.verifyHash()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e()
org.eclipse.jgit.treewalk.filter.IndexDiffFilter.toString()
org.eclipse.jgit.internal.storage.file.AbbreviationTest.tearDown()
org.eclipse.jgit.revwalk.RevWalk.markUninteresting(RevCommit)
org.eclipse.jgit.api.GarbageCollectCommand.toProperties(RepoStatistics)
org.eclipse.jgit.lfs.lib.LfsPointerFilterTest.shouldBe(boolean)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testTwoRangesInOneGroupCase1()
org.eclipse.jgit.lib.IndexDiff.getRemoved()
org.eclipse.jgit.treewalk.WorkingTreeIterator.isBinary(Entry)
org.eclipse.jgit.lib.ObjectIdSubclassMapTest.init()
org.eclipse.jgit.lib.Config.uncache(SectionParser)
org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.setReftableConfig(ReftableConfig)
org.eclipse.jgit.api.AddCommand.setWorkingTreeIterator(WorkingTreeIterator)
org.eclipse.jgit.api.PushCommand.setRemote(String)
org.eclipse.jgit.revwalk.FooterLineTest.testNoFooters_NewlineOnlyBody5()
org.eclipse.jgit.transport.ReceivePack.setPostReceiveHook(PostReceiveHook)
org.eclipse.jgit.lib.CLIRepositoryTestCase.toString(String)
org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testEquals_Short4()
org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation.getFormat()
org.eclipse.jgit.pgm.MergeTest.testMergeWithUserMessage()
org.eclipse.jgit.http.test.HookMessageTest.testPush_HookMessagesToOutputStream()
org.eclipse.jgit.storage.pack.PackConfig.isReuseDeltas()
org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_bad_encoded2()
org.eclipse.jgit.internal.storage.file.RefDirectoryRename.linkHEAD(RefUpdate)
org.eclipse.jgit.api.CleanCommandTest.setUp()
org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.testFailsMethodsOnBackgroundThread()
org.eclipse.jgit.internal.ketch.ProposalRound.insertSingleProposal(Repository,ProposedTimestamp,ObjectInserter)
org.eclipse.jgit.ignore.FastIgnoreRuleTest.assertMatched(String,String)
org.eclipse.jgit.merge.ResolveMerger.keep(DirCacheEntry)
org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.write(int)
org.eclipse.jgit.blame.ReverseWalk.createCommit(AnyObjectId)
org.eclipse.jgit.internal.storage.reftable.BlockWriter.computeBlockBytes(int,int)
org.eclipse.jgit.internal.storage.file.PackFile.getObjectSize(WindowCursor,long)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.assertMatch(String,String,boolean,Boolean)
org.eclipse.jgit.lfs.lib.LongObjectId.writeObject(ObjectOutputStream)
org.eclipse.jgit.transport.SideBandProgressMonitor.send(StringBuilder)
org.eclipse.jgit.attributes.AttributesNodeTest.testEmptyValueKey()
org.eclipse.jgit.util.sha1.SHA1Test.detectsShatteredByDefault()
org.eclipse.jgit.notes.NoteMapTest.tearDown()
org.eclipse.jgit.transport.PackParserTest.digest(TemporaryBuffer,Heap)
org.eclipse.jgit.transport.Transport.open(Repository,String,Operation)
org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.setGitDir(File)
org.eclipse.jgit.transport.NetRCTest.testNetRCFile()
org.eclipse.jgit.http.test.ProtocolErrorTest.testPush_UnpackError_TruncatedPack()
org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting8()
org.eclipse.jgit.pgm.CheckoutTest.testCheckoutUnresolvedHead()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoTree2()
org.eclipse.jgit.attributes.AttributesHandlerTest.testInfoOverridesGlobal()
org.eclipse.jgit.lib.RepositoryCacheConfigTest.testDefaultValues()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_3()
org.eclipse.jgit.events.RefsChangedEvent.dispatch(RefsChangedListener)
org.eclipse.jgit.internal.storage.file.DeltaBaseCache.unlink(Slot)
org.eclipse.jgit.ant.tasks.GitCheckoutTask.setForce(boolean)
org.eclipse.jgit.treewalk.CanonicalTreeParser.getEntryAttributesNode(ObjectReader)
org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameWithoutContentChange()
org.eclipse.jgit.internal.ketch.StageBuilder.makeStageList(Repository,ObjectId,ObjectId)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c()
org.eclipse.jgit.lib.ObjectInserter.insert(TagBuilder)
org.eclipse.jgit.lib.ObjectIdSubclassMap.hasNext()
org.eclipse.jgit.revplot.PlotCommitListTest.testBug419359()
org.eclipse.jgit.revwalk.ObjectWalkTest.testEmptyTreeCorruption()
org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddIfAbsent()
org.eclipse.jgit.transport.http.JDKHttpConnection.getHeaderFields()
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOk()
org.eclipse.jgit.transport.URIish.setScheme(String)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPunctGroupCase1()
org.eclipse.jgit.junit.RepositoryTestCase.writeTrashFile(String,String)
org.eclipse.jgit.pgm.Status.printStatus(org,eclipse,jgit,api,Status)
org.eclipse.jgit.diff.ContentSource.open(DiffEntry,Side,DiffEntry)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testScanningForPackfiles()
org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean)
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidParent1()
org.eclipse.jgit.transport.PackParser.needNewObjectIds()
org.eclipse.jgit.internal.storage.file.WindowCursor.quickCopy(PackFile,long,long)
org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder1()
org.eclipse.jgit.util.FSTest.testSymlinkAttributes()
org.eclipse.jgit.pgm.debug.ShowCommands.run()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.getFirstByte()
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.newBatchUpdate(List)
org.eclipse.jgit.util.RefMap.toEntry(Ref)
org.eclipse.jgit.util.RefListTest.testRemoveFrontOfList()
org.eclipse.jgit.revwalk.LIFORevQueue.anybodyHasFlag(int)
org.eclipse.jgit.internal.storage.reftable.ReftableConfig.setIndexObjects(boolean)
org.eclipse.jgit.junit.http.HttpTestCase.setUp()
org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex(MergeStrategy)
org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_14(Git)
org.eclipse.jgit.lfs.lib.AnyLongObjectId.toHexCharArray()
org.eclipse.jgit.internal.storage.file.ObjectDirectory.getLooseObjectSize(WindowCursor,AnyObjectId)
org.eclipse.jgit.lib.ObjectReader.getBitmapIndex()
org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex(MergeStrategy)
org.eclipse.jgit.treewalk.filter.TreeFilterMarker.getMarks(TreeWalk)
org.eclipse.jgit.util.GitDateFormatterTest.DEFAULT()
org.eclipse.jgit.dircache.DirCacheEntryTest.testCreate_ByStringPath()
org.eclipse.jgit.internal.storage.file.WindowCursor.getDeltaBaseCache()
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.isMergedInto(RevCommit,RevCommit)
org.eclipse.jgit.api.BranchCommandTest.createBranch(Git,String,boolean,String,SetupUpstreamMode)
org.eclipse.jgit.transport.http.JDKHttpConnection.setUseCaches(boolean)
org.eclipse.jgit.blame.BlameResult.create(BlameGenerator)
org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2()
org.eclipse.jgit.hooks.Hooks.postCommit(Repository,PrintStream)
org.eclipse.jgit.pgm.Branch.addRef(String,Ref)
org.eclipse.jgit.ignore.IgnoreNodeTest.endWalk()
org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch()
org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository()
org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName()
org.eclipse.jgit.revwalk.DateRevQueue.outputType()
org.eclipse.jgit.internal.storage.dfs.DfsFsck.checkConnectivity(ProgressMonitor,FsckError)
org.eclipse.jgit.revwalk.RevObject.remove(RevFlag)
org.eclipse.jgit.pgm.DescribeTest.testHelpArgumentBeforeUnknown()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase1()
org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset()
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.contains(DfsStreamKey,long)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testLowerGroupCase4()
org.eclipse.jgit.lfs.server.TransferHandler.process()
org.eclipse.jgit.api.DeleteBranchCommand.setBranchNames(String)
org.eclipse.jgit.transport.CredentialsProvider.setDefault(CredentialsProvider)
org.eclipse.jgit.api.TagCommand.isForceUpdate()
org.eclipse.jgit.util.FS.relativize(String,String)
org.eclipse.jgit.ignore.IgnoreNodeTest.testSlashOnlyMatchesDirectory()
org.eclipse.jgit.merge.Merger.openTree(AnyObjectId)
org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test003_lookupCompressedObject()
org.eclipse.jgit.util.FS.getFile()
org.eclipse.jgit.api.ApplyCommand.apply(File,FileHeader)
org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryLength()
org.eclipse.jgit.pgm.CLIGitCommand.convertToMainArgs(String)
org.eclipse.jgit.transport.ReceivePack.setPreReceiveHook(PreReceiveHook)
org.eclipse.jgit.transport.WalkEncryptionTest.permitLongTests()
org.eclipse.jgit.lib.BatchRefUpdate.isRefLogIncludingResult(ReceiveCommand)
org.eclipse.jgit.notes.NoteMapMerger.min(Note,Note,Note)
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames6()
org.eclipse.jgit.util.RawParseUtils_ParsePersonIdentTest.testParsePersonIdent_incompleteCases()
org.eclipse.jgit.junit.TestRepository.reset(String)
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.getEwahCompressedBitmap()
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.addRepoToClose(Repository)
org.eclipse.jgit.transport.BasePackPushConnection.enableCapabilities(ProgressMonitor,OutputStream)
org.eclipse.jgit.lib.BlobObjectChecker.endBlob(AnyObjectId)
org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryObjectId(MutableObjectId)
org.eclipse.jgit.api.TagCommandTest.testDelete()
org.eclipse.jgit.transport.OpenSshConfigTest.testDefaultBlock()
org.eclipse.jgit.diff.Edit.getEndA()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_d()
org.eclipse.jgit.transport.UploadPack.setRequestPolicy(RequestPolicy)
org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.endWalk()
org.eclipse.jgit.dircache.DirCachePathEditTest.testDuplicateFiles()
org.eclipse.jgit.http.server.ClientVersionUtil.grow(int)
org.eclipse.jgit.util.SystemReader.isWindows()
org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_FinishWriteCommit()
org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.recreate(Ref,Ref)
org.eclipse.jgit.lib.UserConfig.getCommitterEmail()
org.eclipse.jgit.api.RebaseCommandTest.diffWorkingAgainstHead(RevCommit,RevWalk)
org.eclipse.jgit.http.server.glue.RegexPipeline.match(HttpServletRequest)
org.eclipse.jgit.util.TemporaryBuffer.read(byte,int,int)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDirs()
org.eclipse.jgit.internal.storage.file.FileSnapshotTest.waitNextSec(File)
org.eclipse.jgit.internal.storage.pack.PackWriter.searchForDeltas(ProgressMonitor)
org.eclipse.jgit.internal.storage.file.GC.removeReferenced(Map,ObjectWalk)
org.eclipse.jgit.internal.storage.reftable.BlockWriter.compare(Entry,Entry)
org.eclipse.jgit.internal.storage.file.PackWriterTest.haves(ObjectId)
org.eclipse.jgit.transport.SideBandOutputStream.flush()
org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest.match(String,String)
org.eclipse.jgit.transport.UploadPack.getPackStatistics()
org.eclipse.jgit.ignore.IgnoreNode.parse(InputStream)
org.eclipse.jgit.gitrepo.RepoProject.getRevision()
org.eclipse.jgit.api.Callback.checkingOut(AnyObjectId,String)
org.eclipse.jgit.internal.storage.pack.PackOutputStream.write(byte,int,int)
org.eclipse.jgit.transport.SideBandOutputStreamTest.write(int)
org.eclipse.jgit.lib.MutableObjectId.fromRaw(byte)
org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e()
org.eclipse.jgit.treewalk.FileTreeIteratorTest.apply(DirCacheEntry)
org.eclipse.jgit.internal.storage.file.FileRepository.getAdditionalHaves(Set)
org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitTwoTreeTwoBlob()
org.eclipse.jgit.util.sha1.SHA1Test.test1()
org.eclipse.jgit.internal.storage.file.PackFileTest.deflate(TemporaryBuffer,Heap,byte)
org.eclipse.jgit.internal.storage.dfs.DfsBlock.crc32(CRC32,long,int)
org.eclipse.jgit.util.SystemReader.isMacOS()
org.eclipse.jgit.transport.URIishTest.testScpStyleWithoutUserAbsolutePath()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.conflictsWithBootstrap(String)
org.eclipse.jgit.api.CherryPickCommandTest.doCherryPickAndCheckResult(Git,RevCommit,MergeFailureReason)
org.eclipse.jgit.lib.ObjectInserter.idFor(TreeFormatter)
org.eclipse.jgit.transport.WalkEncryption.validate(HttpURLConnection,String)
org.eclipse.jgit.api.ResetCommand.resetRevert()
org.eclipse.jgit.pgm.CloneTest.setUp()
org.eclipse.jgit.internal.storage.dfs.DfsPackParser.parse(ProgressMonitor,ProgressMonitor)
org.eclipse.jgit.internal.ketch.LagCheck.check(ObjectId,ReceiveCommand)
org.eclipse.jgit.transport.PushCertificate.toStringBuilder()
org.eclipse.jgit.merge.MergeConfig.getParser(String)
org.eclipse.jgit.pgm.ProxyConfigTest.testDontOverwriteHttp()
org.eclipse.jgit.api.RevertCommand.include(String,AnyObjectId)
org.eclipse.jgit.pgm.CheckoutTest.testCheckoutSingleFile()
org.eclipse.jgit.transport.BasePackConnection.init(InputStream,OutputStream)
org.eclipse.jgit.http.test.RegexPipelineTest.testRegexGroupFilter()
org.eclipse.jgit.lib.PersonIdent.getTimeZone()
org.eclipse.jgit.api.NameRevCommand.addAnnotatedTags()
org.eclipse.jgit.transport.BaseReceivePack.hasCommands()
org.eclipse.jgit.transport.TransferConfig.prefixMatch(String,String)
org.eclipse.jgit.archive.BaseFormat.applyFormatOptions(ArchiveOutputStream,Map)
org.eclipse.jgit.patch.FileHeader.getScriptText(Charset,Charset)
org.eclipse.jgit.lib.StoredConfig.clear()
org.eclipse.jgit.http.server.SmartServiceInfoRefs.doFilter(ServletRequest,ServletResponse,FilterChain)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_a()
org.eclipse.jgit.api.LogCommand.call()
org.eclipse.jgit.transport.BundleFetchConnection.verifyPrerequisites()
org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore()
org.eclipse.jgit.api.StatusCommand.call()
org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfigTest.negativeBlockSizeIsConvertedToDefault()
org.eclipse.jgit.pgm.ArchiveTest.testTgzExtensions()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.deleteAllAndCommit()
org.eclipse.jgit.transport.WalkEncryptionTest.isAlgorithmTestable(String)
org.eclipse.jgit.transport.PackParser.getLockMessage()
org.eclipse.jgit.transport.PushCertificateStore.compare(PendingCert,PendingCert)
org.eclipse.jgit.dircache.DirCacheBuilder.bad(DirCacheEntry,String)
org.eclipse.jgit.api.RemoteSetUrlCommand.setName(String)
org.eclipse.jgit.revwalk.TopoSortGenerator.next()
org.eclipse.jgit.pgm.Log.addAdditionalNoteRef(String)
org.eclipse.jgit.internal.storage.file.GC.repack()
org.eclipse.jgit.api.RebaseCommand.finishRebase(RevCommit,boolean)
org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_DeleteFile()
org.eclipse.jgit.lib.TagBuilder.setObjectId(AnyObjectId,int)
org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.newRename(String,String)
org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_PreferredAuthentications()
org.eclipse.jgit.storage.pack.PackConfig.setBitmapDistantCommitSpan(int)
org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIfRootIsEmpty()
org.eclipse.jgit.util.io.UnionInputStreamTest.testEmptyStream()
org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.addPack(DfsPackFile)
org.eclipse.jgit.attributes.TreeWalkAttributeTest.testHierarchyBothIterator()
org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits()
org.eclipse.jgit.revwalk.FIFORevQueue.toString()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef4()
org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_GitStyleMessageWithCRLF()
org.eclipse.jgit.revwalk.RevTag.getType()
org.eclipse.jgit.dircache.DirCache.getEntry(int)
org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.findFirstOffset()
org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testOneOnly()
org.eclipse.jgit.transport.BasePackConnection.readAdvertisedRefsImpl()
org.eclipse.jgit.pgm.debug.VerifyReftable.run()
org.eclipse.jgit.pgm.debug.LfsStore.start()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testVerySimpleWildCardCase1()
org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIteratorOnEmptyDirectory()
org.eclipse.jgit.transport.CredentialItem.setValue(boolean)
org.eclipse.jgit.transport.TransportTest.testLocalTransportWithRelativePath()
org.eclipse.jgit.pgm.ProxyConfigTest.testHttpsProxy_lowerCase()
org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.testEdgeCases()
org.eclipse.jgit.transport.UploadPack.sendAdvertisedRefs(RefAdvertiser)
org.eclipse.jgit.internal.storage.dfs.DfsPackParser.buffer(byte,int,int)
org.eclipse.jgit.patch.FileHeader.isHunkHdr(byte,int,int)
org.eclipse.jgit.api.PushCommand.setAtomic(boolean)
org.eclipse.jgit.transport.http.apache.TemporaryBufferEntity.writeTo(OutputStream)
org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest.testParentDirectoryGitIgnores()
org.eclipse.jgit.ignore.IgnoreNodeTest.testNegationAllExceptJavaInSrcAndExceptChildDirInSrc()
org.eclipse.jgit.diff.EditTest.testType_Empty()
org.eclipse.jgit.api.PushCommand.call()
org.eclipse.jgit.api.PushCommand.add(String)
org.eclipse.jgit.api.PullCommand.getRemoteBranchName()
org.eclipse.jgit.storage.pack.PackStatistics.getRootCommits()
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgDotCon()
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.newCopyBuffer(PackOutputStream,ReadableChannel)
org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileInSubDir()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.setMinUpdateIndex(long)
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoCommitter1()
org.eclipse.jgit.pgm.debug.TextHashFunctions.run(Repository)
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getPackIndex(DfsReader)
org.eclipse.jgit.util.IntListTest.testEmpty_DefaultCapacity()
org.eclipse.jgit.util.io.UnionInputStreamTest.slice(byte,int)
org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException()
org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsDotGit_CreateRepositoryFromWorkDirOnly()
org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch()
org.eclipse.jgit.diff.DiffEntry.scan(TreeWalk,boolean)
org.eclipse.jgit.lib.ObjectCheckerTest.assertCorrupt(String,int,byte)
org.eclipse.jgit.pgm.CommandRef.getName()
org.eclipse.jgit.internal.storage.dfs.DfsInserter.flush()
org.eclipse.jgit.util.RawParseUtils.decode(ByteBuffer,Charset)
org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules()
org.eclipse.jgit.api.PushCommandTest.writeHookFile(String,String)
org.eclipse.jgit.http.test.SmartClientSmartServerTest.testFetch_FewLocalCommits()
org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateBrokenSymLinkToDirectory()
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.putPersonIdent(Map,String,PersonIdent)
org.eclipse.jgit.internal.storage.file.InflatingBitSetTest.testContainsOne()
org.eclipse.jgit.transport.BundleWriter.setObjectCountCallback(ObjectCountCallback)
org.eclipse.jgit.api.RevertCommand.setStrategy(MergeStrategy)
org.eclipse.jgit.dircache.DirCacheEntry.getLength()
org.eclipse.jgit.attributes.CGitAttributesTest.testDirectoryMatchSubRecursiveBacktrack4()
org.eclipse.jgit.internal.storage.file.FileRepository.onConfigChanged(ConfigChangedEvent)
org.eclipse.jgit.diff.EditTest.testEquals1()
org.eclipse.jgit.dircache.DirCacheEntryTest.copyMetaDataHelper(boolean)
org.eclipse.jgit.lib.Repository.lockDirCache()
org.eclipse.jgit.internal.storage.reftree.RefTree.readRef(ObjectReader,String)
org.eclipse.jgit.lib.BaseRepositoryBuilder.setFS(FS)
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockFrom()
org.eclipse.jgit.transport.RemoteConfig.setTimeout(int)
org.eclipse.jgit.ignore.FastIgnoreRuleTest.testDotAsteriskMatch()
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setReftableStats(ReftableWriter,Stats)
org.eclipse.jgit.api.NameRevCommand.setMergeCost(int)
org.eclipse.jgit.junit.http.MockServletConfig.nextElement()
org.eclipse.jgit.internal.storage.file.RefUpdateTest.assertExists(boolean,String)
org.eclipse.jgit.internal.storage.reftable.MergedReftable.name()
org.eclipse.jgit.internal.ketch.ElectionRound.start()
org.eclipse.jgit.util.io.MessageWriter.toString()
org.eclipse.jgit.ignore.IgnoreNodeTest.testRepeatedNegationInDifferentFiles2()
org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash()
org.eclipse.jgit.lib.AnyObjectId.copyRawTo(int,int)
org.eclipse.jgit.api.DiffCommand.call()
org.eclipse.jgit.storage.file.FileBasedConfig.isOutdated()
org.eclipse.jgit.transport.PacketLineOutTest.testWriteString1()
org.eclipse.jgit.revwalk.RevCommit.parseBody(RevWalk)
org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test3()
org.eclipse.jgit.patch.CombinedFileHeader.getOldMode()
org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForwardForced()
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getHitCount()
org.eclipse.jgit.awtui.SwingCommitList.recycleLane(SwingLane)
org.eclipse.jgit.diff.AbstractDiffTestCase.testDegenerate_InsertStart()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_d()
org.eclipse.jgit.api.CloneCommand.cloneSubmodules(Repository)
org.eclipse.jgit.lib.CommitBuilder.getTreeId()
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.get(DfsReader,AnyObjectId)
org.eclipse.jgit.util.FS.isSymbolicLink()
org.eclipse.jgit.indexdiff.IndexDiffWithSymlinkTest.copy(InputStream,File)
org.eclipse.jgit.awtui.AWTPlotRenderer.laneColor(SwingLane)
org.eclipse.jgit.lfs.errors.CorruptLongObjectException.getId()
org.eclipse.jgit.util.RawParseUtils.prevLF(byte,int)
org.eclipse.jgit.merge.ResolveMerger.updateIndex(CanonicalTreeParser,CanonicalTreeParser,CanonicalTreeParser,MergeResult)
org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4()
org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored()
org.eclipse.jgit.diff.Edit.getLengthB()
org.eclipse.jgit.pgm.ArchiveTest.testArchivePreservesContent()
org.eclipse.jgit.util.RefMap.setValue(Ref)
org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testBackDoesNothing()
org.eclipse.jgit.ant.tasks.GitCloneTaskTest.shouldRaiseErrorOnEmptyUrl()
org.eclipse.jgit.merge.ThreeWayMerger.setBase(AnyObjectId)
org.eclipse.jgit.transport.RefSpec.isValid(String)
org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithMissingSubmodule()
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.deleteOnShutdown(File)
org.eclipse.jgit.util.IntList.grow()
org.eclipse.jgit.pgm.Show.abbrev(int)
org.eclipse.jgit.internal.ketch.ElectionRound.parseTerm(List)
org.eclipse.jgit.internal.storage.pack.DeltaWindow.clearWindowOnTypeSwitch()
org.eclipse.jgit.internal.storage.file.PackFile.hasExt(PackExt)
org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordSubmoduleLabels()
org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testPatternParentFileMatch()
org.eclipse.jgit.internal.fsck.FsckPackParser.onPackHeader(long)
org.eclipse.jgit.diff.RenameDetector.isOverRenameLimit()
org.eclipse.jgit.transport.WalkEncryptionTest.fromEnvFile()
org.eclipse.jgit.api.AddCommandTest.assumeUnchanged(String)
org.eclipse.jgit.notes.LeafBucket.next()
org.eclipse.jgit.api.RebaseCommand.getHeadName(Ref)
org.eclipse.jgit.api.StashCreateCommandTest.setUp()
org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.fromConfig(Config)
org.eclipse.jgit.transport.OpenSshConfig.run()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testIncompleteRangesInOneGroupCase0()
org.eclipse.jgit.transport.HttpConfig.findMatch(Set,URIish)
org.eclipse.jgit.revwalk.TreeRevFilter.updateFollowFilter(ObjectId,DiffConfig)
org.eclipse.jgit.api.RebaseCommand.stop(RevCommit,RebaseResult,Status)
org.eclipse.jgit.awtui.CommitGraphPane.getColumnCount()
org.eclipse.jgit.api.HugeFileTest.after()
org.eclipse.jgit.transport.WalkEncryption.wrap(String,String)
org.eclipse.jgit.api.EolRepositoryTest.test_ConfigEOL_native_xnix()
org.eclipse.jgit.lib.ObjectLoaderTest.testLimitedGetCachedBytesExceedsJavaLimits()
org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.release()
org.eclipse.jgit.lib.Repository.incrementOpen()
org.eclipse.jgit.internal.storage.file.ObjectDirectory.removePack(PackFile)
org.eclipse.jgit.internal.storage.reftree.RefTreeTest.ref(String,ObjectId)
org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment()
org.eclipse.jgit.revwalk.MergeBaseGenerator.next()
org.eclipse.jgit.transport.PushOptionsTest.tearDown()
org.eclipse.jgit.transport.PreReceiveHookChain.onPreReceive(ReceivePack,Collection)
org.eclipse.jgit.storage.file.WindowCacheConfig.fromConfig(Config)
org.eclipse.jgit.diff.RenameDetector.addAll(Collection)
org.eclipse.jgit.lib.Repository.getIndexFile()
org.eclipse.jgit.internal.storage.reftree.LocalDiskRefTreeDatabaseTest.setUp()
org.eclipse.jgit.lib.TextProgressMonitor.onEndTask(String,int)
org.eclipse.jgit.junit.TestRepository.writeFile(File,byte)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testSpaceGroupCase3()
org.eclipse.jgit.dircache.DirCacheEntryTest.testCopyMetaDataWithoutStage()
org.eclipse.jgit.transport.RefSpecTest.testMaster()
org.eclipse.jgit.internal.storage.file.LockFile.accept(File,String)
org.eclipse.jgit.ignore.CGitIgnoreTest.jgitIgnored()
org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree(IgnoreSubmoduleMode)
org.eclipse.jgit.diff.SimilarityRenameDetector.buildMatrix(ProgressMonitor)
org.eclipse.jgit.internal.storage.file.ByteArrayWindow.crc32(CRC32,long,int)
org.eclipse.jgit.diff.SimilarityRenameDetector.encode(int,int,int)
org.eclipse.jgit.http.test.SmartClientSmartServerTest.testInitialClone_WithAuthenticationWrongCredentials()
org.eclipse.jgit.lfs.lib.LongObjectId.equals(byte,int,byte,int)
org.eclipse.jgit.revwalk.RevObject.hasAny(RevFlagSet)
org.eclipse.jgit.lib.CoreConfig.getExcludesFile()
org.eclipse.jgit.ignore.internal.Strings.stripTrailingWhitespace(String)
org.eclipse.jgit.lib.T0001_PersonIdentTest.nullForEmailShouldThrowIllegalArgumentException()
org.eclipse.jgit.internal.storage.pack.PackWriter.setShallowPack(int,Collection)
org.eclipse.jgit.transport.ReceiveCommand.getRef()
org.eclipse.jgit.util.RefMapTest.testPut_NoPrefix()
org.eclipse.jgit.transport.http.apache.TemporaryBufferEntity.setContentLength(int)
org.eclipse.jgit.util.RefMapTest.testMerge_WithPrefix()
org.eclipse.jgit.transport.ChainingCredentialsProvider.get(URIish,CredentialItem)
org.eclipse.jgit.api.ResetCommandTest.assertReflogDisabled(ObjectId)
org.eclipse.jgit.transport.WalkPushConnection.sendpack(List,ProgressMonitor)
org.eclipse.jgit.api.CloneCommand.deleteChildren(File)
org.eclipse.jgit.patch.FileHeader.getScriptText()
org.eclipse.jgit.internal.storage.file.FileRepository.getAdditionalHaves()
org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs()
org.eclipse.jgit.junit.http.RecordingLogger.warn(String,Object,Object)
org.eclipse.jgit.transport.RefAdvertiserTest.advertiser()
org.eclipse.jgit.diff.DiffFormatterReflowTest.setUp()
org.eclipse.jgit.internal.storage.dfs.DfsRepository.parse(InputStream)
org.eclipse.jgit.lfs.server.TransferHandler.forOperation(String,LargeFileRepository,List)
org.eclipse.jgit.ignore.IgnoreNodeTest.testSlashMatchesDirectory()
org.eclipse.jgit.dircache.BaseDirCacheEditor.fastKeep(int,int)
org.eclipse.jgit.lib.ObjectInserter.buffer()
org.eclipse.jgit.transport.TransportHttp.redirect(String,String,int)
org.eclipse.jgit.http.test.SmartClientSmartServerTest.data()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUnsupportedGroupCase1()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getBitmapCount()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e()
org.eclipse.jgit.transport.PackParser.read()
org.eclipse.jgit.lib.ConfigTest.test006_readCaseInsensitive()
org.eclipse.jgit.treewalk.EmptyTreeIterator.eof()
org.eclipse.jgit.transport.PackParserTest.deflate(TemporaryBuffer,Heap,byte)
org.eclipse.jgit.transport.PackParser.readFrom(Source)
org.eclipse.jgit.http.test.SmartClientSmartServerSslTest.testInitialClone_RedirectToHttps()
org.eclipse.jgit.lfs.server.fs.FileLfsServlet.doPut(HttpServletRequest,HttpServletResponse)
org.eclipse.jgit.lib.Ref.getName()
org.eclipse.jgit.lfs.errors.CorruptMediaFile.getMediaFile()
org.eclipse.jgit.treewalk.FileTreeIterator.getLastModified()
org.eclipse.jgit.submodule.SubmoduleWalk.getSubmoduleDirectory(Repository,String)
org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.oneEmptyTable()
org.eclipse.jgit.dircache.DirCache.nextEntry(byte,int,int)
org.eclipse.jgit.transport.RemoteConfigTest.testRemoveMiddleURI()
org.eclipse.jgit.lib.BatchRefUpdate.getTakenPrefixes(Collection)
org.eclipse.jgit.util.io.InterruptTimer.now()
org.eclipse.jgit.patch.EGitPatchHistoryTest.read()
org.eclipse.jgit.lib.TreeFormatter.append(byte,int,int,FileMode,AnyObjectId)
org.eclipse.jgit.dircache.DirCachePathEditTest.createEntry(String,int)
org.eclipse.jgit.api.EolStreamTypeUtilTest.extendWithBinaryData(byte)
org.eclipse.jgit.api.ApplyCommand.isNoNewlineAtEndOfFile(FileHeader)
org.eclipse.jgit.internal.storage.reftable.BlockReader.setupEmptyFileBlock()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.assertFileNameMatch(String,String,boolean)
org.eclipse.jgit.transport.TransportBundleStream.openFetch()
org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLineNoNewlines()
org.eclipse.jgit.util.RawParseUtils.lineMap(byte,int,int)
org.eclipse.jgit.treewalk.filter.NotTreeFilter.matchFilter(TreeWalk)
org.eclipse.jgit.util.FileUtil.isSymlink(File)
org.eclipse.jgit.util.Base64.encode3to4(byte,int,int,byte,int)
org.eclipse.jgit.util.SystemReader.checkPath(String)
org.eclipse.jgit.internal.storage.file.GcOrphanFilesTest.setUp()
org.eclipse.jgit.internal.storage.pack.PackWriter.preparePack(ProgressMonitor,ObjectWalk,Set,Set,Set)
org.eclipse.jgit.pgm.Push.printPushResult(ObjectReader,URIish,PushResult)
org.eclipse.jgit.pgm.StatusTest.testStatusUntrackedFilesAll()
org.eclipse.jgit.internal.storage.file.RefUpdateTest.delete(RefUpdate,Result)
org.eclipse.jgit.internal.storage.pack.DeltaWindow.delta(DeltaWindowEntry)
org.eclipse.jgit.revwalk.AbstractRevQueue.outputType()
org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote()
org.eclipse.jgit.transport.PushCertificateParserTest.disabled()
org.eclipse.jgit.ignore.IgnoreNodeTest.testNoPatterns()
org.eclipse.jgit.treewalk.FileTreeIteratorTest.idOffset()
org.eclipse.jgit.transport.Transport.findRemoteRefUpdatesFor(Collection,Map)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testPunctGroupCase0()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1.equals(Object)
org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue()
org.eclipse.jgit.diff.DiffFormatter.combineA(List,int)
org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare()
org.eclipse.jgit.patch.FileHeader.getScriptText(Charset)
org.eclipse.jgit.http.server.glue.NoParameterFilterConfig.getInitParameter(String)
org.eclipse.jgit.util.TemporaryBuffer.doFlush()
org.eclipse.jgit.lib.RefUpdate.setRefLogMessage(String,boolean)
org.eclipse.jgit.internal.ketch.KetchLeaderCache.get(Repository)
org.eclipse.jgit.transport.PacketLineInTest.testReadACK_Invalid2()
org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compactReftables(DfsReader)
org.eclipse.jgit.transport.BaseConnection.getPeerUserAgent()
org.eclipse.jgit.revwalk.RevWalk.getCachedBytes(RevObject)
org.eclipse.jgit.merge.MergeAlgorithmTest.testModificationsWithMiddleInsert()
org.eclipse.jgit.nls.NLS.getBundleFor(Class)
org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.createReceivePack(Repository)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.createTreeWalk(RevCommit,boolean,boolean)
org.eclipse.jgit.api.MergeResult.getNewHead()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithGarbageCoalescenceWithLongTtl()
org.eclipse.jgit.internal.storage.file.ObjectDirectory.scanPacksImpl(PackList)
org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.getBitmap(AnyObjectId)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b()
org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline()
org.eclipse.jgit.util.FileUtilsTest.testRelativize_mixedCase()
org.eclipse.jgit.api.RebaseCommand.updateHead(String,RevCommit,RevCommit)
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.equals(Object)
org.eclipse.jgit.dircache.DirCacheTree.appendName(StringBuilder)
org.eclipse.jgit.junit.MockSystemReader.getTimeZone()
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathGoodFirstCheckout(String)
org.eclipse.jgit.patch.EGitPatchHistoryTest.testParseHistory()
org.eclipse.jgit.transport.http.HttpConnectionFactory.create(URL,Proxy)
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.shouldCopyThroughCache(long)
org.eclipse.jgit.revwalk.filter.SkipRevFilter.create(int)
org.eclipse.jgit.pgm.Reset.run()
org.eclipse.jgit.util.FileUtils.isHidden(File)
org.eclipse.jgit.transport.RemoteConfigTest.testSimpleNoTags()
org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.adjustUpdateIndexes(ReftableReader)
org.eclipse.jgit.pgm.Main.installConsole()
org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange()
org.eclipse.jgit.internal.storage.pack.DeltaWindow.estimateIndexSize(DeltaWindowEntry)
org.eclipse.jgit.gitrepo.ManifestParser.getProjects()
org.eclipse.jgit.treewalk.WorkingTreeIterator.initRootIterator(Repository)
org.eclipse.jgit.junit.http.RecordingLogger.info(String)
org.eclipse.jgit.transport.PushProcessTest.testUpdateDelete()
org.eclipse.jgit.internal.storage.reftable.BlockWriter.commonPrefix(byte,int,byte)
org.eclipse.jgit.internal.storage.file.XInputStream.readUInt32()
org.eclipse.jgit.api.CommitCommandTest.runInShell(String,String)
org.eclipse.jgit.pgm.RepoTest.testMissingPath()
org.eclipse.jgit.storage.pack.PackConfig.setReuseObjects(boolean)
org.eclipse.jgit.diff.RawTextComparator.hash(RawText,int)
org.eclipse.jgit.lfs.server.fs.ObjectUploadListener.onError(Throwable)
org.eclipse.jgit.junit.TestRepositoryTest.cherryPickWithIdenticalContents()
org.eclipse.jgit.attributes.AttributesNodeTest.testDoubleAsteriskAtEnd()
org.eclipse.jgit.http.server.GitServlet.setRepositoryResolver(RepositoryResolver)
org.eclipse.jgit.util.GitDateFormatterTest.getCurrentTime()
org.eclipse.jgit.awtui.UIText.get()
org.eclipse.jgit.dircache.DirCacheCheckout.equalIdAndMode(ObjectId,FileMode,ObjectId,FileMode)
org.eclipse.jgit.transport.BaseReceivePack.needPack()
org.eclipse.jgit.lib.ObjectChecker.checkPath(String)
org.eclipse.jgit.api.CherryPickCommand.setNoCommit(boolean)
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.sortAndWriteRefs(Collection)
org.eclipse.jgit.transport.UploadPack.setBiDirectionalPipe(boolean)
org.eclipse.jgit.revwalk.filter.OrRevFilter.create(Collection)
org.eclipse.jgit.lib.MutableObjectId.setByte(int,int)
org.eclipse.jgit.lfs.lib.LongObjectIdTest.testHashFile()
org.eclipse.jgit.blame.BlameResult.getSourcePath(int)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testAlphaGroupCase2()
org.eclipse.jgit.internal.storage.file.LocalObjectToPack.clearReuseAsIs()
org.eclipse.jgit.notes.FanoutBucket.writeTree(ObjectInserter)
org.eclipse.jgit.util.FS_POSIX.readUmask()
org.eclipse.jgit.revwalk.filter.SubStringRevFilter.clone()
org.eclipse.jgit.internal.storage.reftree.RefTreeTest.create(String,ObjectId)
org.eclipse.jgit.diff.MyersDiff.isBetter(int,int)
org.eclipse.jgit.junit.TestRepositoryTest.resetFromSymref()
org.eclipse.jgit.pgm.ArchiveTest.assertTarContainsEntry(String,String,String)
org.eclipse.jgit.internal.storage.file.GC.deleteOldPacks(Collection,Collection)
org.eclipse.jgit.treewalk.filter.ByteArraySet.init(byte,int)
org.eclipse.jgit.lib.BatchingProgressMonitor.delay(long,TimeUnit)
org.eclipse.jgit.internal.storage.file.PackIndexWriter.createVersion(OutputStream,int)
org.eclipse.jgit.lib.T0001_PersonIdentTest.testToExternalStringTrimsOtherBadCharacters()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSimpleStarCase2()
org.eclipse.jgit.revwalk.DateRevQueue.clear()
org.eclipse.jgit.internal.storage.reftable.ReftableConstants.reverseUpdateIndex(long)
org.eclipse.jgit.pgm.BranchTest.testList()
org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryUnregisteringWhenExpiredAndUsageCountNegative()
org.eclipse.jgit.transport.TransportAmazonS3.open(URIish,Repository,String)
org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree5()
org.eclipse.jgit.util.BlockList.iterator()
org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.writeBlob(Repository,String)
org.eclipse.jgit.internal.storage.dfs.DfsReader.compare(DfsObjectToPack,DfsObjectToPack)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testVerySimpleWildCardCase3()
org.eclipse.jgit.gitrepo.ManifestParserTest.testNormalize(String,String)
org.eclipse.jgit.transport.AmazonS3.list(String,String)
org.eclipse.jgit.revplot.PlotCommitListTest.testLinear()
org.eclipse.jgit.api.PullCommand.setRecurseSubmodules(FetchRecurseSubmodulesMode)
org.eclipse.jgit.api.HugeFileTest.before()
org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NO_MERGES()
org.eclipse.jgit.lib.Repository.resolve(RevWalk,String)
org.eclipse.jgit.dircache.DirCacheFindTest.testEntriesWithin()
org.eclipse.jgit.dircache.DirCacheEntry.getCreationTime()
org.eclipse.jgit.merge.SquashMessageFormatter.toString(PersonIdent)
org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getObjectId()
org.eclipse.jgit.revwalk.BlockObjQueue.freeBlock(Block)
org.eclipse.jgit.internal.storage.pack.DeltaWindow.deflater()
org.eclipse.jgit.transport.ReceiveCommand.toString()
org.eclipse.jgit.api.SubmoduleUpdateCommand.setStrategy(MergeStrategy)
org.eclipse.jgit.util.io.AutoCRLFOutputStreamTest.test()
org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName()
org.eclipse.jgit.internal.storage.file.PackIndex.getObjectId(int)
org.eclipse.jgit.errors.DirCacheNameConflictException.getPath1()
org.eclipse.jgit.internal.storage.file.LockFile.saveStatInformation()
org.eclipse.jgit.internal.ketch.ProposalRound.makeStageList(Repository,ObjectInserter)
org.eclipse.jgit.revwalk.FooterKey.getName()
org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_encoded()
org.eclipse.jgit.lfs.server.fs.DownloadTest.testLargeFileDownload()
org.eclipse.jgit.lib.ObjectLoaderTest.getSize()
org.eclipse.jgit.internal.storage.file.SimpleDataOutput.writeUTF(String)
org.eclipse.jgit.diff.DiffFormatter.makeIteratorFromTreeOrNull(RevTree)
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.read(long,ByteBuffer)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testGraphGroupCase4()
org.eclipse.jgit.transport.UploadPack.recvWants()
org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadOneLine()
org.eclipse.jgit.internal.storage.file.AlternatesTest.testAlternate()
org.eclipse.jgit.lib.BatchRefUpdate.getPushOptions()
org.eclipse.jgit.api.FetchCommand.setProgressMonitor(ProgressMonitor)
org.eclipse.jgit.transport.SideBandOutputStream.flushBuffer()
org.eclipse.jgit.diff.RawTextIgnoreAllWhitespaceTest.testEqualsWithoutWhitespace()
org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.close()
org.eclipse.jgit.diff.EditTest.testCreate()
org.eclipse.jgit.http.server.GitSmartHttpTools.isReceivePack(HttpServletRequest)
org.eclipse.jgit.util.RefListTest.testCopyConstructorReusesArray()
org.eclipse.jgit.lib.ThreadSafeProgressMonitor.update(int)
org.eclipse.jgit.notes.LeafBucketTest.testRemoveFirst()
org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed()
org.eclipse.jgit.pgm.Reflog.toString(ReflogEntry,int)
org.eclipse.jgit.transport.PushConnectionTest.limitCommandBytes()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.writeLooseRef(String,AnyObjectId)
org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitObjectRead()
org.eclipse.jgit.internal.storage.file.WindowCache.lockCount(WindowCacheConfig)
org.eclipse.jgit.internal.storage.dfs.DfsReader.inflater()
org.eclipse.jgit.diff.AbstractDiffTestCase.testDegenerate_DeleteEnd()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor4()
org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff1()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidTree1()
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getObjectCount()
org.eclipse.jgit.junit.TestRepository.getDate()
org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test17_FromString()
org.eclipse.jgit.api.LogCommand.setRevFilter(RevFilter)
org.eclipse.jgit.util.io.AutoCRLFOutputStream.write(byte,int,int)
org.eclipse.jgit.transport.HttpConfigTest.testMatchLonger()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidType()
org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions.setStreamFileThreshold(int)
org.eclipse.jgit.api.NameRevCommand.addPrefixes(Map,FIFORevQueue)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testLowerGroupCase4()
org.eclipse.jgit.treewalk.TreeWalk.getRawMode(int)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testMixedGroupCase2()
org.eclipse.jgit.pgm.Branch.delete(List)
org.eclipse.jgit.http.test.HttpClientTests.testListRemote_Smart_UploadPackNeedsAuth()
org.eclipse.jgit.api.ArchiveCommandTest.suffixes()
org.eclipse.jgit.transport.BundleFetchConnection.duplicateAdvertisement(String)
org.eclipse.jgit.lib.ValidRefNameTest.testValidHead()
org.eclipse.jgit.util.sha1.SHA1.s2(int,int,int,int,int)
org.eclipse.jgit.patch.FileHeader.eq(int,int,int,int)
org.eclipse.jgit.pgm.MergeTest.testFastForwardOnly()
org.eclipse.jgit.pgm.CommandRef.getUsage()
org.eclipse.jgit.internal.storage.file.PackIndexV1Test.getFileForPackdf2982f28()
org.eclipse.jgit.notes.NoteMapMergerTest.testCollapseFanoutAfterMerge()
org.eclipse.jgit.transport.UploadPack.getPeerUserAgent()
org.eclipse.jgit.blame.BlameGenerator.close()
org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyZeros_Length128()
org.eclipse.jgit.http.test.SmartClientSmartServerTest.testInitialClone_Small()
org.eclipse.jgit.internal.storage.pack.PackWriter.excludeObjects(ObjectIdSet)
org.eclipse.jgit.pgm.RemoteTest.testSetUrl()
org.eclipse.jgit.patch.HunkHeader.getLinesContext()
org.eclipse.jgit.notes.LeafBucketTest.testRemoveMiddle()
org.eclipse.jgit.revwalk.StartGenerator.outputType()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSortedCorrectly()
org.eclipse.jgit.internal.storage.pack.DeltaIndex.valOf(long)
org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes()
org.eclipse.jgit.internal.storage.file.WindowCache.hash(int,long)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.writeFile()
org.eclipse.jgit.ant.tasks.GitCloneTask.setUri(String)
org.eclipse.jgit.diff.EditTest.testNotEquals3()
org.eclipse.jgit.api.Git.commit()
org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.toResultString(ReceiveCommand)
org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.close()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testBlankGroupCase1()
org.eclipse.jgit.internal.storage.dfs.DfsReader.compare(DfsPackFile,DfsPackFile)
org.eclipse.jgit.lfs.lib.LfsPointerFilterTest.testValidNestedPointersWithoutRecurrence()
org.eclipse.jgit.http.server.glue.ServletBinderImpl.with(HttpServlet)
org.eclipse.jgit.lib.Repository.resolveReflogCheckout(int)
org.eclipse.jgit.revwalk.RevCommit.getParent(int)
org.eclipse.jgit.util.FileUtilsTest.testCreateSymlink()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.deleteFolder()
org.eclipse.jgit.dircache.DirCacheIterator.parseEntry(boolean)
org.eclipse.jgit.api.RevertCommand.call()
org.eclipse.jgit.api.AddCommandTest.testAddNonExistingSingleFile()
org.eclipse.jgit.lib.RepositoryCache.isValidHead(File)
org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleBinaryFile()
org.eclipse.jgit.gitrepo.RepoCommand.addSubmodule(String,String,String,List,List,Set,String)
org.eclipse.jgit.api.RebaseResult.getConflicts()
org.eclipse.jgit.blame.ReverseWalk.getChildCount()
org.eclipse.jgit.transport.PushCertificateParser.parse(Reader)
org.eclipse.jgit.treewalk.FileTreeIterator.getName()
org.eclipse.jgit.transport.TestProtocol.openPush()
org.eclipse.jgit.storage.file.FileRepositoryBuilder.build()
org.eclipse.jgit.lib.ObjectIdSubclassMap.contains(AnyObjectId)
org.eclipse.jgit.internal.storage.file.ReflogWriterTest.readReflog(byte)
org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.updateSubmoduleRevision()
org.eclipse.jgit.util.RefListTest.testIterable()
org.eclipse.jgit.lib.Repository.isAllHex(String,int)
org.eclipse.jgit.transport.BaseReceivePack.hasError()
org.eclipse.jgit.pgm.Gc.run()
org.eclipse.jgit.lib.Repository.getFS()
org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testCommitWithCorruptAuthor()
org.eclipse.jgit.storage.pack.PackConfig.getDeltaCacheSize()
org.eclipse.jgit.api.RebaseCommand.popSteps(int)
org.eclipse.jgit.internal.storage.file.WindowCursor.close()
org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.depth()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_NoConflictIfDeleted()
org.eclipse.jgit.notes.NoteMapTest.setUp()
org.eclipse.jgit.revwalk.RevWalk.release()
org.eclipse.jgit.transport.WalkEncryptionTest.fromEnvVars()
org.eclipse.jgit.notes.LeafBucket.estimateSize(AnyObjectId,ObjectReader)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.getPacks()
org.eclipse.jgit.revwalk.RevWalkResetTest.include(RevWalk,RevCommit)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileUntracked()
org.eclipse.jgit.lib.RefRename.setRefLogIdent(PersonIdent)
org.eclipse.jgit.lib.AbbreviatedObjectId.toString()
org.eclipse.jgit.diff.RawText.getString(int)
org.eclipse.jgit.pgm.debug.BenchmarkReftable.printf(String,Object)
org.eclipse.jgit.transport.UploadPack.getMessageOutputStream()
org.eclipse.jgit.internal.storage.reftable.ReftableConfig.fromConfig(Config)
org.eclipse.jgit.attributes.AttributesNodeTest.assertAttribute(String,AttributesNode,Attributes)
org.eclipse.jgit.lib.IndexDiffTest.testConflicting()
org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod()
org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail()
org.eclipse.jgit.util.GitDateParser.parse_simple(String,ParseableSimpleDateFormat,Locale)
org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_writeByte_Timeout()
org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_NewStyle()
org.eclipse.jgit.transport.OpenSshConfig.complete(String,File)
org.eclipse.jgit.transport.TransportGitAnon.openFetch()
org.eclipse.jgit.util.RawParseUtils_MatchTest.testMatch_Equal()
org.eclipse.jgit.api.Git.notesShow()
org.eclipse.jgit.transport.UploadPack.sendPack(boolean)
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.creditSpace(int)
org.eclipse.jgit.attributes.AttributesHandler.expandMacro(Attribute,Attributes)
org.eclipse.jgit.revwalk.RevWalk.setRetainBody(boolean)
org.eclipse.jgit.transport.JschSession.setupStreams()
org.eclipse.jgit.internal.ketch.KetchLeader.run()
org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack(boolean)
org.eclipse.jgit.transport.Transport.setCredentialsProvider(CredentialsProvider)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_a()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testGetFirstByte()
org.eclipse.jgit.treewalk.filter.ByteArraySet.contains(byte,int,int)
org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.parse(AnyObjectId)
org.eclipse.jgit.lib.RepositoryCacheConfig.install()
org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testCorruptChecksumAtFooter()
org.eclipse.jgit.revwalk.FooterKey.toString()
org.eclipse.jgit.http.server.TextFileServlet.read(HttpServletRequest)
org.eclipse.jgit.treewalk.WorkingTreeIterator.back(int)
org.eclipse.jgit.api.ApplyCommandTest.init(String)
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptObjectIdReference()
org.eclipse.jgit.lib.ObjectIdRefTest.testConstructor_Peeled()
org.eclipse.jgit.transport.ReceivePack.enableCapabilities()
org.eclipse.jgit.transport.http.JDKHttpConnection.getContentLength()
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getFileName(PackExt)
org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree1()
org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.setCompactBytesLimit(long)
org.eclipse.jgit.revwalk.RevFlagSetTest.testEmpty()
org.eclipse.jgit.lib.ConfigSnapshot.next()
org.eclipse.jgit.internal.ketch.KetchLeader.runLeader()
org.eclipse.jgit.transport.AmazonS3.endElement(String,String,String)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.indexOf(PackFile,PackFile)
org.eclipse.jgit.notes.NoteMap.newMap(InMemoryNoteBucket,ObjectReader)
org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule()
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.oneNonExistentRef()
org.eclipse.jgit.internal.storage.file.RefDirectory.delete(RefDirectoryUpdate)
org.eclipse.jgit.api.ShowNoteCommand.call()
org.eclipse.jgit.lib.RebaseTodoFile.parseComments(byte,int,List,int)
org.eclipse.jgit.blame.BlameGenerator.getSourceStart()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.deleteFolderAndCommit()
org.eclipse.jgit.transport.RefSpec.expandFromDstImp(String)
org.eclipse.jgit.api.MergeCommand.setProgressMonitor(ProgressMonitor)
org.eclipse.jgit.merge.MergeConfig.isMergeConfigOptionSet(String,String)
org.eclipse.jgit.lib.Repository.renameRef(String,String)
org.eclipse.jgit.util.io.TimeoutInputStream.beginRead()
org.eclipse.jgit.api.EolRepositoryTest.setupGitAndDoHardReset(AutoCRLF,EOL,String,String,String)
org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack.select(StoredObjectRepresentation)
org.eclipse.jgit.transport.WalkEncryptionTest.configCreate(Properties)
org.eclipse.jgit.diff.AbstractDiffTestCase.testEdit_ReplaceCommonDelete()
org.eclipse.jgit.api.RmCommand.setCached(boolean)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedLinkModeChange()
org.eclipse.jgit.internal.ketch.Proposal.await(long,TimeUnit)
org.eclipse.jgit.transport.PushOptionsTest.testFailedAtomicPushWithOptions()
org.eclipse.jgit.revwalk.RevObject.hasAll(RevFlagSet)
org.eclipse.jgit.api.CheckoutCommandTest.testInvalidRefName()
org.eclipse.jgit.lib.ObjectChecker.duplicateName(byte,int,int)
org.eclipse.jgit.events.RefsChangedListener.onRefsChanged(RefsChangedEvent)
org.eclipse.jgit.diff.SubsequenceComparator.equals(Subsequence,int,Subsequence,int)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_2()
org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.createTree(String)
org.eclipse.jgit.transport.Transport.fetch(ProgressMonitor,Collection)
org.eclipse.jgit.util.FileUtilsTest.testIsStaleFileHandleInCausalChainWithDirectCause()
org.eclipse.jgit.ant.tasks.GitCheckoutTask.execute()
org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate()
org.eclipse.jgit.transport.PushCertificateParser.sentNonce()
org.eclipse.jgit.pgm.debug.WriteReftable.readRefs(String)
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2()
org.eclipse.jgit.transport.RemoteConfigTest.noInsteadOf()
org.eclipse.jgit.lib.ConfigSnapshot.get(String,String,String)
org.eclipse.jgit.treewalk.CanonicalTreeParser.createSubtreeIterator(ObjectReader,MutableObjectId)
org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_NoMessage()
org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtEnd()
org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_17()
org.eclipse.jgit.gitrepo.RepoCommandTest.put(String,Repository)
org.eclipse.jgit.revwalk.FooterLineTest.testNonDelimtedEmail()
org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads()
org.eclipse.jgit.lib.BaseRepositoryBuilder.findGitDir(File)
org.eclipse.jgit.revwalk.ObjectWalk.next()
org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_GitLink()
org.eclipse.jgit.internal.storage.file.ReflogWriter.log(String,ObjectId,ObjectId,PersonIdent,String)
org.eclipse.jgit.notes.LeafBucketTest.id(int)
org.eclipse.jgit.ignore.IgnoreNodeTest.testEmptyIgnoreNode()
org.eclipse.jgit.ignore.internal.WildCardMatcher.matches(String,int,int,boolean)
org.eclipse.jgit.treewalk.TreeWalk.next()
org.eclipse.jgit.util.io.TimeoutOutputStreamTest.assertTimeout()
org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.start(int)
org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive()
org.eclipse.jgit.util.IO.resetAndSkipFully(Reader,long)
org.eclipse.jgit.transport.CredentialsProvider.reset(URIish)
org.eclipse.jgit.internal.storage.file.SimpleDataOutput.write(byte,int,int)
org.eclipse.jgit.api.Status.getUntrackedFolders()
org.eclipse.jgit.storage.file.WindowCacheConfig.setPackedGitLimit(long)
org.eclipse.jgit.transport.http.apache.HttpClientConnection.setReadTimeout(int)
org.eclipse.jgit.http.server.glue.ServletBinder.through(Filter)
org.eclipse.jgit.http.test.HttpClientTests.testListRemote_Smart_DetachedHEAD()
org.eclipse.jgit.transport.BaseReceivePack.isAllowQuiet()
org.eclipse.jgit.internal.storage.pack.PackWriter.delta(ObjectToPack)
org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(String,Character,boolean)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.setReftableInitialMinUpdateIndex(long)
org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex()
org.eclipse.jgit.revwalk.TreeRevFilterTest.testPathFilterOrOtherFilter()
org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex()
org.eclipse.jgit.dircache.DirCache.getEntriesWithin(String)
org.eclipse.jgit.transport.PushCertificateStore.save(BatchRefUpdate)
org.eclipse.jgit.transport.OpenSshConfig.getConnectionAttempts()
org.eclipse.jgit.internal.storage.pack.PackWriter.next()
org.eclipse.jgit.internal.storage.file.BitSet.toEWAHCompressedBitmap()
org.eclipse.jgit.api.CloneCommand.setBranchesToClone(Collection)
org.eclipse.jgit.util.GitDateFormatterTest.LOCALELOCAL()
org.eclipse.jgit.internal.storage.dfs.DfsInserter.insert(int,byte,int,int)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testLowerGroupCase5()
org.eclipse.jgit.attributes.AttributesHandlerTest.testExpandNonMacro2()
org.eclipse.jgit.internal.storage.pack.GcCommitSelectionTest.testBitmapSpansNoMergesWithTags()
org.eclipse.jgit.lib.AbbreviatedObjectId.fromString(byte,int,int)
org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Binary()
org.eclipse.jgit.internal.storage.file.LargePackedWholeObject.isLarge()
org.eclipse.jgit.transport.TransportBundleFile.open(URIish,Repository,String)
org.eclipse.jgit.api.EolStreamTypeUtilTest.testCheckinDirect()
org.eclipse.jgit.util.ChangeIdUtilTest.tick()
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setMaxUpdateIndex(long)
org.eclipse.jgit.lib.ConfigLine.match(String,String,String)
org.eclipse.jgit.junit.RepositoryTestCase.slashify(String)
org.eclipse.jgit.dircache.DirCacheEntry.toString()
org.eclipse.jgit.util.GitDateParserTest.local()
org.eclipse.jgit.transport.TransportSftp.getAlternates()
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.updateToMissingObject()
org.eclipse.jgit.junit.http.HttpTestCase.getRequests(String)
org.eclipse.jgit.http.server.GitFilter.addUploadPackFilter(Filter)
org.eclipse.jgit.util.FilterCommandsTest.create(Repository,InputStream,OutputStream)
org.eclipse.jgit.lfs.lib.LongObjectId.fromHexString(byte,int)
org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.read(ReadableChannel,ByteBuffer)
org.eclipse.jgit.dircache.DirCacheTreeTest.testSingleSubtree()
org.eclipse.jgit.revwalk.RevObjectList.size()
org.eclipse.jgit.util.io.MessageWriter.close()
org.eclipse.jgit.transport.RefAdvertiser.setDerefTags(boolean)
org.eclipse.jgit.lib.IndexDiffTest.testRemoved()
org.eclipse.jgit.pgm.Log.ignoreAllSpace(boolean)
org.eclipse.jgit.internal.ketch.RemoteGitReplica.run()
org.eclipse.jgit.transport.http.HttpConnection.getHeaderField(String)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testSpecialGroupCase8()
org.eclipse.jgit.attributes.TreeWalkAttributeTest.testAggregation()
org.eclipse.jgit.transport.PackParser.getNewObjectIds()
org.eclipse.jgit.pgm.RevList.show(RevCommit)
org.eclipse.jgit.revwalk.RevWalk.carry(RevFlag)
org.eclipse.jgit.transport.TrackingRefUpdate.getOldObjectId()
org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict()
org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.resolve(Ref,int,RefList)
org.eclipse.jgit.lib.BatchRefUpdate.setAllowNonFastForwards(boolean)
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.objIdLength()
org.eclipse.jgit.pgm.Commit.run()
org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPackUsingBitmaps(PackWriterBitmapWalker,Set,Set)
org.eclipse.jgit.api.ResetCommandTest.testHardResetWithConflicts_DoOverWriteUntrackedFile()
org.eclipse.jgit.diff.DiffEntry.getNewMode()
org.eclipse.jgit.lib.RebaseTodoLine.setComment(String)
org.eclipse.jgit.util.TemporaryBufferTest.testRandomWrites()
org.eclipse.jgit.pgm.BranchTest.testHelpAfterDelete()
org.eclipse.jgit.pgm.Clone.cloningSubmodule(String)
org.eclipse.jgit.revwalk.RevWalkTestCase.get(RevTree,String)
org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(DirCacheEntry,boolean,ObjectReader)
org.eclipse.jgit.dircache.DirCacheEditor.appendSlash(byte)
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoTree3()
org.eclipse.jgit.internal.storage.file.PackWriterTest.testShallowFetchShallowParentDepth1()
org.eclipse.jgit.api.ApplyResult.getUpdatedFiles()
org.eclipse.jgit.api.AddCommandTest.testAddWithConflicts()
org.eclipse.jgit.transport.RemoteConfigTest.singleInsteadOf()
org.eclipse.jgit.http.test.SmartClientSmartServerTest.addBrokenContext(GitServlet,TestRepository,String)
org.eclipse.jgit.merge.MergeConfig.equals(Object)
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptObjectIdReference()
org.eclipse.jgit.pgm.Glog.repoName()
org.eclipse.jgit.internal.storage.dfs.DfsReader.setAvoidUnreachableObjects(boolean)
org.eclipse.jgit.transport.BaseReceivePack.getTimeout()
org.eclipse.jgit.lfs.server.s3.S3Repository.cacheObjectMetaData(AnyLongObjectId,long)
org.eclipse.jgit.util.QuotedStringBourneStyleTest.testQuote_BareA()
org.eclipse.jgit.transport.WalkEncryptionTest.reportAlgorithmStatus(String)
org.eclipse.jgit.revplot.PlotWalk.timeof(RevObject)
org.eclipse.jgit.transport.TrackingRefUpdate.setResult(RefUpdate,Result)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedChangedNotModified()
org.eclipse.jgit.http.test.HttpClientTests.testListRemote_Dumb_DetachedHEAD()
org.eclipse.jgit.lib.ObjectIdOwnerMap.hasNext()
org.eclipse.jgit.junit.RepeatRule.apply(Statement,Description)
org.eclipse.jgit.lib.AnyObjectId.copyTo(byte,int)
org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.markDirty()
org.eclipse.jgit.internal.ketch.KetchLeader.nextRound()
org.eclipse.jgit.internal.ketch.KetchReplica.canDelete(Ref)
org.eclipse.jgit.notes.NoteMapMergerTest.testNoChange()
org.eclipse.jgit.transport.URIishTest.shouldRaiseErrorOnEmptyURI()
org.eclipse.jgit.internal.storage.io.BlockSource.read(long,int)
org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_TrailingGarbage()
org.eclipse.jgit.api.RebaseResult.failed(Map)
org.eclipse.jgit.lib.Ref.getObjectId()
org.eclipse.jgit.pgm.Reflog.run()
org.eclipse.jgit.internal.storage.file.InflatingBitSetTest.testMaybeContains()
org.eclipse.jgit.revplot.PlotCommitListTest.nrOfPassingLanes(int)
org.eclipse.jgit.internal.storage.file.WindowCache.getInstance()
org.eclipse.jgit.http.server.glue.UrlPipeline.getInitParameterNames()
org.eclipse.jgit.util.io.ThrowingPrintWriter.flush()
org.eclipse.jgit.revwalk.FIFORevQueue.clear()
org.eclipse.jgit.diff.DiffFormatter.writeAddedLine(RawText,int)
org.eclipse.jgit.treewalk.EmptyTreeIterator.first()
org.eclipse.jgit.api.MergeResult.getMergeStatus()
org.eclipse.jgit.lib.ObjectIdOwnerMap.grow()
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.hasNext()
org.eclipse.jgit.lib.ObjectId.writeObject(ObjectOutputStream)
org.eclipse.jgit.internal.storage.file.LockFile.write(ObjectId)
org.eclipse.jgit.lib.BitmapIndex.remove(AnyObjectId)
org.eclipse.jgit.lib.ObjectCheckerTest.testRejectDevicesOnWindows()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.setExtendedFlags(int)
org.eclipse.jgit.transport.TransportHttp.getAlternates()
org.eclipse.jgit.lib.ConfigTest.testSetStringListWithEmptyValue()
org.eclipse.jgit.transport.TestProtocol.getRequiredFields()
org.eclipse.jgit.api.CloneCommand.setCloneSubmodules(boolean)
org.eclipse.jgit.transport.TransportHttp.setUseSmartHttp(boolean)
org.eclipse.jgit.lfs.LfsPointer.toString()
org.eclipse.jgit.lib.CLIRepositoryTestCase.executeAndPrintTestCode(String)
org.eclipse.jgit.lfs.LfsPointer.getSize()
org.eclipse.jgit.transport.WalkFetchConnection.needs(RevObject)
org.eclipse.jgit.pgm.ProxyConfigTest.setUp()
org.eclipse.jgit.treewalk.filter.TreeFilterTest.testANY_DIFF_IncludesSingleTreeCase()
org.eclipse.jgit.http.server.ClientVersionUtil.hasChunkedEncodingRequestBug(int,HttpServletRequest)
org.eclipse.jgit.util.SystemReader.getTimezone(long)
org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWildcardNoTracking()
org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_createNew()
org.eclipse.jgit.indexdiff.IndexDiffWithSymlinkTest.restoreGitRepo(InputStream,File,String)
org.eclipse.jgit.util.FileUtils.createNewFile(File)
org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testQuote_OctalAll()
org.eclipse.jgit.patch.HunkHeader.getId()
org.eclipse.jgit.lib.ObjectStream.read()
org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase1()
org.eclipse.jgit.revplot.PlotCommitListTest.testMergeBlockedBySelf()
org.eclipse.jgit.revwalk.RevWalkTestCase.commit(RevTree,RevCommit)
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.totalBytes()
org.eclipse.jgit.transport.Transport.setTimeout(int)
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.isReuseWalker()
org.eclipse.jgit.notes.LeafBucket.writeTree(ObjectInserter)
org.eclipse.jgit.pgm.TagTest.testTagTwice()
org.eclipse.jgit.notes.Note.getData()
org.eclipse.jgit.events.ConfigChangeEventTest.onConfigChanged(ConfigChangedEvent)
org.eclipse.jgit.pgm.ArchiveTest.testUnrecognizedFormat()
org.eclipse.jgit.transport.PushCertificateIdent.getUserId()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_a()
org.eclipse.jgit.revplot.AbstractPlotRenderer.paintCommit(PlotCommit,int)
org.eclipse.jgit.pgm.Status.printLongStatus(org,eclipse,jgit,api,Status)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.parse(ProgressMonitor,ProgressMonitor)
org.eclipse.jgit.transport.PushCertificateStoreTest.putMatchingWithNoMatchingRefs()
org.eclipse.jgit.notes.LeafBucketTest.testSetFive_InOrder()
org.eclipse.jgit.api.LogCommand.setSkip(int)
org.eclipse.jgit.junit.http.HttpTestCase.createServer()
org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.peel(Ref)
org.eclipse.jgit.http.test.SmartClientSmartServerSslTest.createServer()
org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists()
org.eclipse.jgit.merge.Merger.merge(boolean,AnyObjectId)
org.eclipse.jgit.transport.HMACSHA1NonceGenerator.verify(String,String,Repository,boolean,int)
org.eclipse.jgit.util.GitDateParser.getDateFormat(ParseableSimpleDateFormat,Locale)
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSpace()
org.eclipse.jgit.transport.SideBandProgressMonitor.onEndTask(String,int,int,int)
org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.check(RevCommit)
org.eclipse.jgit.util.RawParseUtils.parsePersonIdent(String)
org.eclipse.jgit.notes.LeafBucket.size()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testFull_FromString()
org.eclipse.jgit.lfs.server.LfsProtocolServlet.isUpload()
org.eclipse.jgit.treewalk.FileTreeIteratorWithTimeControl.createSubtreeIterator(ObjectReader)
org.eclipse.jgit.util.ChangeIdUtilTest.testSingleLineMessagesWithSignedOffBy()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.createEmptyFolderIgnored()
org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule()
org.eclipse.jgit.internal.storage.file.PackIndexV2.getObjectCount()
org.eclipse.jgit.storage.file.FileBasedConfigTest.setUp()
org.eclipse.jgit.diff.RawText.decode(int,int)
org.eclipse.jgit.util.BlockList.addAll(T,int,int)
org.eclipse.jgit.pgm.Main.newThread(Runnable)
org.eclipse.jgit.util.BlockList.addAll(BlockList)
org.eclipse.jgit.internal.storage.reftree.Scanner.scanRefTree(Repository,Ref,String,boolean)
org.eclipse.jgit.treewalk.CanonicalTreeParser.createSubtreeIterator0(ObjectReader,AnyObjectId)
org.eclipse.jgit.revwalk.RevWalk.dispose()
org.eclipse.jgit.internal.ketch.ElectionRound.blockUntil(ProposedTimestamp)
org.eclipse.jgit.treewalk.EmptyTreeIterator.needsStopWalk()
org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NOT_NONE()
org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.newCachedDatabase()
org.eclipse.jgit.lib.BatchingProgressMonitor.isCancelled()
org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.getAdditionalRefs()
org.eclipse.jgit.merge.ThreeWayMerger.merge(AnyObjectId)
org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_invalid_explicit_parent()
org.eclipse.jgit.internal.ketch.Proposal.toString()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.wantWrite()
org.eclipse.jgit.transport.Transport.scan(ClassLoader,URL)
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoType4()
org.eclipse.jgit.treewalk.TreeWalk.getRawPath()
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getObjectSize(DfsReader,AnyObjectId)
org.eclipse.jgit.transport.RefSpec.matchSource(Ref)
org.eclipse.jgit.attributes.Attribute.equals(Object)
org.eclipse.jgit.api.InitCommand.validateDirs(File,File,boolean)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6b()
org.eclipse.jgit.transport.PushConfig.toConfigValue()
org.eclipse.jgit.revplot.PlotCommit.addMergingLane(PlotLane)
org.eclipse.jgit.revwalk.RevQueueTestCase.setUp()
org.eclipse.jgit.diff.RawTextTest.testComparatorReduceCommonStartButLastLineNoEol()
org.eclipse.jgit.transport.AmazonS3.remove(Map,String)
org.eclipse.jgit.notes.NoteMapTest.testEditFlat()
org.eclipse.jgit.internal.ketch.KetchReplica.doRetryPush()
org.eclipse.jgit.console.ConsoleCredentialsProvider.isInteractive()
org.eclipse.jgit.lib.PersonIdent.toString()
org.eclipse.jgit.dircache.DirCache.getEntryCount()
org.eclipse.jgit.lib.Repository.getRepositoryState()
org.eclipse.jgit.attributes.CGitAttributesTest.testComplexPathMatchNot()
org.eclipse.jgit.util.RefListTest.testToString()
org.eclipse.jgit.util.RefMapTest.testToString_WithPrefix()
org.eclipse.jgit.internal.storage.file.FileRepository.getGitwebDescription()
org.eclipse.jgit.transport.BasePackFetchConnection.doFetch(ProgressMonitor,Collection,Set,OutputStream)
org.eclipse.jgit.internal.storage.file.UnpackedObject.inflate(InputStream,long,ObjectId)
org.eclipse.jgit.lib.IndexDiffTest.testAutoCRLFInput()
org.eclipse.jgit.api.RebaseCommandTest.assertDerivedFrom(RevCommit,RevCommit)
org.eclipse.jgit.transport.TransportSftp.getDefaultPort()
org.eclipse.jgit.api.ResetCommand.isReflogDisabled()
org.eclipse.jgit.attributes.Attributes.isEmpty()
org.eclipse.jgit.diff.RawTextTest.testWriteLine1()
org.eclipse.jgit.transport.UsernamePasswordCredentialsProvider.clear()
org.eclipse.jgit.api.ArchiveCommand.setFormatOptions(Map)
org.eclipse.jgit.lfs.lib.LongObjectIdTest.test006_notIsId()
org.eclipse.jgit.internal.storage.reftable.ReftableTest.withReflog()
org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.openObject(WindowCursor,AnyObjectId,Set)
org.eclipse.jgit.revwalk.DepthWalk.getDepth()
org.eclipse.jgit.internal.storage.pack.PackWriter.searchForDeltas(ProgressMonitor,ObjectToPack,int)
org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_Seek2()
org.eclipse.jgit.transport.ReceivePack.getPostReceiveHook()
org.eclipse.jgit.diff.RawText.isBinary(byte)
org.eclipse.jgit.internal.storage.dfs.DfsOutputStream.write(int)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e()
org.eclipse.jgit.util.FS_Win32_Cygwin.runHookIfPresent(Repository,String,String,PrintStream,PrintStream,String)
org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig()
org.eclipse.jgit.attributes.AttributesHandlerTest.testExpandBuiltInMacro3()
org.eclipse.jgit.transport.ReceivedPackStatistics.addOffsetDelta()
org.eclipse.jgit.dircache.DirCache.is_DIRC(byte)
org.eclipse.jgit.treewalk.TreeWalk.getFilter()
org.eclipse.jgit.dircache.DirCacheIterator.reset()
org.eclipse.jgit.api.TagCommand.getObjectId()
org.eclipse.jgit.lib.CommitBuilder.getMessage()
org.eclipse.jgit.lib.ReflogEntry.getOldId()
org.eclipse.jgit.pgm.Branch.list()
org.eclipse.jgit.treewalk.TreeWalk.setPostOrderTraversal(boolean)
org.eclipse.jgit.transport.BasePackFetchConnection.parseReachable(ObjectId)
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getOrLoad(BlockBasedFile,long,DfsReader,ReadableChannel)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase1()
org.eclipse.jgit.util.io.TimeoutInputStreamTest.active()
org.eclipse.jgit.transport.PushCertificateIdent.toString()
org.eclipse.jgit.transport.TransportAmazonS3.getURI()
org.eclipse.jgit.internal.storage.file.WindowCache.bits(int)
org.eclipse.jgit.internal.storage.file.SimpleDataInput.readDouble()
org.eclipse.jgit.internal.ketch.ReplicaFetchRequest.getRefs()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testWordroupCase4()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.leavesNonGcReftablesIfNotConfigured()
org.eclipse.jgit.internal.storage.reftree.Command.abort(Iterable,String)
org.eclipse.jgit.api.CloneCommand.validateDirs(File,File,boolean)
org.eclipse.jgit.revwalk.filter.CommitTimeRevFilter.after(long)
org.eclipse.jgit.api.RebaseCommandTest.checkFile(String,String)
org.eclipse.jgit.api.TagCommandTest.testDeleteBadName()
org.eclipse.jgit.treewalk.filter.OrTreeFilter.toString()
org.eclipse.jgit.lib.ObjectIdRef.isSymbolic()
org.eclipse.jgit.internal.storage.pack.PackWriter.isDeltaBaseAsOffset()
org.eclipse.jgit.util.BlockList.hasNext()
org.eclipse.jgit.internal.storage.file.FileRepository.autoGC(ProgressMonitor)
org.eclipse.jgit.internal.storage.file.RefDirectory.storedSymbolicRef(RefDirectoryUpdate,FileSnapshot,String)
org.eclipse.jgit.diff.Edit.getLengthA()
org.eclipse.jgit.internal.storage.file.ByteBufferWindow.copy(int,byte,int,int)
org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1.getObjectCount()
org.eclipse.jgit.pgm.RevWalkTextBuiltin.addCMessageRevFilter(String)
org.eclipse.jgit.api.StashApplyCommand.setStashRef(String)
org.eclipse.jgit.revwalk.RevWalk.markStart(RevCommit)
org.eclipse.jgit.internal.storage.file.InflatingBitSet.xor(EWAHCompressedBitmap)
org.eclipse.jgit.revwalk.BlockRevQueue.add(RevCommit)
org.eclipse.jgit.revwalk.RevCommitList.applyFlag(RevFilter,RevFlag)
org.eclipse.jgit.revwalk.RevCommit.parse(byte)
org.eclipse.jgit.util.RefListTest.testAddToEndOfList()
org.eclipse.jgit.util.io.TimeoutOutputStreamTest.tearDown()
org.eclipse.jgit.transport.RefAdvertiser.grow()
org.eclipse.jgit.console.ConsoleAuthenticator.formatRealm()
org.eclipse.jgit.transport.RemoteRefUpdate.isDelete()
org.eclipse.jgit.util.HookTest.testCommitMsgHookCanModifyCommitMessage()
org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.compaction()
org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyTo(char,StringBuilder)
org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery()
org.eclipse.jgit.pgm.Fetch.run()
org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_PackedGitWindowSize_0()
org.eclipse.jgit.internal.storage.pack.PackWriter.getDeltasFound()
org.eclipse.jgit.internal.storage.file.WindowCache.hit(Ref)
org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter()
org.eclipse.jgit.http.server.ServletUtils.consumeRequestBody(HttpServletRequest)
org.eclipse.jgit.util.NB.encodeInt16(byte,int,int)
org.eclipse.jgit.api.ResetCommandTest.inHead(String)
org.eclipse.jgit.transport.AdvertiseRefsHookChain.advertiseRefs(UploadPack)
org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testSpaceGroupCase2()
org.eclipse.jgit.internal.storage.file.LockFile.getOutputStream()
org.eclipse.jgit.pgm.ArchiveTest.testZipExtension()
org.eclipse.jgit.lib.BatchRefUpdate.setPushOptions(List)
org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.iterator()
org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2_NoParentRewriting()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testCntrlGroupCase1()
org.eclipse.jgit.internal.storage.dfs.DfsRepositoryDescription.toString()
org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.run()
org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.setStreamRatio(double)
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.deleteLog(String,long)
org.eclipse.jgit.junit.TestRepository.message()
org.eclipse.jgit.transport.PackParser.firstChildOf(PackedObjectInfo)
org.eclipse.jgit.transport.ReceivedPackStatistics.getNumBytesRead()
org.eclipse.jgit.transport.TransportHttp.wrongContentType(String,String)
org.eclipse.jgit.diff.SimilarityIndexTest.testCommonScore_SameFiles()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.estimateBytes(long)
org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_Latin1()
org.eclipse.jgit.transport.URIishTest.testGitSshProto()
org.eclipse.jgit.lib.BatchRefUpdate.isRefLogDisabled(ReceiveCommand)
org.eclipse.jgit.internal.storage.dfs.DfsReader.selectObjectRepresentation(PackWriter,ProgressMonitor,Iterable)
org.eclipse.jgit.transport.OpenSshConfig.getPreferredAuthentications()
org.eclipse.jgit.transport.TransportLocal.openFetch()
org.eclipse.jgit.api.RevertCommand.getUnmergedPaths()
org.eclipse.jgit.treewalk.filter.TreeFilter.negate()
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.findPosition(AnyObjectId)
org.eclipse.jgit.pgm.StatusTest.testStatusPorcelainUntrackedFilesAll()
org.eclipse.jgit.internal.storage.file.RefDirectory.getObjectId()
org.eclipse.jgit.lib.BatchRefUpdate.blockUntilTimestamps(Duration)
org.eclipse.jgit.internal.storage.file.UnpackedObject.getType()
org.eclipse.jgit.http.test.SmartClientSmartServerTest.testInitialClone_RedirectOnPostForbidden()
org.eclipse.jgit.api.Git.tag()
org.eclipse.jgit.blame.BlameGenerator.getSourceAuthor()
org.eclipse.jgit.treewalk.CanonicalTreeParser.back(int)
org.eclipse.jgit.lib.RepositoryCacheConfig.setCleanupDelay(long)
org.eclipse.jgit.util.BlockListTest.testAddRemoveAdd()
org.eclipse.jgit.lib.Repository.getDirectory()
org.eclipse.jgit.lib.RefUpdate.delete(RevWalk)
org.eclipse.jgit.internal.storage.file.PackFile.representation(WindowCursor,AnyObjectId)
org.eclipse.jgit.util.sha1.SHA1.eq(State,State)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.reuseMap(PackList)
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openRepoBadArgs()
org.eclipse.jgit.pgm.StatusTest.testStatusPorcelainUall()
org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPreserveAndPruneOldPacks()
org.eclipse.jgit.lfs.server.TransferHandler.addObjectInfo(Response,Body,LfsObject)
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.scanRef(HashEntry,DfsStreamKey,long)
org.eclipse.jgit.lib.SymbolicRef.isPeeled()
org.eclipse.jgit.ignore.internal.IMatcher.matches(String,int,int,boolean)
org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(AnyObjectId)
org.eclipse.jgit.util.GitDateFormatterTest.LOCALE()
org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword()
org.eclipse.jgit.transport.RefSpec.getSource()
org.eclipse.jgit.transport.ReceivePack.sendString(String)
org.eclipse.jgit.util.TemporaryBuffer.toByteArray()
org.eclipse.jgit.lib.SymbolicRefTest.testConstructor()
org.eclipse.jgit.diff.DiffFormatter.formatOldNewPaths(ByteArrayOutputStream,DiffEntry)
org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_implicit_mixed_encoded()
org.eclipse.jgit.util.GitDateParser.parse(String,Calendar)
org.eclipse.jgit.transport.URIishTest.testGetTwoSlashesDotGitHumanishName()
org.eclipse.jgit.ignore.CGitVsJGitRandomIgnorePatternTest.randomStandardCharacters()
org.eclipse.jgit.http.server.glue.RegexGroupFilter.init(FilterConfig)
org.eclipse.jgit.lib.BaseRepositoryBuilder.addAlternateObjectDirectories(Collection)
org.eclipse.jgit.lfs.server.s3.SignerV4.sign(String,byte)
org.eclipse.jgit.internal.storage.file.RefDirectory.newRename(String,String)
org.eclipse.jgit.diff.SimilarityIndexTest.testIndexingSmallObject()
org.eclipse.jgit.attributes.CGitAttributesTest.assertSameAsCGit()
org.eclipse.jgit.revplot.AbstractPlotRendererTest.setUp()
org.eclipse.jgit.internal.storage.file.WindowCache.createRef(PackFile,long,ByteWindow)
org.eclipse.jgit.util.RawParseUtils.match(byte,int,byte)
org.eclipse.jgit.internal.storage.pack.ObjectToPack.setCachedDelta(DeltaCache,Ref)
org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.advertiseRefs(BaseReceivePack)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testFilePathSimpleCase()
org.eclipse.jgit.diff.DiffFormatter.format(AbstractTreeIterator,AbstractTreeIterator)
org.eclipse.jgit.util.io.EolStreamTypeUtil.checkInStreamType(WorkingTreeOptions,Attributes)
org.eclipse.jgit.pgm.ArchiveTest.commitBazAndFooSlashBar()
org.eclipse.jgit.internal.storage.file.SimpleDataOutput.writeChars(String)
org.eclipse.jgit.http.server.NoCacheFilter.init(FilterConfig)
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathGoodSecondCheckout(String)
org.eclipse.jgit.transport.DaemonTest.testDaemonRestart()
org.eclipse.jgit.treewalk.filter.NotIgnoredFilter.shouldBeRecursive()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.clearBitmaps()
org.eclipse.jgit.transport.PackParser.openDatabase(PackedObjectInfo,ObjectTypeAndSize)
org.eclipse.jgit.internal.storage.dfs.DfsReftable.adviseSequentialRead(long,long)
org.eclipse.jgit.transport.ProgressSpinner.send(long)
org.eclipse.jgit.gitrepo.RepoCommandSymlinkTest.testLinkFileBare()
org.eclipse.jgit.internal.storage.pack.DeltaIndex.getSourceSize()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeIndex()
org.eclipse.jgit.dircache.DirCacheEntry.setUpdateNeeded(boolean)
org.eclipse.jgit.util.time.MonotonicSystemClock.read(TimeUnit)
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.hash(int,long)
org.eclipse.jgit.util.BlockListTest.testAddToEnd()
org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked()
org.eclipse.jgit.patch.FormatError.getOffset()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testEscapedBracket4()
org.eclipse.jgit.util.RawParseUtils.lastIndexOfTrim(byte,char,int)
org.eclipse.jgit.notes.LeafBucketTest.testEmpty()
org.eclipse.jgit.revwalk.TreeRevFilter.isRename(DiffEntry)
org.eclipse.jgit.util.TemporaryBufferTest.testInCoreLimit_SwitchOnCopy()
org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.scanIncludeDeletes()
org.eclipse.jgit.internal.ketch.ReplicaPushRequest.getRefs()
org.eclipse.jgit.pgm.Branch.delete(List,boolean)
org.eclipse.jgit.treewalk.CanonicalTreeParser.noAttributes()
org.eclipse.jgit.lib.Repository.setGitwebDescription(String)
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getFillPercentage()
org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet()
org.eclipse.jgit.events.RepositoryEvent.setRepository(Repository)
org.eclipse.jgit.transport.PushCertificateParser.build()
org.eclipse.jgit.util.io.AutoLFInputStreamTest.testEmpty()
org.eclipse.jgit.util.io.LimitedInputStream.read(byte,int,int)
org.eclipse.jgit.revwalk.RevCommit.carryFlags(RevCommit,int)
org.eclipse.jgit.junit.http.TestRequestLog.handle(String,Request,HttpServletRequest,HttpServletResponse)
org.eclipse.jgit.api.PushCommand.getProgressMonitor()
org.eclipse.jgit.api.EolRepositoryTest.testBinary2()
org.eclipse.jgit.lib.BaseRepositoryBuilder.isBare()
org.eclipse.jgit.util.FS_Win32_Cygwin.isCygwin()
org.eclipse.jgit.internal.storage.pack.DeltaIndex.sizeOf(byte)
org.eclipse.jgit.merge.CherryPickTest.commit(ObjectInserter,DirCache,ObjectId)
org.eclipse.jgit.api.StashDropCommandTest.setUp()
org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.flushFileHeader()
org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3()
org.eclipse.jgit.internal.storage.file.FileRepository.loadSystemConfig()
org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooterNoLineBreak()
org.eclipse.jgit.lib.ThreadSafeProgressMonitor.isCancelled()
org.eclipse.jgit.internal.storage.file.ReflogWriter.encode(ObjectId,ObjectId,PersonIdent,String)
org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.setUpSubmodules()
org.eclipse.jgit.lib.BaseRepositoryBuilder.readEnvironment()
org.eclipse.jgit.transport.OpenSshConfigTest.testListValueMultiple()
org.eclipse.jgit.pgm.CheckoutTest.testCheckoutNewBranchThatAlreadyExists()
org.eclipse.jgit.storage.pack.PackConfig.setBitmapRecentCommitCount(int)
org.eclipse.jgit.http.test.SmartClientSmartServerTest.init(FilterConfig)
org.eclipse.jgit.pgm.StatusTest.makeSomeChangesAndStageThem(Git)
org.eclipse.jgit.internal.storage.file.WriteConfig.getFSyncRefFiles()
org.eclipse.jgit.dircache.DirCacheIterator.idBuffer()
org.eclipse.jgit.revwalk.RevObjectTest.testAddRevFlagSet()
org.eclipse.jgit.transport.PackParser.getSortedObjectList(Comparator)
org.eclipse.jgit.internal.storage.pack.PackWriter.compare(ObjectToPack,ObjectToPack)
org.eclipse.jgit.gitrepo.RepoProject.setRecommendShallow(String)
org.eclipse.jgit.transport.BaseReceivePack.isAllowNonFastForwards()
org.eclipse.jgit.api.LsRemoteCommand.setTags(boolean)
org.eclipse.jgit.transport.UploadPack.checkWants(UploadPack,List)
org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit()
org.eclipse.jgit.diff.DiffFormatterTest.makeDiffHeaderModeChange(String,String,ObjectId,ObjectId,String,String)
org.eclipse.jgit.internal.storage.dfs.DfsInserter.flushBlock()
org.eclipse.jgit.transport.BaseFetchConnection.fetch(ProgressMonitor,Collection,Set)
org.eclipse.jgit.transport.RefAdvertiser.advertiseAnyOnce(AnyObjectId,String)
org.eclipse.jgit.transport.BundleWriter.writeBundle(ProgressMonitor,OutputStream)
org.eclipse.jgit.util.GitDateFormatterTest.RELATIVE()
org.eclipse.jgit.transport.RemoteConfig.removeURI(URIish)
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.fileDirectoryConflict()
org.eclipse.jgit.transport.NetRC.getDefaultFile()
org.eclipse.jgit.lfs.LfsPointer.encode(OutputStream)
org.eclipse.jgit.internal.storage.pack.PackWriter.getState()
org.eclipse.jgit.treewalk.TreeWalk.forPath(ObjectReader,String,AnyObjectId)
org.eclipse.jgit.dircache.DirCacheCheckout.runBuiltinFilterCommand(Repository,CheckoutMetadata,ObjectLoader,OutputStream)
org.eclipse.jgit.transport.CredentialsProviderUserInfo.promptPassword(String)
org.eclipse.jgit.transport.JschConfigSessionFactory.getJSch(OpenSshConfig,Host,FS)
org.eclipse.jgit.revwalk.AbstractRevQueue.add(RevCommit,RevFlag)
org.eclipse.jgit.revwalk.FooterLine.matches(FooterKey)
org.eclipse.jgit.diff.SubsequenceComparator.hash(Subsequence,int)
org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onEndDelta()
org.eclipse.jgit.api.NameRevCommandTest.simpleAncestor()
org.eclipse.jgit.http.server.SmartServiceInfoRefs.doFilter(ServletRequest,ServletResponse)
org.eclipse.jgit.ant.tasks.GitCheckoutTask.setCreateBranch(boolean)
org.eclipse.jgit.revwalk.filter.SubStringRevFilter.toString()
org.eclipse.jgit.transport.PackParser.close()
org.eclipse.jgit.hooks.Hooks.preCommit(Repository,PrintStream)
org.eclipse.jgit.lfs.lib.LfsPointerFilterTest.parseCommit(RevCommit)
org.eclipse.jgit.diff.Edit.extendB()
org.eclipse.jgit.internal.ketch.KetchText.get()
org.eclipse.jgit.transport.AmazonS3.ignorableWhitespace(char,int,int)
org.eclipse.jgit.lib.AbbreviatedObjectId.fromHexString(byte,int,int)
org.eclipse.jgit.api.RebaseCommand.stripCommentLines(String)
org.eclipse.jgit.api.Git.describe()
org.eclipse.jgit.internal.storage.dfs.DfsReftable.notInCache(long)
org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsNeedingDelta(ObjectToPack,int,int)
org.eclipse.jgit.diff.MyersDiff.calculate(int)
org.eclipse.jgit.revwalk.filter.RevFilter.include(RevWalk,RevCommit)
org.eclipse.jgit.util.io.AutoLFInputStreamTest.testCRLF()
org.eclipse.jgit.util.LongMapTest.testSmallMap()
org.eclipse.jgit.attributes.CGitAttributesTest.testNestedMatchRecursive()
org.eclipse.jgit.diff.DiffAlgorithm.getAlgorithm(SupportedAlgorithm)
org.eclipse.jgit.hooks.Hooks.prePush(Repository,PrintStream)
org.eclipse.jgit.internal.storage.file.GC.setExecutor(ExecutorService)
org.eclipse.jgit.junit.TestRepository.update(String,T)
org.eclipse.jgit.util.BlockList.remove()
org.eclipse.jgit.lib.RefRename.setRefLogMessage(String)
org.eclipse.jgit.diff.SimilarityRenameDetector.compactSrcList(List)
org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeNameIsDotGitDotDot()
org.eclipse.jgit.internal.storage.pack.ThreadSafeDeltaCache.credit(int)
org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack2()
org.eclipse.jgit.util.FileUtilsTest.testRelativize_whitespaces()
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.eq(Ref,Ref)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_d()
org.eclipse.jgit.util.RefListTest.newRef(String)
org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree4()
org.eclipse.jgit.transport.BaseReceivePack.setMaxCommandDiscardBytes(long)
org.eclipse.jgit.junit.TestRepository.rm(String)
org.eclipse.jgit.internal.storage.pack.PackWriter.writeObjectImpl(PackOutputStream,ObjectToPack)
org.eclipse.jgit.api.InitCommandTest.testInitNonBare_GitdirAndDirShouldntBeSame()
org.eclipse.jgit.lib.DirCacheCheckoutTest.mk(String)
org.eclipse.jgit.lib.ReflogReader.getReverseEntries()
org.eclipse.jgit.lib.ProgressMonitor.beginTask(String,int)
org.eclipse.jgit.transport.PushCertificateStore.clear()
org.eclipse.jgit.util.time.ProposedTimestamp.blockUntil(Iterable,Duration)
org.eclipse.jgit.internal.storage.reftable.Reftable.hasRef(String)
org.eclipse.jgit.treewalk.WorkingTreeIterator.idBuffer()
org.eclipse.jgit.blame.BlameGenerator.processOne(Candidate)
org.eclipse.jgit.dircache.DirCacheBasicTest.testWriteEmptyUnlock_RealIndex()
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.nonFastForwardDoesNotDoExpensiveMergeCheck()
org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.copy(TemporaryBuffer,Heap,ObjectLoader)
org.eclipse.jgit.lib.ObjectIdTest.test008_notIsId()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e()
org.eclipse.jgit.http.test.RefsUnreadableInMemoryRepository.getRefDatabase()
org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation.newDelta(PackFile,long,long,long)
org.eclipse.jgit.api.DescribeCommand.setLong(boolean)
org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.getOrLoadBlock(long,DfsReader)
org.eclipse.jgit.util.RefMap.clear()
org.eclipse.jgit.util.HttpSupport.response(java,net,HttpURLConnection)
org.eclipse.jgit.dircache.DirCacheCheckout.setFailOnConflict(boolean)
org.eclipse.jgit.internal.storage.file.WindowCursor.pin(PackFile,long)
org.eclipse.jgit.api.EolRepositoryTest.gitCheckout(Git,String)
org.eclipse.jgit.api.EolRepositoryTest.checkEntryContent(ActualEntry,String,String)
org.eclipse.jgit.fnmatch.FileNameMatcher.canAppendMatch()
org.eclipse.jgit.lib.ObjectReader.open(AnyObjectId)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testBlankGroupCase4()
org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation.getWeight()
org.eclipse.jgit.api.RenameBranchCommandTest.setUp()
org.eclipse.jgit.transport.WalkFetchConnection.close()
org.eclipse.jgit.merge.MergeStrategy.get()
org.eclipse.jgit.transport.AmazonS3.open(String,String,String)
org.eclipse.jgit.pgm.Status.printPorcelainStatus(org,eclipse,jgit,api,Status)
org.eclipse.jgit.http.server.GitFilter.assertNotInitialized()
org.eclipse.jgit.internal.storage.dfs.DfsReftable.open(DfsReader)
org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches()
org.eclipse.jgit.pgm.RepoTest.testAddRepoManifest()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testSimpleStarCase3()
org.eclipse.jgit.lfs.server.LfsProtocolServlet.createGson()
org.eclipse.jgit.lfs.server.s3.S3Config.getRegion()
org.eclipse.jgit.transport.BasePackFetchConnection.requiresCommitBody()
org.eclipse.jgit.transport.DaemonClient.getInputStream()
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.remove(AnyObjectId)
org.eclipse.jgit.notes.FanoutBucket.getNote(AnyObjectId,ObjectReader)
org.eclipse.jgit.lib.SymbolicRef.getTarget()
org.eclipse.jgit.pgm.Diff.nameStatus(ThrowingPrintWriter,List)
org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.lruRemove(Entry)
org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_LoneBackslash()
org.eclipse.jgit.util.TemporaryBufferTest.testInCoreLimit_SwitchBeforeAppendByte()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.readReftablesBefore()
org.eclipse.jgit.transport.AmazonS3.startElement(String,String,String,Attributes)
org.eclipse.jgit.api.ApplyCommandTest.readFile(String)
org.eclipse.jgit.lfs.lib.AnyLongObjectId.startsWith(AbbreviatedLongObjectId)
org.eclipse.jgit.errors.CompoundException.getAllCauses()
org.eclipse.jgit.submodule.SubmoduleAddTest.apply(DirCacheEntry)
org.eclipse.jgit.diff.DiffFormatter.writeHunkHeader(int,int,int,int)
org.eclipse.jgit.transport.TransportLocal.openPush()
org.eclipse.jgit.transport.WalkEncryptionTest.reportAlgorithmStatus(Properties)
org.eclipse.jgit.util.Base64.decode(byte,int,int)
org.eclipse.jgit.lib.T0001_PersonIdentTest.testToExternalStringTrimsAllWhitespace()
org.eclipse.jgit.internal.storage.reftree.RefTreeTest.symref(String,String)
org.eclipse.jgit.transport.http.HttpConnection.setReadTimeout(int)
org.eclipse.jgit.diff.Edit.toString()
org.eclipse.jgit.junit.TestRepository.committer()
org.eclipse.jgit.util.FS.detect(Boolean)
org.eclipse.jgit.transport.AmazonS3.authorize(HttpURLConnection)
org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged()
org.eclipse.jgit.lib.SectionParser.parse(Config)
org.eclipse.jgit.api.CherryPickResult.toString()
org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit()
org.eclipse.jgit.pgm.Log.sourcePrefix(String)
org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_bad_encoded()
org.eclipse.jgit.lib.RepositoryCacheConfigTest.testCleanupDelay()
org.eclipse.jgit.api.PullCommand.getFastForwardMode()
org.eclipse.jgit.revwalk.LIFORevQueue.clear()
org.eclipse.jgit.revwalk.DateRevQueue.add(RevCommit)
org.eclipse.jgit.internal.storage.dfs.DfsStreamKey.toString()
org.eclipse.jgit.events.WorkingTreeModifiedListener.onWorkingTreeModified(WorkingTreeModifiedEvent)
org.eclipse.jgit.pgm.Main.configureHttpProxy()
org.eclipse.jgit.pgm.ArchiveTest.tarEntryContent(byte,String)
org.eclipse.jgit.util.LongMap.insert(Node)
org.eclipse.jgit.lib.RepositoryCache.readFirstLine(File)
org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.setup()
org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.getShallowCommits()
org.eclipse.jgit.api.TagCommand.setMessage(String)
org.eclipse.jgit.lib.RepositoryCache.exact(File,FS)
org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testEmptyMap()
org.eclipse.jgit.internal.storage.reftree.Command.toRef(RevWalk,ObjectId,String,boolean)
org.eclipse.jgit.pgm.DescribeTest.secondCommit()
org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testStopWalkCallsParent()
org.eclipse.jgit.revwalk.BlockRevQueue.unpop(RevCommit)
org.eclipse.jgit.lib.Config.getInt(String,String,String,int)
org.eclipse.jgit.internal.storage.dfs.LargePackedWholeObject.isLarge()
org.eclipse.jgit.dircache.DirCacheEditor.apply(DirCacheEntry)
org.eclipse.jgit.lib.RepositoryCache.run()
org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex()
org.eclipse.jgit.transport.RemoteConfig.removeFetchRefSpec(RefSpec)
org.eclipse.jgit.storage.pack.PackStatistics.getDepth()
org.eclipse.jgit.transport.TransportHttp.getName()
org.eclipse.jgit.treewalk.WorkingTreeOptions.getCheckStat()
org.eclipse.jgit.transport.RefAdvertiser.isEmpty()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testGraphGroupCase2()
org.eclipse.jgit.storage.pack.PackConfig.setDeltaSearchWindowSize(int)
org.eclipse.jgit.transport.UploadPack.getPostUploadHook()
org.eclipse.jgit.api.CherryPickCommand.getParentCommit(RevCommit,RevWalk)
org.eclipse.jgit.lib.ObjectChecker.check(AnyObjectId,int,byte)
org.eclipse.jgit.dircache.DirCache.readFrom(InputStream)
org.eclipse.jgit.api.RenameBranchCommand.setNewName(String)
org.eclipse.jgit.http.server.ReceivePackServlet.flush()
org.eclipse.jgit.attributes.AttributesHandlerTest.beginWalk()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack()
org.eclipse.jgit.api.NameRevCommand.addPrefix(String,Map,FIFORevQueue)
org.eclipse.jgit.internal.storage.file.GcOrphanFilesTest.createFileInPackFolder(String)
org.eclipse.jgit.ignore.internal.PathMatcher.trim(String)
org.eclipse.jgit.api.EolRepositoryTest.testDefaultSetup()
org.eclipse.jgit.api.DiffCommand.setOutputStream(OutputStream)
org.eclipse.jgit.lib.PersonIdent.getTimeZone(int)
org.eclipse.jgit.pgm.CheckoutTest.testCheckoutNewBranch()
org.eclipse.jgit.lib.BaseRepositoryBuilder.getAlternateObjectDirectories()
org.eclipse.jgit.ignore.IgnoreNodeTest.testTrailingSpaces()
org.eclipse.jgit.lib.TypedConfigGetter.getBoolean(Config,String,String,String,boolean)
org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest.testDequote_SoleSq()
org.eclipse.jgit.treewalk.filter.OrTreeFilter.create(Collection)
org.eclipse.jgit.http.test.DefaultUploadPackFactoryTest.testDisabledSingleton()
org.eclipse.jgit.revwalk.RevFlagSetTest.testContains()
org.eclipse.jgit.pgm.CommandRef.getImplementationClassName()
org.eclipse.jgit.internal.storage.pack.DeltaTask.call()
org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateOnEmptyRepository()
org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor7()
org.eclipse.jgit.transport.HttpConfig.matchConfigValue(String)
org.eclipse.jgit.archive.Tbz2Format.putEntry(ArchiveOutputStream,ObjectId,String,FileMode,ObjectLoader)
org.eclipse.jgit.api.DescribeCommand.setTarget(ObjectId)
org.eclipse.jgit.transport.RefAdvertiserTest.id(int)
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.setPerformsAtomicTransactions(boolean)
org.eclipse.jgit.diff.SequenceComparator.reduceCommonStartEnd(S,S,Edit)
org.eclipse.jgit.internal.storage.file.FileRepository.loadRepoConfig()
org.eclipse.jgit.transport.RemoteConfigTest.setUp()
org.eclipse.jgit.transport.OpenSshConfig.patternMatchesHost(String,String)
org.eclipse.jgit.internal.storage.file.RefDirectory.getSnapShot()
org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(Repository,DirCacheEntry,ObjectReader,boolean,CheckoutMetadata)
org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testInconsistentCommitTimes()
org.eclipse.jgit.internal.storage.file.AutoGcTest.testTooManyPacks()
org.eclipse.jgit.gitrepo.RepoCommand.setProgressMonitor(ProgressMonitor)
org.eclipse.jgit.transport.RefSpecTest.testSetDestination_SourceNull()
org.eclipse.jgit.util.ReadLinesTest.clearList()
org.eclipse.jgit.transport.WalkFetchConnection.markLocalCommitsComplete(int)
org.eclipse.jgit.lib.RebaseTodoLine.getComment()
org.eclipse.jgit.lib.BitmapIndex.getBitmap(AnyObjectId)
org.eclipse.jgit.revwalk.RevWalk.lookupAny(AnyObjectId,int)
org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_UTF8()
org.eclipse.jgit.lib.ObjectInserter.insert(int,byte,int,int)
org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLine()
org.eclipse.jgit.util.io.AutoLFOutputStream.write(byte)
org.eclipse.jgit.lib.BranchConfig.getRebaseMode()
org.eclipse.jgit.internal.storage.reftable.MergedReftable.close()
org.eclipse.jgit.util.BlockList.size()
org.eclipse.jgit.lib.ObjectId.fromString(byte,int)
org.eclipse.jgit.junit.TestRepositoryTest.insertExplicitChangeId()
org.eclipse.jgit.transport.PushCertificateStore.apply(DirCacheEntry)
org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testNoPostOrder()
org.eclipse.jgit.revplot.PlotCommitListTest.noMoreCommits()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsNotMacHFSGit2()
org.eclipse.jgit.api.PushCommandTest.testPushWithLease()
org.eclipse.jgit.pgm.Log.run()
org.eclipse.jgit.transport.ReceivePack.getPreReceiveHook()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_SymrefToPacked()
org.eclipse.jgit.revwalk.RevTagParseTest.testParse_ShortLineOnlyNoLF()
org.eclipse.jgit.http.server.GitSmartHttpTools.infoRefsResultType(String)
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADSOnUnix()
org.eclipse.jgit.util.FSTest.testReadPipePosixCommandFailure()
org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits()
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.read(File)
org.eclipse.jgit.internal.storage.file.FileRepository.createAttributesNodeProvider()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeeplyNestedBranch()
org.eclipse.jgit.lib.BatchingProgressMonitor.restartTimer()
org.eclipse.jgit.ignore.CGitIgnoreTest.testDirectoryMatchSubRecursiveBacktrack2()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.isReuseAsIs()
org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict()
org.eclipse.jgit.transport.OpenSshConfig.merge(HostEntry)
org.eclipse.jgit.api.Status.getRemoved()
org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies(MergeStrategy)
org.eclipse.jgit.internal.storage.pack.PackWriter.writeObjects(PackOutputStream)
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.finishRefAndObjSections()
org.eclipse.jgit.merge.MergeConfig.parse(Config)
org.eclipse.jgit.revwalk.RevWalk.parseTag(AnyObjectId)
org.eclipse.jgit.merge.MergeResult.remove()
org.eclipse.jgit.diff.Edit.after(Edit)
org.eclipse.jgit.pgm.opt.OptionWithValuesListHandler.getDefaultMetaVariable()
org.eclipse.jgit.junit.MockSystemReader.resetOsNames()
org.eclipse.jgit.pgm.ArchiveTest.setUp()
org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.write(Collection)
org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_DqFooTabBar()
org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testSingleSubPath()
org.eclipse.jgit.lib.TagBuilder.getTag()
org.eclipse.jgit.api.GarbageCollectCommand.getStatistics()
org.eclipse.jgit.awtui.AwtAuthenticator.install()
org.eclipse.jgit.lib.Repository.writeCommitMsg(File,String)
org.eclipse.jgit.treewalk.TreeWalk.getObjectReader()
org.eclipse.jgit.treewalk.NameConflictTreeWalk.isDirectoryFileConflict()
org.eclipse.jgit.attributes.AttributesHandler.mergeInfoAttributes(String,boolean,Attributes)
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getPackDescription()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testPrintGroupCase4()
org.eclipse.jgit.notes.LeafBucket.getTreeId()
org.eclipse.jgit.internal.storage.file.PackFileTest.clone(int,byte)
org.eclipse.jgit.transport.RemoteConfigTest.testSimple()
org.eclipse.jgit.dircache.DirCacheCheckout.addTree(TreeWalk,ObjectId)
org.eclipse.jgit.merge.MergeResult.hasNext()
org.eclipse.jgit.ignore.internal.IMatcher.matches(String,boolean,boolean)
org.eclipse.jgit.treewalk.filter.OrTreeFilter.create(TreeFilter)
org.eclipse.jgit.transport.OpenSshConfig.toFile(String,File)
org.eclipse.jgit.transport.http.apache.HttpClientConnection.setRequestMethod(String)
org.eclipse.jgit.diff.MyersDiff.calculateEdits(int,int,int,int)
org.eclipse.jgit.pgm.StatusTest.detachHead(Git)
org.eclipse.jgit.diff.EditListTest.testSet()
org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_SrcFooCNonStandardPrefix()
org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onObjectHeader(Source,byte,int,int)
org.eclipse.jgit.treewalk.filter.NotTreeFilterTest.testCloneIsSparseWhenPossible()
org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers()
org.eclipse.jgit.pgm.Config.list()
org.eclipse.jgit.transport.WalkEncryptionTest.remoteCreate()
org.eclipse.jgit.notes.NoteMapMergerTest.testEditSameNoteDifferentContent()
org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadTwoLine()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoTagHeader3()
org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompareLong()
org.eclipse.jgit.diff.SimilarityRenameDetector.compactDstList(List)
org.eclipse.jgit.pgm.debug.VerifyReftable.seek(List,ReftableReader)
org.eclipse.jgit.treewalk.CanonicalTreeParser.idOffset()
org.eclipse.jgit.gitrepo.RepoProject.clearCopyFiles()
org.eclipse.jgit.storage.pack.PackStatistics.getTimeWriting()
org.eclipse.jgit.util.FS_Win32_Cygwin.run()
org.eclipse.jgit.lib.AbbreviatedObjectId.isComplete()
org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.beginBlock(byte)
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.reflogDefaultIdent()
org.eclipse.jgit.transport.UploadPackLoggerChain.onPackStatistics(PackWriter,Statistics)
org.eclipse.jgit.transport.PackParser.setLockMessage(String)
org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testEmptyMap()
org.eclipse.jgit.internal.storage.file.InflatingBitSet.getBitmap()
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.getCommitCount()
org.eclipse.jgit.internal.storage.pack.DeltaWindow.keepInWindow()
org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive()
org.eclipse.jgit.internal.storage.pack.PackWriter.getDepth()
org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_EnterSubtree()
org.eclipse.jgit.transport.URIishTest.testGetValidHumanishName()
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.blockSize()
org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4()
org.eclipse.jgit.awtui.AwtCredentialsProvider.supports(CredentialItem)
org.eclipse.jgit.api.NotesCommandTest.setUp()
org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput()
org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testShallowFile()
org.eclipse.jgit.attributes.AttributesNodeTest.asSet(Attribute)
org.eclipse.jgit.pgm.MergeTest.testSquashSelf()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge()
org.eclipse.jgit.api.AddCommand.setUpdate(boolean)
org.eclipse.jgit.transport.TransportGitAnon.service(String,PacketLineOut)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testSimpleStarCase1()
org.eclipse.jgit.internal.ketch.LagCheck.getRemoteId()
org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions.setStreamPackBufferSize(int)
org.eclipse.jgit.internal.ketch.KetchLeader.queueProposal(Proposal)
org.eclipse.jgit.util.io.TimeoutInputStreamTest.beginRead()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testAlphaGroupCase1()
org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne(boolean)
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked()
org.eclipse.jgit.notes.LeafBucketTest.testParseFive()
org.eclipse.jgit.lib.ObjectIdTest.test007_isId()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleGroupCase1()
org.eclipse.jgit.notes.NoteMap.read(ObjectReader,RevCommit)
org.eclipse.jgit.util.RefList.iterator()
org.eclipse.jgit.internal.storage.file.SimpleDataInput.readShort()
org.eclipse.jgit.api.TagCommand.setObjectId(RevObject)
org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_OneUserWithLF()
org.eclipse.jgit.revwalk.RevWalk.setRevFilter(RevFilter)
org.eclipse.jgit.lib.Config.getBaseState()
org.eclipse.jgit.dircache.DirCacheIterator.getEntryAttributesNode(ObjectReader)
org.eclipse.jgit.internal.ketch.KetchReplica.removeStaged(List,ObjectId)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testManySolutionsCase2()
org.eclipse.jgit.submodule.SubmoduleWalk.getModuleName(String)
org.eclipse.jgit.pgm.ReflogTest.testSingleCommit()
org.eclipse.jgit.api.EolRepositoryTest.recreateWorktree(Git)
org.eclipse.jgit.lib.BatchRefUpdate.newUpdate(ReceiveCommand)
org.eclipse.jgit.treewalk.AbstractTreeIterator.pathCompare(AbstractTreeIterator,int)
org.eclipse.jgit.api.PushCommand.setRefLeaseSpecs(List)
org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.getRng()
org.eclipse.jgit.archive.ZipFormat.putEntry(ArchiveOutputStream,ObjectId,String,FileMode,ObjectLoader)
org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEmpty_NoMatch()
org.eclipse.jgit.internal.storage.file.SimpleDataInput.readUnsignedByte()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.getAdditionalRefs()
org.eclipse.jgit.diff.DiffFormatter.isRename(DiffEntry)
org.eclipse.jgit.diff.RawTextTest.testComparatorReduceCommonStartButLastLineNoEol_2()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testExactRef_EmptyDatabase()
org.eclipse.jgit.patch.PatchCcErrorTest.testError_CcTruncatedOld()
org.eclipse.jgit.internal.storage.reftable.MergedReftable.compare(LogQueueEntry,LogQueueEntry)
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.findDeltaBase(DfsReader,ObjectId)
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.recursiveDelete(File)
org.eclipse.jgit.blame.BlameGenerator.getSourceCommitter()
org.eclipse.jgit.lfs.lib.LfsPointerFilter.clone()
org.eclipse.jgit.junit.TestRepository.setAuthorAndCommitter(org,eclipse,jgit,lib,CommitBuilder)
org.eclipse.jgit.http.server.UploadPackServlet.flush()
org.eclipse.jgit.transport.http.apache.HttpClientConnection.setDoOutput(boolean)
org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash()
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefNoChange()
org.eclipse.jgit.api.Git.notesList()
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparerTest.newReader()
org.eclipse.jgit.util.StringUtils.toBooleanOrNull(String)
org.eclipse.jgit.util.BlockList.newBlock()
org.eclipse.jgit.merge.MergeChunk.getSequenceIndex()
org.eclipse.jgit.api.DescribeCommandTest.tag(String)
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose2()
org.eclipse.jgit.util.FilterCommandsTest.testBuiltinCleanFilter()
org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.assertAttributesNode(String,AttributesNode,List)
org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack()
org.eclipse.jgit.api.DiffCommand.setProgressMonitor(ProgressMonitor)
org.eclipse.jgit.util.FS.getLength()
org.eclipse.jgit.util.FileUtilsTest.testRenameOverNonExistingFile()
org.eclipse.jgit.internal.storage.file.SimpleDataInput.readLong()
org.eclipse.jgit.awtui.AwtAuthenticator.promptPasswordAuthentication()
org.eclipse.jgit.pgm.CheckoutTest.testCheckoutNewBranchOnBranchToBeBorn()
org.eclipse.jgit.lib.Repository.fireEvent(RepositoryEvent)
org.eclipse.jgit.internal.ketch.ProposalRound.insertMultiProposal(Repository,ProposedTimestamp,ObjectInserter)
org.eclipse.jgit.transport.PushCertificate.getSignature()
org.eclipse.jgit.lib.RefUpdate.update(RevWalk)
org.eclipse.jgit.lfs.server.fs.LfsServerTest.setup()
org.eclipse.jgit.transport.UploadPack.verifyClientShallow()
org.eclipse.jgit.util.FS.internalRunHookIfPresent(Repository,String,String,PrintStream,PrintStream,String)
org.eclipse.jgit.transport.WalkFetchConnection.queueWants(Collection)
org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded()
org.eclipse.jgit.ignore.CGitVsJGitRandomIgnorePatternTest.isMatch(String)
org.eclipse.jgit.internal.ketch.Proposal.getMessage()
org.eclipse.jgit.internal.storage.pack.PackWriter.getConfig()
org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule()
org.eclipse.jgit.http.test.HttpClientTests.dumb(String)
org.eclipse.jgit.lib.DirCacheCheckoutTest.buildTree(HashMap)
org.eclipse.jgit.transport.JschSession.closeOutputStream()
org.eclipse.jgit.merge.SimpleMergeTest.testOurs_noRepo()
org.eclipse.jgit.lib.RefUpdate.isDetachingSymbolicRef()
org.eclipse.jgit.pgm.DescribeTest.testDescribeTagLong()
org.eclipse.jgit.api.MergeCommand.matchConfigValue(String)
org.eclipse.jgit.transport.RemoteConfigTest.pushInsteadOfAppliedToUri()
org.eclipse.jgit.transport.AmazonS3.close()
org.eclipse.jgit.storage.pack.PackStatistics.getObjects()
org.eclipse.jgit.transport.ReceivedPackStatistics.getNumWholeBlob()
org.eclipse.jgit.transport.TransportSftp.mkdir_p(String)
org.eclipse.jgit.http.server.glue.RegexGroupFilter.doFilter(ServletRequest,ServletResponse,FilterChain)
org.eclipse.jgit.lfs.errors.CorruptMediaFile.getExpectedSize()
org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testValidConnectivity()
org.eclipse.jgit.transport.PushCertificateStoreTest.lockFailure()
org.eclipse.jgit.revwalk.EndGenerator.next()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testSpecialGroupCase2()
org.eclipse.jgit.fnmatch.FileNameMatcher.createWildCardHead(Character,boolean)
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.shortestUniqueAbbreviation(List)
org.eclipse.jgit.attributes.AttributesHandlerTest.testDirectoryMatchSubComplex()
org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation.getDeltaBase()
org.eclipse.jgit.lib.ObjectId.readObject(ObjectInputStream)
org.eclipse.jgit.transport.BaseReceivePack.setSignedPushConfig(SignedPushConfig)
org.eclipse.jgit.merge.MergeConfig.isCommit()
org.eclipse.jgit.internal.storage.reftable.MergedReftable.index()
org.eclipse.jgit.attributes.CGitAttributesTest.testDirectoryMatchSubRecursive()
org.eclipse.jgit.util.StringUtils.join(Collection,String,String)
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.refBytes()
org.eclipse.jgit.internal.ketch.LocalReplica.isOnlyTxnNamespace(Collection)
org.eclipse.jgit.junit.http.HttpTestCase.rewriteUrl(String,String,int)
org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.clearCache()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.clearReuseAsIs()
org.eclipse.jgit.util.IntListTest.testClear()
org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_SameContentMultipleTimes()
org.eclipse.jgit.transport.PushCertificateStoreTest.changeRefFileToDirectory()
org.eclipse.jgit.dircache.DirCacheBasicTest.testLockMissing_RealIndex()
org.eclipse.jgit.revplot.PlotCommitList.createLane()
org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.getCurrentPackList()
org.eclipse.jgit.lib.ObjectLoaderTest.testLimitedGetCachedBytes()
org.eclipse.jgit.internal.ketch.KetchLeader.shutdown()
org.eclipse.jgit.util.RawParseUtils.parseEncodingName(byte)
org.eclipse.jgit.http.server.ServletUtils.isChunked(HttpServletRequest)
org.eclipse.jgit.api.NameRevCommand.simplify(String)
org.eclipse.jgit.dircache.DirCacheCheckout.runExternalFilterCommand(Repository,DirCacheEntry,CheckoutMetadata,ObjectLoader,FS,OutputStream)
org.eclipse.jgit.api.ApplyCommandTest.testNonASCIIDel()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeFileHeader()
org.eclipse.jgit.transport.HttpConfigUriPathTest.assertSuccess(String,String)
org.eclipse.jgit.api.EolStreamTypeUtilTest.testCheckoutDirect()
org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.unknownRepositoryFormatVersion()
org.eclipse.jgit.storage.pack.PackStatistics.getTimeSearchingForSizes()
org.eclipse.jgit.transport.UploadPack.write(int)
org.eclipse.jgit.junit.http.SimpleHttpServer.stop()
org.eclipse.jgit.util.IntListTest.testToString()
org.eclipse.jgit.storage.pack.PackStatistics.getBitmapIndexMisses()
org.eclipse.jgit.api.HugeFileTest.assertCollectionEquals(Collection,Collection)
org.eclipse.jgit.lib.ObjectInserter.newReader()
org.eclipse.jgit.treewalk.CanonicalTreeParser.findAttributes(ObjectReader)
org.eclipse.jgit.internal.storage.file.GcTagTest.annotatedTag_objectNotPruned()
org.eclipse.jgit.internal.fsck.FsckPackParser.onEndDelta()
org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles()
org.eclipse.jgit.util.io.StreamCopyThread.run()
org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules()
org.eclipse.jgit.api.RebaseCommand.appendToFile(File,String)
org.eclipse.jgit.treewalk.WorkingTreeIterator.init(Entry)
org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef()
org.eclipse.jgit.transport.RemoteRefUpdate.getStatus()
org.eclipse.jgit.internal.ketch.ProposalRound.message(Proposal)
org.eclipse.jgit.treewalk.AbstractTreeIteratorTest.testEntryPath()
org.eclipse.jgit.lib.RepositoryCacheConfigTest.testAutoCleanupDelay()
org.eclipse.jgit.internal.storage.pack.ObjectReuseAsIs.writeObjects(PackOutputStream,List)
org.eclipse.jgit.internal.storage.pack.DeltaWindow.tryStealWork(DeltaTask,Slice)
org.eclipse.jgit.util.RefMapTest.testEmpty_NoPrefix1()
org.eclipse.jgit.archive.ZipFormat.createArchiveOutputStream(OutputStream)
org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack()
org.eclipse.jgit.transport.BasePackFetchConnection.sendWants(Collection)
org.eclipse.jgit.util.time.MonotonicSystemClock.nowMicros()
org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest()
org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testBare_CreateRepositoryFromGitDirOnlyWithBareConfigTrue()
org.eclipse.jgit.transport.BaseReceivePack.getAllCommands()
org.eclipse.jgit.internal.storage.file.PackIndexV2.getOffset(int,int)
org.eclipse.jgit.util.io.AutoLFOutputStream.write(int)
org.eclipse.jgit.diff.RawText.getEnd(int)
org.eclipse.jgit.diff.RawText.size()
org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits()
org.eclipse.jgit.transport.WalkEncryptionTest.haveSysPropFile(String)
org.eclipse.jgit.internal.storage.pack.PackOutputStream.writeHeader(ObjectToPack,long)
org.eclipse.jgit.junit.RepositoryTestCase.deleteTrashFile(String)
org.eclipse.jgit.internal.storage.pack.PackWriter.getMessage()
org.eclipse.jgit.util.HttpSupport.disableSslVerify(HttpConnection)
org.eclipse.jgit.pgm.Merge.run()
org.eclipse.jgit.transport.TransportGitSsh.open(URIish,Repository,String)
org.eclipse.jgit.treewalk.filter.IndexDiffFilter.getUntrackedFolders()
org.eclipse.jgit.merge.ThreeWayMerger.mergeBase()
org.eclipse.jgit.lib.BlobBasedConfig.read(Repository,AnyObjectId,String)
org.eclipse.jgit.lib.BaseRepositoryBuilder.getWorkTree()
org.eclipse.jgit.lib.RepositoryCache.isCached(Repository)
org.eclipse.jgit.treewalk.CanonicalTreeParser.idBuffer()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testBlankGroupCase1()
org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileThenFileWithFolderInIndex()
org.eclipse.jgit.pgm.ArchiveTest.spawnAssumingCommandPresent(String)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.hasLooseInSelfOrAlternate(AnyObjectId,Set)
org.eclipse.jgit.lib.Config.fromTextRecurse(String,int)
org.eclipse.jgit.util.FileUtilsTest.testRelativize_doc()
org.eclipse.jgit.transport.WalkFetchConnection.downloadLooseObject(AnyObjectId,String,WalkRemoteObjectDatabase)
org.eclipse.jgit.internal.storage.pack.PackExt.getBit()
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyAsIs(PackOutputStream,DfsObjectToPack,boolean,DfsReader)
org.eclipse.jgit.pgm.ArchiveTest.testArchiveWithSubdir()
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag()
org.eclipse.jgit.transport.DaemonService.setEnabled(boolean)
org.eclipse.jgit.lfs.server.LfsProtocolServlet.getObjects()
org.eclipse.jgit.pgm.ArchiveTest.testTxzExtension()
org.eclipse.jgit.http.server.GitSmartHttpTools.writePacket(PacketLineOut,String)
org.eclipse.jgit.api.InitCommandTest.testInitBareRepository()
org.eclipse.jgit.api.MergeResult.setConflicts(Map)
org.eclipse.jgit.api.ReflogCommand.call()
org.eclipse.jgit.treewalk.filter.NotIgnoredFilter.include(TreeWalk)
org.eclipse.jgit.lib.BatchRefUpdate.setRefLogIdent(PersonIdent)
org.eclipse.jgit.patch.HunkHeader.parseBody(Patch,int)
org.eclipse.jgit.lib.Key.open(boolean)
org.eclipse.jgit.util.SystemReader.getOsName()
org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.whackCache()
org.eclipse.jgit.pgm.debug.ShowPackDelta.run()
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.getGitwebDescription()
org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_4090()
org.eclipse.jgit.internal.storage.dfs.ReadableChannel.size()
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.decompress(long,int,DfsReader)
org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testShuffleSegments()
org.eclipse.jgit.util.BlockListTest.testAddSlowPath()
org.eclipse.jgit.diff.DiffEntry.toString()
org.eclipse.jgit.lfs.lib.AnyLongObjectId.getByte(int)
org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.computeVarintSize(long)
org.eclipse.jgit.patch.FileHeaderTest.gitLine(String)
org.eclipse.jgit.transport.RemoteConfigTest.pushInsteadOfNotAppliedToPushUri()
org.eclipse.jgit.util.io.TimeoutInputStreamTest.testTimeout_readByte_Timeout()
org.eclipse.jgit.transport.BaseReceivePack.setAllowPushOptions(boolean)
org.eclipse.jgit.transport.TransportSftp.close()
org.eclipse.jgit.api.NameRevCommandTest.onePathMergeSecondParent()
org.eclipse.jgit.treewalk.filter.PathFilterGroup.include(TreeWalk)
org.eclipse.jgit.gitrepo.RepoProject.getRemote()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.indexId(ObjectId,long)
org.eclipse.jgit.revwalk.RevWalk.parseAny(AnyObjectId)
org.eclipse.jgit.diff.HistogramDiff.subcmp()
org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testEntryObjectId()
org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Delete()
org.eclipse.jgit.util.io.AutoLFOutputStream.write(byte,int,int)
org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit()
org.eclipse.jgit.transport.ReceivePack.readPostCommands(PacketLineIn)
org.eclipse.jgit.lib.IndexDiff.hasTheirs()
org.eclipse.jgit.lib.RepositoryResolveTest.testTree()
org.eclipse.jgit.merge.StrategyRecursive.newMerger(Repository,boolean)
org.eclipse.jgit.transport.TransportAmazonS3.getPackNames()
org.eclipse.jgit.internal.storage.reftable.EmptyLogCursor.getReflogEntry()
org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheTest.resetCache()
org.eclipse.jgit.dircache.DirCacheBuildIterator.createSubtreeIterator(ObjectReader)
org.eclipse.jgit.merge.MergeFormatter.formatMerge(OutputStream,MergeResult,String,String,String,String)
org.eclipse.jgit.pgm.StatusTest.testStatusPorcelainUno()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testUntrackedConflicts()
org.eclipse.jgit.transport.TransportHttp.toURL(URIish)
org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.setRepositoryDescription(DfsRepositoryDescription)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_a()
org.eclipse.jgit.lib.IndexDiff.diff()
org.eclipse.jgit.diff.RawTextComparator.reduceCommonStartEnd(RawText,RawText,Edit)
org.eclipse.jgit.transport.PushCertificateParser.receiveHeader(StringReader,boolean)
org.eclipse.jgit.transport.WalkPushConnection.writeFile(String,byte)
org.eclipse.jgit.revplot.PlotCommitListTest.testBug368927()
org.eclipse.jgit.revwalk.RevWalkTestCase.markUninteresting(RevCommit)
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.getStats()
org.eclipse.jgit.revwalk.RevWalkCarryFlagsTest.testRevWalkCarryUninteresting_WrongClock()
org.eclipse.jgit.hooks.GitHook.getStdinArgs()
org.eclipse.jgit.http.test.DumbClientDumbServerTest.testInitialClone_Packed()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testBrackets()
org.eclipse.jgit.revwalk.filter.MessageRevFilter.create(String)
org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromFallback()
org.eclipse.jgit.merge.ResolveMerger.getResultTreeId()
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparerTest.open(AnyObjectId,int)
org.eclipse.jgit.transport.TransportAmazonS3.readAdvertisedRefs()
org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testRevFilterAndObjectFilterCanCombine()
org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_Seek2IsEOF()
org.eclipse.jgit.lib.ConfigTest.test009_readNamesInSection()
org.eclipse.jgit.transport.RemoteSession.disconnect()
org.eclipse.jgit.transport.PackParser.read(byte,int,int)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.assertMatch(String,String,boolean,boolean)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.insert(int,byte,int,int,boolean)
org.eclipse.jgit.internal.storage.file.RefDirectory.delete(File,int)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testDigitGroupCase3()
org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getPath(AnyLongObjectId)
org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore()
org.eclipse.jgit.transport.PackParser.inflateAndSkip(Source,long)
org.eclipse.jgit.http.server.glue.MetaServlet.service(HttpServletRequest,HttpServletResponse)
org.eclipse.jgit.internal.storage.file.WriteConfig.getFSyncObjectFiles()
org.eclipse.jgit.errors.CompoundException.format(Collection)
org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem()
org.eclipse.jgit.transport.PacketLineInTest.testReadString1()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_a()
org.eclipse.jgit.merge.MergeFormatterPass.writeConflictChange(MergeChunk)
org.eclipse.jgit.internal.ketch.KetchLeader.findLocal(Collection)
org.eclipse.jgit.lib.Config.setBoolean(String,String,String,boolean)
org.eclipse.jgit.util.FileUtilsTest.testMkdir()
org.eclipse.jgit.http.test.DefaultReceivePackFactoryTest.testCreate_Disabled()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRefs_HeadBranchNotBorn()
org.eclipse.jgit.revwalk.RevTagParseTest.testTagTree()
org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_ConnectionAttempts()
org.eclipse.jgit.transport.PacketLineOutTest.testWriteEnd()
org.eclipse.jgit.dircache.DirCacheBuilder.add(DirCacheEntry)
org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_NamedEscapes()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderUntracked()
org.eclipse.jgit.junit.http.AccessEvent.getResponseHeader(String)
org.eclipse.jgit.transport.PacketLineInTest.testReadACK_ACKcontinue1()
org.eclipse.jgit.transport.UploadPack.isBiDirectionalPipe()
org.eclipse.jgit.transport.Transport.openAll(Repository,RemoteConfig,Operation)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutHierarchy()
org.eclipse.jgit.api.RebaseCommand.tryFastForward(RevCommit)
org.eclipse.jgit.transport.WalkFetchConnection.verifyAndInsertLooseObject(AnyObjectId,byte)
org.eclipse.jgit.lib.BlobBasedConfig.read(ObjectReader,AnyObjectId)
org.eclipse.jgit.treewalk.filter.ByteArraySet.size()
org.eclipse.jgit.patch.FileHeaderTest.assertParse(FileHeader)
org.eclipse.jgit.http.server.glue.MetaServlet.doFilter(ServletRequest,ServletResponse)
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.combine()
org.eclipse.jgit.internal.storage.reftable.BlockWriter.sizeBytes()
org.eclipse.jgit.util.FileUtils.lastModified(File)
org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileWithFolderInIndex()
org.eclipse.jgit.api.PushCommand.add(Ref)
org.eclipse.jgit.api.NameRevCommand.toString()
org.eclipse.jgit.http.server.RepositoryFilter.init(FilterConfig)
org.eclipse.jgit.lib.ObjectIdOwnerMap.clear()
org.eclipse.jgit.transport.BasePackPushConnection.checkError(IOException)
org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.getFile(String)
org.eclipse.jgit.transport.PackParser.add(UnresolvedDelta)
org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.stopWalk()
org.eclipse.jgit.internal.storage.file.PackIndexV2.next()
org.eclipse.jgit.internal.ketch.KetchLeader.getSystem()
org.eclipse.jgit.internal.storage.file.AutoGcTest.testNotTooManyLooseObjects()
org.eclipse.jgit.junit.http.SimpleHttpServer.toURIish(ServletContextHandler,String)
org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog()
org.eclipse.jgit.lib.AnyObjectId.equals(Object)
org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain()
org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onEndThinPack()
org.eclipse.jgit.patch.HunkHeader.getOldImage()
org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.releaseMemory()
org.eclipse.jgit.transport.URIish.setPort(int)
org.eclipse.jgit.util.RefMap.hashCode()
org.eclipse.jgit.storage.file.FileBasedConfig.save()
org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingWithFolderInWorkingTree()
org.eclipse.jgit.transport.http.HttpConnection.connect()
org.eclipse.jgit.lib.ObjectReader.next()
org.eclipse.jgit.transport.PacketLineInTest.testReadString_LenHELO()
org.eclipse.jgit.junit.TestRepository.getTimeZone()
org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.setInvalid()
org.eclipse.jgit.util.FS.isExecutable()
org.eclipse.jgit.treewalk.WorkingTreeOptions.isFileMode()
org.eclipse.jgit.transport.BasePackPushConnection.readStringLongTimeout()
org.eclipse.jgit.util.RawCharSequence.subSequence(int,int)
org.eclipse.jgit.internal.storage.dfs.DfsInserter.writePackIndex(DfsPackDescription,byte,List)
org.eclipse.jgit.transport.UserAgent.computeUserAgent()
org.eclipse.jgit.lib.Config.isUtf8(byte)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.write(int)
org.eclipse.jgit.merge.MergeResult.next()
org.eclipse.jgit.transport.PushCertificateStore.buildMessage(PushCertificate)
org.eclipse.jgit.pgm.ArchiveTest.assertIsXz(File)
org.eclipse.jgit.transport.PackParser.isAllowThin()
org.eclipse.jgit.lib.Config.getEnum(String,String,String,T)
org.eclipse.jgit.treewalk.AbstractTreeIterator.alreadyMatch(AbstractTreeIterator,AbstractTreeIterator)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testAlnumGroupCase2()
org.eclipse.jgit.notes.NoteMapMerger.addIfNotNull(InMemoryNoteBucket,Note)
org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_GitlinkAndFile()
org.eclipse.jgit.patch.Patch.getFiles()
org.eclipse.jgit.gitrepo.ManifestParser.read(InputStream)
org.eclipse.jgit.transport.PackParser.open(Source,long)
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.refresh()
org.eclipse.jgit.transport.AmazonS3.isSignedHeader(String)
org.eclipse.jgit.transport.PacketLineInTest.testReadStringRaw4()
org.eclipse.jgit.transport.http.JDKHttpConnection.setFixedLengthStreamingMode(int)
org.eclipse.jgit.gitrepo.RepoProject.setUrl(String)
org.eclipse.jgit.transport.UploadPack.getStatistics()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames4()
org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_implicit_firstparent()
org.eclipse.jgit.pgm.DiffTree.run()
org.eclipse.jgit.lib.ConfigTest.test005_PutGetStringList()
org.eclipse.jgit.util.io.TimeoutOutputStreamTest.setUp()
org.eclipse.jgit.util.GitDateFormatterTest.RFC()
org.eclipse.jgit.http.test.DefaultReceivePackFactoryTest.testCreate_EmptyStringUser()
org.eclipse.jgit.api.CommitAndLogCommandTest.testWrongParams()
org.eclipse.jgit.internal.storage.reftable.BlockReader.endPosition()
org.eclipse.jgit.diff.RenameDetector.getRenameScore()
org.eclipse.jgit.api.BlameCommand.setStartCommit(AnyObjectId)
org.eclipse.jgit.transport.NonceGenerator.createNonce(Repository,long)
org.eclipse.jgit.pgm.debug.RebuildCommitGraph.writeFile(String,byte)
org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testPackFormat_SmallObject()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.newBatchUpdate()
org.eclipse.jgit.transport.PushCertificateStore.saveCert(ObjectInserter,DirCache,PendingCert,ObjectId)
org.eclipse.jgit.internal.storage.reftable.MergedReftable.seekLog(String,long)
org.eclipse.jgit.lib.ObjectCheckerTest.assertSkipListRejects(String,int,byte)
org.eclipse.jgit.api.RebaseCommand.getRewrittenDir()
org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.getNewPacks()
org.eclipse.jgit.transport.UsernamePasswordCredentialsProvider.get(URIish,CredentialItem)
org.eclipse.jgit.dircache.DirCacheEntry.copyMetaData(DirCacheEntry)
org.eclipse.jgit.transport.Transport.openAll(Repository,RemoteConfig)
org.eclipse.jgit.pgm.CleanTest.testCleanDeleteDirs()
org.eclipse.jgit.lib.BatchRefUpdate.setAtomic(boolean)
org.eclipse.jgit.dircache.DirCache.findEntry(int,byte,int)
org.eclipse.jgit.api.ResetCommand.parseCommit(ObjectId)
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.hasNext()
org.eclipse.jgit.revwalk.RevObjectTest.testEquals()
org.eclipse.jgit.transport.ReceiveCommand.getOldId()
org.eclipse.jgit.pgm.AddTest.setUp()
org.eclipse.jgit.http.test.SmartClientSmartServerSslTest.doFilter(ServletRequest,ServletResponse,FilterChain)
org.eclipse.jgit.internal.storage.file.RefUpdateTest.writeSymref(String,String)
org.eclipse.jgit.api.BranchCommandTest.testCreateAndList()
org.eclipse.jgit.storage.pack.PackStatistics.getDeltas()
org.eclipse.jgit.lib.MutableObjectId.fromRaw(int,int)
org.eclipse.jgit.api.ListTagCommand.compare(Ref,Ref)
org.eclipse.jgit.http.test.DumbClientSmartServerTest.setUp()
org.eclipse.jgit.api.ArchiveCommandTest.tearDown()
org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testQuote_BareA()
org.eclipse.jgit.api.EolStreamTypeUtilTest.testCheckoutLF()
org.eclipse.jgit.api.CleanCommand.filterFolders(Set,Set)
org.eclipse.jgit.diff.DiffFormatter.getNewPrefix()
org.eclipse.jgit.lfs.server.s3.S3Repository.validateConfig(S3Config)
org.eclipse.jgit.lib.AnyObjectId.copyRawTo(ByteBuffer)
org.eclipse.jgit.api.EolRepositoryTest.endWalk()
org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.packMap(PackList)
org.eclipse.jgit.pgm.internal.CLIText.formatWithLocale(Locale,Object)
org.eclipse.jgit.lib.ConfigTest.testReadMultipleValuesForName()
org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.testRecursiveFiltering()
org.eclipse.jgit.transport.UploadPack.getRefFilter()
org.eclipse.jgit.diff.HistogramDiffTest.testExceedsChainLength_DuringScanOfA()
org.eclipse.jgit.submodule.SubmoduleWalk.lazyLoadModulesConfig()
org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.deflate(TemporaryBuffer,Heap,byte)
org.eclipse.jgit.util.RefMap.containsKey(Object)
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeModeNotSupportedMode1()
org.eclipse.jgit.lib.Repository.shortenRemoteBranchName(String)
org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.writeFooter()
org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldReturnNullWhenBranchDoesntExist()
org.eclipse.jgit.transport.ReceiveCommand.getRefLogMessage()
org.eclipse.jgit.internal.ketch.KetchLeader.getTerm()
org.eclipse.jgit.transport.BaseConnection.getRefs()
org.eclipse.jgit.transport.OpenSshConfigTest.testRepeatedLookupsWithModification()
org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2()
org.eclipse.jgit.transport.TransportSftp.open(URIish,Repository,String)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onAppendBase(int,byte,PackedObjectInfo)
org.eclipse.jgit.attributes.TreeWalkAttributeTest.testPrecedenceGlobal()
org.eclipse.jgit.internal.storage.file.PackWriterTest.createVerifyOpenPack(List)
org.eclipse.jgit.revwalk.RevQueueTestCase.testHasFlags()
org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.get(DfsStreamKey,long)
org.eclipse.jgit.junit.TestRepository.update(RevCommit)
org.eclipse.jgit.transport.PackParserTest.markSupported()
org.eclipse.jgit.treewalk.TreeWalk.getTree(Class)
org.eclipse.jgit.api.BlameCommand.getRawText(File)
org.eclipse.jgit.lib.DirCacheCheckoutTest.assertIndex(HashMap)
org.eclipse.jgit.transport.BaseReceivePack.getPushCertificateParser()
org.eclipse.jgit.pgm.opt.PathTreeFilterHandler.getDefaultMetaVariable()
org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_Recursive()
org.eclipse.jgit.hooks.PostCommitHook.call()
org.eclipse.jgit.diff.Edit.extendA()
org.eclipse.jgit.revwalk.RevCommit.defer(FIFORevQueue,int,RevCommit,int)
org.eclipse.jgit.util.RefList.sort()
org.eclipse.jgit.merge.ResolveMerger.insertMergeResult(MergeResult)
org.eclipse.jgit.util.FileUtilsTest.tearDown()
org.eclipse.jgit.transport.OpenSshConfig.yesno(String)
org.eclipse.jgit.util.IOReadLineTest.readLine(Reader)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testFilePathCase3()
org.eclipse.jgit.lib.Repository.getRemoteName(String)
org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_writeByte_Success1()
org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.index(AnyObjectId)
org.eclipse.jgit.util.ProcessResult.getExitCode()
org.eclipse.jgit.api.PullCommand.setStrategy(MergeStrategy)
org.eclipse.jgit.patch.FileHeaderTest.header(String)
org.eclipse.jgit.pgm.internal.CLIText.format(String)
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRef_FindBranchConfig()
org.eclipse.jgit.transport.RefAdvertiserTest.padStart(String,int)
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig()
org.eclipse.jgit.attributes.AttributesHandler.parentOf(T)
org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testHealthyRepo()
org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.mergeImpl()
org.eclipse.jgit.http.test.DefaultReceivePackFactoryTest.setUp()
org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs()
org.eclipse.jgit.lib.ObjectChecker.setSafeForWindows(boolean)
org.eclipse.jgit.internal.storage.file.WindowCache.lock(PackFile,long)
org.eclipse.jgit.internal.storage.file.FileSnapshot.equals(Object)
org.eclipse.jgit.lib.RebaseTodoLine.getShortMessage()
org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadWriteV3()
org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig()
org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_incorrectUtf8Name()
org.eclipse.jgit.api.ResetCommandTest.testSoftReset()
org.eclipse.jgit.api.EolRepositoryTest.test_ConfigAutoCRLF_false()
org.eclipse.jgit.dircache.DirCacheEntry.toString(byte)
org.eclipse.jgit.http.server.GitFilter.setUploadPackFactory(UploadPackFactory)
org.eclipse.jgit.internal.storage.file.LocalCachedPack.getPackFile(String)
org.eclipse.jgit.internal.storage.file.FileRepository.detectIndexChanges()
org.eclipse.jgit.api.Git.log()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose1()
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate()
org.eclipse.jgit.transport.OpenSshConfig.getValue(String)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleGroupRangeCase0()
org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.getObjectSize(WindowCursor,AnyObjectId)
org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_SymlinkAndFileSamePath()
org.eclipse.jgit.attributes.FilterCommandRegistry.createFilterCommand(String,Repository,InputStream,OutputStream)
org.eclipse.jgit.lib.UserConfig.isCommitterEmailImplicit()
org.eclipse.jgit.transport.PacketLineOutTest.testFlush()
org.eclipse.jgit.revwalk.RevWalk.lookupOrNull(AnyObjectId)
org.eclipse.jgit.gitrepo.RepoCommand.setTargetBranch(String)
org.eclipse.jgit.pgm.CheckoutTest.testCheckoutExistingBranchWithConflict()
org.eclipse.jgit.transport.OpenSshConfig.userName()
org.eclipse.jgit.transport.PushCertificateIdent.getWhen()
org.eclipse.jgit.http.server.glue.MetaFilter.register(ServletBinder)
org.eclipse.jgit.internal.storage.file.LockFile.write(int)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoRangesInOneGroupCase2()
org.eclipse.jgit.api.Callback.initializedSubmodules(Collection)
org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData()
org.eclipse.jgit.internal.storage.reftable.ReftableReader.allRefs()
org.eclipse.jgit.util.time.MonotonicSystemClock.blockUntil(Duration)
org.eclipse.jgit.revwalk.filter.RevFlagFilter.hasAll(RevFlag)
org.eclipse.jgit.junit.http.MockServletConfig.setInitParameter(String,String)
org.eclipse.jgit.internal.storage.file.ReflogWriter.shouldAutoCreateLog(String)
org.eclipse.jgit.lib.MergeHeadMsgTest.testReadWriteMergeMsg()
org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile()
org.eclipse.jgit.internal.storage.file.GcLog.commit()
org.eclipse.jgit.notes.LeafBucketTest.testRemoveMissingNote()
org.eclipse.jgit.util.FS.isDirectory()
org.eclipse.jgit.lib.RefDatabaseConflictingNamesTest.close()
org.eclipse.jgit.transport.Transport.setCheckFetchedObjects(boolean)
org.eclipse.jgit.api.GitCommand.getRepository()
org.eclipse.jgit.util.io.AutoCRLFOutputStream.write(int)
org.eclipse.jgit.api.errors.FilterFailedException.getError()
org.eclipse.jgit.revwalk.RewriteGenerator.cleanup(RevCommit)
org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.getMemoryUsed()
org.eclipse.jgit.api.CommitCommand.setAuthor(String,String)
org.eclipse.jgit.transport.http.apache.HttpClientConnection.setBuffer(TemporaryBuffer)
org.eclipse.jgit.transport.WalkEncryptionTest.amazonURI()
org.eclipse.jgit.revwalk.RevTagParseTest.testParseAllFields()
org.eclipse.jgit.revwalk.MaxCountRevFilterTest.testMaxCountRevFilter0()
org.eclipse.jgit.ignore.BasicRuleTest.test()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_EmptyDatabase()
org.eclipse.jgit.submodule.SubmoduleWalk.getHeadRef()
org.eclipse.jgit.notes.FanoutBucket.setBucket(int,ObjectId)
org.eclipse.jgit.util.GitDateParserBadlyFormattedTest.badlyFormattedWithExplicitRef()
org.eclipse.jgit.notes.FanoutBucket.next()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.getPackConfig()
org.eclipse.jgit.revwalk.RevTagParseTest.testParseOldStyleNoTagger()
org.eclipse.jgit.util.ChangeIdUtilTest.testWithEndingURL()
org.eclipse.jgit.internal.storage.file.ObjectDirectory.has(AnyObjectId)
org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.openObject(WindowCursor,AnyObjectId)
org.eclipse.jgit.transport.AbstractAdvertiseRefsHook.getAdvertisedHaves(Repository,RevWalk)
org.eclipse.jgit.util.RawParseUtils.decode(byte,int,int)
org.eclipse.jgit.transport.PushCertificateParserTest.testConcatPacketLinesInsertsNewlines()
org.eclipse.jgit.revwalk.RevTag.parse(RevWalk,byte)
org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories()
org.eclipse.jgit.lfs.lib.AnyLongObjectId.toHexCharArray(char)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_d()
org.eclipse.jgit.merge.MergeMessageFormatterTest.testPullWithUri()
org.eclipse.jgit.transport.BaseReceivePack.discardCommands()
org.eclipse.jgit.internal.storage.file.PackIndexV1.initEntry()
org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout()
org.eclipse.jgit.util.RefMapTest.testPut_KeyMustMatchName_NoPrefix()
org.eclipse.jgit.api.TagCommand.getTagger()
org.eclipse.jgit.internal.storage.file.ByteWindow.setInput(long,Inflater)
org.eclipse.jgit.lib.ObjectChecker.checkPathSegment(byte,int,int)
org.eclipse.jgit.treewalk.filter.ByteArraySet.getHash()
org.eclipse.jgit.transport.WalkFetchConnection.process(ObjectId)
org.eclipse.jgit.lfs.lib.LfsPointerFilterTest.testValidPointersInRepositoryRoot()
org.eclipse.jgit.transport.PushCertificateStoreTest.newStore()
org.eclipse.jgit.diff.DiffFormatter.setProgressMonitor(ProgressMonitor)
org.eclipse.jgit.api.PullCommand.getRemote()
org.eclipse.jgit.api.CloneCommand.getDirectory()
org.eclipse.jgit.api.StashApplyCommandTest.setUp()
org.eclipse.jgit.submodule.SubmoduleWalk.getPath()
org.eclipse.jgit.diff.DiffFormatterReflowTest.assertFormatted()
org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.relativeGitDirRef()
org.eclipse.jgit.diff.DiffAlgorithm.normalize(SequenceComparator,EditList,S,S)
org.eclipse.jgit.internal.storage.file.PackFileTest.getRng()
org.eclipse.jgit.internal.storage.reftable.Reftable.setIncludeDeletes(boolean)
org.eclipse.jgit.util.io.EolStreamTypeUtil.wrapInputStream(InputStream,EolStreamType)
org.eclipse.jgit.transport.ReceiveCommand.getMessage()
org.eclipse.jgit.diff.SimilarityIndex.keyOf(long)
org.eclipse.jgit.transport.UploadPack.getLogger()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_a()
org.eclipse.jgit.gitrepo.RepoProject.getUrl()
org.eclipse.jgit.notes.NoteMap.iterator()
org.eclipse.jgit.api.StashApplyCommandTest.unstashNonStashCommit()
org.eclipse.jgit.diff.DiffEntry.getMode(Side)
org.eclipse.jgit.util.sha1.SHA1.reset()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.refCount()
org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.writeLooseRef(String,String)
org.eclipse.jgit.transport.NetRCCredentialsProvider.isInteractive()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.hasNext()
org.eclipse.jgit.gitrepo.RepoCommandSymlinkTest.beforeMethod()
org.eclipse.jgit.http.server.glue.RegexPipeline.service(HttpServletRequest,HttpServletResponse)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMixedGroupCase2()
org.eclipse.jgit.api.CreateBranchCommand.setName(String)
org.eclipse.jgit.api.StashCreateCommandTest.indexAdd()
org.eclipse.jgit.errors.CommandFailedException.getReturnCode()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.commit()
org.eclipse.jgit.transport.PushCertificate.getNonce()
org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.get(String)
org.eclipse.jgit.gitrepo.ManifestParser.removeNestedCopyAndLinkfiles()
org.eclipse.jgit.api.RebaseCommand.getNewParents(RevCommit)
org.eclipse.jgit.lib.ObjectInserter.insert(int,long,InputStream)
org.eclipse.jgit.transport.PushOptionsTest.testPushWithEmptyOptions()
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockTo()
org.eclipse.jgit.dircache.DirCacheCheckout.isModifiedSubtree_IndexTree(String,ObjectId)
org.eclipse.jgit.patch.CombinedFileHeader.getOldMode(int)
org.eclipse.jgit.attributes.CGitAttributesTest.fromString(String,String)
org.eclipse.jgit.junit.TestRepository.amend(AnyObjectId)
org.eclipse.jgit.http.server.GitServlet.getInitParameterNames()
org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyToWriterWithBuf()
org.eclipse.jgit.internal.storage.file.PackIndexV2Test.getFileForPackdf2982f28()
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapWalker.findObjects(Iterable,BitmapBuilder,boolean)
org.eclipse.jgit.transport.PostReceiveHookChain.onPostReceive(ReceivePack,Collection)
org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge()
org.eclipse.jgit.revwalk.RevCommitListTest.testFillToNullCommit()
org.eclipse.jgit.internal.storage.reftable.BlockReader.seekKey(byte)
org.eclipse.jgit.lib.RefUpdate.getExpectedOldObjectId()
org.eclipse.jgit.transport.HttpAuthTest.usingProxy()
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.makePath(List)
org.eclipse.jgit.lib.IndexDiff.getModified()
org.eclipse.jgit.junit.http.RecordingLogger.info(String,Throwable)
org.eclipse.jgit.revwalk.RevCommit.carryOneStep(FIFORevQueue,int,RevCommit)
org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.newPackBitmapIndex(BitmapIndex,PackBitmapIndex)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b()
org.eclipse.jgit.diff.HistogramDiffTest.testEdit_NoUniqueMiddleSide_FlipAndExpand()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.addBlock(long)
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.equals(Object)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.isObjectInPack(AnyObjectId,DfsPackFile)
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setLastModified(long)
org.eclipse.jgit.internal.ketch.KetchReplica.shutdown()
org.eclipse.jgit.api.NameRevCommand.add(ObjectId)
org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderWithoutIndexLine()
org.eclipse.jgit.internal.storage.pack.PackWriter.setReuseValidatingObjects(boolean)
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.refIndexSize()
org.eclipse.jgit.util.RefListTest.testBuilder_ToString()
org.eclipse.jgit.lfs.lib.LongObjectIdTest.tearDown()
org.eclipse.jgit.transport.AdvertiseRefsHookChain.newChain(List)
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2Case()
org.eclipse.jgit.treewalk.filter.AndTreeFilter.toString()
org.eclipse.jgit.transport.http.apache.HttpClientConnection.getInputStream()
org.eclipse.jgit.lib.FileMode.getBits()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.exactRef(String)
org.eclipse.jgit.patch.CombinedFileHeader.newHunkHeader(int)
org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions()
org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.clearChainLength()
org.eclipse.jgit.api.CommitCommandTest.commitAmendWithAuthorShouldUseIt()
org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_unsupportedEncoding()
org.eclipse.jgit.internal.ketch.RemoteGitReplica.asUpdateMap(List)
org.eclipse.jgit.dircache.DirCacheEditor.applyEdits()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMultipleEscapedCharacters1()
org.eclipse.jgit.api.StashApplyCommand.getStashId()
org.eclipse.jgit.lib.ObjectIdRef.toString()
org.eclipse.jgit.diff.SimilarityIndex.score(SimilarityIndex,int)
org.eclipse.jgit.console.ConsoleCredentialsProvider.get(CredentialItem,InformationalMessage)
org.eclipse.jgit.util.RawParseUtils.parseTimeZoneOffset(byte,int,MutableInteger)
org.eclipse.jgit.api.RebaseCommandTest.getTodoFile()
org.eclipse.jgit.util.io.UnionInputStreamTest.close()
org.eclipse.jgit.lib.ConfigTest.testExplicitlySetEmptyString()
org.eclipse.jgit.transport.PackParser.checkObjectCollision(PackedObjectInfo)
org.eclipse.jgit.transport.BasePackPushConnection.noRepository()
org.eclipse.jgit.junit.TestRepository.amendRef(String)
org.eclipse.jgit.lib.AnyObjectId.hashCode()
org.eclipse.jgit.transport.RefSpecTest.testForceRemotesOrigin()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_8()
org.eclipse.jgit.api.Status.getConflicting()
org.eclipse.jgit.pgm.DescribeTest.testDescribeTag()
org.eclipse.jgit.api.TransportCommand.setCredentialsProvider(CredentialsProvider)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testPrintGroupCase5()
org.eclipse.jgit.internal.storage.pack.PackWriter.searchForReuse(ProgressMonitor,List)
org.eclipse.jgit.internal.ketch.StageBuilder.stage(List,ObjectId)
org.eclipse.jgit.util.io.StreamCopyThread.flush()
org.eclipse.jgit.lfs.server.s3.S3Repository.getUploadAction(AnyLongObjectId,long)
org.eclipse.jgit.transport.URIish.n2e(String)
org.eclipse.jgit.lib.Config.addIncludedConfig(List,ConfigLine,int)
org.eclipse.jgit.nls.TranslationBundle.load(Locale)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testTwoRangesInOneGroupCase4()
org.eclipse.jgit.util.FileUtil.setLastModified(File,long)
org.eclipse.jgit.lib.AsyncObjectSizeQueue.getSize()
org.eclipse.jgit.http.server.GitSmartHttpTools.isUploadPackSideBand(HttpServletRequest)
org.eclipse.jgit.internal.storage.file.PackReverseIndex.findObject(long)
org.eclipse.jgit.internal.storage.file.SimpleDataOutput.writeShort(int)
org.eclipse.jgit.transport.PushProcessTest.openFetch()
org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths()
org.eclipse.jgit.lib.ObjectIdRef.getTarget()
org.eclipse.jgit.transport.BaseReceivePack.validateCommands()
org.eclipse.jgit.revwalk.filter.OrRevFilter.clone()
org.eclipse.jgit.transport.SideBandOutputStreamTest.assertBuffer(String)
org.eclipse.jgit.util.RawCharSequence.charAt(int)
org.eclipse.jgit.util.sha1.SHA1.digest()
org.eclipse.jgit.notes.LeafBucket.iterator(AnyObjectId,ObjectReader)
org.eclipse.jgit.util.BlockList.get(int)
org.eclipse.jgit.patch.HunkHeader.skipLine(String,int,int)
org.eclipse.jgit.lib.ConfigTest.parse(String)
org.eclipse.jgit.diff.DiffEntry.modify(String)
org.eclipse.jgit.internal.storage.pack.ObjectToPack.getType()
org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.assertModes(String,FileMode,TreeWalk)
org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob()
org.eclipse.jgit.internal.ketch.Round.getSystem()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testInversedGroupCase2()
org.eclipse.jgit.lib.RepositoryCache.getRegisteredKeys()
org.eclipse.jgit.events.WorkingTreeModifiedEvent.dispatch(WorkingTreeModifiedListener)
org.eclipse.jgit.transport.OpenSshConfig.toString()
org.eclipse.jgit.util.io.TeeInputStream.skipBuffer()
org.eclipse.jgit.internal.storage.dfs.DfsRepository.exists()
org.eclipse.jgit.util.FS_Win32.setExecute(File,boolean)
org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedObjects_onlyExpiredPruned()
org.eclipse.jgit.treewalk.TreeWalk.setAttributesNodeProvider(AttributesNodeProvider)
org.eclipse.jgit.internal.storage.file.UnpackedObject.parse(byte,AnyObjectId)
org.eclipse.jgit.lib.EmptyProgressMonitor.beginTask(String,int)
org.eclipse.jgit.patch.EGitPatchHistoryTest.dump(byte)
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog()
org.eclipse.jgit.pgm.Show.dstPrefix(String)
org.eclipse.jgit.util.TemporaryBuffer.nextBlock()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeModeNotSupportedMode2()
org.eclipse.jgit.junit.TestRepository.get(RevTree,String)
org.eclipse.jgit.lfs.server.s3.SignerV4.canonicalizeHeaderString(Map)
org.eclipse.jgit.lib.ConfigLine.toString()
org.eclipse.jgit.util.ReadLinesTest.testReadLines_mixed()
org.eclipse.jgit.revwalk.filter.MessageRevFilter.textFor(RevCommit)
org.eclipse.jgit.internal.storage.reftable.EmptyLogCursor.getRefName()
org.eclipse.jgit.lib.AbbreviatedObjectId.hashCode()
org.eclipse.jgit.treewalk.WorkingTreeIterator.idSubmodule(Entry)
org.eclipse.jgit.transport.http.JDKHttpConnection.connect()
org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_4096()
org.eclipse.jgit.lib.IndexDiff.getAdded()
org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner.scan(byte,int)
org.eclipse.jgit.util.io.CountingOutputStream.close()
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparerTest.testNextSelectionDistanceForActiveBranch()
org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned()
org.eclipse.jgit.internal.storage.pack.PackWriter.estimateBytesUsed()
org.eclipse.jgit.lib.TreeFormatter.append(byte,int,int,FileMode,byte,int)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testManySolutionsCase1()
org.eclipse.jgit.pgm.Blame.path(int)
org.eclipse.jgit.transport.UploadPack.getAdvertisedRefs()
org.eclipse.jgit.revwalk.filter.AuthorRevFilter.textFor(RevCommit)
org.eclipse.jgit.http.server.glue.UrlPipeline.getServletName()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.iterator()
org.eclipse.jgit.awtui.AWTPlotRenderer.drawCommitDot(int,int,int,int)
org.eclipse.jgit.lib.TextProgressMonitor.onEndTask(String,int,int,int)
org.eclipse.jgit.internal.storage.file.WindowCursor.newReader()
org.eclipse.jgit.lib.ObjectId.zeroId()
org.eclipse.jgit.internal.storage.pack.PackWriter.getTimeTotal()
org.eclipse.jgit.lib.Repository.writeHeadsFile(List,String)
org.eclipse.jgit.internal.storage.file.PackFile.onOpenPack()
org.eclipse.jgit.revwalk.ObjectWalkFilterTest.resolve(String)
org.eclipse.jgit.lib.ValidRefNameTest.testNormalizeWithUnicode()
org.eclipse.jgit.merge.MergeFormatterPass.writeln(String)
org.eclipse.jgit.patch.CombinedFileHeader.getOldId(int)
org.eclipse.jgit.lfs.lib.AnyLongObjectId.hashCode()
org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.delete(File)
org.eclipse.jgit.revwalk.RevTagParseTest.testParse_NoMessage()
org.eclipse.jgit.internal.storage.pack.DeltaWindow.finish()
org.eclipse.jgit.junit.http.HttpTestCase.loose(URIish,AnyObjectId)
org.eclipse.jgit.internal.storage.file.GcLog.unlock()
org.eclipse.jgit.transport.RefSpec.toString()
org.eclipse.jgit.treewalk.WorkingTreeIterator.idBufferBlob(Entry)
org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest.assertQuote(String,String)
org.eclipse.jgit.transport.AmazonS3.list()
org.eclipse.jgit.attributes.AttributesRule.parseAttributes(String)
org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree(IgnoreSubmoduleMode)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testAlnumGroupCase1()
org.eclipse.jgit.util.GitDateFormatter.formatDate(PersonIdent)
org.eclipse.jgit.revwalk.RevBlob.parseBody(RevWalk)
org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.getStreamRatio()
org.eclipse.jgit.treewalk.TreeWalk.getFilterCommandDefinition(String,String)
org.eclipse.jgit.transport.BaseReceivePack.getReceivedPackStatistics()
org.eclipse.jgit.revplot.AbstractPlotRendererTest.drawLine(Object,int,int,int,int,int)
org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFindAttributesWhenSecond()
org.eclipse.jgit.api.TagCommand.setAnnotated(boolean)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packHeads(ProgressMonitor)
org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.tryLock(boolean)
org.eclipse.jgit.diff.SimilarityRenameDetector.isTableOverflow()
org.eclipse.jgit.revwalk.filter.AndRevFilter.create(RevFilter,RevFilter)
org.eclipse.jgit.diff.DiffFormatter.getRenameDetector()
org.eclipse.jgit.diff.DiffFormatterReflowTest.assertFormatted(String)
org.eclipse.jgit.attributes.Attributes.containsKey(String)
org.eclipse.jgit.pgm.debug.LfsStore.checkOptions()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSimpleStarCase0()
org.eclipse.jgit.junit.http.AppServer.doStart()
org.eclipse.jgit.lfs.lib.AnyLongObjectId.formatHexChar(char,int,long)
org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.isUnpacked(AnyObjectId)
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockTo()
org.eclipse.jgit.transport.PacketLineInTest.testReadACK_ACK1()
org.eclipse.jgit.merge.ResolveMerger.getInCoreLimit(Config)
org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits()
org.eclipse.jgit.util.PathsTest.testStripTrailingSeparator()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e()
org.eclipse.jgit.lib.Repository.shortenRefName(String)
org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithBug_SubButNoBody()
org.eclipse.jgit.pgm.ArchiveTest.testTarWithLongFilename()
org.eclipse.jgit.transport.URIish.format(boolean,boolean)
org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory()
org.eclipse.jgit.lib.ConfigSnapshot.sorted()
org.eclipse.jgit.dircache.DirCacheEntry.getPathString()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_15b()
org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.autoAdd()
org.eclipse.jgit.api.errors.PatchFormatException.getErrors()
org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes()
org.eclipse.jgit.lfs.lib.LongObjectIdTest.testSetByte()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderUntracked()
org.eclipse.jgit.internal.storage.file.ObjectDirectory.getLooseSizeFromSelfOrAlternate(WindowCursor,AnyObjectId,Set)
org.eclipse.jgit.internal.storage.dfs.DfsInserter.index(OutputStream,byte,List)
org.eclipse.jgit.submodule.SubmoduleWalkTest.bareRepositoryWithNoSubmodules()
org.eclipse.jgit.dircache.DirCacheEntry.getRawPath()
org.eclipse.jgit.notes.LeafBucket.shouldSplit()
org.eclipse.jgit.awtui.CommitGraphPane.configureRowHeight()
org.eclipse.jgit.transport.OpenSshConfig.isHostMatch(String,String)
org.eclipse.jgit.lfs.internal.AtomicObjectOutputStream.getId()
org.eclipse.jgit.util.LongList.grow()
org.eclipse.jgit.internal.fsck.FsckPackParser.onStoreStream(byte,int,int)
org.eclipse.jgit.revwalk.RevWalk.getTreeFilter()
org.eclipse.jgit.internal.fsck.FsckPackParser.readDatabase(byte,int,int)
org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits()
org.eclipse.jgit.api.TagCommand.isAnnotated()
org.eclipse.jgit.api.CommitCommand.setAllowEmpty(boolean)
org.eclipse.jgit.transport.URIishTest.testGitWithUserHome()
org.eclipse.jgit.http.server.resolver.DefaultReceivePackFactory.toPersonIdent(HttpServletRequest,String)
org.eclipse.jgit.transport.BasePackFetchConnection.fetch(ProgressMonitor,Collection,Set,OutputStream)
org.eclipse.jgit.transport.SshTransport.setSshSessionFactory(SshSessionFactory)
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.finish()
org.eclipse.jgit.notes.NoteMapMerger.nonNotes(InMemoryNoteBucket)
org.eclipse.jgit.internal.storage.pack.PackWriter.setUseCachedPacks(boolean)
org.eclipse.jgit.junit.Assert.assertEquals(boolean,boolean)
org.eclipse.jgit.http.test.SmartClientSmartServerTest.testInitialClone_RedirectTooOften()
org.eclipse.jgit.http.test.SmartClientSmartServerTest.testInitialClone_RedirectForbidden()
org.eclipse.jgit.api.CloneCommand.cleanup()
org.eclipse.jgit.transport.Transport.registerByService()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c()
org.eclipse.jgit.storage.pack.PackConfig.setBitmapInactiveBranchAgeInDays(int)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleWildCardCase2()
org.eclipse.jgit.api.AddCommandTest.discoverGitExe()
org.eclipse.jgit.transport.http.JDKHttpConnection.setInstanceFollowRedirects(boolean)
org.eclipse.jgit.merge.StrategyOneSided.newMerger(Repository,boolean)
org.eclipse.jgit.util.IntListTest.testAdd_LargeGroup()
org.eclipse.jgit.transport.WalkEncryptionTest.cryptoCipherListTrans()
org.eclipse.jgit.internal.ketch.ReplicaSnapshot.getRetryAt()
org.eclipse.jgit.api.ListBranchCommand.call()
org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.applyUpdates(RevWalk,RefList,List)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testUpperGroupCase1()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_a()
org.eclipse.jgit.gitrepo.ManifestParserTest.testNormalizeEmptyPath()
org.eclipse.jgit.util.time.ProposedTimestamp.millis()
org.eclipse.jgit.util.FS.exists(File)
org.eclipse.jgit.api.EolRepositoryTest.collectRepositoryState()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.writeFileIgnored()
org.eclipse.jgit.util.FileUtil.readSymlink(File)
org.eclipse.jgit.revwalk.ObjectWalk.parseMode(byte,int,int,TreeVisit)
org.eclipse.jgit.lfs.internal.AtomicObjectOutputStream.write(byte)
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.nextSpan(int)
org.eclipse.jgit.util.LongList.clear()
org.eclipse.jgit.api.ListNotesCommand.call()
org.eclipse.jgit.internal.storage.reftable.ReftableTest.oneIdRef()
org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeCustom(String,String,String)
org.eclipse.jgit.revwalk.FIFORevQueue.unpop(RevCommit)
org.eclipse.jgit.patch.FileHeader.parseTraditionalHeaders(int,int)
org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_16384()
org.eclipse.jgit.revwalk.FooterLineTest.testNoFooters_OneLineBodyNoLF()
org.eclipse.jgit.http.server.GitServlet.setAsIsFileService(AsIsFileService)
org.eclipse.jgit.revwalk.RevTag.parseCanonical(RevWalk,byte)
org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees(MergeStrategy)
org.eclipse.jgit.ignore.FastIgnoreRuleTest.testAsterisk()
org.eclipse.jgit.pgm.CLIGitCommand.run(String)
org.eclipse.jgit.transport.PushCertificateStore.get(String)
org.eclipse.jgit.diff.DiffAlgorithm.coverEdit(S,S)
org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooSmallLimit()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testFilePathCase0()
org.eclipse.jgit.fnmatch.FileNameMatcher.indexOfUnescaped(String,char,int)
org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict1()
org.eclipse.jgit.internal.storage.pack.PackWriter.setUseBitmaps(boolean)
org.eclipse.jgit.archive.TarFormat.hashCode()
org.eclipse.jgit.lib.ObjectIdSubclassMap.add(Q)
org.eclipse.jgit.internal.ketch.KetchReplica.afterPush(Repository,ReplicaPushRequest)
org.eclipse.jgit.internal.storage.dfs.DfsInserter.getShallowCommits()
org.eclipse.jgit.lib.ConfigTest.testGetEnum()
org.eclipse.jgit.internal.storage.file.DeltaBaseCache.get(PackFile,long)
org.eclipse.jgit.attributes.AttributesProvider.getAttributes()
org.eclipse.jgit.diff.EditTest.testNotEquals1()
org.eclipse.jgit.http.test.RegexPipelineTest.doGet(HttpServletRequest,HttpServletResponse)
org.eclipse.jgit.util.FileUtils.mkdir(File)
org.eclipse.jgit.api.PushCommand.setThin(boolean)
org.eclipse.jgit.transport.TransportSftp.getSchemes()
org.eclipse.jgit.util.RefMap.toRefName(String)
org.eclipse.jgit.merge.ResolveMerger.mergeImpl()
org.eclipse.jgit.api.PullResult.isSuccessful()
org.eclipse.jgit.dircache.DirCacheTree.slash(byte,int)
org.eclipse.jgit.attributes.AttributesNodeTest.testTabSeparator()
org.eclipse.jgit.revwalk.RevTagParseTest.testParse_ShortLineOnlyEmbeddedLF()
org.eclipse.jgit.lib.RepositoryCache.open(boolean)
org.eclipse.jgit.util.sha1.SHA1.init()
org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.getLastModified()
org.eclipse.jgit.lib.DirCacheCheckoutTest.assertRemoved(String)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testBlankGroupCase0()
org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit()
org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir()
org.eclipse.jgit.lib.ObjectIdOwnerMapTest.id(int)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMixedGroupCase1()
org.eclipse.jgit.api.AddCommand.addFilepattern(String)
org.eclipse.jgit.api.AddCommandTest.testReplaceFileByPartOfDirectory()
org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.getReaderOptions()
org.eclipse.jgit.pgm.CLIGitCommand.init(TextBuiltin)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testMixedGroupCase7()
org.eclipse.jgit.junit.MockSystemReader.isOutdated()
org.eclipse.jgit.api.RebaseCommand.readFile(File,String)
org.eclipse.jgit.internal.storage.pack.PackOutputStream.getDigest()
org.eclipse.jgit.internal.storage.pack.PackWriter.setReuseDeltaCommits(boolean)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testFolderFileAndContentConflicts()
org.eclipse.jgit.blame.BlameResult.hasSourceData(int)
org.eclipse.jgit.internal.storage.file.WindowCursor.resolve(AbbreviatedObjectId)
org.eclipse.jgit.pgm.Status.run()
org.eclipse.jgit.pgm.debug.VerifyReftable.byId(List,ReftableReader)
org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_Length130CopyOk()
org.eclipse.jgit.patch.FileHeader.getStartOffset()
org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchNoConfigValues()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testNotEquals()
org.eclipse.jgit.util.RawParseUtils.parseLongBase10(byte,int,MutableInteger)
org.eclipse.jgit.revplot.PlotCommitListTest.testBug300282_1()
org.eclipse.jgit.lib.BatchRefUpdate.execute(RevWalk,ProgressMonitor)
org.eclipse.jgit.internal.storage.pack.DeltaCache.credit(int)
org.eclipse.jgit.pgm.debug.RebuildRefTree.run()
org.eclipse.jgit.http.test.SmartClientSmartServerSslTest.init(FilterConfig)
org.eclipse.jgit.lib.AbbreviatedObjectId.fromString(String)
org.eclipse.jgit.lib.TypedConfigGetter.getTimeUnit(Config,String,String,String,long,TimeUnit)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_d()
org.eclipse.jgit.submodule.SubmoduleWalk.forPath(Repository,AnyObjectId,String)
org.eclipse.jgit.util.io.AutoLFInputStream.read()
org.eclipse.jgit.revplot.AbstractPlotRendererTest.merge(ObjectId)
org.eclipse.jgit.pgm.AddTest.testAddUsage()
org.eclipse.jgit.diff.Edit.hashCode()
org.eclipse.jgit.diff.SimilarityRenameDetector.getLeftOverSources()
org.eclipse.jgit.transport.http.apache.HttpClientConnection.getURL()
org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.getMatchingPaths(String,ObjectId)
org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsInherit()
org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryPathBuffer()
org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubject_NonFooterAndBugAndSob()
org.eclipse.jgit.lib.PersonIdent.getEmailAddress()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testBlankGroupCase4()
org.eclipse.jgit.notes.LeafBucket.append(Note)
org.eclipse.jgit.lib.ObjectReader.setStreamFileThreshold(int)
org.eclipse.jgit.transport.PacketLineIn.readStringRaw()
org.eclipse.jgit.internal.storage.pack.PackWriter.beginPhase(PackingPhase,ProgressMonitor,long)
org.eclipse.jgit.diff.HistogramDiff.setFallbackAlgorithm(DiffAlgorithm)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_d()
org.eclipse.jgit.treewalk.filter.TreeFilter.clone()
org.eclipse.jgit.lib.BatchRefUpdate.isRefLogDisabled()
org.eclipse.jgit.transport.Transport.isFetchThin()
org.eclipse.jgit.api.PushCommandTest.testPushAfterGC()
org.eclipse.jgit.diff.ContentSource.isLarge()
org.eclipse.jgit.lfs.server.LfsProtocolServlet.getLargeFileRepository(LfsRequest,String)
org.eclipse.jgit.internal.storage.file.PackIndexWriter.oldestPossibleFormat(List)
org.eclipse.jgit.patch.CombinedFileHeader.parseGitHeaders(int,int)
org.eclipse.jgit.http.test.HttpClientTests.testRepositoryNotFound_Smart()
org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.reftableComparator()
org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsOneAtATime()
org.eclipse.jgit.lib.Repository.writeCherryPickHead(ObjectId)
org.eclipse.jgit.util.io.StreamCopyThread.halt()
org.eclipse.jgit.revwalk.RevWalk.getRewriteParents()
org.eclipse.jgit.patch.BinaryHunk.getSize()
org.eclipse.jgit.internal.storage.pack.PackWriter.cutDeltaChains(BlockList)
org.eclipse.jgit.transport.BaseReceivePack.isAllowDeletes()
org.eclipse.jgit.transport.PacketLineIn.readString()
org.eclipse.jgit.api.RevertCommand.include(AnyObjectId)
org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test6()
org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_UntrackedFile()
org.eclipse.jgit.lib.ObjectInserter.getCreatedFromInserter()
org.eclipse.jgit.ignore.internal.PathMatcher.isSimplePathWithSegments(String)
org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree()
org.eclipse.jgit.util.RefMapTest.testPut_CollapseResolved()
org.eclipse.jgit.transport.UserAgent.get()
org.eclipse.jgit.transport.UsernamePasswordCredentialsProvider.isInteractive()
org.eclipse.jgit.blame.BlameGenerator.isRename(DiffEntry)
org.eclipse.jgit.internal.storage.file.FileRepository.load()
org.eclipse.jgit.util.Base64.decode(String)
org.eclipse.jgit.internal.storage.pack.IntSet.add(int)
org.eclipse.jgit.transport.WalkEncryption.decrypt(InputStream)
org.eclipse.jgit.patch.HunkHeader.extractFileLines(StringBuilder,String,int)
org.eclipse.jgit.attributes.Attributes.isUnset(String)
org.eclipse.jgit.transport.http.JDKHttpConnection.getContentType()
org.eclipse.jgit.junit.TestRepository.prunePacked(ObjectDirectory)
org.eclipse.jgit.api.RemoteAddCommand.setName(String)
org.eclipse.jgit.revwalk.BlockObjQueue.clear()
org.eclipse.jgit.ant.tasks.GitCloneTask.execute()
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getBlockSize()
org.eclipse.jgit.internal.storage.reftable.ReftableTest.ref(String,int)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.createEmptyFolderUntracked()
org.eclipse.jgit.transport.PushCertificate.getPushee()
org.eclipse.jgit.lib.ObjectInserter.delegate()
org.eclipse.jgit.internal.ketch.KetchSystem.getTxnStage()
org.eclipse.jgit.util.RefMapTest.setUp()
org.eclipse.jgit.lib.CheckoutEntry.getFromBranch()
org.eclipse.jgit.util.io.TeeInputStream.close()
org.eclipse.jgit.internal.storage.file.RefDirectory.fireRefsChanged()
org.eclipse.jgit.internal.storage.pack.IntSetTest.testAdd()
org.eclipse.jgit.internal.storage.pack.PackWriter.getTimeSearchingForSizes()
org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.getBlockSize()
org.eclipse.jgit.pgm.Clone.requiresRepository()
org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.assertMatches(Set,TreeWalk)
org.eclipse.jgit.diff.DiffFormatterTest.tearDown()
org.eclipse.jgit.transport.FetchConnection.fetch(ProgressMonitor,Collection,Set)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase2()
org.eclipse.jgit.treewalk.filter.TreeFilterTest.testALL_ShouldNotBeRecursive()
org.eclipse.jgit.api.HugeFileTest.measure(String)
org.eclipse.jgit.api.CommitCommand.setNoVerify(boolean)
org.eclipse.jgit.internal.storage.dfs.DfsPackParser.readDatabase(byte,int,int)
org.eclipse.jgit.lfs.lib.LongObjectId.fromString(byte,int)
org.eclipse.jgit.transport.Transport.push(ProgressMonitor,Collection)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.insertOneObject(File,ObjectId,boolean)
org.eclipse.jgit.attributes.TreeWalkAttributeTest.asSet(Collection)
org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits(boolean)
org.eclipse.jgit.indexdiff.IndexDiffWithSymlinkTest.readStream(InputStream)
org.eclipse.jgit.transport.SideBandOutputStreamTest.flush()
org.eclipse.jgit.transport.Transport.findRemoteRefUpdatesFor(Repository,Collection,Collection)
org.eclipse.jgit.transport.TransportSftp.newSftp()
org.eclipse.jgit.attributes.AttributesHandlerTest.testRelativePaths()
org.eclipse.jgit.api.PullCommand.getRebaseMode(String,Config)
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testRefsChangedStackOverflow()
org.eclipse.jgit.util.SystemReader.getClock()
org.eclipse.jgit.transport.OperationResult.getTrackingRefUpdates()
org.eclipse.jgit.transport.RemoteConfig.addPushURI(URIish)
org.eclipse.jgit.revwalk.filter.CommitTimeRevFilter.include(RevWalk,RevCommit)
org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_flush_Timeout()
org.eclipse.jgit.util.NBTest.testDecodeUInt32()
org.eclipse.jgit.lib.T0001_PersonIdentTest.nullForNameShouldThrowIllegalArgumentException()
org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testEmpty()
org.eclipse.jgit.errors.TranslationBundleException.getLocale()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testRacyNoReusePrefersSmaller()
org.eclipse.jgit.util.RawParseUtils.parsePersonIdentOnly(byte,int)
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.setupTipCommitBitmaps(RevWalk,int,Set)
org.eclipse.jgit.internal.storage.file.FileSnapshotTest.createFile(String)
org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags()
org.eclipse.jgit.internal.ketch.KetchLeader.commitAsync(KetchReplica)
org.eclipse.jgit.transport.WalkFetchConnection.markLocalRefsComplete(Set)
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testFromStringWrongLength()
org.eclipse.jgit.util.GitDateFormatterTest.setUp()
org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.assertIteration(FileMode,String)
org.eclipse.jgit.awtui.CommitGraphPane.createDefaultDataModel()
org.eclipse.jgit.patch.FileHeader.parseGitHeaders(int,int)
org.eclipse.jgit.lib.Repository.getGitwebDescription()
org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext100()
org.eclipse.jgit.diff.RenameDetector.calculateModifyScore(ContentSource,Pair,DiffEntry)
org.eclipse.jgit.transport.PackParser.buffer()
org.eclipse.jgit.util.HookTest.testFindHook()
org.eclipse.jgit.revwalk.PendingGenerator.next()
org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch()
org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(Iterator)
org.eclipse.jgit.internal.storage.file.WindowCache.getOpenBytes()
org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordRemoteBranch()
org.eclipse.jgit.lfs.lib.LongObjectId.fromRaw(long,int)
org.eclipse.jgit.lib.ValidRefNameTest.testNoMagicRefCharacters()
org.eclipse.jgit.transport.RefSpec.checkValid(String)
org.eclipse.jgit.util.io.UnionInputStream.close()
org.eclipse.jgit.internal.storage.file.PackWriterTest.tearDown()
org.eclipse.jgit.internal.storage.reftable.BlockReader.readInt16()
org.eclipse.jgit.lib.ObjectId.fromString(String)
org.eclipse.jgit.pgm.StatusTest.assertAfterInitialCommit(String,boolean,boolean)
org.eclipse.jgit.junit.TestRepository.branch(String)
org.eclipse.jgit.transport.AmazonS3.error(String,String,HttpURLConnection)
org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_OneRenameOneModify()
org.eclipse.jgit.internal.storage.reftable.MergedReftable.getRefName()
org.eclipse.jgit.awtui.AwtCredentialsProvider.install()
org.eclipse.jgit.lib.RefUpdate.getRefLogIdent()
org.eclipse.jgit.events.ListenerHandle.toString()
org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_PackedGitWindowSize_512()
org.eclipse.jgit.util.FileUtilsTest.testDeleteNotEmptyTreeNotOk()
org.eclipse.jgit.lib.BatchRefUpdate.getPrefixes(String)
org.eclipse.jgit.transport.OpenSshConfig.dequote(String)
org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.resolve(Set,AbbreviatedObjectId)
org.eclipse.jgit.revwalk.RevTagParseTest.testTagBlob()
org.eclipse.jgit.transport.FetchProcess.deleteStaleTrackingRefs(FetchResult,BatchRefUpdate)
org.eclipse.jgit.transport.HttpAuthMethod.method(String)
org.eclipse.jgit.api.AddCommandTest.newInstance()
org.eclipse.jgit.transport.PackParser.readPackFooter()
org.eclipse.jgit.pgm.ArchiveTest.testTarWithSubdir()
org.eclipse.jgit.pgm.MergeTest.testMerge()
org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwice()
org.eclipse.jgit.transport.BaseReceivePack.fatalError(String)
org.eclipse.jgit.lib.ObjectIdOwnerMap.found(V)
org.eclipse.jgit.lib.RefUpdate.isRefLogIncludingResult()
org.eclipse.jgit.revwalk.filter.AndRevFilter.clone()
org.eclipse.jgit.diff.ContentSource.size(String,ObjectId)
org.eclipse.jgit.pgm.RemoteTest.testAdd()
org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeAndClean()
org.eclipse.jgit.internal.storage.file.PackIndexV1.next()
org.eclipse.jgit.junit.http.TestRequestLog.log(Request,Response)
org.eclipse.jgit.dircache.DirCacheIteratorTest.testEmptyTree_NoTreeWalk()
org.eclipse.jgit.transport.BasePackConnection.readAdvertisedRefs()
org.eclipse.jgit.transport.PackParser.getObject(int)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommitted()
org.eclipse.jgit.storage.pack.PackConfig.setCutDeltaChains(boolean)
org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.readString(ObjectLoader)
org.eclipse.jgit.internal.storage.dfs.DfsInserter.openStream()
org.eclipse.jgit.util.GitDateParser.parse_relative(String,Calendar)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testFilePathCase3()
org.eclipse.jgit.internal.storage.file.AlternatesTest.testAlternateCyclic2()
org.eclipse.jgit.lib.DefaultTypedConfigGetter.getEnum(Config,T,String,String,String,T)
org.eclipse.jgit.lfs.lib.LfsPointerFilterTest.testNestedRegularFiles()
org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryCustomRemote()
org.eclipse.jgit.treewalk.FileTreeIteratorTest.testGetEntryContentLength()
org.eclipse.jgit.transport.PushCertificateStore.write()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testDigitGroupCase0()
org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.count(RevCommit,RevCommit)
org.eclipse.jgit.http.server.ObjectFileServlet.objects(HttpServletRequest)
org.eclipse.jgit.junit.TestRepositoryTest.commitToUnbornHead()
org.eclipse.jgit.lib.IndexDiff.setWorkingTreeItFactory(WorkingTreeIteratorFactory)
org.eclipse.jgit.http.test.SmartClientSmartServerTest.testInitialClone_Redirect303Small()
org.eclipse.jgit.internal.storage.dfs.DfsInserter.newReader()
org.eclipse.jgit.internal.storage.file.GC.isTag(Ref)
org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddIfAbsent()
org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.writeVarint(long)
org.eclipse.jgit.api.Git.apply()
org.eclipse.jgit.revwalk.AbstractRevQueue.add(RevCommit)
org.eclipse.jgit.lib.UserConfig.getAuthorEmail()
org.eclipse.jgit.pgm.CLIGitCommand.main(String)
org.eclipse.jgit.transport.BaseReceivePack.setTimeout(int)
org.eclipse.jgit.lib.IndexDiff.getIgnoredNotInIndex()
org.eclipse.jgit.internal.storage.file.StoredBitmapTest.testGetBitmapWithoutXor()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoObject2()
org.eclipse.jgit.transport.BasePackPushConnection.writeCommands(Collection,ProgressMonitor,OutputStream)
org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.shouldHaveIndex(IndexBuilder)
org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun()
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.writeBitmaps(PackBitmapIndexBuilder)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.getPackedSizeFromSelfOrAlternate(WindowCursor,AnyObjectId,Set)
org.eclipse.jgit.patch.FileHeaderTest.dqGitLine(String)
org.eclipse.jgit.transport.PackedObjectInfo.getOffset()
org.eclipse.jgit.lfs.lib.LongObjectId.fromString(String)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testXDigitGroupCase3()
org.eclipse.jgit.hooks.CommitMsgHook.setCommitMessage(String)
org.eclipse.jgit.lib.BaseRepositoryBuilder.getSymRef(File,File,FS)
org.eclipse.jgit.pgm.Version.requiresRepository()
org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIfRootDoesNotExist()
org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete()
org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testInitialize_TogglePostOrder()
org.eclipse.jgit.transport.SshSessionFactory.getInstance()
org.eclipse.jgit.http.server.InfoPacksServlet.packList(HttpServletRequest)
org.eclipse.jgit.events.ListenerList.addRefsChangedListener(RefsChangedListener)
org.eclipse.jgit.patch.GetTextTest.parseTestPatchFile()
org.eclipse.jgit.transport.URIishTest.testFileWithUserHome()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames8()
org.eclipse.jgit.transport.Transport.setFetchThin(boolean)
org.eclipse.jgit.attributes.AttributesNodeProvider.getInfoAttributesNode()
org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithSpacesBeforeId()
org.eclipse.jgit.treewalk.AbstractTreeIteratorTest.testEnsurePathCapacityFastCase()
org.eclipse.jgit.api.AddCommandTest.canExecute(File)
org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.getAlternateId()
org.eclipse.jgit.diff.RawTextTest.testComparatorReduceCommonStartEnd()
org.eclipse.jgit.internal.storage.file.LockFile.getCommitLastModified()
org.eclipse.jgit.api.MergeCommandTest.testContentMerge()
org.eclipse.jgit.api.StashCreateCommand.setIncludeUntracked(boolean)
org.eclipse.jgit.junit.TestRepository.ident(PersonIdent)
org.eclipse.jgit.lib.BatchRefUpdate.getPushCertificate()
org.eclipse.jgit.internal.storage.pack.GcCommitSelectionTest.testBitmapSpansWithMerges()
org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.setUp()
org.eclipse.jgit.internal.storage.file.ReflogWriter.isLogAllRefUpdates()
org.eclipse.jgit.merge.RecursiveMergerTest.setIndex(ObjectId,String)
org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testOneEntry_Seek1IsEOF()
org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict()
org.eclipse.jgit.pgm.ShowRef.getSortedRefs()
org.eclipse.jgit.api.GarbageCollectCommandTest.setUp()
org.eclipse.jgit.lib.RefTest.testReadLoosePackedRef()
org.eclipse.jgit.transport.UploadPack.setRefFilter(RefFilter)
org.eclipse.jgit.diff.MyersDiff.forceKIntoRange(int)
org.eclipse.jgit.treewalk.filter.OrTreeFilter.include(TreeWalk)
org.eclipse.jgit.revwalk.filter.SubStringRevFilter.safe(String)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testUpperGroupCase5()
org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.scanLoose()
org.eclipse.jgit.gitrepo.internal.RepoText.get()
org.eclipse.jgit.transport.TransportLocal.createUploadPack(Repository)
org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD()
org.eclipse.jgit.lib.RefUpdate.isForceUpdate()
org.eclipse.jgit.internal.storage.file.GcOrphanFilesTest.bitmapAndIdxDeletedButPackNot()
org.eclipse.jgit.internal.storage.file.LocalCachedPack.getObjectCount()
org.eclipse.jgit.lib.RefUpdate.setPushCertificate(PushCertificate)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.writeFileAndCommit()
org.eclipse.jgit.transport.URIishTest.testPathSeparator()
org.eclipse.jgit.transport.TransportAmazonS3.getOptionalFields()
org.eclipse.jgit.util.RunExternalScriptTest.writeTempFile(String)
org.eclipse.jgit.pgm.Show.show(RevTree)
org.eclipse.jgit.storage.file.FileBasedConfig.notifyUponTransientChanges()
org.eclipse.jgit.lib.ThreadSafeProgressMonitor.startWorker()
org.eclipse.jgit.transport.WalkEncryptionTest.test_V1_Java7_GIT()
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack()
org.eclipse.jgit.internal.storage.file.PackIndexV1.getOffset(long)
org.eclipse.jgit.diff.AbstractDiffTestCase.testEdit_DeleteNearCommonCenter()
org.eclipse.jgit.transport.PackParser.checkObjectCollision()
org.eclipse.jgit.util.NB.compareUInt32(int,int)
org.eclipse.jgit.api.Git.stashDrop()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_d()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidCommitter()
org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles()
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.clearPackStats()
org.eclipse.jgit.lib.RepositoryCache.resolve(File,FS)
org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.testFindObjectWrongOffset()
org.eclipse.jgit.transport.WalkFetchConnection.processTag(RevObject)
org.eclipse.jgit.transport.AtomicPushTest.tearDown()
org.eclipse.jgit.transport.PackParser.isCheckObjectCollisions()
org.eclipse.jgit.util.io.TimeoutInputStreamTest.testTimeout_skip_Success()
org.eclipse.jgit.internal.storage.file.AbbreviationTest.toByteArray(ObjectId)
org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(String,Character,boolean)
org.eclipse.jgit.transport.ReceiveCommand.setResult(RefUpdate,Result)
org.eclipse.jgit.pgm.debug.RebuildCommitGraph.detachHead()
org.eclipse.jgit.internal.storage.dfs.DfsRepositoryDescription.hashCode()
org.eclipse.jgit.transport.http.apache.HttpClientConnection.connect()
org.eclipse.jgit.attributes.TreeWalkAttributeTest.testOverriding()
org.eclipse.jgit.blame.BlameResult.getResultPath()
org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag()
org.eclipse.jgit.patch.CombinedFileHeader.getScriptText(Charset)
org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddGrowsWithObjects()
org.eclipse.jgit.pgm.ArchiveTest.assertIsBzip2(File)
org.eclipse.jgit.internal.storage.dfs.DfsInserter.open(AnyObjectId,int)
org.eclipse.jgit.internal.storage.file.GcConcurrentTest.repackAndGetStats()
org.eclipse.jgit.attributes.Attributes.isUnspecified(String)
org.eclipse.jgit.pgm.Diff.noRenames(boolean)
org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate()
org.eclipse.jgit.internal.storage.file.PackWriterTest.compare(MutableEntry,MutableEntry)
org.eclipse.jgit.lib.Ref.isSymbolic()
org.eclipse.jgit.internal.storage.file.LockFile.waitForStatChange()
org.eclipse.jgit.revwalk.filter.NotRevFilter.requiresCommitBody()
org.eclipse.jgit.api.Git.status()
org.eclipse.jgit.transport.AbstractAdvertiseRefsHook.advertiseRefs(BaseReceivePack)
org.eclipse.jgit.api.RebaseCommand.autoStashApply()
org.eclipse.jgit.diff.DiffFormatter.assertHaveReader()
org.eclipse.jgit.merge.ResolveMerger.setCommitNames(String)
org.eclipse.jgit.revwalk.BlockRevQueue.isFull()
org.eclipse.jgit.util.FileUtils.rename(File,File)
org.eclipse.jgit.lib.ConfigTest.testTimeUnitNegative()
org.eclipse.jgit.api.CheckoutResult.getUndeletedList()
org.eclipse.jgit.internal.storage.file.LargePackedWholeObject.getType()
org.eclipse.jgit.patch.FileHeader.parseOldName(int,int)
org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_NoMode()
org.eclipse.jgit.lib.RacyGitTests.testIterator()
org.eclipse.jgit.transport.HMACSHA1NonceGeneratorTest.invalidFormat()
org.eclipse.jgit.transport.PushProcess.updateTrackingRefs()
org.eclipse.jgit.api.ArchiveCommand.registerFormat(String,Format)
org.eclipse.jgit.lib.BatchRefUpdate.addCommand(ReceiveCommand)
org.eclipse.jgit.internal.ketch.ReplicaPushRequest.done(Repository)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testDigitGroupCase1()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedComparedWithInitialCommit()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.refBlockSize()
org.eclipse.jgit.internal.storage.reftree.RefTree.resolve(ObjectReader,Ref,int)
org.eclipse.jgit.lib.MutableObjectId.clear()
org.eclipse.jgit.internal.storage.file.RefUpdateTest.tryRenameWhenLocked(String,String,String,String)
org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testHeadSymref()
org.eclipse.jgit.lib.ConfigSnapshot.compare2(String,String,String,String,String,String)
org.eclipse.jgit.dircache.DirCacheIterator.first()
org.eclipse.jgit.transport.HttpAuthMethod.authorize(String,String)
org.eclipse.jgit.treewalk.CanonicalTreeParser.eof()
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDot()
org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_NewFile()
org.eclipse.jgit.http.test.DumbClientDumbServerTest.testListRemote()
org.eclipse.jgit.pgm.CommandCatalog.all()
org.eclipse.jgit.storage.pack.PackStatistics.getTimeTotal()
org.eclipse.jgit.transport.WalkFetchConnection.didFetchTestConnectivity()
org.eclipse.jgit.lfs.server.fs.LfsServerTest.putContent(Path)
org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithRepository()
org.eclipse.jgit.pgm.DescribeTest.testDescribeCommitMultiMatch()
org.eclipse.jgit.transport.WalkEncryptionTest.isAlgorithmAllowed(String)
org.eclipse.jgit.internal.storage.dfs.DfsReader.getCurrent()
org.eclipse.jgit.diff.SimilarityRenameDetector.decodeFile(int)
org.eclipse.jgit.dircache.DirCacheTree.getNameString()
org.eclipse.jgit.internal.storage.file.GcConcurrentTest.repackAndUploadPack()
org.eclipse.jgit.internal.storage.file.WindowCache.scan(Entry,PackFile,long)
org.eclipse.jgit.util.RefListTest.toList(Ref)
org.eclipse.jgit.util.RelativeDateFormatterTest.testFormatMinutes()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate()
org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMixedNewlines()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testSupportsAtomic()
org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.exactRef(ObjectReader,String)
org.eclipse.jgit.lib.ObjectIdOwnerMap.add(Q)
org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation.getDeltaBase()
org.eclipse.jgit.api.CherryPickResult.getCherryPickedRefs()
org.eclipse.jgit.transport.ReceivedPackStatistics.getNumDeltaTag()
org.eclipse.jgit.transport.AtomicPushTest.pushNonAtomic()
org.eclipse.jgit.api.ApplyCommandTest.testNonASCII2()
org.eclipse.jgit.transport.TransportSftp.readRef(TreeMap,String,String)
org.eclipse.jgit.treewalk.AbstractTreeIterator.getName(byte,int)
org.eclipse.jgit.lib.Repository.simplify(String)
org.eclipse.jgit.lib.Repository.normalizeBranchName(String)
org.eclipse.jgit.ignore.IgnoreNodeTest.writeToString(String)
org.eclipse.jgit.api.ApplyCommandTest.testAddM1()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase5()
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getPackSource()
org.eclipse.jgit.diff.DiffConfig.getRenameLimit()
org.eclipse.jgit.transport.WalkEncryption.validateImpl(HttpURLConnection,String,String,String)
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoObject3()
org.eclipse.jgit.util.NBTest.testEncodeInt16()
org.eclipse.jgit.pgm.Tag.run()
org.eclipse.jgit.transport.BundleWriter.assume(RevCommit)
org.eclipse.jgit.lib.ConfigSnapshot.hasNext()
org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_incompleteAuthorAndCommitter()
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.idx(DfsReader)
org.eclipse.jgit.transport.URIish.hashCode()
org.eclipse.jgit.revwalk.RevWalk.hasRevSort(RevSort)
org.eclipse.jgit.transport.TransportBundleFile.openPush()
org.eclipse.jgit.lib.ConfigTest.testIncludeValuePathWithTilde()
org.eclipse.jgit.lib.Repository.newObjectReader()
org.eclipse.jgit.diff.RenameDetector.sameType(FileMode,FileMode)
org.eclipse.jgit.revwalk.MergeBaseGenerator.carryOntoHistoryInnerLoop(RevCommit,int)
org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_BatchModeYes()
org.eclipse.jgit.lib.RefDatabase.newBatchUpdate()
org.eclipse.jgit.lib.ObjectIdOwnerMap.addIfAbsent(Q)
org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test1()
org.eclipse.jgit.internal.ketch.ReplicaSnapshot.getCommitted()
org.eclipse.jgit.transport.TransportBundleFile.getName()
org.eclipse.jgit.internal.ketch.ReplicaSnapshot.getErrorMessage()
org.eclipse.jgit.util.SystemReader.setPlatformChecker()
org.eclipse.jgit.submodule.SubmoduleWalk.containsGitModulesFile(Repository)
org.eclipse.jgit.lib.BitmapIndex.addObject(AnyObjectId,int)
org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd()
org.eclipse.jgit.attributes.TreeWalkAttributeTest.writeGlobalAttributeFile(String,String)
org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.delete(String)
org.eclipse.jgit.attributes.CGitAttributesTest.testNestedMatchNot()
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig()
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test023_createCommitNonAnullii()
org.eclipse.jgit.internal.storage.file.ObjectDirectory.open(File)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.newInserter()
org.eclipse.jgit.util.io.IsolatedOutputStream.checkClosed()
org.eclipse.jgit.lib.RefUpdate.update()
org.eclipse.jgit.lib.RefTest.testResolvedNamesBranch()
org.eclipse.jgit.internal.storage.file.RefDirectory.pack(List)
org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack()
org.eclipse.jgit.treewalk.TreeWalk.forPath(Repository,String,AnyObjectId)
org.eclipse.jgit.revplot.PlotCommit.getLane()
org.eclipse.jgit.patch.CombinedHunkHeader.getFileHeader()
org.eclipse.jgit.treewalk.WorkingTreeOptions.getHideDotFiles()
org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddGetAndContains()
org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyToWriter()
org.eclipse.jgit.lib.ObjectStream.close()
org.eclipse.jgit.lib.Config.notifyUponTransientChanges()
org.eclipse.jgit.lib.ConfigTest.testUnsetSingleSection()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testNotEquals_SameLength()
org.eclipse.jgit.treewalk.AbstractTreeIterator.getNameLength()
org.eclipse.jgit.transport.UploadPack.upload(InputStream,OutputStream,OutputStream)
org.eclipse.jgit.util.GitDateParserBadlyFormattedTest.badlyFormattedWithoutRef()
org.eclipse.jgit.lfs.server.LfsProtocolServlet.isDownload()
org.eclipse.jgit.api.BlameCommandTest.join(String)
org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoOtherThanMaster()
org.eclipse.jgit.transport.RefSpecTest.invalidWhenOnlyDestinationWildcard()
org.eclipse.jgit.revwalk.RevCommit.getEncodingName()
org.eclipse.jgit.lib.IndexDiff.isEntryGitLink(AbstractTreeIterator)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard()
org.eclipse.jgit.lib.Config.getString(String,String,String)
org.eclipse.jgit.notes.NoteMapMergerTest.countNonNotes(NoteMap)
org.eclipse.jgit.transport.RemoteConfig.update(Config)
org.eclipse.jgit.util.FS_Win32.supportsExecute()
org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.insert(byte)
org.eclipse.jgit.http.server.GitSmartHttpTools.isUploadPack(String)
org.eclipse.jgit.treewalk.filter.InterIndexDiffFilter.include(TreeWalk)
org.eclipse.jgit.storage.pack.PackConfig.isBuildBitmaps()
org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_a()
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteWithoutHead()
org.eclipse.jgit.api.LogCommand.addPath(String)
org.eclipse.jgit.internal.ketch.KetchLeader.initialize()
org.eclipse.jgit.patch.Patch.readFully(InputStream)
org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile()
org.eclipse.jgit.pgm.debug.DiffAlgorithms.requiresRepository()
org.eclipse.jgit.api.PushCommand.isThin()
org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy()
org.eclipse.jgit.lib.ObjectIdSet.contains(AnyObjectId)
org.eclipse.jgit.util.RefListTest.testPutReplaceEntry()
org.eclipse.jgit.transport.ReceiveCommand.getType()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testExactRef_IgnoresGarbageRef()
org.eclipse.jgit.ignore.IgnoreNodeTest.testEmptyIgnoreRules()
org.eclipse.jgit.notes.NoteMap.set(AnyObjectId,ObjectId)
org.eclipse.jgit.ant.tasks.GitCloneTaskTest.shouldCreateABareCloneOfAValidGitRepository()
org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.apply(DirCacheEntry)
org.eclipse.jgit.pgm.opt.RevTreeHandler.parseArguments(Parameters)
org.eclipse.jgit.internal.storage.dfs.DfsRepositoryDescription.equals(Object)
org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameModeChange()
org.eclipse.jgit.util.FS_Win32.getAttributes(File)
org.eclipse.jgit.ant.tasks.GitCheckoutTask.setBranch(String)
org.eclipse.jgit.transport.PushProcess.getPushOptions()
org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter0()
org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoDestination()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testTwoRangesInOneGroupCase5()
org.eclipse.jgit.internal.storage.file.PackFileTest.testConfigurableStreamFileThreshold()
org.eclipse.jgit.lib.RefUpdate.setExpectedOldObjectId(AnyObjectId)
org.eclipse.jgit.revwalk.BlockRevQueue.pop()
org.eclipse.jgit.internal.storage.dfs.DfsPackFile.resolve(DfsReader,Set,AbbreviatedObjectId,int)
org.eclipse.jgit.lib.ObjectInserter.idFor(int,byte,int,int)
org.eclipse.jgit.internal.storage.file.PackIndexV1.findCRC32(AnyObjectId)
org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors_LongHistory()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptSymbolicReference()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.test2AlphaGroupsCase0()
org.eclipse.jgit.lib.CommitBuilder.build()
org.eclipse.jgit.internal.storage.reftable.ReftableReader.readHeaderOrFooter(long,int)
org.eclipse.jgit.attributes.TreeWalkAttributeTest.beginWalk()
org.eclipse.jgit.revwalk.RevWalk.getObjectReader()
org.eclipse.jgit.pgm.StatusTest.checkoutMasterBranch(Git)
org.eclipse.jgit.api.RebaseCommand.isInteractive()
org.eclipse.jgit.junit.TestRepository.commit(RevTree,RevCommit)
org.eclipse.jgit.http.server.glue.UrlPipeline.destroy(Set)
org.eclipse.jgit.internal.storage.file.PackWriterTest.setupRepoForShallowFetch()
org.eclipse.jgit.util.LongMap.containsKey(long)
org.eclipse.jgit.util.RefMapTest.testIterator_FailsAtEnd()
org.eclipse.jgit.internal.ketch.ReplicaConfig.getCommitSpeed()
org.eclipse.jgit.util.HttpSupport.getAcceptedIssuers()
org.eclipse.jgit.transport.WalkEncryptionTest.isProfileActive()
org.eclipse.jgit.internal.storage.dfs.LargePackedWholeObject.getCachedBytes()
org.eclipse.jgit.attributes.AttributesHandlerTest.testStarMatchOnSlashNot()
org.eclipse.jgit.ignore.FastIgnoreRuleTest.testSimpleCharClass()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_b()
org.eclipse.jgit.pgm.ArchiveTest.assertMagic(long,byte,File)
org.eclipse.jgit.util.CachedAuthenticator.getPasswordAuthentication()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_10()
org.eclipse.jgit.http.server.resolver.DefaultReceivePackFactory.createFor(HttpServletRequest,Repository,String)
org.eclipse.jgit.dircache.DirCacheEntry.isSkipWorkTree()
org.eclipse.jgit.pgm.TextBuiltin.parseArguments(String)
org.eclipse.jgit.util.LongMapTest.testRemoveOne()
org.eclipse.jgit.lib.ConstantsEncodingTest.testEncodeASCII_SimpleASCII()
org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBug_NonFooterLineAndSob()
org.eclipse.jgit.pgm.ProxyConfigTest.testHttpProxy_upperCase()
org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.checkConflictingNames(List)
org.eclipse.jgit.internal.storage.dfs.DfsReftable.getPackDescription()
org.eclipse.jgit.gitrepo.ManifestParser.startElement(String,String,String,Attributes)
org.eclipse.jgit.internal.storage.reftable.BlockReader.inflateBuf(BlockSource,long,int,int)
org.eclipse.jgit.lib.BaseRepositoryBuilder.addCeilingDirectory(File)
org.eclipse.jgit.util.io.IsolatedOutputStream.checkedGet(Future)
org.eclipse.jgit.ignore.FastIgnoreRuleTest.testTrailingSpaces()
org.eclipse.jgit.http.server.ServletUtils.sendPlainText(String,HttpServletRequest,HttpServletResponse)
org.eclipse.jgit.treewalk.WorkingTreeIterator.handleAutoCRLF(InputStream,OperationType)
org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(FileMode)
org.eclipse.jgit.revwalk.AbstractRevQueue.describe(StringBuilder,RevCommit)
org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded()
org.eclipse.jgit.lib.BaseRepositoryBuilder.setupInternals()
org.eclipse.jgit.notes.LeafBucket.set(AnyObjectId,AnyObjectId,ObjectReader)
org.eclipse.jgit.transport.BundleFetchConnection.getPackLocks()
org.eclipse.jgit.pgm.RepoTest.setUp()
org.eclipse.jgit.patch.Patch.error(byte,int,String)
org.eclipse.jgit.transport.TransportHttp.openStream()
org.eclipse.jgit.lfs.lib.LongObjectIdTest.test004_isId()
org.eclipse.jgit.lib.ConfigSnapshot.getNames(String,String,boolean)
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.getTemporaryDirectory()
org.eclipse.jgit.treewalk.filter.AndTreeFilter.matchFilter(TreeWalk)
org.eclipse.jgit.transport.HttpConfigUriPathTest.testNormalization()
org.eclipse.jgit.internal.ketch.KetchReplica.pushCommitAsync(LogIndex)
org.eclipse.jgit.patch.EGitPatchHistoryTest.onCommit(String,byte)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testAlphaGroupCase0()
org.eclipse.jgit.internal.JGitText.get()
org.eclipse.jgit.http.server.glue.RegexPipeline.create()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.writeFileWithFolderNameAndCommit()
org.eclipse.jgit.revplot.PlotCommitListTest.testSideBranch()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.gcNoTtl()
org.eclipse.jgit.transport.BundleFetchConnection.close()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c()
org.eclipse.jgit.junit.TestRepository.packAndPrune()
org.eclipse.jgit.dircache.DirCacheEntry.isAssumeValid()
org.eclipse.jgit.api.CloneCommandTest.fileUri()
org.eclipse.jgit.ant.tasks.GitCloneTaskTest.shouldRaiseErrorOnBadSourceURL()
org.eclipse.jgit.internal.storage.file.PackFile.copyPackAsIs(PackOutputStream,WindowCursor)
org.eclipse.jgit.junit.TestRepository.tick(int)
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testIsNameConflicting()
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.getBuilder()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testSpecialGroupCase3()
org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting1()
org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled()
org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.toInclude(DfsPackFile,DfsReader)
org.eclipse.jgit.lib.BitmapIndex.build()
org.eclipse.jgit.util.FileUtilsTest.testMkdirs()
org.eclipse.jgit.lib.ObjectId.fromHexString(byte,int)
org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors(MergeStrategy,IndexState,WorktreeState)
org.eclipse.jgit.ant.tasks.GitAddTask.setSrc(File)
org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_4095()
org.eclipse.jgit.transport.WalkFetchConnection.setPackLockMessage(String)
org.eclipse.jgit.util.GitDateFormatterTest.RAW()
org.eclipse.jgit.transport.TransportAmazonS3.getSchemes()
org.eclipse.jgit.api.Format.suffixes()
org.eclipse.jgit.transport.HttpConfig.getPostBuffer()
org.eclipse.jgit.internal.storage.pack.PackWriter.setIndexDisabled(boolean)
org.eclipse.jgit.transport.RemoteConfigTest.testSimpleAlwaysTags()
org.eclipse.jgit.lib.RepositoryCache.register(Repository)
org.eclipse.jgit.storage.file.FileBasedConfig.load()
org.eclipse.jgit.internal.storage.file.CheckoutEntryImpl.getToBranch()
org.eclipse.jgit.api.TagCommandTest.testShouldNotBlowUpIfThereAreNoTagsInRepository()
org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.category(DfsPackDescription)
org.eclipse.jgit.transport.http.HttpConnection.setFixedLengthStreamingMode(int)
org.eclipse.jgit.util.RawCharSequence.length()
org.eclipse.jgit.lib.ObjectReader.abbreviate(AnyObjectId,int)
org.eclipse.jgit.notes.LeafBucketTest.testRemoveMakesEmpty()
org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange()
org.eclipse.jgit.lib.ConfigLine.eqIgnoreCase(String,String)
org.eclipse.jgit.nls.NLS.initialValue()
org.eclipse.jgit.util.SystemReader.getInstance()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_7()
org.eclipse.jgit.lib.IndexDiff.getUntracked()
org.eclipse.jgit.revwalk.FIFORevQueue.anybodyHasFlag(int)
org.eclipse.jgit.pgm.Main.openGitDir(String)
org.eclipse.jgit.lib.RefUpdate.getRef()
org.eclipse.jgit.junit.MockSystemReader.openUserConfig(Config,FS)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithGarbageCoalescence()
org.eclipse.jgit.transport.WalkRemoteObjectDatabase.deleteRef(String)
org.eclipse.jgit.merge.ResolveMergerTest.checkContentMergeConflict_noTree(MergeStrategy)
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testFromStringByteWrongLength()
org.eclipse.jgit.junit.RepositoryTestCase.writeLink(String,String)
org.eclipse.jgit.util.RefMapTest.newRef(String,String)
org.eclipse.jgit.transport.URIishTest.testGitProtoUnix()
org.eclipse.jgit.internal.ketch.Proposal.setMessage(String)
org.eclipse.jgit.ignore.internal.Strings.stripTrailing(String,char)
org.eclipse.jgit.lib.Repository.writeSquashCommitMsg(String)
org.eclipse.jgit.errors.MissingObjectException.getObjectId()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testNotEquals_DiffLength()
org.eclipse.jgit.http.test.DefaultUploadPackFactoryTest.testCreate_Default()
org.eclipse.jgit.api.errors.FilterFailedException.getOutput()
org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38()
org.eclipse.jgit.errors.TranslationStringMissingException.getKey()
org.eclipse.jgit.pgm.Fetch.noRecurseSubmodules(boolean)
org.eclipse.jgit.util.NBTest.testCompareUInt64()
org.eclipse.jgit.util.RefMapTest.newRef(String,Ref)
org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateDisabled()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeRef(Ref)
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getPackStats()
org.eclipse.jgit.internal.ketch.KetchReplica.getCommitMethod()
org.eclipse.jgit.merge.ResolveMerger.isIndexDirty()
org.eclipse.jgit.lib.CLIRepositoryTestCase.writeLink(String,String)
org.eclipse.jgit.attributes.Attributes.remove(String)
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.writePackedRefs(String)
org.eclipse.jgit.transport.URIishTest.testGetEmptyHumanishName()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoObject1()
org.eclipse.jgit.merge.SimpleMergeTest.testTheirs()
org.eclipse.jgit.api.ArchiveCommandTest.createArchiveOutputStream(OutputStream,Map)
org.eclipse.jgit.storage.pack.PackConfig.getExecutor()
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2OnUnix()
org.eclipse.jgit.lib.AnyObjectId.compareTo(byte,int)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.writeFileInFolder()
org.eclipse.jgit.pgm.debug.LfsStore.getURI()
org.eclipse.jgit.api.PullCommandWithRebaseTest.writeToFile(File,String)
org.eclipse.jgit.internal.storage.dfs.DfsReader.checkType(ObjectLoader,AnyObjectId,int)
org.eclipse.jgit.revwalk.DateRevQueueTest.create()
org.eclipse.jgit.transport.URIish.toASCIIString()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.finishLogSection()
org.eclipse.jgit.pgm.debug.WriteReftable.parseId(String)
org.eclipse.jgit.treewalk.TreeWalk.getFilterCommand(String)
org.eclipse.jgit.internal.storage.file.FileRepository.getObjectDatabase()
org.eclipse.jgit.transport.WalkEncryptionTest.initialize()
org.eclipse.jgit.hooks.PrePushHook.setRefs(Collection)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testXDigitGroupCase6()
org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.setBlockSize(int)
org.eclipse.jgit.junit.http.HttpTestCase.push(TestRepository,RevCommit)
org.eclipse.jgit.transport.Transport.expandPushWildcardsFor(Repository,Collection)
org.eclipse.jgit.transport.WalkFetchConnection.processCommit(RevObject)
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test007_Open()
org.eclipse.jgit.internal.storage.file.PackWriterTest.wants(ObjectId)
org.eclipse.jgit.transport.OpenSshConfig.parseList(String)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testLowerGroupCase0()
org.eclipse.jgit.transport.WalkFetchConnection.swapFetchQueue()
org.eclipse.jgit.internal.ketch.ProposalRound.canCombine(Proposal,Proposal)
org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.remove(String)
org.eclipse.jgit.transport.BaseFetchConnection.fetch(ProgressMonitor,Collection,Set,OutputStream)
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testEquals_Short()
org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkNotModifiedThoughNormalized()
org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_EmptyHeader()
org.eclipse.jgit.api.ApplyCommand.getFile(String,boolean)
org.eclipse.jgit.pgm.Diff.ignoreLeadingSpace(boolean)
org.eclipse.jgit.transport.PackParser.verifySafeObject(AnyObjectId,int,byte)
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.hashCode()
org.eclipse.jgit.lib.IndexDiffTest.testStageState()
org.eclipse.jgit.util.RawParseUtils.parseEncoding(byte)
org.eclipse.jgit.revwalk.filter.CommitterRevFilter.create(String)
org.eclipse.jgit.api.InteractiveHandler.prepareSteps(List)
org.eclipse.jgit.diff.HistogramDiffTest.hash(RawText,int)
org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(ProgressMonitor,ObjectWalk,Set,Set,Set)
org.eclipse.jgit.lib.ConfigSnapshot.getNamesInternal(String,String,boolean)
org.eclipse.jgit.lib.Repository.updateRef(String,boolean)
org.eclipse.jgit.revplot.PlotWalk.getRefs(AnyObjectId)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e()
org.eclipse.jgit.transport.PackParser.setNeedNewObjectIds(boolean)
org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique()
org.eclipse.jgit.api.Git.remoteSetUrl()
org.eclipse.jgit.merge.MergeMessageFormatterTest.testOneBranch()
org.eclipse.jgit.transport.BaseReceivePack.getAdvertisedObjects()
org.eclipse.jgit.treewalk.WorkingTreeIterator.first()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadOnOneBranch()
org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.getBlockLimit()
org.eclipse.jgit.util.RelativeDateFormatterTest.testFormatHours()
org.eclipse.jgit.errors.LargeObjectException.getMessage()
org.eclipse.jgit.pgm.ArchiveTest.assertIsZip(File)
org.eclipse.jgit.storage.pack.PackConfig.getMaxDeltaDepth()
org.eclipse.jgit.api.FetchCommand.getTimeout()
org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable(MergeStrategy,IndexState,WorktreeState)
org.eclipse.jgit.junit.http.AppServer.getPort()
org.eclipse.jgit.util.LongList.contains(long)
org.eclipse.jgit.lib.InflaterCache.release(Inflater)
org.eclipse.jgit.api.FetchCommand.setRefSpecs(List)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.isReachable(Repository,AnyObjectId)
org.eclipse.jgit.junit.TestRepository.parseBody(T)
org.eclipse.jgit.lib.RepositoryCache.unregister(Key)
org.eclipse.jgit.internal.fsck.FsckError.getErrorType()
org.eclipse.jgit.pgm.CommandRef.guessName(Class)
org.eclipse.jgit.api.SubmoduleInitCommand.call()
org.eclipse.jgit.lib.AnyObjectId.getFirstByte()
org.eclipse.jgit.dircache.DirCacheCheckout.getToBeDeleted()
org.eclipse.jgit.lib.ObjectIdTest.test005_notIsId()
org.eclipse.jgit.internal.storage.file.GC.equals(Ref,Ref)
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.overrideRefLogMessage()
org.eclipse.jgit.internal.storage.dfs.DfsReader.newObjectToPack(AnyObjectId,int)
org.eclipse.jgit.util.io.ThrowingPrintWriter.format(String,Object)
org.eclipse.jgit.revwalk.filter.AuthorRevFilter.text(RevCommit)
org.eclipse.jgit.revwalk.ObjectWalkFilterTest.setUp()
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.parseCommit(AnyObjectId)
org.eclipse.jgit.transport.BasePackConnection.addUserAgentCapability(StringBuilder)
org.eclipse.jgit.merge.MergeConfig.getFastForwardMode()
org.eclipse.jgit.internal.storage.file.RefUpdateTest.delete(RefUpdate,Result,boolean,boolean)
org.eclipse.jgit.api.DiffCommand.setPathFilter(TreeFilter)
org.eclipse.jgit.pgm.debug.RebuildCommitGraph.recreateRefs()
org.eclipse.jgit.dircache.DirCacheBasicTest.testFindOnEmpty()
org.eclipse.jgit.http.server.ServletUtils.identify(Repository)
org.eclipse.jgit.internal.storage.pack.PackWriter.getUninterestingObjects()
org.eclipse.jgit.internal.storage.file.WriteConfig.getCompression()
org.eclipse.jgit.internal.storage.file.FileRepository.openPack(File)
org.eclipse.jgit.junit.http.AppServer.getRequests(URIish,String)
org.eclipse.jgit.pgm.Daemon.service(org,eclipse,jgit,transport,Daemon,String)
org.eclipse.jgit.transport.SignedPushConfig.setNonceGenerator(NonceGenerator)
org.eclipse.jgit.pgm.opt.RevCommitHandler.parseArguments(Parameters)
org.eclipse.jgit.util.TemporaryBufferTest.testInCoreLimit_SwitchOnAppendByte()
org.eclipse.jgit.internal.storage.pack.PackWriter.addObject(RevObject,int)
org.eclipse.jgit.fnmatch.AbstractHead.isStar()
org.eclipse.jgit.lib.internal.WorkQueue.newThread(Runnable)
org.eclipse.jgit.util.io.UnionInputStream.head()
org.eclipse.jgit.revwalk.RevCommitList.enter(int,E)
org.eclipse.jgit.transport.URIishTest.testFileProtoUnix()
org.eclipse.jgit.util.BlockListTest.testRemoveSlowPath()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoType1()
org.eclipse.jgit.api.PullCommand.setFastForward(FastForwardMode)
org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_Defaults()
org.eclipse.jgit.api.EolRepositoryTest.test_ConfigAutoCRLF_false_GlobalEOL_lf()
org.eclipse.jgit.internal.storage.file.DeltaBaseCache.clearEntry(Slot)
org.eclipse.jgit.treewalk.EmptyTreeIterator.idOffset()
org.eclipse.jgit.revwalk.LIFORevQueueTest.testEmpty()
org.eclipse.jgit.patch.CombinedFileHeader.getHunks()
org.eclipse.jgit.ignore.FastIgnoreRule.dirOnly()
org.eclipse.jgit.gitrepo.RepoProject.addCopyFiles(Collection)
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose2()
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.writeFile(DfsPackDescription,PackExt)
org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare()
org.eclipse.jgit.lib.RepositoryCacheConfig.getCleanupDelay()
org.eclipse.jgit.transport.RemoteConfigTest.testSaveAllTags()
org.eclipse.jgit.api.GarbageCollectCommand.setAggressive(boolean)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory()
org.eclipse.jgit.internal.ketch.KetchReplica.copy(ReceiveCommand)
org.eclipse.jgit.util.RefList.remove(int)
org.eclipse.jgit.transport.TransferConfig.getRefFilter()
org.eclipse.jgit.revwalk.RevWalkTestCase.tree(DirCacheEntry)
org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.getFlags()
org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest.testDirModeAndRegex1()
org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD(IgnoreSubmoduleMode)
org.eclipse.jgit.transport.ReceiveCommand.reject(IOException)
org.eclipse.jgit.util.RawCharUtilTest.testTrimLeadingWhitespace()
org.eclipse.jgit.transport.PacketLineOut.formatLength(int)
org.eclipse.jgit.internal.storage.file.PackFile.getReverseIdx()
org.eclipse.jgit.treewalk.filter.OrTreeFilter.create(TreeFilter,TreeFilter)
org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteBranch_historyPruned()
org.eclipse.jgit.diff.HistogramDiffIndex.findLongestCommonSequence()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.setUp()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testEscapedBracket3()
org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders()
org.eclipse.jgit.transport.BasePackPushConnection.push(ProgressMonitor,Map)
org.eclipse.jgit.lib.RefDatabaseConflictingNamesTest.create()
org.eclipse.jgit.lib.ObjectChecker.checkNotWindowsDevice(byte,int,int,AnyObjectId)
org.eclipse.jgit.lib.ConfigLine.match(String,String)
org.eclipse.jgit.internal.storage.reftable.BlockReader.readVarint64()
org.eclipse.jgit.revwalk.DateRevQueue.toString()
org.eclipse.jgit.lib.T0001_PersonIdentTest.test001_NewIdent()
org.eclipse.jgit.awtui.CommitGraphPane.getCommitList()
org.eclipse.jgit.util.io.AutoLFInputStream.close()
org.eclipse.jgit.transport.RefSpecTest.testForceMasterMaster()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testEscapedBackslash()
org.eclipse.jgit.junit.MockSystemReader.propose()
org.eclipse.jgit.ignore.IgnoreNodeTest.testWildcardWithSlashMatchesDirectory()
org.eclipse.jgit.gitrepo.RemoteReader.readFile(String,String,String)
org.eclipse.jgit.pgm.TagTest.testTagDeleteFail()
org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeNameIsGitTilde11()
org.eclipse.jgit.pgm.debug.WriteReftable.readLog(String)
org.eclipse.jgit.lib.ThreadSafeProgressMonitor.waitForCompletion()
org.eclipse.jgit.util.io.InterruptTimer.terminate()
org.eclipse.jgit.transport.BaseReceivePack.recvCommands()
org.eclipse.jgit.http.server.glue.WrappedRequest.getPathTranslated()
org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getDir()
org.eclipse.jgit.api.NameRevCommandTest.assertOneResult(String,ObjectId)
org.eclipse.jgit.util.io.UnionInputStreamTest.testExceptionDuringClose()
org.eclipse.jgit.lib.RefUpdate.setRefLogIdent(PersonIdent)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testCombinedRangesInOneGroupCase1()
org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withMerge()
org.eclipse.jgit.transport.PushProcessTest.close()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPrintGroupCase0()
org.eclipse.jgit.lib.AbbreviatedObjectId.getFirstByte()
org.eclipse.jgit.util.RawParseUtils_LineMapTest.testOneBlankLine()
org.eclipse.jgit.revplot.PlotCommitList.closeLane(PlotLane)
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockFrom()
org.eclipse.jgit.api.NameRevCommandTest.annotatedTagsNoResult()
org.eclipse.jgit.util.GitDateParserTest.iso()
org.eclipse.jgit.ignore.CGitIgnoreTest.testDirOnlyMatch()
org.eclipse.jgit.api.StashDropCommandTest.dropWithNoStashedCommits()
org.eclipse.jgit.ignore.internal.AbstractMatcher.equals(Object)
org.eclipse.jgit.http.test.SmartClientSmartServerTest.testInitialClone_RedirectLoop()
org.eclipse.jgit.transport.FetchHeadRecord.write(Writer)
org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject()
org.eclipse.jgit.pgm.Log.showNotes(RevCommit)
org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow()
org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.clearDirty()
org.eclipse.jgit.util.FS_Win32_Cygwin.userHomeImpl()
org.eclipse.jgit.transport.JschSession.getInputStream()
org.eclipse.jgit.api.AddCommandTest.runInShell(String,String)
org.eclipse.jgit.ignore.FastIgnoreRule.isEmpty()
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected()
org.eclipse.jgit.fnmatch.GroupHead.matches(char)
org.eclipse.jgit.internal.storage.file.PackIndexV2Test.testCRC32()
org.eclipse.jgit.lib.DirCacheCheckoutTest.getUpdated()
org.eclipse.jgit.lib.BatchRefUpdate.isAtomic()
org.eclipse.jgit.transport.RemoteRefUpdate.getMessage()
org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict()
org.eclipse.jgit.transport.UploadPack.stopBuffering()
org.eclipse.jgit.api.MergeCommand.include(String,AnyObjectId)
org.eclipse.jgit.lib.ConfigSnapshot.contains(Object)
org.eclipse.jgit.http.test.GitServletResponseTests.testUnpackErrorWithSubsequentExceptionInPostReceiveHook()
org.eclipse.jgit.api.Git.rebase()
org.eclipse.jgit.internal.storage.pack.PackWriter.getInstances()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGitCorruptUTF8AtEnd()
org.eclipse.jgit.lfs.LfsPointer.getOid()
org.eclipse.jgit.diff.RawTextTest.testLineDelimiter2()
org.eclipse.jgit.lib.ObjectLoader.getType()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testTwoRangesInOneGroupCase0()
org.eclipse.jgit.internal.storage.file.SimpleDataInput.readUnsignedShort()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.prefixCompare(AnyLongObjectId)
org.eclipse.jgit.internal.storage.file.XInputStream.readUInt8()
org.eclipse.jgit.internal.storage.file.WindowCursor.copyPackAsIs(PackOutputStream,CachedPack)
org.eclipse.jgit.transport.SideBandProgressMonitor.format(StringBuilder,String,int)
org.eclipse.jgit.util.time.ProposedTimestamp.close()
org.eclipse.jgit.transport.WalkEncryptionTest.folderCreate(String)
org.eclipse.jgit.pgm.BranchTest.setUp()
org.eclipse.jgit.lib.ObjectIdRef.getLeaf()
org.eclipse.jgit.dircache.BaseDirCacheEditor.startsWith(byte,byte,int)
org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.merge(List)
org.eclipse.jgit.util.FS_POSIX.apply(Set,int,PosixFilePermission,int)
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoAuthor()
org.eclipse.jgit.revwalk.RevObjectList.add(int,E)
org.eclipse.jgit.util.RefMapTest.testEntryType()
org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_ConnectionAttemptsDefault()
org.eclipse.jgit.notes.NoteParser.parseTree()
org.eclipse.jgit.lib.ObjectChecker.checkPersonIdent(byte,AnyObjectId)
org.eclipse.jgit.internal.storage.file.WindowCursor.inflate(PackFile,long,byte,boolean)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.newTempFile()
org.eclipse.jgit.lib.FileMode.copyTo(byte,int)
org.eclipse.jgit.diff.HistogramDiffIndex.tableBits(int)
org.eclipse.jgit.notes.DefaultNoteMergerTest.testAddAdd()
org.eclipse.jgit.pgm.Clone.initializedSubmodules(Collection)
org.eclipse.jgit.transport.PushConnectionTest.newRepo(String)
org.eclipse.jgit.internal.storage.dfs.DfsReader.getObjectSize(Iterable,boolean)
org.eclipse.jgit.lib.ObjectCheckerTest.endBlob(AnyObjectId)
org.eclipse.jgit.patch.PatchErrorTest.parseTestPatchFile()
org.eclipse.jgit.internal.storage.pack.PackWriter.getTotalObjects()
org.eclipse.jgit.util.LongList.fillTo(int,long)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testTwoGroupsCase1()
org.eclipse.jgit.internal.storage.file.SimpleDataOutput.write(int)
org.eclipse.jgit.treewalk.AbstractTreeIterator.toString()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.doNotAttemptDelta()
org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileSimple()
org.eclipse.jgit.transport.PushCertificate.toTextWithSignature()
org.eclipse.jgit.attributes.AttributesHandler.mergeAttributes(AttributesNode,String,boolean,Attributes)
org.eclipse.jgit.errors.LockFailedException.getFile()
org.eclipse.jgit.api.Git.notesRemove()
org.eclipse.jgit.storage.pack.PackConfig.getBitmapRecentCommitCount()
org.eclipse.jgit.transport.RefSpecTest.invalidWhenDestinationOnlyAndWildcard()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packIsCoalesceableGarbage(DfsPackDescription,long)
org.eclipse.jgit.lib.Repository.writeOrigHead(ObjectId)
org.eclipse.jgit.diff.ContentSource.create(WorkingTreeIterator)
org.eclipse.jgit.transport.FetchProcess.execute(ProgressMonitor,FetchResult)
org.eclipse.jgit.pgm.Log.showDiff(RevCommit)
org.eclipse.jgit.transport.http.apache.TemporaryBufferEntity.close()
org.eclipse.jgit.lib.RepositoryCache.configureEviction(RepositoryCacheConfig)
org.eclipse.jgit.internal.storage.file.PackFile.isCorrupt(long)
org.eclipse.jgit.revwalk.RevFlagSet.add(RevFlag)
org.eclipse.jgit.api.StashApplyCommandTest.untrackedAndTrackedChanges()
org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_close_Success()
org.eclipse.jgit.http.server.ServletUtils.acceptsGzipEncoding(HttpServletRequest)
org.eclipse.jgit.util.sha1.SHA1.toObjectId()
org.eclipse.jgit.nls.MissingPropertyBundle.get()
org.eclipse.jgit.transport.RefSpecTest.invalidWhenOnlySourceWildcard()
org.eclipse.jgit.treewalk.TreeWalk.addTree(AbstractTreeIterator)
org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_4()
org.eclipse.jgit.revwalk.RevCommit.getFooterLines()
org.eclipse.jgit.internal.storage.file.PackFileTest.delta(byte,byte)
org.eclipse.jgit.lib.ObjectIdOwnerMap.newSegment()
org.eclipse.jgit.internal.storage.pack.PackWriter.runTasks(ExecutorService,ThreadSafeProgressMonitor,DeltaTask,Block,List)
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.removeListener()
org.eclipse.jgit.transport.RefSpecTest.invalidSourceDoubleSlashes()
org.eclipse.jgit.transport.FetchResult.addSubmodule(String,FetchResult)
org.eclipse.jgit.revplot.PlotCommitListTest.testTwoRoots1()
org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.checkObjectExistence(RevWalk,List)
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHead()
org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean)
org.eclipse.jgit.api.EolRepositoryTest.test_ConfigAutoCRLF_false_ConfigEOL_lf()
org.eclipse.jgit.util.FS_Win32.supportsSymlinks()
org.eclipse.jgit.storage.pack.PackConfig.getIndexVersion()
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1OnUnix()
org.eclipse.jgit.notes.DefaultNoteMergerTest.testIdenticalAdd()
org.eclipse.jgit.internal.storage.dfs.DfsReader.openImpl(PackList,AnyObjectId)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.setUp()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.name()
org.eclipse.jgit.util.io.AutoLFInputStreamTest.testLF()
org.eclipse.jgit.internal.storage.file.ReflogWriter.log(RefUpdate,String,boolean)
org.eclipse.jgit.util.RawParseUtils.endOfParagraph(byte,int)
org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget()
org.eclipse.jgit.api.DescribeCommandTest.getUseAnnotatedTagsValues()
org.eclipse.jgit.internal.storage.file.GcLog.write(String)
org.eclipse.jgit.ignore.CGitIgnoreTest.assertNoIgnoredVisited(Set)
org.eclipse.jgit.lfs.lib.LFSPointerTest.testEncoding()
org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting2()
org.eclipse.jgit.dircache.DirCache.cmp(byte,int,DirCacheEntry)
org.eclipse.jgit.lib.RefUpdate.disableRefLog()
org.eclipse.jgit.internal.storage.dfs.DfsRepository.getDescription()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRefs_HeadsSymref()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateGcPackSizesWithGcAndGcRestPacks()
org.eclipse.jgit.revwalk.LIFORevQueue.add(RevCommit)
org.eclipse.jgit.merge.MergeAlgorithmTest.testEmptyTexts()
org.eclipse.jgit.pgm.StatusTest.testStatusPorcelain()
org.eclipse.jgit.dircache.DirCacheTreeTest.testTwoLevelSubtree()
org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.setBlockSize(int)
org.eclipse.jgit.treewalk.WorkingTreeIterator.next(int)
org.eclipse.jgit.fnmatch.CharacterHead.matches(char)
org.eclipse.jgit.internal.storage.file.GcTestCase.setUp()
org.eclipse.jgit.lib.ValidRefNameTest.testContainsDot()
org.eclipse.jgit.transport.PushCertificateIdent.hashCode()
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.setReadAheadBytes(int)
org.eclipse.jgit.lib.RepositoryCache.open(Key,boolean)
org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation.getFormat()
org.eclipse.jgit.attributes.CGitAttributesTest.testNestedMatch()
org.eclipse.jgit.attributes.AttributesHandlerTest.testDirectoryMatchSubRecursiveBacktrack2()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testLowerGroupCase3()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames7()
org.eclipse.jgit.api.EolStreamTypeUtilTest.testCheckoutCRLF()
org.eclipse.jgit.revwalk.MergeBaseGenerator.outputType()
org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1()
org.eclipse.jgit.revplot.PlotCommit.getRef(int)
org.eclipse.jgit.submodule.SubmoduleAddTest.commandWithEmptyUri()
org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase0()
org.eclipse.jgit.api.CommitOnlyTest.prepare_f3_f2_14(Git,int)
org.eclipse.jgit.transport.TransportProtocol.getDefaultPort()
org.eclipse.jgit.lib.ObjectReader.getStreamFileThreshold()
org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.setConfig(ReftableConfig)
org.eclipse.jgit.diff.RenameDetector.compare(DiffEntry,DiffEntry)
org.eclipse.jgit.dircache.DirCacheBasicTest.testRejectInvalidWindowsPaths()
org.eclipse.jgit.api.CommitCommand.setInsertChangeId(boolean)
org.eclipse.jgit.transport.PacketLineInTest.testReadString_End()
org.eclipse.jgit.transport.URIishTest.testGetEmptyHumanishNameWithAuthorityOnly()
org.eclipse.jgit.transport.PushCertificate.equals(Object)
org.eclipse.jgit.notes.FanoutBucket.treeSize()
org.eclipse.jgit.api.Git.stashApply()
org.eclipse.jgit.pgm.Add.run()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CycleInSymbolicRef()
org.eclipse.jgit.transport.Connection.getMessages()
org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenFileWithMissingInWorkingTree()
org.eclipse.jgit.notes.NoteParser.parseFanoutTree()
org.eclipse.jgit.api.DescribeCommand.getBestMatch(List)
org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_WithMode()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testSpecialGroupCase6()
org.eclipse.jgit.symlinks.SymlinksTest.beforeMethod()
org.eclipse.jgit.http.server.ReceivePackServlet.advertise(HttpServletRequest,PacketLineOutRefAdvertiser)
org.eclipse.jgit.transport.CredentialsProviderUserInfo.promptPassphrase(String)
org.eclipse.jgit.revwalk.filter.CommitterRevFilter.textFor(RevCommit)
org.eclipse.jgit.lib.IndexDiff.getMissing()
org.eclipse.jgit.pgm.ConfigTest.setUp()
org.eclipse.jgit.lib.Repository.getTags()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleWirdcardCase0()
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversDeletedLoose()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c()
org.eclipse.jgit.transport.PushProcess.rejectAll()
org.eclipse.jgit.internal.storage.reftree.Command.setResult(Result)
org.eclipse.jgit.transport.UploadPack.setPreUploadHook(PreUploadHook)
org.eclipse.jgit.internal.storage.file.LocalObjectToPack.select(StoredObjectRepresentation)
org.eclipse.jgit.diff.DiffFormatterReflowTest.init(String)
org.eclipse.jgit.events.WorkingTreeModifiedEvent.getModified()
org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext1()
org.eclipse.jgit.attributes.AttributesMatcherTest.match(String,String)
org.eclipse.jgit.transport.WalkEncryptionTest.transferStream(InputStream,OutputStream)
org.eclipse.jgit.api.PushCommand.setPushTags()
org.eclipse.jgit.diff.DiffFormatterTest.testDiffNullToNull()
org.eclipse.jgit.treewalk.FileTreeIteratorTest.testCustomFileModeStrategyFromParentIterator()
org.eclipse.jgit.junit.MockSystemReader.setProperty(String,String)
org.eclipse.jgit.diff.SimilarityIndex.add(int,int)
org.eclipse.jgit.pgm.MergeTest.testNoFastForward()
org.eclipse.jgit.transport.PreUploadHook.onEndNegotiateRound(UploadPack,Collection,int,int,boolean)
org.eclipse.jgit.http.test.ProtocolErrorTest.packHeader(ByteArrayOutputStream,int)
org.eclipse.jgit.transport.PackParser.resolveDeltas(PackedObjectInfo,ProgressMonitor)
org.eclipse.jgit.lib.CommitBuilder.setParentId(AnyObjectId)
org.eclipse.jgit.lib.ValidRefNameTest.testRefLogQueryIsValidRef()
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.put(DfsStreamKey,long,int,T)
org.eclipse.jgit.util.NB.encodeInt64(byte,int,long)
org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit(MergeStrategy)
org.eclipse.jgit.util.sha1.SHA1Test.test0()
org.eclipse.jgit.hooks.GitHook.getRepository()
org.eclipse.jgit.transport.ReceiveCommand.isTransactionAborted(ReceiveCommand)
org.eclipse.jgit.pgm.Status.printList(String,String,String,Collection,Collection,Collection,Collection)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.call()
org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.invalidRepositoryFormatVersion()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testGraphGroupCase0()
org.eclipse.jgit.util.RawParseUtils_ParsePersonIdentTest.testParsePersonIdent_fuzzyCases()
org.eclipse.jgit.revwalk.DateRevQueue.newEntry(RevCommit)
org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree1()
org.eclipse.jgit.util.FS.setUserHome(File)
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOkTwoLevels()
org.eclipse.jgit.pgm.Config.isListAll()
org.eclipse.jgit.api.PushCommand.setOutputStream(OutputStream)
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1OnUnix()
org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.next()
org.eclipse.jgit.transport.RemoteConfig.getPushRefSpecs()
org.eclipse.jgit.transport.RemoteConfig.replaceUri(String,Map)
org.eclipse.jgit.junit.RepositoryTestCase.createBranch(ObjectId,String)
org.eclipse.jgit.api.RebaseCommand.parseAuthor()
org.eclipse.jgit.lib.ThreadSafeProgressMonitor.beginTask(String,int)
org.eclipse.jgit.transport.TransportHttp.connect(String)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b()
org.eclipse.jgit.lib.ConfigTest.testIncludeValuePathNotFound()
org.eclipse.jgit.transport.CredentialsProvider.getDefault()
org.eclipse.jgit.revwalk.RevTagParseTest.testParse_illegalEncoding()
org.eclipse.jgit.lib.IndexDiffTest.testModified()
org.eclipse.jgit.util.RawParseUtils_ParsePersonIdentTest.testParsePersonIdent_legalCases()
org.eclipse.jgit.internal.storage.file.RefDirectory.writeFile(String,byte)
org.eclipse.jgit.internal.storage.file.WindowCache.evict()
org.eclipse.jgit.internal.storage.file.PackIndexWriter.writeTOC(int)
org.eclipse.jgit.revwalk.RevWalk.initializeShallowCommits()
org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldReturnNullWithoutMergeBranch()
org.eclipse.jgit.transport.UploadPackLogger.onPackStatistics(PackWriter,Statistics)
org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NOT_ALL()
org.eclipse.jgit.util.ChangeIdUtilTest.testRegularCommitWithSob_ButNoBody()
org.eclipse.jgit.transport.http.HttpConnection.getURL()
org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges()
org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange()
org.eclipse.jgit.http.test.SmartClientSmartServerTest.testInitialClone_RedirectOnPostAllowed()
org.eclipse.jgit.lib.BaseRepositoryBuilder.setBare()
org.eclipse.jgit.diff.AbstractDiffTestCase.testEdit_MoveBlock()
org.eclipse.jgit.http.server.glue.UrlPipeline.initServlet(HttpServlet,ServletContext,Set)
org.eclipse.jgit.notes.FanoutBucket.cell(AnyObjectId)
org.eclipse.jgit.transport.BaseReceivePack.checkRequestWasRead()
org.eclipse.jgit.pgm.debug.MakeCacheTree.run()
org.eclipse.jgit.treewalk.filter.PathFilter.include(TreeWalk)
org.eclipse.jgit.util.TemporaryBuffer.reset()
org.eclipse.jgit.internal.storage.file.PackReverseIndex.binarySearch(long)
org.eclipse.jgit.diff.AbstractDiffTestCase.testEdit_InvertBlocks()
org.eclipse.jgit.internal.storage.pack.ObjectToPack.markWantWrite()
org.eclipse.jgit.pgm.Status.printUnmerged(Map)
org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compare(ObjectIdWithOffset,ObjectIdWithOffset)
org.eclipse.jgit.internal.ketch.Proposal.success()
org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_TrailingGarbage()
org.eclipse.jgit.lib.PersonIdent.hashCode()
org.eclipse.jgit.revwalk.filter.RevFlagFilter.toString()
org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup()
org.eclipse.jgit.lib.ConfigSnapshot.find(List,String,String,String)
org.eclipse.jgit.revwalk.ObjectWalk.markStart(RevObject)
org.eclipse.jgit.junit.TestRepositoryTest.insertChangeIdIgnoresExisting()
org.eclipse.jgit.ant.tasks.GitAddTask.execute()
org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest.assertMatched(String,String,Boolean)
org.eclipse.jgit.http.test.GitServletInitTest.testDefaultConstructor_WithBasePath()
org.eclipse.jgit.notes.LeafBucket.parseOneEntry(AnyObjectId,AnyObjectId)
org.eclipse.jgit.merge.StrategyOneSided.getName()
org.eclipse.jgit.pgm.CheckoutTest.testCheckoutPath()
org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommitNoParent()
org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.getPackFile()
org.eclipse.jgit.internal.storage.file.InfoAttributesNode.load()
org.eclipse.jgit.internal.storage.file.GC.gc()
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getRepositoryDescription()
org.eclipse.jgit.http.server.GitSmartHttpTools.stripServiceSuffix(String)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.doLogExponentialBackoff(int)
org.eclipse.jgit.transport.NetRCCredentialsProvider.install()
org.eclipse.jgit.api.RebaseCommand.runInteractively(InteractiveHandler)
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.data()
org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo()
org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.testNoMatchingAttributes()
org.eclipse.jgit.pgm.Version.run()
org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadWhileAppendIsInProgress()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoType2()
org.eclipse.jgit.transport.FetchProcess.createUpdate(RefSpec,ObjectId)
org.eclipse.jgit.http.server.GitSmartHttpTools.getResponseContentType(HttpServletRequest)
org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSorting_Bug_348834()
org.eclipse.jgit.treewalk.WorkingTreeIterator.contentCheck(DirCacheEntry,ObjectReader)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testMixedGroupCase9()
org.eclipse.jgit.transport.http.JDKHttpConnection.setHostnameVerifier(HostnameVerifier)
org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testVerySimpleGroupRangeCase0()
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixOfExisting()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.setReftableInitialMaxUpdateIndex(long)
org.eclipse.jgit.blame.BlameGenerator.reverseResult(Candidate,Candidate)
org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getSize(AnyLongObjectId)
org.eclipse.jgit.merge.MergeFormatterPass.writeConflictStart(MergeChunk)
org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyCannotCreateParentRef()
org.eclipse.jgit.transport.PushCertificateStoreTest.newIdent()
org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForward()
org.eclipse.jgit.transport.SideBandOutputStreamTest.testConstructor_RejectsBadBufferSize()
org.eclipse.jgit.transport.PostUploadHookChain.newChain(List)
org.eclipse.jgit.transport.WalkEncryptionTest.haveSysProp(String)
org.eclipse.jgit.transport.RefSpecTest.testCreateEmpty()
org.eclipse.jgit.internal.storage.dfs.DfsReader.compare(FoundObject,FoundObject)
org.eclipse.jgit.attributes.CGitAttributesTest.testDirectoryMatchSubRecursiveBacktrack5()
org.eclipse.jgit.lib.SymbolicRef.getLeaf()
org.eclipse.jgit.ignore.internal.Strings.isWildCard(String)
org.eclipse.jgit.transport.PushProcessTest.testUpdateDeleteNonExisting()
org.eclipse.jgit.junit.MockSystemReader.init(String)
org.eclipse.jgit.transport.PackParser.inflate(Source,long)
org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex(MergeStrategy)
org.eclipse.jgit.diff.AbstractDiffTestCase.testDeleteFile()
org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_NoSecondLine()
org.eclipse.jgit.ignore.CGitVsJGitRandomIgnorePatternTest.useSpecialFragment()
org.eclipse.jgit.lib.ValidRefNameTest.assertInvalidOnWindows(String)
org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream()
org.eclipse.jgit.util.sha1.SHA1.finish()
org.eclipse.jgit.nls.TranslationBundle.effectiveLocale()
org.eclipse.jgit.internal.storage.pack.PackWriter.isThin()
org.eclipse.jgit.diff.Subsequence.toBase(Edit,Subsequence,Subsequence)
org.eclipse.jgit.internal.storage.pack.DeltaCache.resize(byte,int)
org.eclipse.jgit.api.StashApplyCommand.resetIndex(RevTree)
org.eclipse.jgit.api.CleanCommand.setForce(boolean)
org.eclipse.jgit.transport.NetRCCredentialsProvider.supports(CredentialItem)
org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile()
org.eclipse.jgit.treewalk.CanonicalTreeParserTest.mktree(byte)
org.eclipse.jgit.api.ArchiveCommandTest.putEntry(MockOutputStream,ObjectId,String,FileMode,ObjectLoader)
org.eclipse.jgit.transport.URIishTest.testGetSlashesValidSlashHumanishName()
org.eclipse.jgit.transport.http.HttpConnection.getContentLength()
org.eclipse.jgit.dircache.DirCache.read(Repository)
org.eclipse.jgit.attributes.TreeWalkAttributeTest.testCheckinCheckoutDifferences()
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef()
org.eclipse.jgit.util.ChangeIdUtilTest.call(String,boolean)
org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test2()
org.eclipse.jgit.internal.storage.file.DeltaBaseCache.moveToHead(Slot)
org.eclipse.jgit.http.test.HttpClientTests.nameOf(Repository)
org.eclipse.jgit.internal.storage.file.PackIndexV2.ensureId()
org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.packedRefsLockFailure()
org.eclipse.jgit.revwalk.filter.RevFlagFilter.clone()
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e()
org.eclipse.jgit.api.StashApplyCommand.resetUntracked(RevTree)
org.eclipse.jgit.transport.TransportProtocol.getOptionalFields()
org.eclipse.jgit.internal.storage.reftable.BlockReader.match(byte,boolean)
org.eclipse.jgit.lib.IndexDiff.shouldBeRecursive()
org.eclipse.jgit.treewalk.filter.AndTreeFilter.create(TreeFilter)
org.eclipse.jgit.internal.storage.file.PackFile.compare(PackFile,PackFile)
org.eclipse.jgit.util.io.UnionInputStream.read()
org.eclipse.jgit.attributes.AttributesHandlerTest.testExpandBuiltInMacro1()
org.eclipse.jgit.diff.SimilarityIndex.pair(int,long)
org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doLink(String)
org.eclipse.jgit.transport.RefSpecTest.testSplitLastColon()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test16_FromString()
org.eclipse.jgit.transport.PacketLineOutTest.assertBuffer(String)
org.eclipse.jgit.revwalk.RevQueueTestCase.testClear()
org.eclipse.jgit.internal.storage.file.PackIndexWriterV1.canStore(PackedObjectInfo)
org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.run(Ref,Result)
org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.apply(List)
org.eclipse.jgit.lib.ObjectChecker.setIgnore(ErrorType,boolean)
org.eclipse.jgit.http.server.GitServlet.addUploadPackFilter(Filter)
org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testIndexSize()
org.eclipse.jgit.diff.DiffFormatter.setDetectRenames(boolean)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.selectObjectRepresentation(PackWriter,ObjectToPack,WindowCursor)
org.eclipse.jgit.lib.UserConfig.getEmailInternal(Config,String)
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.firstBlockPosition(Section)
org.eclipse.jgit.lib.ObjectIdOwnerMap.next()
org.eclipse.jgit.transport.PushCertificateParserTest.noCert()
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.sortById(ObjectIdSubclassMap)
org.eclipse.jgit.dircache.DirCacheTree.isValid()
org.eclipse.jgit.lib.Repository.updateRef(String)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedIgnoredComparedWithInitialCommit()
org.eclipse.jgit.transport.PackParser.resolveDeltas(DeltaVisit,int,ObjectTypeAndSize,ProgressMonitor)
org.eclipse.jgit.lib.BatchingProgressMonitor.update(BatchingProgressMonitor,int)
org.eclipse.jgit.lib.BatchRefUpdate.addProposedTimestamp(ProposedTimestamp)
org.eclipse.jgit.revwalk.filter.CommitTimeRevFilter.before(long)
org.eclipse.jgit.http.server.glue.SuffixPipeline.match(HttpServletRequest)
org.eclipse.jgit.treewalk.WorkingTreeIterator.compareMetadata(DirCacheEntry)
org.eclipse.jgit.attributes.Attributes.isSet(String)
org.eclipse.jgit.dircache.DirCache.skipOptionalExtension(InputStream,MessageDigest,byte,long)
org.eclipse.jgit.transport.OpenSshConfig.setValue(String,List)
org.eclipse.jgit.internal.storage.file.LockFile.commit()
org.eclipse.jgit.lib.ObjectInserter.flush()
org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.lruPushHead(Entry)
org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_BareA()
org.eclipse.jgit.internal.ketch.KetchSystem.newLeaderTag()
org.eclipse.jgit.internal.storage.pack.PackWriter.getTimeCompressing()
org.eclipse.jgit.lib.ObjectId.toObjectId()
org.eclipse.jgit.api.CleanCommand.setPaths(Set)
org.eclipse.jgit.events.ChangeRecorder.onWorkingTreeModified(WorkingTreeModifiedEvent)
org.eclipse.jgit.internal.storage.file.ByteWindow.size()
org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryContentLength()
org.eclipse.jgit.internal.fsck.FsckPackParser.onPackFooter(byte)
org.eclipse.jgit.lib.IndexDiffTest.insertTree(TreeFormatter)
org.eclipse.jgit.transport.URIishTest.testGetWindowsPathHumanishName()
org.eclipse.jgit.internal.storage.file.FileSnapshot.setClean(FileSnapshot)
org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails()
org.eclipse.jgit.util.io.NullOutputStream.write(byte,int,int)
org.eclipse.jgit.treewalk.WorkingTreeIterator.readContentAsNormalizedString(DirCacheEntry,ObjectReader)
org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReaderResolve()
org.eclipse.jgit.internal.storage.file.GcTestCase.commitChain(int,int)
org.eclipse.jgit.api.AddCommandTest.testExecutableRetention()
org.eclipse.jgit.transport.PacketLineIn.readLength()
org.eclipse.jgit.archive.TxzFormat.createArchiveOutputStream(OutputStream)
org.eclipse.jgit.util.io.AutoCRLFInputStream.read(byte,int,int)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_d()
org.eclipse.jgit.transport.ReceiveCommand.setTypeFastForwardUpdate()
org.eclipse.jgit.transport.RequestValidator.checkWants(UploadPack,List)
org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compact(ProgressMonitor)
org.eclipse.jgit.http.test.SmartClientSmartServerTest.testInitialClone_Redirect302Small()
org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCompareTo()
org.eclipse.jgit.internal.storage.reftable.ReftableTest.indexScan()
org.eclipse.jgit.treewalk.TreeWalk.getPathLength()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testSpaceGroupCase4()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.run(DfsGarbageCollector)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.insertUnpackedObject(File,ObjectId,boolean)
org.eclipse.jgit.transport.ProgressSpinner.write(String)
org.eclipse.jgit.util.io.AutoLFInputStreamTest.asBytes(String)
org.eclipse.jgit.lib.ObjectChecker.checkPath(byte,int,int)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_11()
org.eclipse.jgit.internal.storage.reftable.ReftableTest.noIndexScan()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUnsupportedGroupCase0()
org.eclipse.jgit.util.RawParseUtils.nextLF(byte,int,char)
org.eclipse.jgit.gitrepo.RepoCommand.sha1(String,String)
org.eclipse.jgit.notes.FanoutBucket.remove()
org.eclipse.jgit.lib.AsyncObjectLoaderQueue.next()
org.eclipse.jgit.transport.AtomicPushTest.pushAtomicDisabled()
org.eclipse.jgit.internal.storage.reftable.BlockReader.scanToKey(byte,int,int,int)
org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodulesNameNotPath()
org.eclipse.jgit.revwalk.filter.AndRevFilter.toString()
org.eclipse.jgit.junit.TestRepository.cherryPick(AnyObjectId)
org.eclipse.jgit.revwalk.filter.CommitTimeRevFilter.between(Date,Date)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.writeIdx()
org.eclipse.jgit.api.CloneCommand.fetch(Repository,URIish)
org.eclipse.jgit.util.IntListTest.testFillTo100()
org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.getRepository()
org.eclipse.jgit.api.PushCommand.setPushAll()
org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions.setDeltaBaseCacheLimit(int)
org.eclipse.jgit.transport.TransportGitSsh.cleanNotFound(NoRemoteRepositoryException,String)
org.eclipse.jgit.attributes.AttributesHandler.rootOf(T)
org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_InsertFrontFails()
org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution()
org.eclipse.jgit.transport.WalkPushConnection.pickHEAD(List)
org.eclipse.jgit.lib.DirCacheCheckoutTest.getRemoved()
org.eclipse.jgit.internal.storage.dfs.DfsInserter.resolve(AbbreviatedObjectId)
org.eclipse.jgit.transport.HMACSHA1NonceGenerator.toHex(byte)
org.eclipse.jgit.transport.URIish.getScheme()
org.eclipse.jgit.util.RawParseUtils.tagger(byte,int)
org.eclipse.jgit.util.io.MessageWriter.flush()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge()
org.eclipse.jgit.transport.Transport.catalogs(ClassLoader)
org.eclipse.jgit.transport.TransportBundleStream.openPush()
org.eclipse.jgit.util.GitDateParserTest.shortWithDots()
org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.unlockAll(Map)
org.eclipse.jgit.transport.PushOptionsTest.newRepo(String)
org.eclipse.jgit.lib.AnyObjectId.copyTo(Writer)
org.eclipse.jgit.pgm.StatusTest.testPathOptionHelp()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.findPosition(AnyObjectId)
org.eclipse.jgit.pgm.Log.noPrefix(boolean)
org.eclipse.jgit.blame.BlameGenerator.blameEntireRegionOnParent(Candidate,RevCommit)
org.eclipse.jgit.junit.TestRepository.commit()
org.eclipse.jgit.revplot.PlotWalk.dispose()
org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.tryLock(boolean)
org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onEndDelta()
org.eclipse.jgit.util.RawParseUtils_HexParseTest.testInt16()
org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict()
org.eclipse.jgit.transport.PushCertificateIdent.getEmailAddress()
org.eclipse.jgit.treewalk.CanonicalTreeParserTest.path()
org.eclipse.jgit.merge.CherryPickTest.testRevert()
org.eclipse.jgit.transport.PushCertificateIdentTest.assertMatchesPersonIdent(String,PersonIdent,String)
org.eclipse.jgit.treewalk.CanonicalTreeParser.loadAttributes(ObjectReader,AnyObjectId)
org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyRawBytes()
org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testPackFormat_LargeObject()
org.eclipse.jgit.merge.ResolveMerger.getFailingPaths()
org.eclipse.jgit.storage.pack.PackConfig.isDeltaBaseAsOffset()
org.eclipse.jgit.internal.storage.dfs.DfsReader.next()
org.eclipse.jgit.internal.storage.file.PackIndexV2.iterator()
org.eclipse.jgit.notes.NoteMapTest.testReadFullyFannedOut()
org.eclipse.jgit.diff.RawTextIgnoreTrailingWhitespaceTest.testEqualsWithWhitespace()
org.eclipse.jgit.junit.http.MockServletConfig.getInitParameter(String)
org.eclipse.jgit.diff.HistogramDiffIndex.recCreate(int,int,int)
org.eclipse.jgit.revplot.PlotWalk.kind(Ref)
org.eclipse.jgit.util.RawSubStringPatternTest.testEmptyPattern()
org.eclipse.jgit.transport.PacketLineInTest.testReadACK_Invalid3()
org.eclipse.jgit.api.PullCommandWithRebaseTest.setUp()
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getEstimatedPackSize()
org.eclipse.jgit.util.RefMap.getValue()
org.eclipse.jgit.pgm.ProxyConfigTest.testHttpProxy_bothCases()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getTags()
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.getNewPacks()
org.eclipse.jgit.lib.BranchConfig.getMerge()
org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_11(Git)
org.eclipse.jgit.junit.RepositoryTestCase.assertEqualsFile(File,File)
org.eclipse.jgit.lib.ConfigTest.testIncludeValuePathRelative()
org.eclipse.jgit.errors.AmbiguousObjectException.getAbbreviatedObjectId()
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward()
org.eclipse.jgit.diff.DiffFormatter.end(Edit,int,int)
org.eclipse.jgit.dircache.DirCacheEntry.getExtendedFlags()
org.eclipse.jgit.dircache.DirCacheIterator.idOffset()
org.eclipse.jgit.util.FileUtils.mkdir(File,boolean)
org.eclipse.jgit.revwalk.FollowFilter.getRenameCallback()
org.eclipse.jgit.util.NBTest.testEncodeInt64()
org.eclipse.jgit.transport.RemoteConfigTest.testUnknown()
org.eclipse.jgit.transport.http.JDKHttpConnection.setReadTimeout(int)
org.eclipse.jgit.util.IO.readFully(File)
org.eclipse.jgit.transport.OpenSshConfig.getHostName()
org.eclipse.jgit.treewalk.WorkingTreeIterator.compare(Entry,Entry)
org.eclipse.jgit.dircache.DirCacheBuilder.addTree(byte,int,ObjectReader,AnyObjectId)
org.eclipse.jgit.transport.RemoteRefUpdate.toString()
org.eclipse.jgit.transport.PacketLineIn.invalidHeader()
org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames()
org.eclipse.jgit.storage.pack.PackConfig.isPreserveOldPacks()
org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest.testPathFilterGroup_DoesNotSkipTail()
org.eclipse.jgit.lib.RepositoryCacheTest.testGetRegisteredWhenEmpty()
org.eclipse.jgit.lib.RefWriter.writePackedRefs()
org.eclipse.jgit.api.RemoteSetUrlCommand.setUri(URIish)
org.eclipse.jgit.api.RebaseCommand.readFile(String)
org.eclipse.jgit.internal.storage.dfs.DfsReftable.read(long,int)
org.eclipse.jgit.pgm.AddTest.testAddAFile()
org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldBeAbleToHandleLinesWithoutCommitMessageInRebaseTodoFile()
org.eclipse.jgit.lib.T0001_PersonIdentTest.testAppendSanitized()
org.eclipse.jgit.revwalk.RevCommit.getFooterLines(FooterKey)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c()
org.eclipse.jgit.http.test.SmartClientSmartServerTest.testInvalidWant()
org.eclipse.jgit.diff.DiffFormatter.format(EditList,RawText,RawText)
org.eclipse.jgit.api.CheckoutResult.getConflictList()
org.eclipse.jgit.util.CPUTimeStopWatch.start()
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided()
org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryUsageCountWithRegisteredRepository()
org.eclipse.jgit.api.CommitCommand.lookupOnly(String)
org.eclipse.jgit.nls.NonTranslatedBundle.get()
org.eclipse.jgit.lib.BatchingProgressMonitor.run()
org.eclipse.jgit.lib.ObjectId.isId(String)
org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile()
org.eclipse.jgit.lib.ValidRefNameTest.setUnixSystemReader()
org.eclipse.jgit.http.server.glue.NoParameterFilterConfig.getInitParameterNames()
org.eclipse.jgit.pgm.CLIGitCommand.getOutput(Result)
org.eclipse.jgit.patch.FileHeader.parseFileMode(int,int)
org.eclipse.jgit.revwalk.RevObjectTest.testRevObjectTypes()
org.eclipse.jgit.internal.storage.pack.DeltaWindow.buffer(DeltaWindowEntry)
org.eclipse.jgit.pgm.Describe.run()
org.eclipse.jgit.dircache.BaseDirCacheEditor.checkNameConflicts()
org.eclipse.jgit.treewalk.FileTreeIteratorTest.setUp()
org.eclipse.jgit.lib.TextProgressMonitor.send(StringBuilder)
org.eclipse.jgit.junit.http.RecordingLogger.info(Throwable)
org.eclipse.jgit.pgm.Clone.checkingOut(AnyObjectId,String)
org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.endTask()
org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkWithoutCommonAncestor()
org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1.getBitmapCount()
org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkWithMerges()
org.eclipse.jgit.junit.RepositoryTestCase.check(String)
org.eclipse.jgit.internal.storage.file.FileRepository.getReflogReader(String)
org.eclipse.jgit.indexdiff.IndexDiffWithSymlinkTest.setUp()
org.eclipse.jgit.api.CherryPickCommand.include(String,AnyObjectId)
org.eclipse.jgit.diff.SimilarityIndexTest.hash(String)
org.eclipse.jgit.util.QuotedString.dequote(String)
org.eclipse.jgit.diff.DiffFormatterReflowTest.testNoNewLine2()
org.eclipse.jgit.revwalk.DepthGenerator.shareFreeList(BlockRevQueue)
org.eclipse.jgit.revwalk.RevWalkTestCase.commit(int,RevCommit)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.openAlternate(String)
org.eclipse.jgit.http.server.FileSender.getTailChecksum()
org.eclipse.jgit.revwalk.BlockRevQueue.clear()
org.eclipse.jgit.blame.Candidate.takeBlame(EditList,Candidate)
org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst()
org.eclipse.jgit.transport.HttpConfigTest.testMatchWithPrefixUriInConfig()
org.eclipse.jgit.treewalk.filter.ByteArraySet.addIfAbsent(byte,int,int)
org.eclipse.jgit.fnmatch.Head.getNextHeads(char)
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testLooseDelete()
org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree2()
org.eclipse.jgit.junit.TestRepository.commit(RevCommit)
org.eclipse.jgit.pgm.CommandCatalog.catalogs()
org.eclipse.jgit.util.NB.decodeInt32(byte,int)
org.eclipse.jgit.notes.NonNoteEntry.pathCompare(byte,int,int,FileMode)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testVerySimpleWildCardCase2()
org.eclipse.jgit.transport.PushResult.getRemoteUpdates()
org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.assertWorkdirPath(Repository,String)
org.eclipse.jgit.util.FileUtils.rename(File,File,CopyOption)
org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.compressStandardFormat(String,String,byte)
org.eclipse.jgit.util.FS.discoverGitSystemConfig()
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.slot(DfsStreamKey,long)
org.eclipse.jgit.internal.storage.reftable.BlockWriter.currentSize()
org.eclipse.jgit.transport.http.HttpConnection.setInstanceFollowRedirects(boolean)
org.eclipse.jgit.lfs.lib.MutableLongObjectIdTest.testCopy()
org.eclipse.jgit.internal.storage.file.PackIndexV1.getObjectId(long)
org.eclipse.jgit.gitrepo.RemoteReader.sha1(String,String)
org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_GitStyleMessage()
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.insertTree(TreeFormatter)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit()
org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldHandleIgnored()
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.newPack(PackSource)
org.eclipse.jgit.events.ConfigChangedEvent.getListenerType()
org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions.fromConfig(Config)
org.eclipse.jgit.lib.AsyncOperation.cancel(boolean)
org.eclipse.jgit.console.ConsoleAuthenticator.install()
org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.commitPack(Collection,Collection)
org.eclipse.jgit.diff.DiffEntry.pair(ChangeType,DiffEntry,DiffEntry,int)
org.eclipse.jgit.transport.JschConfigSessionFactory.knownHosts(JSch,FS)
org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryNullRemote()
org.eclipse.jgit.internal.storage.reftable.ReftableConfig.getMaxIndexLevels()
org.eclipse.jgit.lib.ThreadSafeProgressMonitor.isMainThread()
org.eclipse.jgit.transport.BasePackFetchConnection.markRefsAdvertised()
org.eclipse.jgit.api.MergeCommandTest.setUp()
org.eclipse.jgit.internal.storage.file.ObjectDirectory.newCachedFileObjectDatabase()
org.eclipse.jgit.transport.http.HttpConnection.getResponseCode()
org.eclipse.jgit.pgm.internal.CLIText.get()
org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest.testQuote_Empty()
org.eclipse.jgit.util.StringUtils.toLowerCase(String)
org.eclipse.jgit.util.io.CountingOutputStream.getCount()
org.eclipse.jgit.storage.pack.PackStatistics.getReusedDeltas()
org.eclipse.jgit.treewalk.filter.PathFilter.shouldBeRecursive()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testGraphGroupCase5()
org.eclipse.jgit.pgm.AmazonS3Client.requiresRepository()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.deleteFile()
org.eclipse.jgit.util.BlockList.toBlockIndex(int)
org.eclipse.jgit.revplot.PlotCommitListTest.lanePos(Set)
org.eclipse.jgit.indexdiff.IndexDiffWithSymlinkTest.rawPath(Path)
org.eclipse.jgit.lib.ConfigTest.testEmptyValueAtEof()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testAlphaGroupCase0()
org.eclipse.jgit.diff.RenameDetector.setBreakScore(int)
org.eclipse.jgit.transport.Transport.getURIs(RemoteConfig,Operation)
org.eclipse.jgit.transport.RemoteConfigTest.multiplePushInsteadOf()
org.eclipse.jgit.util.RefMap.toString()
org.eclipse.jgit.diff.AbstractDiffTestCase.testDegenerate_DeleteMiddle()
org.eclipse.jgit.internal.fsck.FsckPackParser.onObjectHeader(Source,byte,int,int)
org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest.testTargetWithoutLeadingSlash()
org.eclipse.jgit.util.TemporaryBuffer.write(int)
org.eclipse.jgit.merge.RecursiveMerger.getBaseCommit(RevCommit,RevCommit,int)
org.eclipse.jgit.api.ListBranchCommand.setListMode(ListMode)
org.eclipse.jgit.internal.ketch.KetchSystem.getTxnNamespace()
org.eclipse.jgit.api.CommitCommand.getAuthor()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testExactRef_DiscoversModified()
org.eclipse.jgit.api.TagCommandTest.testTagging()
org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleGroupRangeCase5()
org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_12(Git)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedCommittedComparedWithInitialCommit()
org.eclipse.jgit.pgm.ArchiveTest.testTarPrefixWithoutTrailingSlash()
org.eclipse.jgit.dircache.DirCacheBuildIterator.stopWalk()
org.eclipse.jgit.transport.BaseReceivePack.receivePack()
org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_close_Timeout()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor5()
org.eclipse.jgit.diff.MyersDiff.snake2x(long)
org.eclipse.jgit.api.MergeCommand.checkParameters()
org.eclipse.jgit.transport.BundleFetchConnection.doFetch(ProgressMonitor,Collection,Set)
org.eclipse.jgit.lib.BaseRepositoryBuilder.setWorkTree(File)
org.eclipse.jgit.transport.PackParser.getObjectCount()
org.eclipse.jgit.diff.DiffFormatter.setBinaryFileThreshold(int)
org.eclipse.jgit.internal.ketch.Round.runAsync(AnyObjectId)
org.eclipse.jgit.revwalk.RevWalkFilterTest.clone()
org.eclipse.jgit.internal.storage.file.PackFile.resolve(Set,AbbreviatedObjectId,int)
org.eclipse.jgit.junit.TestRepository.git()
org.eclipse.jgit.merge.MergeAlgorithmTest.testOneAgainstTwoConflictingModifications()
org.eclipse.jgit.diff.EditTest.testBeforeAfterCuts()
org.eclipse.jgit.api.errors.ConcurrentRefUpdateException.getRef()
org.eclipse.jgit.api.RebaseCommand.writeMergeInfo(RevCommit,List)
org.eclipse.jgit.internal.storage.pack.PackWriter.searchForReuse(ProgressMonitor)
org.eclipse.jgit.attributes.AttributesHandlerTest.testCustomGlobalMacro4()
org.eclipse.jgit.transport.TransportGitAnon.openPush()
org.eclipse.jgit.transport.TransportHttp.readAdvertisedImpl(BufferedReader)
org.eclipse.jgit.http.test.DumbClientSmartServerTest.testInitialClone_Packed()
org.eclipse.jgit.lib.ConfigTest.parseTime(String,TimeUnit)
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgLpt1()
org.eclipse.jgit.notes.NoteMapTest.testIteratorFanoutTree2_2_36()
org.eclipse.jgit.transport.BundleWriterTest.testAbortWrite()
org.eclipse.jgit.lib.CommitBuilder.getEncoding()
org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration()
org.eclipse.jgit.dircache.DirCacheCheckout.removeEmptyParents(File)
org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.clear()
org.eclipse.jgit.transport.PackParserTest.mark(int)
org.eclipse.jgit.lib.BaseRepositoryBuilder.setIndexFile(File)
org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict()
org.eclipse.jgit.internal.ketch.KetchLeader.validVoterCounts()
org.eclipse.jgit.transport.PackedObjectInfo.getCRC()
org.eclipse.jgit.diff.EditTest.testNotEquals4()
org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.addObjectsToPack(PackWriter,DfsReader,ProgressMonitor)
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testEquals_Full()
org.eclipse.jgit.transport.PushCertificateIdentTest.trimName()
org.eclipse.jgit.transport.RefAdvertiser.getSortedRefs(Map)
org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeFileFooter()
org.eclipse.jgit.lib.ObjectChecker.checkTag(byte)
org.eclipse.jgit.internal.storage.dfs.DfsRepository.create(boolean)
org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.byName(List)
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRefs_TagsOnly()
org.eclipse.jgit.treewalk.WorkingTreeIterator.setDirCacheIterator(TreeWalk,int)
org.eclipse.jgit.internal.storage.file.InflatingBitSet.andNot(EWAHCompressedBitmap)
org.eclipse.jgit.transport.AmazonS3.beginPut(String,String,ProgressMonitor,String)
org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify()
org.eclipse.jgit.util.QuotedStringBourneStyleTest.testDequote_BareA()
org.eclipse.jgit.api.FetchCommandTest.testFetch()
org.eclipse.jgit.transport.URIish.unescape(String)
org.eclipse.jgit.api.ReflogCommand.setRef(String)
org.eclipse.jgit.internal.storage.file.PackInputStream.read(byte,int,int)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.createTreeWalkDishonorIgnores(RevCommit)
org.eclipse.jgit.transport.TransportHttp.open(String,AcceptEncoding)
org.eclipse.jgit.lib.FileMode.toString()
org.eclipse.jgit.internal.storage.file.WindowCache.slot(PackFile,long)
org.eclipse.jgit.pgm.ArchiveTest.grepForEntry(String,String,String)
org.eclipse.jgit.revwalk.LIFORevQueue.next()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testIncompleteRangesInOneGroupCase2()
org.eclipse.jgit.lib.ObjectCheckerTest.testCheckBlob()
org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge()
org.eclipse.jgit.ignore.FastIgnoreRuleTest.testSimplePatterns()
org.eclipse.jgit.transport.HttpAuthTest.getHeaderField(String)
org.eclipse.jgit.transport.TestProtocolTest.testFetch()
org.eclipse.jgit.internal.storage.reftree.RefTree.isValidRef(Command)
org.eclipse.jgit.api.ResetCommandTest.testHardResetOnUnbornBranch()
org.eclipse.jgit.api.CommitCommandTest.supportsExecute()
org.eclipse.jgit.transport.RemoteConfig.addFetchRefSpec(RefSpec)
org.eclipse.jgit.treewalk.FileTreeIterator.getMode(File,FS,Attributes)
org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder()
org.eclipse.jgit.lib.BranchConfig.toConfigValue()
org.eclipse.jgit.util.io.LimitedInputStream.skip(long)
org.eclipse.jgit.transport.UploadPack.setRequestValidator(RequestValidator)
org.eclipse.jgit.lfs.server.s3.S3Repository.getSize(AnyLongObjectId)
org.eclipse.jgit.pgm.Glog.actionPerformed(ActionEvent)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testVerySimpleGroupRangeCase3()
org.eclipse.jgit.lib.CommitBuilder.getParentIds()
org.eclipse.jgit.util.FS_POSIX.setHidden(File,boolean)
org.eclipse.jgit.ignore.CGitVsJGitRandomIgnorePatternTest.toJavaString(String)
org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles()
org.eclipse.jgit.pgm.Blame.date(int)
org.eclipse.jgit.api.DescribeCommandTest.assertNameStartsWith(ObjectId,String)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e()
org.eclipse.jgit.diff.SimilarityRenameDetector.getMatches()
org.eclipse.jgit.api.ResetCommand.addPath(String)
org.eclipse.jgit.lib.ObjectChecker.match(byte,byte)
org.eclipse.jgit.api.blame.BlameGeneratorTest.join(String)
org.eclipse.jgit.api.TagCommandTest.testInvalidTagName()
org.eclipse.jgit.revwalk.RevWalkTestCase.parseBody(T)
org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.blockSize(ReadableChannel)
org.eclipse.jgit.util.io.InterruptTimer.finalize()
org.eclipse.jgit.http.test.SmartClientSmartServerTest.testInitialClone_WithAuthenticationAfterRedirect()
org.eclipse.jgit.api.ResetCommand.resetCherryPick()
org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromWorkDirOnly()
org.eclipse.jgit.transport.http.apache.HttpClientConnection.getClient()
org.eclipse.jgit.diff.Edit.isEmpty()
org.eclipse.jgit.treewalk.WorkingTreeIterator.computeLength(InputStream)
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.fromString(String)
org.eclipse.jgit.internal.storage.file.PackFile.getPackFile()
org.eclipse.jgit.http.test.SetAdditionalHeadersTest.testSetHeaders()
org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule()
org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits()
org.eclipse.jgit.transport.BaseReceivePack.getPackSize()
org.eclipse.jgit.transport.TransportLocal.openRepo()
org.eclipse.jgit.api.Git.remoteList()
org.eclipse.jgit.api.PathCheckoutCommandTest.validateIndex(Git)
org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL()
org.eclipse.jgit.util.io.TimeoutInputStream.readTimedOut()
org.eclipse.jgit.internal.storage.reftable.ReftableReader.initSeek()
org.eclipse.jgit.treewalk.NameConflictTreeWalk.stopWalk()
org.eclipse.jgit.transport.BasePackPushConnection.flush()
org.eclipse.jgit.util.FS.copy()
org.eclipse.jgit.diff.EditList.singleton(Edit)
org.eclipse.jgit.util.RefList.remove()
org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_nonexisting()
org.eclipse.jgit.lib.Repository.readRebaseTodo(String,boolean)
org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheTest.setUp()
org.eclipse.jgit.attributes.AttributesNodeProvider.getGlobalAttributesNode()
org.eclipse.jgit.transport.PushCertificateIdentTest.noEmail()
org.eclipse.jgit.util.RelativeDateFormatterTest.tearDown()
org.eclipse.jgit.transport.BasePackPushConnection.getPushOptions()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test8_FromString()
org.eclipse.jgit.transport.TransferConfig.newObjectChecker()
org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test8_FromString()
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitDot()
org.eclipse.jgit.internal.storage.pack.PackWriter.writePack(ProgressMonitor,ProgressMonitor,OutputStream)
org.eclipse.jgit.internal.storage.pack.DeltaEncoder.copy(long,int)
org.eclipse.jgit.transport.AdvertiseRefsHook.advertiseRefs(BaseReceivePack)
org.eclipse.jgit.internal.storage.file.SimpleDataOutput.writeBytes(String)
org.eclipse.jgit.api.RevertCommandTest.doRevertAndCheckResult(Git,RevCommit,MergeFailureReason)
org.eclipse.jgit.ignore.internal.Strings.escapedByBackslash(char)
org.eclipse.jgit.lfs.lib.LongObjectId.fromRaw(byte)
org.eclipse.jgit.transport.TransportGitSsh.getSchemes()
org.eclipse.jgit.transport.BaseConnection.markStartedOperation()
org.eclipse.jgit.lib.InflaterCache.getImpl()
org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess()
org.eclipse.jgit.api.CommitCommand.setAll(boolean)
org.eclipse.jgit.internal.storage.file.GcPackRefsTest.looseRefPacked()
org.eclipse.jgit.internal.storage.file.SimpleDataOutput.writeChar(int)
org.eclipse.jgit.internal.storage.file.ObjectDirectory.scanPacks(PackList)
org.eclipse.jgit.transport.BaseReceivePack.sendAdvertisedRefs(RefAdvertiser)
org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_LastByteDifferent()
org.eclipse.jgit.util.io.UnionInputStreamTest.testSkip()
org.eclipse.jgit.util.FS_POSIX.supportsSymlinks()
org.eclipse.jgit.transport.TransportSftp.getPackNames()
org.eclipse.jgit.internal.storage.reftable.ReftableReader.readIndex(long)
org.eclipse.jgit.util.time.ProposedTimestamp.instant()
org.eclipse.jgit.api.LogCommandTest.logOnlyMergeCommits()
org.eclipse.jgit.transport.BaseReceivePack.setPushCertificate(PushCertificate)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.createTreeWalk(RevCommit)
org.eclipse.jgit.transport.TransportAmazonS3.getAlternates()
org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry()
org.eclipse.jgit.transport.TransportGitAnon.open(URIish)
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch()
org.eclipse.jgit.pgm.RevWalkTextBuiltin.run()
org.eclipse.jgit.internal.storage.file.RefDirectoryRename.rename(File,File)
org.eclipse.jgit.lib.BatchRefUpdate.setPushCertificate(PushCertificate)
org.eclipse.jgit.blame.BlameResult.discardResultContents()
org.eclipse.jgit.api.StashCreateCommandTest.diffIndexAgainstWorking(RevCommit)
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSpaceDot()
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.getData()
org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads()
org.eclipse.jgit.lib.BaseRepositoryBuilder.addAlternateObjectDirectory(File)
org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit()
org.eclipse.jgit.util.io.AutoLFInputStream.fillBuffer()
org.eclipse.jgit.transport.TransportAmazonS3.openAlternate(String)
org.eclipse.jgit.transport.RemoteRefUpdate.isExpectingOldObjectId()
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.batch(List)
org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay()
org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyTo(char,Writer)
org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onObjectData(Source,byte,int,int)
org.eclipse.jgit.lib.RepositoryCache.unregisterAndCloseRepository(Key)
org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.getMatchingPathsFlat(ObjectId,TreeFilter)
org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutUncachedChanges()
org.eclipse.jgit.diff.SimilarityIndex.hash(ObjectLoader)
org.eclipse.jgit.merge.MergeMessageFormatterTest.testTag()
org.eclipse.jgit.transport.http.HttpConnection.setRequestProperty(String,String)
org.eclipse.jgit.util.FileUtil.getLength(File)
org.eclipse.jgit.internal.storage.file.LocalCachedPack.getPacks()
org.eclipse.jgit.pgm.RevWalkTextBuiltin.walkLoop()
org.eclipse.jgit.transport.AmazonS3.decrypt(URLConnection)
org.eclipse.jgit.api.CloneCommand.init()
org.eclipse.jgit.gitrepo.ManifestParserTest.testManifestParserWithMissingFetchOnRemote()
org.eclipse.jgit.archive.ZipFormat.createArchiveOutputStream(OutputStream,Map)
org.eclipse.jgit.lib.RepositoryCacheTest.testNonBareFileKey()
org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_NoGap()
org.eclipse.jgit.lfs.lib.MutableLongObjectId.clear()
org.eclipse.jgit.internal.storage.file.FileSnapshotTest.testNewFileNoWait()
org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testExact()
org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test025_computeSha1NoStore()
org.eclipse.jgit.diff.Edit.shift(int)
org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.getMemoryUsedByLruChainForTest()
org.eclipse.jgit.api.RevertCommand.getRevertedRefs()
org.eclipse.jgit.transport.WalkEncryptionTest.tearDown()
org.eclipse.jgit.notes.NoteMap.writeTree(ObjectInserter)
org.eclipse.jgit.lib.ObjectDatabase.create()
org.eclipse.jgit.lib.BaseRepositoryBuilder.setupGitDir()
org.eclipse.jgit.internal.ketch.KetchReplica.defer(ReplicaPushRequest)
org.eclipse.jgit.transport.PackParser.setExpectDataAfterPackFooter(boolean)
org.eclipse.jgit.internal.storage.reftree.RefTree.apply(DirCacheEditor,Command)
org.eclipse.jgit.internal.storage.file.RefDirectory.doPeel(Ref)
org.eclipse.jgit.util.GitDateParserTest.now()
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testIncompleteRangesInOneGroupCase0()
org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfigTest.validBlockSize()
org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2()
org.eclipse.jgit.revwalk.RevObject.has(RevFlag)
org.eclipse.jgit.internal.storage.file.RefUpdateTest.delete(Repository,RefUpdate,Result,boolean,boolean)
org.eclipse.jgit.attributes.AttributesHandlerTest.testExpandNonMacro3()
org.eclipse.jgit.gitrepo.RepoProject.addCopyFile(CopyFile)
org.eclipse.jgit.internal.storage.reftree.RefTreeTest.write(RefTree)
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgConDotSuffix()
org.eclipse.jgit.blame.BlameGenerator.push(String,AnyObjectId)
org.eclipse.jgit.transport.OpenSshConfig.get(FS)
org.eclipse.jgit.dircache.DirCacheEditor.findEntry(byte,int)
org.eclipse.jgit.diff.DiffEntry.scan(TreeWalk,boolean,TreeFilter)
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testInversedGroupCase0()
org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.clearCache()
org.eclipse.jgit.api.NameRevCommandTest.annotatedTags()
org.eclipse.jgit.transport.ReceivePack.getPushOptions()
org.eclipse.jgit.lfs.server.fs.ObjectUploadListener.onAllDataRead()
org.eclipse.jgit.api.CloneCommand.setProgressMonitor(ProgressMonitor)
org.eclipse.jgit.transport.RefSpec.matchDestination(Ref)
org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge()
org.eclipse.jgit.transport.TransportGitSsh.open(URIish)
org.eclipse.jgit.util.RefList.next()
org.eclipse.jgit.lib.Repository.autoGC(ProgressMonitor)
org.eclipse.jgit.lib.Config.getNames(String,String,boolean)
org.eclipse.jgit.internal.storage.reftable.ReftableConstants.isFileHeaderMagic(byte,int,int)
org.eclipse.jgit.util.io.UnionInputStreamTest.testMarkSupported()
org.eclipse.jgit.transport.BasePackFetchConnection.didFetchIncludeTags()
org.eclipse.jgit.diff.Subsequence.toBase(EditList,Subsequence,Subsequence)
org.eclipse.jgit.dircache.BaseDirCacheEditor.getDirCache()
org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean)
org.eclipse.jgit.revwalk.ObjectWalk.addObject(RevObject)
org.eclipse.jgit.internal.storage.file.LazyObjectIdSetFile.contains(AnyObjectId)
org.eclipse.jgit.transport.PacketLineInTest.testReadStringRaw1()
org.eclipse.jgit.util.Paths.compare(byte,int,int,int,byte,int,int,int)
org.eclipse.jgit.transport.PushConnection.push(ProgressMonitor,Map,OutputStream)
org.eclipse.jgit.internal.storage.file.PackWriterTest.testShallowFetchShallowParentDepth2()
org.eclipse.jgit.internal.storage.pack.DeltaCache.checkForGarbageCollectedObjects()
org.eclipse.jgit.diff.MyersDiff.adjustMinMaxK(int,int)
org.eclipse.jgit.internal.storage.dfs.DeltaBaseCacheTest.testObjectLargerThanCacheDoesNotEvict()
org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test9_FromString()
org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef()
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFile()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testCaret()
org.eclipse.jgit.treewalk.FileTreeIterator.getMode()
org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.has(AnyObjectId,boolean)
org.eclipse.jgit.treewalk.AbstractTreeIterator.ensurePathCapacity(int,int)
org.eclipse.jgit.api.RmCommand.addFilepattern(String)
org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.read()
org.eclipse.jgit.util.ChangeIdUtil.indexOfChangeId(String,String)
org.eclipse.jgit.transport.RefAdvertiser.send(Map)
org.eclipse.jgit.lib.RefTest.testAmbiguousRefsUnderRefs()
org.eclipse.jgit.pgm.ProxyConfigTest.testOverwriteHttpPort()
org.eclipse.jgit.transport.TransportHttp.open(URIish)
org.eclipse.jgit.http.test.SmartClientSmartServerTest.testFetch_TooManyLocalCommits()
org.eclipse.jgit.api.TagCommand.setTagger(PersonIdent)
org.eclipse.jgit.util.IntListTest.testAdd_SmallGroup()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testPipe()
org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare()
org.eclipse.jgit.transport.PostReceiveHookChain.newChain(List)
org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.pathOf(String)
org.eclipse.jgit.internal.storage.pack.PackWriter.getTimeCounting()
org.eclipse.jgit.api.PushCommand.getPushOptions()
org.eclipse.jgit.transport.TrackingRefUpdate.getNewObjectId()
org.eclipse.jgit.diff.ContentSource.size(DiffEntry,Side,DiffEntry)
org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.estimatePadBetweenBlocks(int)
org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.tick()
org.eclipse.jgit.dircache.DirCacheBuilder.finish()
org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getFileSize(PackExt)
org.eclipse.jgit.lfs.server.LfsProtocolServlet.isVerify()
org.eclipse.jgit.revwalk.RevCommit.getFullMessage()
org.eclipse.jgit.util.Base64Test.testDecode()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_ForceUpdate()
org.eclipse.jgit.events.IndexChangedEvent.dispatch(IndexChangedListener)
org.eclipse.jgit.lib.CommitBuilder.getAuthor()
org.eclipse.jgit.revwalk.MergeBaseGenerator.carryOntoHistory(RevCommit,int)
org.eclipse.jgit.internal.storage.file.FileSnapshot.notRacyClean(long)
org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_CorruptZLibStream()
org.eclipse.jgit.treewalk.TreeWalk.getObjectId(MutableObjectId,int)
org.eclipse.jgit.lfs.server.s3.SignerV4.toHex(byte)
org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(String,String)
org.eclipse.jgit.util.io.TimeoutOutputStreamTest.write(int)
org.eclipse.jgit.internal.storage.file.AlternatesTest.assertAlternateObjects(FileRepository)
org.eclipse.jgit.util.RawParseUtils_LineMapTest.testFourLineBlanks()
org.eclipse.jgit.revwalk.FooterLineTest.testMatchesBugId()
org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_NoRecursion()
org.eclipse.jgit.lfs.internal.LfsText.get()
org.eclipse.jgit.transport.Transport.setPackConfig(PackConfig)
org.eclipse.jgit.internal.storage.pack.PackWriter.get(AnyObjectId)
org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertWholeObject_Length12()
org.eclipse.jgit.internal.storage.reftable.MergedReftable.queueSize()
org.eclipse.jgit.treewalk.TreeWalk.getOperationType()
org.eclipse.jgit.internal.storage.file.PackIndex.hasObject(AnyObjectId)
org.eclipse.jgit.util.QuotedStringBourneStyleTest.testDequote_NamedEscapes()
org.eclipse.jgit.diff.MyersDiff.calculateEdits(Edit)
org.eclipse.jgit.lib.ObjectReader.getCreatedFromInserter()
org.eclipse.jgit.transport.Transport.getOptionReceivePack()
org.eclipse.jgit.api.TagCommandTest.testDeleteNonExisting()
org.eclipse.jgit.attributes.CGitAttributesTest.testDirectoryMatchSubComplex()
org.eclipse.jgit.api.StashCreateCommand.setWorkingDirectoryMessage(String)
org.eclipse.jgit.dircache.DirCache.read(File,FS)
org.eclipse.jgit.util.GSSManagerFactory.isSupported()
org.eclipse.jgit.util.FS.readPipe(File,String,String)
org.eclipse.jgit.pgm.Fetch.notags(boolean)
org.eclipse.jgit.lfs.server.s3.S3Config.getAccessKey()
org.eclipse.jgit.transport.BaseReceivePack.parseShallow(String)
org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead()
org.eclipse.jgit.pgm.Glog.walkLoop()
org.eclipse.jgit.transport.URIish.getHumanishName()
org.eclipse.jgit.transport.RefSpec.expandFromSource(String)
org.eclipse.jgit.transport.WalkFetchConnection.processBlob(RevObject)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCntrlGroupCase0()
org.eclipse.jgit.internal.storage.file.FileSnapshotTest.testActuallyIsModifiedTrivial()
org.eclipse.jgit.internal.storage.reftree.AlwaysFailUpdate.doDelete(Result)
org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsGITTilde1()
org.eclipse.jgit.http.test.DefaultUploadPackFactoryTest.getRemoteHost()
org.eclipse.jgit.transport.URIishTest.testGetSet()
org.eclipse.jgit.transport.URIish.toPrivateASCIIString()
org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.setUp()
org.eclipse.jgit.api.DiffCommandTest.testDiffCached()
org.eclipse.jgit.util.RefMapTest.testMerge_HeadMaster()
org.eclipse.jgit.api.PullResult.getRebaseResult()
org.eclipse.jgit.internal.storage.file.ReflogWriter.create()
org.eclipse.jgit.api.StashListCommand.call()
org.eclipse.jgit.diff.SimilarityIndex.common(SimilarityIndex,SimilarityIndex)
org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindowsOnUnix()
org.eclipse.jgit.patch.CombinedHunkHeader.getOldImage(int)
org.eclipse.jgit.util.io.AutoCRLFInputStream.read()
org.eclipse.jgit.diff.RawTextComparator.hashRegion(byte,int,int)
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.scanAllRefs()
org.eclipse.jgit.transport.http.JDKHttpConnection.getInputStream()
org.eclipse.jgit.util.FS.getCreationTime()
org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.assertNoRenames()
org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote()
org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree()
org.eclipse.jgit.util.StringUtils.isEmptyOrNull(String)
org.eclipse.jgit.junit.StrictWorkMonitor.update(int)
org.eclipse.jgit.internal.storage.file.GcOrphanFilesTest.noSuchPackFolder()
org.eclipse.jgit.internal.storage.pack.DeltaWindow.estimateSize(ObjectToPack)
org.eclipse.jgit.transport.BaseReceivePack.unlockPack()
org.eclipse.jgit.internal.storage.reftable.BlockReader.readUpdateIndexDelta()
org.eclipse.jgit.treewalk.filter.ByteArraySet.get(byte,int,int)
org.eclipse.jgit.transport.RefSpec.setSourceDestination(String,String)
org.eclipse.jgit.util.FS_POSIX.umask()
org.eclipse.jgit.internal.ketch.Proposal.asCommandList(RevWalk,Collection)
org.eclipse.jgit.http.server.RootLocaleTest.testHttpServerText()
org.eclipse.jgit.revwalk.RevWalk.parseHeaders(RevObject)
org.eclipse.jgit.attributes.Attribute.getValue()
org.eclipse.jgit.gitrepo.RepoProject.getName()
org.eclipse.jgit.util.RawParseUtils_LineMapTest.testTwoLineFooBar()
org.eclipse.jgit.dircache.DirCacheBasicTest.testReadMissing_TempIndex()
org.eclipse.jgit.internal.storage.dfs.DfsInserter.getOrLoadBlock(long)
org.eclipse.jgit.treewalk.WorkingTreeIterator.getIndexFileMode(DirCacheIterator)
org.eclipse.jgit.lib.ObjectLoader.getBytes(int)
org.eclipse.jgit.transport.TransportHttp.outOfOrderAdvertisement(String)
org.eclipse.jgit.dircache.DirCacheEditor.commit()
org.eclipse.jgit.util.ChangeIdUtilTest.testFirstParentAltersId()
org.eclipse.jgit.internal.storage.dfs.DfsReader.has(AnyObjectId)
org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testNonRecursiveTreeWalk()
org.eclipse.jgit.util.io.TeeInputStream.read(byte,int,int)
org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.pack(ProgressMonitor)
org.eclipse.jgit.lfs.lib.MutableLongObjectIdTest.testToObjectId()
org.eclipse.jgit.util.RefListTest.testBuilder_AddThenSort()
org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.setReadableChannelBlockSizeForTest(int)
org.eclipse.jgit.lib.ConfigLine.eqSameCase(String,String)
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.initNamespace(String)
org.eclipse.jgit.transport.PushOptionsTest.testAtomicPushWithOptions()
org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext0()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedFileModeChange()
org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndRestoreFromIndex()
org.eclipse.jgit.transport.RemoteConfig.removePushRefSpec(RefSpec)
org.eclipse.jgit.lib.ObjectChecker.toHexString(byte,int,int)
org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchExistingSection()
org.eclipse.jgit.transport.HttpConfigTest.testMatchWithInvalidAndValidUriInConfig()
org.eclipse.jgit.dircache.DirCacheBasicTest.testReadMissing_RealIndex()
org.eclipse.jgit.lib.ObjectLoaderTest.getCachedBytes()
org.eclipse.jgit.util.FileUtil.getFileAttributesPosix(FS,File)
org.eclipse.jgit.storage.file.WindowCacheConfig.setPackedGitWindowSize(int)
org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNestedSubmodule()
org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testDisallowTreeFilter()
org.eclipse.jgit.pgm.StatusTest.testStatusPorcelainUntrackedFiles()
org.eclipse.jgit.transport.FetchProcess.closeConnection(FetchResult)
org.eclipse.jgit.transport.PackParser.reverse(UnresolvedDelta)
org.eclipse.jgit.lib.ConfigTest.assertReadLong(long,String)
org.eclipse.jgit.lib.ConfigLine.forValue(String)
org.eclipse.jgit.api.InitCommand.call()
org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFInput()
org.eclipse.jgit.internal.storage.pack.PackWriter.writeObjects(PackOutputStream,List)
org.eclipse.jgit.blame.BlameGenerator.getSourceContents()
org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.testVerySimpleStarCase2()
org.eclipse.jgit.internal.storage.file.ByteArrayWindow.write(PackOutputStream,long,int)
org.eclipse.jgit.gitrepo.RepoProject.copy()
org.eclipse.jgit.patch.FileHeader.getEndOffset()
org.eclipse.jgit.internal.storage.file.RefDirectory.upcast(RefList)
org.eclipse.jgit.api.Git.toString()
org.eclipse.jgit.http.server.glue.ServletBinderImpl.getFilters()
org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.noTables()
org.eclipse.jgit.lib.Repository.readRevertHead()
org.eclipse.jgit.transport.OpenSshConfigTest.testRemoteUserReplacement()
org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict()
org.eclipse.jgit.patch.Patch.warn(byte,int,String)
org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase0()
org.eclipse.jgit.util.NB.decodeUInt24(byte,int)
org.eclipse.jgit.diff.AbstractDiffTestCase.diff(RawText,RawText)
org.eclipse.jgit.internal.storage.dfs.ReadableChannel.setReadAheadBytes(int)
org.eclipse.jgit.lib.CommitBuilder.getCommitter()
org.eclipse.jgit.lib.FileMode.copyToLength()
org.eclipse.jgit.dircache.DirCache.toArray(int,DirCacheEntry,int,int)
org.eclipse.jgit.transport.RefSpec.setDestination(String)
org.eclipse.jgit.dircache.DirCacheTreeTest.testWriteReadTree()
org.eclipse.jgit.transport.CredentialsProviderUserInfo.promptKeyboardInteractive(String,String,String,String,boolean)
org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.createWindow(int)
org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.type()
org.eclipse.jgit.awtui.AWTPlotRenderer.drawLine(Color,int,int,int,int,int)
org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked()
org.eclipse.jgit.lib.Config.allValuesOf(T)
org.eclipse.jgit.lib.CommitBuilder.setParentIds(AnyObjectId,AnyObjectId)
org.eclipse.jgit.internal.storage.pack.DeltaTask.stealWork(DeltaTask)
org.eclipse.jgit.internal.storage.pack.PackWriter.snapshot()
org.eclipse.jgit.transport.TestProtocol.getSchemes()
org.eclipse.jgit.transport.UserAgent.getAgent(Set,String)
org.eclipse.jgit.ignore.FastIgnoreRule.getResult()
org.eclipse.jgit.util.NBTest.testEncodeInt24()
org.eclipse.jgit.util.CPUTimeStopWatch.createInstance()
org.eclipse.jgit.revplot.PlotCommitListTest.testMultipleMerges()
org.eclipse.jgit.pgm.CLIGitCommand.execute(String,Repository)
org.eclipse.jgit.revplot.PlotCommitList.handleBlockedLanes(int,PlotCommit,PlotCommit)
org.eclipse.jgit.util.NB.decodeUInt64(byte,int)
org.eclipse.jgit.internal.storage.file.PackIndex.read(InputStream)
org.eclipse.jgit.internal.storage.reftable.Reftable.from(Collection)
org.eclipse.jgit.transport.HttpConfigTest.testMatchWithHostEndingInSlash()
org.eclipse.jgit.storage.pack.PackStatistics.getTimeCompressing()
org.eclipse.jgit.internal.storage.pack.DeltaEncoder.getSize()
org.eclipse.jgit.lib.ConfigSnapshot.compare(ConfigLine,ConfigLine)
org.eclipse.jgit.ignore.CGitIgnoreTest.cgitIgnored()
org.eclipse.jgit.internal.storage.dfs.DfsFsck.check(ProgressMonitor)
org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.tableSize(DfsBlockCacheConfig)
org.eclipse.jgit.lfs.server.fs.FileLfsServlet.getObjectToTransfer(HttpServletRequest,HttpServletResponse)
org.eclipse.jgit.transport.NetRCTest.setUp()
org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testIsNameConflicting()
org.eclipse.jgit.revplot.PlotCommitList.clear()
org.eclipse.jgit.transport.BundleWriterTest.makeBundle(String,String,RevCommit)
org.eclipse.jgit.transport.WalkEncryption.securityError(String)
org.eclipse.jgit.diff.SimilarityRenameDetector.getLeftOverDestinations()
org.eclipse.jgit.api.RebaseCommandTest.testParseSquashFixupSequenceCount()
org.eclipse.jgit.transport.FetchProcess.reopenConnection()
org.eclipse.jgit.api.LsRemoteCommand.callAsMap()
org.eclipse.jgit.lib.ObjectDatabase.open(AnyObjectId,int)
org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c()
